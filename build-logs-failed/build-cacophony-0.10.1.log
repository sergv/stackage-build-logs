Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - cacophony-0.10.1 (lib) (first run)
 - cacophony-0.10.1 (test:hlint) (first run)
 - cacophony-0.10.1 (test:vectors) (first run)
Configuring library for cacophony-0.10.1...
Preprocessing library for cacophony-0.10.1...
Building library for cacophony-0.10.1...
[ 1 of 23] Compiling Crypto.Noise.Cipher

src/Crypto/Noise/Cipher.hs:22:26: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
22 |   data Ciphertext   c :: *
   |                          ^

src/Crypto/Noise/Cipher.hs:25:26: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
25 |   data SymmetricKey c :: *
   |                          ^

src/Crypto/Noise/Cipher.hs:28:26: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
28 |   data Nonce        c :: *
   |                          ^
[ 2 of 23] Compiling Crypto.Noise.Cipher.AESGCM
[ 3 of 23] Compiling Crypto.Noise.Cipher.ChaChaPoly1305
[ 4 of 23] Compiling Crypto.Noise.DH

src/Crypto/Noise/DH.hs:20:23: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
20 |   data PublicKey d :: *
   |                       ^

src/Crypto/Noise/DH.hs:23:23: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
23 |   data SecretKey d :: *
   |                       ^
[ 5 of 23] Compiling Crypto.Noise.DH.Curve25519
[ 6 of 23] Compiling Crypto.Noise.DH.Curve448
[ 7 of 23] Compiling Crypto.Noise.Exception
[ 8 of 23] Compiling Crypto.Noise.Hash

src/Crypto/Noise/Hash.hs:19:25: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
19 |   data ChainingKey h :: *
   |                         ^

src/Crypto/Noise/Hash.hs:22:25: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
22 |   data Digest      h :: *
   |                         ^
[ 9 of 23] Compiling Crypto.Noise.Hash.BLAKE2b
[10 of 23] Compiling Crypto.Noise.Hash.BLAKE2s
[11 of 23] Compiling Crypto.Noise.Hash.SHA256
[12 of 23] Compiling Crypto.Noise.Hash.SHA512
[13 of 23] Compiling Crypto.Noise.Internal.CipherState
[14 of 23] Compiling Crypto.Noise.Internal.Handshake.Pattern

src/Crypto/Noise/Internal/Handshake/Pattern.hs:13:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
13 | import Data.Semigroup (Semigroup(..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[15 of 23] Compiling Crypto.Noise.HandshakePatterns
[16 of 23] Compiling Crypto.Noise.Internal.Handshake.Validation
[17 of 23] Compiling Crypto.Noise.Internal.SymmetricState

src/Crypto/Noise/Internal/SymmetricState.hs:50:5: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[ScrubbedBytes]’ not matched:
            []
            [_]
            (_:_:_:_)
   |
50 |     [ck, k] = hashHKDF (ss ^. ssck) keyMat 2
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Crypto/Noise/Internal/SymmetricState.hs:70:5: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[ScrubbedBytes]’ not matched:
            []
            [_]
            [_, _]
            (_:_:_:_:_)
   |
70 |     [ck, h, k] = hashHKDF (ss ^. ssck) keyMat 3
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Crypto/Noise/Internal/SymmetricState.hs:107:5: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[ScrubbedBytes]’ not matched:
            []
            [_]
            (_:_:_:_)
    |
107 |     [k1, k2] = hashHKDF (ss ^. ssck) mempty 2
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[18 of 23] Compiling Crypto.Noise.Internal.Handshake.State

src/Crypto/Noise/Internal/Handshake/State.hs:20:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
20 | import Data.Monoid               ((<>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[19 of 23] Compiling Crypto.Noise.Internal.Handshake.Interpreter
[20 of 23] Compiling Crypto.Noise.Internal.NoiseState
[21 of 23] Compiling Crypto.Noise
[22 of 23] Compiling Crypto.Noise.Validation
[23 of 23] Compiling Paths_cacophony
Configuring test suite 'hlint' for cacophony-0.10.1...
Preprocessing test suite 'hlint' for cacophony-0.10.1...
Building test suite 'hlint' for cacophony-0.10.1...
[1 of 2] Compiling Main
[2 of 2] Compiling Paths_cacophony
[3 of 3] Linking /tmp/workdir-cacophony/cacophony-0.10.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/cacophony-0.10.1/t/hlint/build/hlint/hlint
Configuring test suite 'vectors' for cacophony-0.10.1...
Preprocessing test suite 'vectors' for cacophony-0.10.1...
Building test suite 'vectors' for cacophony-0.10.1...
[1 of 7] Compiling Paths_cacophony
[2 of 7] Compiling Types

tests/vectors/Types.hs:9:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
  |
9 | import Data.Monoid           ((<>))
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/vectors/Types.hs:71:20: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
71 | data CipherType :: * -> * where
   |                    ^

tests/vectors/Types.hs:71:25: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
71 | data CipherType :: * -> * where
   |                         ^

tests/vectors/Types.hs:78:16: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
78 | data DHType :: * -> * where
   |                ^

tests/vectors/Types.hs:78:21: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
78 | data DHType :: * -> * where
   |                     ^

tests/vectors/Types.hs:85:18: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
85 | data HashType :: * -> * where
   |                  ^

tests/vectors/Types.hs:85:23: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
85 | data HashType :: * -> * where
   |                       ^
[3 of 7] Compiling VectorFile

tests/vectors/VectorFile.hs:109:28: error: [GHC-83865]
    • Couldn't match type: Either
                             String bytestring-0.11.5.3:Data.ByteString.Internal.Type.ByteString
                     with: (b1, b0)
      Expected: bytestring-0.11.5.3:Data.ByteString.Internal.Type.ByteString
                -> (b1, b0)
        Actual: bytestring-0.11.5.3:Data.ByteString.Internal.Type.ByteString
                -> Either
                     String bytestring-0.11.5.3:Data.ByteString.Internal.Type.ByteString
    • In the first argument of ‘(.)’, namely ‘B16.decode’
      In the second argument of ‘(.)’, namely ‘B16.decode . encodeUtf8’
      In the second argument of ‘(.)’, namely
        ‘fst . B16.decode . encodeUtf8’
    |
109 | decodeSB = convert . fst . B16.decode . encodeUtf8
    |                            ^^^^^^^^^^
Error: [Cabal-7125]
Failed to build test:vectors from cacophony-0.10.1.

