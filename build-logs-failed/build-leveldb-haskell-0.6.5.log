Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - leveldb-haskell-0.6.5 (lib) (first run)
 - leveldb-haskell-0.6.5 (test:leveldb-properties) (first run)
Configuring library for leveldb-haskell-0.6.5...
Preprocessing library for leveldb-haskell-0.6.5...
Building library for leveldb-haskell-0.6.5...
[1 of 9] Compiling Data.Stream.Monadic
[2 of 9] Compiling Database.LevelDB.C
[3 of 9] Compiling Database.LevelDB.Types
[4 of 9] Compiling Database.LevelDB.Internal

src/Database/LevelDB/Internal.hs:49:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
49 | import           Control.Applicative    ((<$>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[5 of 9] Compiling Database.LevelDB.Iterator

src/Database/LevelDB/Iterator.hs:30:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
30 | import           Control.Applicative       ((<$>), (<*>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[6 of 9] Compiling Database.LevelDB.Base

src/Database/LevelDB/Base.hs:62:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
62 | import           Control.Applicative      ((<$>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[7 of 9] Compiling Database.LevelDB.Streaming
[8 of 9] Compiling Database.LevelDB.MonadResource

src/Database/LevelDB/MonadResource.hs:72:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
72 | import           Control.Applicative          ((<$>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[9 of 9] Compiling Database.LevelDB
Configuring test suite 'leveldb-properties' for leveldb-haskell-0.6.5...
Preprocessing test suite 'leveldb-properties' for leveldb-haskell-0.6.5...
Building test suite 'leveldb-properties' for leveldb-haskell-0.6.5...
[1 of 2] Compiling Test.Streaming

test/Test/Streaming.hs:38:14: error:
    Ambiguous occurrence ‘singleton’
    It could refer to
       either ‘Data.List.singleton’,
              imported from ‘Data.List’ at test/Test/Streaming.hs:17:1-26
              (and originally defined in ‘base-4.18.2.1:Data.OldList’)
           or ‘Data.ByteString.Char8.singleton’,
              imported from ‘Data.ByteString.Char8’ at test/Test/Streaming.hs:14:58-66
   |
38 |     let s' = singleton s
   |              ^^^^^^^^^

test/Test/Streaming.hs:39:14: error:
    Ambiguous occurrence ‘singleton’
    It could refer to
       either ‘Data.List.singleton’,
              imported from ‘Data.List’ at test/Test/Streaming.hs:17:1-26
              (and originally defined in ‘base-4.18.2.1:Data.OldList’)
           or ‘Data.ByteString.Char8.singleton’,
              imported from ‘Data.ByteString.Char8’ at test/Test/Streaming.hs:14:58-66
   |
39 |         e' = singleton e
   |              ^^^^^^^^^

test/Test/Streaming.hs:46:21: error:
    Ambiguous occurrence ‘singleton’
    It could refer to
       either ‘Data.List.singleton’,
              imported from ‘Data.List’ at test/Test/Streaming.hs:17:1-26
              (and originally defined in ‘base-4.18.2.1:Data.OldList’)
           or ‘Data.ByteString.Char8.singleton’,
              imported from ‘Data.ByteString.Char8’ at test/Test/Streaming.hs:14:58-66
   |
46 |   | e > 'Z'   = map singleton [s..'Z']
   |                     ^^^^^^^^^

test/Test/Streaming.hs:47:21: error:
    Ambiguous occurrence ‘singleton’
    It could refer to
       either ‘Data.List.singleton’,
              imported from ‘Data.List’ at test/Test/Streaming.hs:17:1-26
              (and originally defined in ‘base-4.18.2.1:Data.OldList’)
           or ‘Data.ByteString.Char8.singleton’,
              imported from ‘Data.ByteString.Char8’ at test/Test/Streaming.hs:14:58-66
   |
47 |   | otherwise = map singleton [s..e]
   |                     ^^^^^^^^^

test/Test/Streaming.hs:49:31: error:
    Ambiguous occurrence ‘singleton’
    It could refer to
       either ‘Data.List.singleton’,
              imported from ‘Data.List’ at test/Test/Streaming.hs:17:1-26
              (and originally defined in ‘base-4.18.2.1:Data.OldList’)
           or ‘Data.ByteString.Char8.singleton’,
              imported from ‘Data.ByteString.Char8’ at test/Test/Streaming.hs:14:58-66
   |
49 |   | s > 'Z'   = reverse . map singleton $ [e..'Z']
   |                               ^^^^^^^^^

test/Test/Streaming.hs:51:31: error:
    Ambiguous occurrence ‘singleton’
    It could refer to
       either ‘Data.List.singleton’,
              imported from ‘Data.List’ at test/Test/Streaming.hs:17:1-26
              (and originally defined in ‘base-4.18.2.1:Data.OldList’)
           or ‘Data.ByteString.Char8.singleton’,
              imported from ‘Data.ByteString.Char8’ at test/Test/Streaming.hs:14:58-66
   |
51 |   | otherwise = reverse . map singleton $ [e..s]
   |                               ^^^^^^^^^

test/Test/Streaming.hs:184:37: error:
    Ambiguous occurrence ‘singleton’
    It could refer to
       either ‘Data.List.singleton’,
              imported from ‘Data.List’ at test/Test/Streaming.hs:17:1-26
              (and originally defined in ‘base-4.18.2.1:Data.OldList’)
           or ‘Data.ByteString.Char8.singleton’,
              imported from ‘Data.ByteString.Char8’ at test/Test/Streaming.hs:14:58-66
    |
184 |             . map ( \ c -> let c' = singleton c in Put c' c')
    |                                     ^^^^^^^^^
Error: [Cabal-7125]
Failed to build test:leveldb-properties from leveldb-haskell-0.6.5.

