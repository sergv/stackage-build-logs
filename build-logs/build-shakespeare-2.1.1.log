Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - shakespeare-2.1.1 (lib) (first run)
 - shakespeare-2.1.1 (test:test) (first run)
Configuring library for shakespeare-2.1.1...
Preprocessing library for shakespeare-2.1.1...
Building library for shakespeare-2.1.1...
[ 1 of 22] Compiling Text.IndentToBrace

Text/IndentToBrace.hs:32:25: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding: Patterns of type ‘[T.Text]’ not matched: []
   |
32 |                     let (x:xs) = go True $ after : ls
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 2 of 22] Compiling Text.Internal.Cassius
[ 3 of 22] Compiling Text.MkSizeType
[ 4 of 22] Compiling Text.Shakespeare.Base

Text/Shakespeare/Base.hs:31:1: warning: [-Wunused-imports]
    The import of ‘Language.Haskell.TH’ is redundant
      except perhaps to import instances from ‘Language.Haskell.TH’
    To import instances alone, use: import Language.Haskell.TH()
   |
31 | import Language.Haskell.TH (appE)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Shakespeare/Base.hs:37:1: warning: [-Wunused-imports]
    The import of ‘Data.Ratio’ is redundant
      except perhaps to import instances from ‘Data.Ratio’
    To import instances alone, use: import Data.Ratio()
   |
37 | import Data.Ratio (Ratio, numerator, denominator, (%))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Shakespeare/Base.hs:44:1: warning: [-Wunused-imports]
    The import of ‘Data.Maybe’ is redundant
      except perhaps to import instances from ‘Data.Maybe’
    To import instances alone, use: import Data.Maybe()
   |
44 | import Data.Maybe (mapMaybe)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Shakespeare/Base.hs:45:1: warning: [-Wunused-imports]
    The import of ‘Data.List.NonEmpty’ is redundant
      except perhaps to import instances from ‘Data.List.NonEmpty’
    To import instances alone, use: import Data.List.NonEmpty()
   |
45 | import Data.List.NonEmpty (nonEmpty, NonEmpty ((:|)))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 5 of 22] Compiling Text.Shakespeare
[ 6 of 22] Compiling Text.Julius

Text/Julius.hs:51:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
51 | import Data.Monoid (Monoid(..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Julius.hs:52:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
52 | import Data.Semigroup (Semigroup(..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 7 of 22] Compiling Text.Roy
[ 8 of 22] Compiling Text.Coffee
[ 9 of 22] Compiling Text.Internal.Css

Text/Internal/Css.hs:22:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
22 | import Data.Monoid (Monoid, mconcat, mappend, mempty)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Internal/Css.hs:23:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
23 | import Data.Semigroup (Semigroup(..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Internal/Css.hs:31:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
31 | import Control.Applicative ((<$>), (<*>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Internal/Css.hs:34:1: warning: [-Wunused-imports]
    The import of ‘Data.Functor.Identity’ is redundant
      except perhaps to import instances from ‘Data.Functor.Identity’
    To import instances alone, use: import Data.Functor.Identity()
   |
34 | import Data.Functor.Identity (runIdentity)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[10 of 22] Compiling Text.Internal.Lucius
[11 of 22] Compiling Text.Internal.CssCommon

Text/Internal/CssCommon.hs:54:9: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[(Double, String)]’ not matched:
            []
            ((_, _):_:_)
   |
54 |   where [(value, unit)] = reads s :: [(Double, String)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[12 of 22] Compiling Text.Lucius.Ordered
[13 of 22] Compiling Text.Lucius
[14 of 22] Compiling Text.Hamlet.Parse

Text/Hamlet/Parse.hs:25:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
25 | import Control.Applicative ((<$>), Applicative (..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Hamlet/Parse.hs:39:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad Result’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
   |
39 |     return = Ok
   |     ^^^^^^^^^^^

Text/Hamlet/Parse.hs:49:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘pure = return’ definition detected
    in the instance declaration for ‘Applicative Result’.
    Move definition from ‘return’ to ‘pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
   |
49 |     pure = return
   |     ^^^^^^^^^^^^^
[15 of 22] Compiling Text.Hamlet.RT

Text/Hamlet/RT.hs:20:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
20 | import Data.Monoid (mconcat)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Hamlet/RT.hs:70:13: warning: [-Wunused-matches]
    Defined but not used: ‘x’
   |
70 |     convert x@(DocForall deref (BindAs _ _) docs) =
   |             ^

Text/Hamlet/RT.hs:70:26: warning: [-Wunused-matches]
    Defined but not used: ‘deref’
   |
70 |     convert x@(DocForall deref (BindAs _ _) docs) =
   |                          ^^^^^

Text/Hamlet/RT.hs:70:45: warning: [-Wunused-matches]
    Defined but not used: ‘docs’
   |
70 |     convert x@(DocForall deref (BindAs _ _) docs) =
   |                                             ^^^^

Text/Hamlet/RT.hs:77:13: warning: [-Wunused-matches]
    Defined but not used: ‘x’
   |
77 |     convert x@(DocMaybe deref (BindAs _ _) jdocs ndocs) =
   |             ^

Text/Hamlet/RT.hs:77:25: warning: [-Wunused-matches]
    Defined but not used: ‘deref’
   |
77 |     convert x@(DocMaybe deref (BindAs _ _) jdocs ndocs) =
   |                         ^^^^^

Text/Hamlet/RT.hs:77:44: warning: [-Wunused-matches]
    Defined but not used: ‘jdocs’
   |
77 |     convert x@(DocMaybe deref (BindAs _ _) jdocs ndocs) =
   |                                            ^^^^^

Text/Hamlet/RT.hs:77:50: warning: [-Wunused-matches]
    Defined but not used: ‘ndocs’
   |
77 |     convert x@(DocMaybe deref (BindAs _ _) jdocs ndocs) =
   |                                                  ^^^^^

Text/Hamlet/RT.hs:107:37: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘x’ shadows the existing binding
      bound at Text/Hamlet/RT.hs:100:13
    |
107 |         go (DerefBranch (DerefIdent x) _, docs') | x == specialOrIdent = do
    |                                     ^
[16 of 22] Compiling Text.Hamlet

Text/Hamlet.hs:58:1: warning: [-Wunused-imports]
    The qualified import of ‘Data.Text.Lazy’ is redundant
      except perhaps to import instances from ‘Data.Text.Lazy’
    To import instances alone, use: import Data.Text.Lazy()
   |
58 | import qualified Data.Text.Lazy as TL
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Hamlet.hs:63:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
63 | import Data.Monoid (mempty, mappend, mconcat)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Hamlet.hs:400:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘ixhamlet’
    |
400 | ixhamlet = hamletWithSettings ihamletRules xhtmlHamletSettings
    | ^^^^^^^^

Text/Hamlet.hs:480:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘varName’
    |
480 | varName _ "" = error "Illegal empty varName"
    | ^^^^^^^

Text/Hamlet.hs:484:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘strToExp’
    |
484 | strToExp s@(c:_)
    | ^^^^^^^^

Text/Hamlet.hs:517:16: warning: [-Wunused-matches]
    Defined but not used: ‘html’
    |
517 |   show (EPlain html) = "EPlain"
    |                ^^^^

Text/Hamlet.hs:518:14: warning: [-Wunused-matches]
    Defined but not used: ‘url’
    |
518 |   show (EUrl url) = "EUrl"
    |              ^^^

Text/Hamlet.hs:519:19: warning: [-Wunused-matches]
    Defined but not used: ‘url’
    |
519 |   show (EUrlParam url) = "EUrlParam"
    |                   ^^^

Text/Hamlet.hs:520:16: warning: [-Wunused-matches]
    Defined but not used: ‘url’
    |
520 |   show (EMixin url) = "EMixin"
    |                ^^^

Text/Hamlet.hs:521:20: warning: [-Wunused-matches]
    Defined but not used: ‘msg_url’
    |
521 |   show (EMixinI18n msg_url) = "EMixinI18n"
    |                    ^^^^^^^

Text/Hamlet.hs:522:14: warning: [-Wunused-matches]
    Defined but not used: ‘msg’
    |
522 |   show (EMsg msg) = "EMsg"
    |              ^^^

Text/Hamlet.hs:570:43: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘c’ shadows the existing binding
      bound at Text/Hamlet.hs:566:13
    |
570 |             c VTMixin = [|\r -> EMixin $ \c -> r c|]
    |                                           ^
[17 of 22] Compiling Text.Hamlet.Runtime

Text/Hamlet/Runtime.hs:100:12: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
100 | instance a ~ HamletData => ToHamletData [a] where
    |            ^

Text/Hamlet/Runtime.hs:102:12: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
102 | instance a ~ HamletData => ToHamletData (Maybe a) where
    |            ^
[18 of 22] Compiling Text.Cassius.Ordered
[19 of 22] Compiling Text.Cassius
[20 of 22] Compiling Text.Shakespeare.I18N

Text/Shakespeare/I18N.hs:65:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
65 | import Control.Applicative ((<$>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Shakespeare/I18N.hs:80:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
80 | import Data.Monoid (mempty, mappend)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Text/Shakespeare/I18N.hs:410:17: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
410 | instance master ~ master' => RenderMessage master (SomeMessage master') where
    |                 ^
[21 of 22] Compiling Text.Shakespeare.Text
[22 of 22] Compiling Text.TypeScript
Configuring test suite 'test' for shakespeare-2.1.1...
Preprocessing test suite 'test' for shakespeare-2.1.1...
Building test suite 'test' for shakespeare-2.1.1...
[ 1 of 10] Compiling HamletTestTypes
[ 2 of 10] Compiling Quoter
[ 3 of 10] Compiling Text.CssSpec
[ 4 of 10] Compiling Text.HamletSpec

test/Text/HamletSpec.hs:18:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
18 | import Data.Monoid (mappend)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:22:1: warning: [-Wunused-imports]
    The import of ‘Text.Blaze.Internal’ is redundant
      except perhaps to import instances from ‘Text.Blaze.Internal’
    To import instances alone, use: import Text.Blaze.Internal()
   |
22 | import Text.Blaze.Internal (preEscapedString)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:25:1: warning: [GHC-38417] [-Wmissing-signatures]
    Top-level binding with no type signature:
      spec :: hspec-core-2.11.9:Test.Hspec.Core.Spec.Monad.SpecM () ()
   |
25 | spec = do
   | ^^^^

test/Text/HamletSpec.hs:117:17: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’
          at test/Text/HamletSpec.hs:(117,17)-(121,25)
        (Num a0)
          arising from the literal ‘-5’
          at test/Text/HamletSpec.hs:(117,17)-(121,25)
    • In the first argument of ‘toHtml’, namely ‘(show (-5))’
      In the first argument of ‘id’, namely ‘(toHtml (show (-5)))’
      In a stmt of a 'do' block: id (toHtml (show (-5)))
    |
117 |         [hamlet|
    |                 ^...

test/Text/HamletSpec.hs:117:17: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Double’ in the following constraints
        (Fractional a0)
          arising from the literal ‘3.14’
          at test/Text/HamletSpec.hs:(117,17)-(121,25)
        (Show a0)
          arising from a use of ‘show’
          at test/Text/HamletSpec.hs:(117,17)-(121,25)
    • In the first argument of ‘show’, namely ‘3.14’
      In the first argument of ‘toHtml’, namely ‘(show 3.14)’
      In the first argument of ‘id’, namely ‘(toHtml (show 3.14))’
    |
117 |         [hamlet|
    |                 ^...

test/Text/HamletSpec.hs:134:18: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraint
        Num a0 arising from the literal ‘1’
    • In the expression: 1
      In the expression: (1, (2, 3))
      In an equation for ‘val’: val = (1, (2, 3))
    |
134 |       let val = (1, (2, 3))
    |                  ^

test/Text/HamletSpec.hs:134:25: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘b0’ to type ‘Integer’ in the following constraint
        Num b0 arising from the literal ‘3’
    • In the expression: 3
      In the expression: (2, 3)
      In the expression: (1, (2, 3))
    |
134 |       let val = (1, (2, 3))
    |                         ^

test/Text/HamletSpec.hs:135:26: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’ at test/Text/HamletSpec.hs:135:26-52
        (Num a0)
          arising from the literal ‘2’ at test/Text/HamletSpec.hs:134:22
    • In the first argument of ‘toHtml’, namely
        ‘(show (fst (snd val)))’
      In the first argument of ‘id’, namely
        ‘(toHtml (show (fst (snd val))))’
      In the expression: id (toHtml (show (fst (snd val))))
    |
135 |       helper "2" [hamlet|#{ show $ fst $ snd val }|]
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:140:26: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘b0’ to type ‘Integer’ in the following constraint
        Num b0 arising from the literal ‘2’
    • In the second argument of ‘const’, namely ‘2’
      In the first argument of ‘show’, namely ‘(const 1 2)’
      In the first argument of ‘toHtml’, namely ‘(show (const 1 2))’
    |
140 |       helper "1" [hamlet|#{ show $ const 1 2 }|]
    |                          ^^^^^^^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:140:26: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’ at test/Text/HamletSpec.hs:140:26-48
        (Num a0)
          arising from the literal ‘1’ at test/Text/HamletSpec.hs:140:26-48
    • In the first argument of ‘toHtml’, namely ‘(show (const 1 2))’
      In the first argument of ‘id’, namely ‘(toHtml (show (const 1 2)))’
      In the expression: id (toHtml (show (const 1 2)))
    |
140 |       helper "1" [hamlet|#{ show $ const 1 2 }|]
    |                          ^^^^^^^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:164:26: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’ at test/Text/HamletSpec.hs:164:26-44
        (Num a0)
          arising from the literal ‘2’ at test/Text/HamletSpec.hs:164:26-44
    • In the first argument of ‘toHtml’, namely ‘(show ((+) 1 2))’
      In the first argument of ‘id’, namely ‘(toHtml (show ((+) 1 2)))’
      In the expression: id (toHtml (show ((+) 1 2)))
    |
164 |       helper "3" [hamlet|#{show $ (+) 1 2}|]
    |                          ^^^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:165:26: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’ at test/Text/HamletSpec.hs:165:26-67
        (Num a0)
          arising from the literal ‘3’ at test/Text/HamletSpec.hs:165:26-67
    • In the first argument of ‘toHtml’, namely
        ‘(show (sum ((:) 1 ((:) 2 (return 3)))))’
      In the first argument of ‘id’, namely
        ‘(toHtml (show (sum ((:) 1 ((:) 2 (return 3))))))’
      In the expression:
        id (toHtml (show (sum ((:) 1 ((:) 2 (return 3))))))
    |
165 |       helper "6" [hamlet|#{show $ sum $ (:) 1 ((:) 2 $ return 3)}|]
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:187:36: warning: [-Wunused-matches]
    Defined but not used: ‘user’
    |
187 |       helper "justnothing" [hamlet|
    |                                    ^...

test/Text/HamletSpec.hs:187:36: warning: [-Wunused-matches]
    Defined but not used: ‘profile’
    |
187 |       helper "justnothing" [hamlet|
    |                                    ^...

test/Text/HamletSpec.hs:204:28: warning: [-Wunused-matches]
    Defined but not used: ‘y’
    |
204 |         helper "5" [hamlet|
    |                            ^...

test/Text/HamletSpec.hs:210:28: warning: [-Wunused-matches]
    Defined but not used: ‘field2’
    |
210 |         helper "5" [hamlet|
    |                            ^...

test/Text/HamletSpec.hs:249:11: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘embed’ shadows the existing binding
      defined at test/Text/HamletSpec.hs:567:7
    |
249 |       let embed = [hamlet|<p>EMBEDDED|]
    |           ^^^^^

test/Text/HamletSpec.hs:258:11: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘embed’ shadows the existing binding
      defined at test/Text/HamletSpec.hs:567:7
    |
258 |       let embed = [ihamlet|<p>EMBEDDED|]
    |           ^^^^^

test/Text/HamletSpec.hs:268:87: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’
          at test/Text/HamletSpec.hs:(268,87)-(274,2)
        (Num a0)
          arising from the literal ‘26’ at test/Text/HamletSpec.hs:267:33-34
    • In the first argument of ‘toHtml’, namely ‘(show age_a6RE)’
      In the first argument of ‘id’, namely ‘(toHtml (show age_a6RE))’
      In a stmt of a 'do' block: id (toHtml (show age_a6RE))
    |
268 |       helper "<dl><dt>Michael</dt><dd>26</dd><dt>Miriam</dt><dd>25</dd></dl>" [hamlet|
    |                                                                                       ^...

test/Text/HamletSpec.hs:277:61: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’
          at test/Text/HamletSpec.hs:(277,61)-(283,2)
        (Num a0)
          arising from the literal ‘26’ at test/Text/HamletSpec.hs:276:37-38
    • In the first argument of ‘toHtml’, namely ‘(show age_a6RN)’
      In the first argument of ‘id’, namely ‘(toHtml (show age_a6RN))’
      In a stmt of a 'do' block: id (toHtml (show age_a6RN))
    |
277 |       helper "<dl><dt>Michael</dt><dd>26</dd></dl>" [hamlet|
    |                                                             ^...

test/Text/HamletSpec.hs:286:61: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’
          at test/Text/HamletSpec.hs:(286,61)-(292,2)
        (Num a0)
          arising from the literal ‘26’ at test/Text/HamletSpec.hs:285:32-33
    • In the first argument of ‘toHtml’, namely ‘(show age_a6S2)’
      In the first argument of ‘id’, namely ‘(toHtml (show age_a6S2))’
      In a stmt of a 'do' block: id (toHtml (show age_a6S2))
    |
286 |       helper "<dl><dt>Michael</dt><dd>26</dd></dl>" [hamlet|
    |                                                             ^...

test/Text/HamletSpec.hs:294:64: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’
          at test/Text/HamletSpec.hs:(294,64)-(299,2)
        (Num a0)
          arising from the literal ‘3’
          at test/Text/HamletSpec.hs:(294,64)-(299,2)
    • In the first argument of ‘toHtml’, namely ‘(show num_a6S8)’
      In the first argument of ‘id’, namely ‘(toHtml (show num_a6S8))’
      In a stmt of a 'do' block: id (toHtml (show num_a6S8))
    |
294 |       helper "<ul><li>1</li><li>2</li><li>3</li></ul>" [hamlet|
    |                                                                ^...

test/Text/HamletSpec.hs:302:11: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘example’ shadows the existing binding
      imported from ‘Test.Hspec’ at test/Text/HamletSpec.hs:8:1-30
    |
302 |           example = [1, 2, 3]
    |           ^^^^^^^

test/Text/HamletSpec.hs:313:26: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’ at test/Text/HamletSpec.hs:313:26-54
        (Num a0)
          arising from the literal ‘2’ at test/Text/HamletSpec.hs:313:26-54
    • In the first argument of ‘toHtml’, namely
        ‘(show ((-) ((+) 4 5) ((+) 2 2)))’
      In the first argument of ‘id’, namely
        ‘(toHtml (show ((-) ((+) 4 5) ((+) 2 2))))’
      In the expression: id (toHtml (show ((-) ((+) 4 5) ((+) 2 2))))
    |
313 |       helper "5" [hamlet|#{show $ (4 + 5) - (2 + 2)}|]
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:315:26: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’ at test/Text/HamletSpec.hs:315:26-48
        (Num a0)
          arising from the literal ‘3’ at test/Text/HamletSpec.hs:315:26-48
    • In the first argument of ‘toHtml’, namely
        ‘(show ((+) ((+) 1 1) 3))’
      In the first argument of ‘id’, namely
        ‘(toHtml (show ((+) ((+) 1 1) 3)))’
      In the expression: id (toHtml (show ((+) ((+) 1 1) 3)))
    |
315 |       helper "5" [hamlet|#{show ((+) 1 1 + 3)}|]
    |                          ^^^^^^^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:323:11: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘nothing’ shadows the existing binding
      defined at test/Text/HamletSpec.hs:571:7
    |
323 |       let nothing  = Nothing
    |           ^^^^^^^

test/Text/HamletSpec.hs:325:44: warning: [-Wunused-matches]
    Defined but not used: ‘val’
    |
325 |       in helper "<br><br><br><br>" [hamlet|
    |                                            ^...

test/Text/HamletSpec.hs:325:44: warning: [-Wunused-matches]
    Defined but not used: ‘val’
    |
325 |       in helper "<br><br><br><br>" [hamlet|
    |                                            ^...

test/Text/HamletSpec.hs:457:44: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Eq a0)
          arising from the literal ‘2’
          at test/Text/HamletSpec.hs:(457,44)-(465,2)
        (Num a0)
          arising from the literal ‘2’
          at test/Text/HamletSpec.hs:(457,44)-(465,2)
        (Num a0)
          arising from the literal ‘3’ at test/Text/HamletSpec.hs:456:19
    • In the pattern: 2
      In a case alternative:
          2 -> id ((preEscapedText . pack) "<p>2</p>
")
      In the expression:
        case num of
          1 -> id ((preEscapedText . pack) "<p>1</p>
")
          2 -> id ((preEscapedText . pack) "<p>2</p>
")
          _ -> id ((preEscapedText . pack) "<p>Many</p>
")
    |
457 |          in helper "<p>Many</p>\n" [hamlet|
    |                                            ^...

test/Text/HamletSpec.hs:483:21: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’
          at test/Text/HamletSpec.hs:(483,21)-(488,14)
        (Num a0)
          arising from the literal ‘3’
          at test/Text/HamletSpec.hs:(483,21)-(488,14)
    • In the first argument of ‘toHtml’, namely ‘(show x_a7g0)’
      In the first argument of ‘id’, namely ‘(toHtml (show x_a7g0))’
      In the expression: id (toHtml (show x_a7g0))
    |
483 |             [hamlet|
    |                     ^...

test/Text/HamletSpec.hs:483:21: warning: [-Wunused-matches]
    Defined but not used: ‘x’
    |
483 |             [hamlet|
    |                     ^...

test/Text/HamletSpec.hs:504:13: warning: [-Wunused-local-binds]
    Defined but not used: ‘toInclude’
    |
504 |         let toInclude render = render (5, [("hello", "world")])
    |             ^^^^^^^^^

test/Text/HamletSpec.hs:504:23: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘render’ shadows the existing binding
      defined at test/Text/HamletSpec.hs:529:1
    |
504 |         let toInclude render = render (5, [("hello", "world")])
    |                       ^^^^^^

test/Text/HamletSpec.hs:508:9: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘toInclude’ shadows the existing binding
      bound at test/Text/HamletSpec.hs:504:13
    |
508 |         toInclude <- parseHamletRT defaultHamletSettings template1
    |         ^^^^^^^^^

test/Text/HamletSpec.hs:802:9: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘text’ shadows the existing binding
      imported from ‘Text.Blaze’ at test/Text/HamletSpec.hs:23:1-17
      (and originally defined in ‘Text.Blaze.Internal’)
    |
802 |     let text = "<raw text>"
    |         ^^^^

test/Text/HamletSpec.hs:962:26: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’ at test/Text/HamletSpec.hs:962:26-38
        (Num a0)
          arising from the literal ‘123’ at test/Text/HamletSpec.hs:962:26-38
    • In the first argument of ‘toHtml’, namely ‘(show 123)’
      In the first argument of ‘id’, namely ‘(toHtml (show 123))’
      In the expression: id (toHtml (show 123))
    |
962 |     helper "123" [hamlet|#{show 123}|]
    |                          ^^^^^^^^^^^^^

test/Text/HamletSpec.hs:963:30: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Double’ in the following constraints
        (Show a0)
          arising from a use of ‘show’ at test/Text/HamletSpec.hs:963:30-46
        (Fractional a0)
          arising from the literal ‘123.456’
          at test/Text/HamletSpec.hs:963:30-46
    • In the first argument of ‘toHtml’, namely ‘(show 123.456)’
      In the first argument of ‘id’, namely ‘(toHtml (show 123.456))’
      In the expression: id (toHtml (show 123.456))
    |
963 |     helper "123.456" [hamlet|#{show 123.456}|]
    |                              ^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:964:27: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraints
        (Show a0)
          arising from a use of ‘show’ at test/Text/HamletSpec.hs:964:27-40
        (Num a0)
          arising from the literal ‘-123’
          at test/Text/HamletSpec.hs:964:27-40
    • In the first argument of ‘toHtml’, namely ‘(show (-123))’
      In the first argument of ‘id’, namely ‘(toHtml (show (-123)))’
      In the expression: id (toHtml (show (-123)))
    |
964 |     helper "-123" [hamlet|#{show -123}|]
    |                           ^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:965:31: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Double’ in the following constraints
        (Show a0)
          arising from a use of ‘show’ at test/Text/HamletSpec.hs:965:31-48
        (Fractional a0)
          arising from the literal ‘-123.456’
          at test/Text/HamletSpec.hs:965:31-48
    • In the first argument of ‘toHtml’, namely ‘(show (-123.456))’
      In the first argument of ‘id’, namely ‘(toHtml (show (-123.456)))’
      In the expression: id (toHtml (show (-123.456)))
    |
965 |     helper "-123.456" [hamlet|#{show -123.456}|]
    |                               ^^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:988:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘caseDiffBindNames’
    |
988 | caseDiffBindNames = do
    | ^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:989:9: warning: [-Wunused-local-binds]
    Defined but not used: ‘list’
    |
989 |     let list = words "1 2 3"
    |         ^^^^

test/Text/HamletSpec.hs:989:9: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘list’ shadows the existing binding
      defined at test/Text/HamletSpec.hs:570:7
    |
989 |     let list = words "1 2 3"
    |         ^^^^

test/Text/HamletSpec.hs:995:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘caseTrailingSpaces’
    |
995 | caseTrailingSpaces = helper "" [hamlet|
    | ^^^^^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:995:40: warning: [-Wunused-matches]
    Defined but not used: ‘x’
    |
995 | caseTrailingSpaces = helper "" [hamlet|
    |                                        ^...

test/Text/HamletSpec.hs:995:40: warning: [-Wunused-matches]
    Defined but not used: ‘x’
    |
995 | caseTrailingSpaces = helper "" [hamlet|
    |                                        ^...

test/Text/HamletSpec.hs:1011:25: warning: [-Wunused-matches]
    Defined but not used: ‘b’
     |
1011 |    helper "foo" [hamlet| 
     |                         ^^...

test/Text/HamletSpec.hs:1015:25: warning: [-Wunused-matches]
    Defined but not used: ‘b’
     |
1015 |    helper "url" [hamlet| 
     |                         ^^...

test/Text/HamletSpec.hs:1030:43: warning: [-Wunused-matches]
    Defined but not used: ‘h’
     |
1030 |   helper "1 2 3 4 5 61 2 3 4 5 6" [hamlet|
     |                                           ^...

test/Text/HamletSpec.hs:1061:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘caseCaseRecord’
     |
1061 | caseCaseRecord = do
     | ^^^^^^^^^^^^^^

test/Text/HamletSpec.hs:1080:1: warning: [GHC-90177] [-Worphans]
    Orphan instance: instance (ToMarkup a, ToMarkup b) =>
                              ToMarkup (a, b)
    Suggested fix:
      Move the instance declaration to the module of the class or of the type, or
      wrap the type with a newtype and declare the instance on the new type.
     |
1080 | instance (ToMarkup a, ToMarkup b) => ToMarkup (a,b) where
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...
[ 5 of 10] Compiling Text.JuliusSpec

test/Text/JuliusSpec.hs:20:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
20 | import Data.Monoid (mappend)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 6 of 10] Compiling Text.Shakespeare.BaseSpec

test/Text/Shakespeare/BaseSpec.hs:7:9: warning: [-Wunused-imports]
    The import of ‘<|>’
    from module ‘Text.ParserCombinators.Parsec’ is redundant
  |
7 |        ((<|>), ParseError, parse, runParser)
  |         ^^^^^

test/Text/Shakespeare/BaseSpec.hs:107:5: warning: [-Wunused-local-binds]
    Defined but not used: ‘varString’
    |
107 |     varString = parseVarString '%'
    |     ^^^^^^^^^

test/Text/Shakespeare/BaseSpec.hs:108:5: warning: [-Wunused-local-binds]
    Defined but not used: ‘urlString’
    |
108 |     urlString = parseUrlString '@' '?'
    |     ^^^^^^^^^

test/Text/Shakespeare/BaseSpec.hs:109:5: warning: [-Wunused-local-binds]
    Defined but not used: ‘intString’
    |
109 |     intString = parseIntString '^'
    |     ^^^^^^^^^

test/Text/Shakespeare/BaseSpec.hs:130:5: warning: [-Wunused-local-binds]
    Defined but not used: ‘run’
    |
130 |     run parser str = eShowErrors $ parse parser str str
    |     ^^^

test/Text/Shakespeare/BaseSpec.hs:133:5: warning: [-Wunused-local-binds]
    Defined but not used: ‘eShowErrors’
    |
133 |     eShowErrors = either (error . show) id
    |     ^^^^^^^^^^^
[ 7 of 10] Compiling Text.Shakespeare.BuilderQQ
[ 8 of 10] Compiling Text.Shakespeare.I18NSpec

test/Text/Shakespeare/I18NSpec.hs:14:13: warning: [-Wunused-top-binds]
    Defined but not used: data constructor ‘Test’
   |
14 | data Test = Test
   |             ^^^^
[ 9 of 10] Compiling Text.Shakespeare.TextSpec

test/Text/Shakespeare/TextSpec.hs:20:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
20 | import Data.Monoid (mappend)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[10 of 10] Compiling Main
[11 of 11] Linking /tmp/workdir-shakespeare/shakespeare-2.1.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/shakespeare-2.1.1/t/test/build/test/test
