Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - Boolean-0.2.4 (lib:Boolean) (first run)
Configuring Boolean-0.2.4...
Preprocessing library for Boolean-0.2.4...
Building library for Boolean-0.2.4...
[1 of 3] Compiling Data.Boolean

src/Data/Boolean.hs:74:17: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
74 |   ifB  :: (bool ~ BooleanOf a) => bool -> a -> a -> a
   |                 ^

src/Data/Boolean.hs:77:25: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
77 | boolean :: (IfB a, bool ~ BooleanOf a) => a -> a -> bool -> a
   |                         ^

src/Data/Boolean.hs:81:37: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
81 | cond :: (Applicative f, IfB a, bool ~ BooleanOf a) => f bool -> f a -> f a -> f a
   |                                     ^

src/Data/Boolean.hs:85:51: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
85 | crop :: (Applicative f, Monoid (f a), IfB a, bool ~ BooleanOf a) => f bool -> f a -> f a
   |                                                   ^

src/Data/Boolean.hs:89:26: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
89 | guardedB :: (IfB b, bool ~ BooleanOf b) => bool -> [(bool,b)] -> b -> b
   |                          ^

src/Data/Boolean.hs:94:23: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
94 | caseB :: (IfB b, bool ~ BooleanOf b) => a -> [(a -> bool, b)] -> b -> b
   |                       ^

src/Data/Boolean.hs:102:25: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
102 |   (==*), (/=*) :: (bool ~ BooleanOf a) => a -> a -> bool
    |                         ^

src/Data/Boolean.hs:109:37: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
109 |   (<*), (<=*), (>*), (>=*) :: (bool ~ BooleanOf a) => a -> a -> bool
    |                                     ^

src/Data/Boolean.hs:178:45: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
178 | instance (Boolean (BooleanOf a),BooleanOf a ~ Bool) => IfB [a] where { ifB = ife }
    |                                             ^

src/Data/Boolean.hs:180:16: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
180 | instance (bool ~ BooleanOf p, bool ~ BooleanOf q
    |                ^

src/Data/Boolean.hs:180:36: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
180 | instance (bool ~ BooleanOf p, bool ~ BooleanOf q
    |                                    ^

src/Data/Boolean.hs:184:16: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
184 | instance (bool ~ BooleanOf p, bool ~ BooleanOf q, bool ~ BooleanOf r
    |                ^

src/Data/Boolean.hs:184:36: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
184 | instance (bool ~ BooleanOf p, bool ~ BooleanOf q, bool ~ BooleanOf r
    |                                    ^

src/Data/Boolean.hs:184:56: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
184 | instance (bool ~ BooleanOf p, bool ~ BooleanOf q, bool ~ BooleanOf r
    |                                                        ^

src/Data/Boolean.hs:189:16: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
189 | instance (bool ~ BooleanOf p, bool ~ BooleanOf q, bool ~ BooleanOf r, bool ~ BooleanOf s
    |                ^

src/Data/Boolean.hs:189:36: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
189 | instance (bool ~ BooleanOf p, bool ~ BooleanOf q, bool ~ BooleanOf r, bool ~ BooleanOf s
    |                                    ^

src/Data/Boolean.hs:189:56: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
189 | instance (bool ~ BooleanOf p, bool ~ BooleanOf q, bool ~ BooleanOf r, bool ~ BooleanOf s
    |                                                        ^

src/Data/Boolean.hs:189:76: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
189 | instance (bool ~ BooleanOf p, bool ~ BooleanOf q, bool ~ BooleanOf r, bool ~ BooleanOf s
    |                                                                            ^
[2 of 3] Compiling Data.Boolean.Numbers

src/Data/Boolean/Numbers.hs:119:34: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
119 |   properFraction :: (IntegerOf a ~ IntegerOf b, IntegralB b) => a -> (b, a)
    |                                  ^

src/Data/Boolean/Numbers.hs:121:28: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
121 |   truncate :: (IntegerOf a ~ IntegerOf b, IntegralB b) => a -> b
    |                            ^

src/Data/Boolean/Numbers.hs:125:25: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
125 |   round :: (IntegerOf a ~ IntegerOf b, IntegralB b) => a -> b
    |                         ^

src/Data/Boolean/Numbers.hs:127:27: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
127 |   ceiling :: (IntegerOf a ~ IntegerOf b, IntegralB b) => a -> b
    |                           ^

src/Data/Boolean/Numbers.hs:129:25: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
129 |   floor :: (IntegerOf a ~ IntegerOf b, IntegralB b) => a -> b
    |                         ^

src/Data/Boolean/Numbers.hs:167:31: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
167 | fromIntegralB :: (IntegerOf a ~ IntegerOf b, IntegralB a, NumB b) => a -> b
    |                               ^

src/Data/Boolean/Numbers.hs:175:26: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
175 | fromInteger' :: (Integer ~ IntegerOf b, NumB b) => Integer -> b
    |                          ^
[3 of 3] Compiling Data.Boolean.Overload
