Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - amazonka-s3-2.0 (lib) (first run)
 - amazonka-s3-2.0 (test:amazonka-s3-test) (first run)
Configuring library for amazonka-s3-2.0...
Preprocessing library for amazonka-s3-2.0...
Building library for amazonka-s3-2.0...
[  1 of 286] Compiling Amazonka.S3.Internal
[  2 of 286] Compiling Amazonka.S3.Types.AbortIncompleteMultipartUpload
[  3 of 286] Compiling Amazonka.S3.Types.AnalyticsS3ExportFileFormat
[  4 of 286] Compiling Amazonka.S3.Types.AnalyticsS3BucketDestination
[  5 of 286] Compiling Amazonka.S3.Types.AnalyticsExportDestination
[  6 of 286] Compiling Amazonka.S3.Types.ArchiveStatus
[  7 of 286] Compiling Amazonka.S3.Types.Bucket
[  8 of 286] Compiling Amazonka.S3.Types.BucketAccelerateStatus
[  9 of 286] Compiling Amazonka.S3.Types.AccelerateConfiguration
[ 10 of 286] Compiling Amazonka.S3.Types.BucketCannedACL
[ 11 of 286] Compiling Amazonka.S3.Types.BucketLogsPermission
[ 12 of 286] Compiling Amazonka.S3.Types.BucketVersioningStatus
[ 13 of 286] Compiling Amazonka.S3.Types.CORSRule
[ 14 of 286] Compiling Amazonka.S3.Types.CORSConfiguration
[ 15 of 286] Compiling Amazonka.S3.Types.Checksum
[ 16 of 286] Compiling Amazonka.S3.Types.ChecksumAlgorithm
[ 17 of 286] Compiling Amazonka.S3.Types.ChecksumMode
[ 18 of 286] Compiling Amazonka.S3.Types.CommonPrefix
[ 19 of 286] Compiling Amazonka.S3.Types.CompletedPart
[ 20 of 286] Compiling Amazonka.S3.Types.CompletedMultipartUpload
[ 21 of 286] Compiling Amazonka.S3.Types.CompressionType
[ 22 of 286] Compiling Amazonka.S3.Types.Condition
[ 23 of 286] Compiling Amazonka.S3.Types.ContinuationEvent
[ 24 of 286] Compiling Amazonka.S3.Types.CopyObjectResult
[ 25 of 286] Compiling Amazonka.S3.Types.CopyPartResult
[ 26 of 286] Compiling Amazonka.S3.Types.CreateBucketConfiguration
[ 27 of 286] Compiling Amazonka.S3.Types.DeleteMarkerReplicationStatus
[ 28 of 286] Compiling Amazonka.S3.Types.DeleteMarkerReplication
[ 29 of 286] Compiling Amazonka.S3.Types.DeletedObject
[ 30 of 286] Compiling Amazonka.S3.Types.EncodingType
[ 31 of 286] Compiling Amazonka.S3.Types.EncryptionConfiguration
[ 32 of 286] Compiling Amazonka.S3.Types.EndEvent
[ 33 of 286] Compiling Amazonka.S3.Types.ErrorDocument
[ 34 of 286] Compiling Amazonka.S3.Types.Event
[ 35 of 286] Compiling Amazonka.S3.Types.EventBridgeConfiguration
[ 36 of 286] Compiling Amazonka.S3.Types.ExistingObjectReplicationStatus
[ 37 of 286] Compiling Amazonka.S3.Types.ExistingObjectReplication
[ 38 of 286] Compiling Amazonka.S3.Types.ExpirationStatus
[ 39 of 286] Compiling Amazonka.S3.Types.ExpressionType
[ 40 of 286] Compiling Amazonka.S3.Types.FileHeaderInfo
[ 41 of 286] Compiling Amazonka.S3.Types.CSVInput
[ 42 of 286] Compiling Amazonka.S3.Types.FilterRuleName
[ 43 of 286] Compiling Amazonka.S3.Types.FilterRule
[ 44 of 286] Compiling Amazonka.S3.Types.IndexDocument
[ 45 of 286] Compiling Amazonka.S3.Types.Initiator
[ 46 of 286] Compiling Amazonka.S3.Types.IntelligentTieringAccessTier
[ 47 of 286] Compiling Amazonka.S3.Types.IntelligentTieringStatus
[ 48 of 286] Compiling Amazonka.S3.Types.InventoryFilter
[ 49 of 286] Compiling Amazonka.S3.Types.InventoryFormat
[ 50 of 286] Compiling Amazonka.S3.Types.InventoryFrequency
[ 51 of 286] Compiling Amazonka.S3.Types.InventoryIncludedObjectVersions
[ 52 of 286] Compiling Amazonka.S3.Types.InventoryOptionalField
[ 53 of 286] Compiling Amazonka.S3.Types.InventorySchedule
[ 54 of 286] Compiling Amazonka.S3.Types.JSONOutput
[ 55 of 286] Compiling Amazonka.S3.Types.JSONType
[ 56 of 286] Compiling Amazonka.S3.Types.JSONInput
[ 57 of 286] Compiling Amazonka.S3.Types.LifecycleExpiration
[ 58 of 286] Compiling Amazonka.S3.Types.MFADelete
[ 59 of 286] Compiling Amazonka.S3.Types.MFADeleteStatus
[ 60 of 286] Compiling Amazonka.S3.Types.MetadataDirective
[ 61 of 286] Compiling Amazonka.S3.Types.MetadataEntry
[ 62 of 286] Compiling Amazonka.S3.Types.MetricsStatus
[ 63 of 286] Compiling Amazonka.S3.Types.NoncurrentVersionExpiration
[ 64 of 286] Compiling Amazonka.S3.Types.ObjectAttributes
[ 65 of 286] Compiling Amazonka.S3.Types.ObjectCannedACL
[ 66 of 286] Compiling Amazonka.S3.Types.ObjectIdentifier
[ 67 of 286] Compiling Amazonka.S3.Types.Delete
[ 68 of 286] Compiling Amazonka.S3.Types.ObjectLockEnabled
[ 69 of 286] Compiling Amazonka.S3.Types.ObjectLockLegalHoldStatus
[ 70 of 286] Compiling Amazonka.S3.Types.ObjectLockLegalHold
[ 71 of 286] Compiling Amazonka.S3.Types.ObjectLockMode
[ 72 of 286] Compiling Amazonka.S3.Types.ObjectLockRetentionMode
[ 73 of 286] Compiling Amazonka.S3.Types.ObjectLockRetention
[ 74 of 286] Compiling Amazonka.S3.Types.DefaultRetention
[ 75 of 286] Compiling Amazonka.S3.Types.ObjectLockRule
[ 76 of 286] Compiling Amazonka.S3.Types.ObjectLockConfiguration
[ 77 of 286] Compiling Amazonka.S3.Types.ObjectOwnership
[ 78 of 286] Compiling Amazonka.S3.Types.ObjectPart
[ 79 of 286] Compiling Amazonka.S3.Types.GetObjectAttributesParts
[ 80 of 286] Compiling Amazonka.S3.Types.ObjectStorageClass
[ 81 of 286] Compiling Amazonka.S3.Types.ObjectVersionStorageClass
[ 82 of 286] Compiling Amazonka.S3.Types.Owner
[ 83 of 286] Compiling Amazonka.S3.Types.ObjectVersion
[ 84 of 286] Compiling Amazonka.S3.Types.Object
[ 85 of 286] Compiling Amazonka.S3.Types.DeleteMarkerEntry
[ 86 of 286] Compiling Amazonka.S3.Types.OwnerOverride
[ 87 of 286] Compiling Amazonka.S3.Types.AccessControlTranslation
[ 88 of 286] Compiling Amazonka.S3.Types.OwnershipControlsRule
[ 89 of 286] Compiling Amazonka.S3.Types.OwnershipControls
[ 90 of 286] Compiling Amazonka.S3.Types.ParquetInput
[ 91 of 286] Compiling Amazonka.S3.Types.InputSerialization
[ 92 of 286] Compiling Amazonka.S3.Types.Part
[ 93 of 286] Compiling Amazonka.S3.Types.Payer
[ 94 of 286] Compiling Amazonka.S3.Types.Permission
[ 95 of 286] Compiling Amazonka.S3.Types.PolicyStatus
[ 96 of 286] Compiling Amazonka.S3.Types.Progress
[ 97 of 286] Compiling Amazonka.S3.Types.ProgressEvent
[ 98 of 286] Compiling Amazonka.S3.Types.Protocol
[ 99 of 286] Compiling Amazonka.S3.Types.PublicAccessBlockConfiguration
[100 of 286] Compiling Amazonka.S3.Types.QuoteFields
[101 of 286] Compiling Amazonka.S3.Types.CSVOutput
[102 of 286] Compiling Amazonka.S3.Types.OutputSerialization
[103 of 286] Compiling Amazonka.S3.Types.RecordsEvent
[104 of 286] Compiling Amazonka.S3.Types.Redirect
[105 of 286] Compiling Amazonka.S3.Types.RedirectAllRequestsTo
[106 of 286] Compiling Amazonka.S3.Types.ReplicaModificationsStatus
[107 of 286] Compiling Amazonka.S3.Types.ReplicaModifications
[108 of 286] Compiling Amazonka.S3.Types.ReplicationRuleStatus
[109 of 286] Compiling Amazonka.S3.Types.ReplicationStatus
[110 of 286] Compiling Amazonka.S3.Types.ReplicationTimeStatus
[111 of 286] Compiling Amazonka.S3.Types.ReplicationTimeValue
[112 of 286] Compiling Amazonka.S3.Types.ReplicationTime
[113 of 286] Compiling Amazonka.S3.Types.Metrics
[114 of 286] Compiling Amazonka.S3.Types.RequestCharged
[115 of 286] Compiling Amazonka.S3.Types.RequestPayer
[116 of 286] Compiling Amazonka.S3.Types.RequestPaymentConfiguration
[117 of 286] Compiling Amazonka.S3.Types.RequestProgress
[118 of 286] Compiling Amazonka.S3.Types.RestoreRequestType
[119 of 286] Compiling Amazonka.S3.Types.RoutingRule
[120 of 286] Compiling Amazonka.S3.Types.S3KeyFilter
[121 of 286] Compiling Amazonka.S3.Types.NotificationConfigurationFilter
[122 of 286] Compiling Amazonka.S3.Types.QueueConfiguration
[123 of 286] Compiling Amazonka.S3.Types.LambdaFunctionConfiguration
[124 of 286] Compiling Amazonka.S3.Types.S3ServiceError
[125 of 286] Compiling Amazonka.S3.Types.SSEKMS
[126 of 286] Compiling Amazonka.S3.Types.SSES3
[127 of 286] Compiling Amazonka.S3.Types.InventoryEncryption
[128 of 286] Compiling Amazonka.S3.Types.InventoryS3BucketDestination
[129 of 286] Compiling Amazonka.S3.Types.InventoryDestination
[130 of 286] Compiling Amazonka.S3.Types.InventoryConfiguration
[131 of 286] Compiling Amazonka.S3.Types.ScanRange
[132 of 286] Compiling Amazonka.S3.Types.SelectParameters
[133 of 286] Compiling Amazonka.S3.Types.ServerSideEncryption
[134 of 286] Compiling Amazonka.S3.Types.Encryption
[135 of 286] Compiling Amazonka.S3.Types.ServerSideEncryptionByDefault
[136 of 286] Compiling Amazonka.S3.Types.ServerSideEncryptionRule
[137 of 286] Compiling Amazonka.S3.Types.ServerSideEncryptionConfiguration
[138 of 286] Compiling Amazonka.S3.Types.SseKmsEncryptedObjectsStatus
[139 of 286] Compiling Amazonka.S3.Types.SseKmsEncryptedObjects
[140 of 286] Compiling Amazonka.S3.Types.SourceSelectionCriteria
[141 of 286] Compiling Amazonka.S3.Types.Stats
[142 of 286] Compiling Amazonka.S3.Types.StatsEvent
[143 of 286] Compiling Amazonka.S3.Types.SelectObjectContentEventStream
[144 of 286] Compiling Amazonka.S3.Types.StorageClass
[145 of 286] Compiling Amazonka.S3.Types.MultipartUpload
[146 of 286] Compiling Amazonka.S3.Types.Destination
[147 of 286] Compiling Amazonka.S3.Types.StorageClassAnalysisSchemaVersion
[148 of 286] Compiling Amazonka.S3.Types.StorageClassAnalysisDataExport
[149 of 286] Compiling Amazonka.S3.Types.StorageClassAnalysis
[150 of 286] Compiling Amazonka.S3.Types.Tag
[151 of 286] Compiling Amazonka.S3.Types.ReplicationRuleAndOperator
[152 of 286] Compiling Amazonka.S3.Types.ReplicationRuleFilter

gen/Amazonka/S3/Types/ReplicationRuleFilter.hs:119:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type ReplicationRuleFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | replicationRuleFilter_prefix = Lens.lens (\ReplicationRuleFilter' {prefix} -> prefix) (\s@ReplicationRuleFilter' {} a -> s {prefix = a} :: ReplicationRuleFilter)
    |                                                                                                                             ^^^^^^^^^^
[153 of 286] Compiling Amazonka.S3.Types.ReplicationRule

gen/Amazonka/S3/Types/ReplicationRule.hs:172:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type ReplicationRule is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
172 | replicationRule_prefix = Lens.lens (\ReplicationRule' {prefix} -> prefix) (\s@ReplicationRule' {} a -> s {prefix = a} :: ReplicationRule)
    |                                                                                                           ^^^^^^^^^^

gen/Amazonka/S3/Types/ReplicationRule.hs:198:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type ReplicationRule is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
198 | replicationRule_status = Lens.lens (\ReplicationRule' {status} -> status) (\s@ReplicationRule' {} a -> s {status = a} :: ReplicationRule)
    |                                                                                                           ^^^^^^^^^^
[154 of 286] Compiling Amazonka.S3.Types.ReplicationConfiguration
[155 of 286] Compiling Amazonka.S3.Types.MetricsAndOperator
[156 of 286] Compiling Amazonka.S3.Types.MetricsFilter

gen/Amazonka/S3/Types/MetricsFilter.hs:82:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessPointArn = a} with type MetricsFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
82 | metricsFilter_accessPointArn = Lens.lens (\MetricsFilter' {accessPointArn} -> accessPointArn) (\s@MetricsFilter' {} a -> s {accessPointArn = a} :: MetricsFilter)
   |                                                                                                                             ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/Types/MetricsFilter.hs:93:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type MetricsFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | metricsFilter_prefix = Lens.lens (\MetricsFilter' {prefix} -> prefix) (\s@MetricsFilter' {} a -> s {prefix = a} :: MetricsFilter)
   |                                                                                                     ^^^^^^^^^^
[157 of 286] Compiling Amazonka.S3.Types.MetricsConfiguration
[158 of 286] Compiling Amazonka.S3.Types.LifecycleRuleAndOperator
[159 of 286] Compiling Amazonka.S3.Types.LifecycleRuleFilter

gen/Amazonka/S3/Types/LifecycleRuleFilter.hs:94:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {objectSizeGreaterThan = a} with type LifecycleRuleFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | lifecycleRuleFilter_objectSizeGreaterThan = Lens.lens (\LifecycleRuleFilter' {objectSizeGreaterThan} -> objectSizeGreaterThan) (\s@LifecycleRuleFilter' {} a -> s {objectSizeGreaterThan = a} :: LifecycleRuleFilter)
   |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/Types/LifecycleRuleFilter.hs:98:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {objectSizeLessThan = a} with type LifecycleRuleFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | lifecycleRuleFilter_objectSizeLessThan = Lens.lens (\LifecycleRuleFilter' {objectSizeLessThan} -> objectSizeLessThan) (\s@LifecycleRuleFilter' {} a -> s {objectSizeLessThan = a} :: LifecycleRuleFilter)
   |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/Types/LifecycleRuleFilter.hs:107:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type LifecycleRuleFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
107 | lifecycleRuleFilter_prefix = Lens.lens (\LifecycleRuleFilter' {prefix} -> prefix) (\s@LifecycleRuleFilter' {} a -> s {prefix = a} :: LifecycleRuleFilter)
    |                                                                                                                       ^^^^^^^^^^
[160 of 286] Compiling Amazonka.S3.Types.IntelligentTieringAndOperator
[161 of 286] Compiling Amazonka.S3.Types.IntelligentTieringFilter

gen/Amazonka/S3/Types/IntelligentTieringFilter.hs:98:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type IntelligentTieringFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | intelligentTieringFilter_prefix = Lens.lens (\IntelligentTieringFilter' {prefix} -> prefix) (\s@IntelligentTieringFilter' {} a -> s {prefix = a} :: IntelligentTieringFilter)
   |                                                                                                                                      ^^^^^^^^^^
[162 of 286] Compiling Amazonka.S3.Types.AnalyticsAndOperator
[163 of 286] Compiling Amazonka.S3.Types.AnalyticsFilter

gen/Amazonka/S3/Types/AnalyticsFilter.hs:77:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type AnalyticsFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
77 | analyticsFilter_prefix = Lens.lens (\AnalyticsFilter' {prefix} -> prefix) (\s@AnalyticsFilter' {} a -> s {prefix = a} :: AnalyticsFilter)
   |                                                                                                           ^^^^^^^^^^
[164 of 286] Compiling Amazonka.S3.Types.AnalyticsConfiguration
[165 of 286] Compiling Amazonka.S3.Types.Tagging
[166 of 286] Compiling Amazonka.S3.Types.TaggingDirective
[167 of 286] Compiling Amazonka.S3.Types.Tier
[168 of 286] Compiling Amazonka.S3.Types.GlacierJobParameters
[169 of 286] Compiling Amazonka.S3.Types.Tiering
[170 of 286] Compiling Amazonka.S3.Types.IntelligentTieringConfiguration
[171 of 286] Compiling Amazonka.S3.Types.TopicConfiguration
[172 of 286] Compiling Amazonka.S3.Types.NotificationConfiguration
[173 of 286] Compiling Amazonka.S3.Types.TransitionStorageClass
[174 of 286] Compiling Amazonka.S3.Types.Transition
[175 of 286] Compiling Amazonka.S3.Types.NoncurrentVersionTransition
[176 of 286] Compiling Amazonka.S3.Types.LifecycleRule

gen/Amazonka/S3/Types/LifecycleRule.hs:179:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type LifecycleRule is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
179 | lifecycleRule_prefix = Lens.lens (\LifecycleRule' {prefix} -> prefix) (\s@LifecycleRule' {} a -> s {prefix = a} :: LifecycleRule)
    |                                                                                                     ^^^^^^^^^^
[177 of 286] Compiling Amazonka.S3.Types.BucketLifecycleConfiguration
[178 of 286] Compiling Amazonka.S3.Types.Type
[179 of 286] Compiling Amazonka.S3.Types.Grantee
[180 of 286] Compiling Amazonka.S3.Types.TargetGrant
[181 of 286] Compiling Amazonka.S3.Types.LoggingEnabled
[182 of 286] Compiling Amazonka.S3.Types.BucketLoggingStatus
[183 of 286] Compiling Amazonka.S3.Types.Grant
[184 of 286] Compiling Amazonka.S3.Types.S3Location
[185 of 286] Compiling Amazonka.S3.Types.OutputLocation
[186 of 286] Compiling Amazonka.S3.Types.RestoreRequest

gen/Amazonka/S3/Types/RestoreRequest.hs:125:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tier = a} with type RestoreRequest is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
125 | restoreRequest_tier = Lens.lens (\RestoreRequest' {tier} -> tier) (\s@RestoreRequest' {} a -> s {tier = a} :: RestoreRequest)
    |                                                                                                  ^^^^^^^^
[187 of 286] Compiling Amazonka.S3.Types.AccessControlPolicy
[188 of 286] Compiling Amazonka.S3.Types.VersioningConfiguration
[189 of 286] Compiling Amazonka.S3.Types.WebsiteConfiguration
[190 of 286] Compiling Amazonka.S3.Types
[191 of 286] Compiling Amazonka.S3.SelectObjectContent

gen/Amazonka/S3/SelectObjectContent.hs:386:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type SelectObjectContent is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
386 | selectObjectContent_bucket = Lens.lens (\SelectObjectContent' {bucket} -> bucket) (\s@SelectObjectContent' {} a -> s {bucket = a} :: SelectObjectContent)
    |                                                                                                                       ^^^^^^^^^^

gen/Amazonka/S3/SelectObjectContent.hs:390:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type SelectObjectContent is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
390 | selectObjectContent_key = Lens.lens (\SelectObjectContent' {key} -> key) (\s@SelectObjectContent' {} a -> s {key = a} :: SelectObjectContent)
    |                                                                                                              ^^^^^^^

gen/Amazonka/S3/SelectObjectContent.hs:394:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {expression = a} with type SelectObjectContent is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
394 | selectObjectContent_expression = Lens.lens (\SelectObjectContent' {expression} -> expression) (\s@SelectObjectContent' {} a -> s {expression = a} :: SelectObjectContent)
    |                                                                                                                                   ^^^^^^^^^^^^^^

gen/Amazonka/S3/SelectObjectContent.hs:398:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {expressionType = a} with type SelectObjectContent is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
398 | selectObjectContent_expressionType = Lens.lens (\SelectObjectContent' {expressionType} -> expressionType) (\s@SelectObjectContent' {} a -> s {expressionType = a} :: SelectObjectContent)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/SelectObjectContent.hs:402:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {inputSerialization = a} with type SelectObjectContent is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
402 | selectObjectContent_inputSerialization = Lens.lens (\SelectObjectContent' {inputSerialization} -> inputSerialization) (\s@SelectObjectContent' {} a -> s {inputSerialization = a} :: SelectObjectContent)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/SelectObjectContent.hs:407:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {outputSerialization = a} with type SelectObjectContent is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
407 | selectObjectContent_outputSerialization = Lens.lens (\SelectObjectContent' {outputSerialization} -> outputSerialization) (\s@SelectObjectContent' {} a -> s {outputSerialization = a} :: SelectObjectContent)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/SelectObjectContent.hs:527:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {payload = a} with type SelectObjectContentResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
527 | selectObjectContentResponse_payload = Lens.lens (\SelectObjectContentResponse' {payload} -> payload) (\s@SelectObjectContentResponse' {} a -> s {payload = a} :: SelectObjectContentResponse)
    |                                                                                                                                                  ^^^^^^^^^^^
[192 of 286] Compiling Amazonka.S3.RestoreObject

gen/Amazonka/S3/RestoreObject.hs:415:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type RestoreObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
415 | restoreObject_checksumAlgorithm = Lens.lens (\RestoreObject' {checksumAlgorithm} -> checksumAlgorithm) (\s@RestoreObject' {} a -> s {checksumAlgorithm = a} :: RestoreObject)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/RestoreObject.hs:433:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type RestoreObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
433 | restoreObject_versionId = Lens.lens (\RestoreObject' {versionId} -> versionId) (\s@RestoreObject' {} a -> s {versionId = a} :: RestoreObject)
    |                                                                                                              ^^^^^^^^^^^^^

gen/Amazonka/S3/RestoreObject.hs:456:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type RestoreObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
456 | restoreObject_bucket = Lens.lens (\RestoreObject' {bucket} -> bucket) (\s@RestoreObject' {} a -> s {bucket = a} :: RestoreObject)
    |                                                                                                     ^^^^^^^^^^

gen/Amazonka/S3/RestoreObject.hs:460:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type RestoreObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
460 | restoreObject_key = Lens.lens (\RestoreObject' {key} -> key) (\s@RestoreObject' {} a -> s {key = a} :: RestoreObject)
    |                                                                                            ^^^^^^^
[193 of 286] Compiling Amazonka.S3.PutPublicAccessBlock

gen/Amazonka/S3/PutPublicAccessBlock.hs:182:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutPublicAccessBlock is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
182 | putPublicAccessBlock_checksumAlgorithm = Lens.lens (\PutPublicAccessBlock' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutPublicAccessBlock' {} a -> s {checksumAlgorithm = a} :: PutPublicAccessBlock)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutPublicAccessBlock.hs:201:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutPublicAccessBlock is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
201 | putPublicAccessBlock_bucket = Lens.lens (\PutPublicAccessBlock' {bucket} -> bucket) (\s@PutPublicAccessBlock' {} a -> s {bucket = a} :: PutPublicAccessBlock)
    |                                                                                                                          ^^^^^^^^^^
[194 of 286] Compiling Amazonka.S3.PutObjectTagging

gen/Amazonka/S3/PutObjectTagging.hs:254:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutObjectTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
254 | putObjectTagging_checksumAlgorithm = Lens.lens (\PutObjectTagging' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutObjectTagging' {} a -> s {checksumAlgorithm = a} :: PutObjectTagging)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObjectTagging.hs:276:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type PutObjectTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
276 | putObjectTagging_versionId = Lens.lens (\PutObjectTagging' {versionId} -> versionId) (\s@PutObjectTagging' {} a -> s {versionId = a} :: PutObjectTagging)
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/S3/PutObjectTagging.hs:299:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutObjectTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
299 | putObjectTagging_bucket = Lens.lens (\PutObjectTagging' {bucket} -> bucket) (\s@PutObjectTagging' {} a -> s {bucket = a} :: PutObjectTagging)
    |                                                                                                              ^^^^^^^^^^

gen/Amazonka/S3/PutObjectTagging.hs:303:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type PutObjectTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
303 | putObjectTagging_key = Lens.lens (\PutObjectTagging' {key} -> key) (\s@PutObjectTagging' {} a -> s {key = a} :: PutObjectTagging)
    |                                                                                                     ^^^^^^^

gen/Amazonka/S3/PutObjectTagging.hs:307:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagging = a} with type PutObjectTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
307 | putObjectTagging_tagging = Lens.lens (\PutObjectTagging' {tagging} -> tagging) (\s@PutObjectTagging' {} a -> s {tagging = a} :: PutObjectTagging)
    |                                                                                                                 ^^^^^^^^^^^

gen/Amazonka/S3/PutObjectTagging.hs:407:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type PutObjectTaggingResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
407 | putObjectTaggingResponse_versionId = Lens.lens (\PutObjectTaggingResponse' {versionId} -> versionId) (\s@PutObjectTaggingResponse' {} a -> s {versionId = a} :: PutObjectTaggingResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^
[195 of 286] Compiling Amazonka.S3.PutObjectRetention

gen/Amazonka/S3/PutObjectRetention.hs:208:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutObjectRetention is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
208 | putObjectRetention_checksumAlgorithm = Lens.lens (\PutObjectRetention' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutObjectRetention' {} a -> s {checksumAlgorithm = a} :: PutObjectRetention)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObjectRetention.hs:235:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type PutObjectRetention is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
235 | putObjectRetention_versionId = Lens.lens (\PutObjectRetention' {versionId} -> versionId) (\s@PutObjectRetention' {} a -> s {versionId = a} :: PutObjectRetention)
    |                                                                                                                             ^^^^^^^^^^^^^

gen/Amazonka/S3/PutObjectRetention.hs:249:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutObjectRetention is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
249 | putObjectRetention_bucket = Lens.lens (\PutObjectRetention' {bucket} -> bucket) (\s@PutObjectRetention' {} a -> s {bucket = a} :: PutObjectRetention)
    |                                                                                                                    ^^^^^^^^^^

gen/Amazonka/S3/PutObjectRetention.hs:254:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type PutObjectRetention is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
254 | putObjectRetention_key = Lens.lens (\PutObjectRetention' {key} -> key) (\s@PutObjectRetention' {} a -> s {key = a} :: PutObjectRetention)
    |                                                                                                           ^^^^^^^
[196 of 286] Compiling Amazonka.S3.PutObjectLockConfiguration

gen/Amazonka/S3/PutObjectLockConfiguration.hs:173:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutObjectLockConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
173 | putObjectLockConfiguration_checksumAlgorithm = Lens.lens (\PutObjectLockConfiguration' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutObjectLockConfiguration' {} a -> s {checksumAlgorithm = a} :: PutObjectLockConfiguration)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObjectLockConfiguration.hs:205:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutObjectLockConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
205 | putObjectLockConfiguration_bucket = Lens.lens (\PutObjectLockConfiguration' {bucket} -> bucket) (\s@PutObjectLockConfiguration' {} a -> s {bucket = a} :: PutObjectLockConfiguration)
    |                                                                                                                                            ^^^^^^^^^^
[197 of 286] Compiling Amazonka.S3.PutObjectLegalHold

gen/Amazonka/S3/PutObjectLegalHold.hs:189:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutObjectLegalHold is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
189 | putObjectLegalHold_checksumAlgorithm = Lens.lens (\PutObjectLegalHold' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutObjectLegalHold' {} a -> s {checksumAlgorithm = a} :: PutObjectLegalHold)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObjectLegalHold.hs:216:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type PutObjectLegalHold is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
216 | putObjectLegalHold_versionId = Lens.lens (\PutObjectLegalHold' {versionId} -> versionId) (\s@PutObjectLegalHold' {} a -> s {versionId = a} :: PutObjectLegalHold)
    |                                                                                                                             ^^^^^^^^^^^^^

gen/Amazonka/S3/PutObjectLegalHold.hs:230:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutObjectLegalHold is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
230 | putObjectLegalHold_bucket = Lens.lens (\PutObjectLegalHold' {bucket} -> bucket) (\s@PutObjectLegalHold' {} a -> s {bucket = a} :: PutObjectLegalHold)
    |                                                                                                                    ^^^^^^^^^^

gen/Amazonka/S3/PutObjectLegalHold.hs:234:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type PutObjectLegalHold is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
234 | putObjectLegalHold_key = Lens.lens (\PutObjectLegalHold' {key} -> key) (\s@PutObjectLegalHold' {} a -> s {key = a} :: PutObjectLegalHold)
    |                                                                                                           ^^^^^^^
[198 of 286] Compiling Amazonka.S3.PutObjectAcl

gen/Amazonka/S3/PutObjectAcl.hs:447:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutObjectAcl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
447 | putObjectAcl_checksumAlgorithm = Lens.lens (\PutObjectAcl' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutObjectAcl' {} a -> s {checksumAlgorithm = a} :: PutObjectAcl)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObjectAcl.hs:504:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type PutObjectAcl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
504 | putObjectAcl_versionId = Lens.lens (\PutObjectAcl' {versionId} -> versionId) (\s@PutObjectAcl' {} a -> s {versionId = a} :: PutObjectAcl)
    |                                                                                                           ^^^^^^^^^^^^^

gen/Amazonka/S3/PutObjectAcl.hs:518:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutObjectAcl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
518 | putObjectAcl_bucket = Lens.lens (\PutObjectAcl' {bucket} -> bucket) (\s@PutObjectAcl' {} a -> s {bucket = a} :: PutObjectAcl)
    |                                                                                                  ^^^^^^^^^^

gen/Amazonka/S3/PutObjectAcl.hs:541:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type PutObjectAcl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
541 | putObjectAcl_key = Lens.lens (\PutObjectAcl' {key} -> key) (\s@PutObjectAcl' {} a -> s {key = a} :: PutObjectAcl)
    |                                                                                         ^^^^^^^
[199 of 286] Compiling Amazonka.S3.PutObject

gen/Amazonka/S3/PutObject.hs:695:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucketKeyEnabled = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
695 | putObject_bucketKeyEnabled = Lens.lens (\PutObject' {bucketKeyEnabled} -> bucketKeyEnabled) (\s@PutObject' {} a -> s {bucketKeyEnabled = a} :: PutObject)
    |                                                                                                                       ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:715:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
715 | putObject_checksumAlgorithm = Lens.lens (\PutObject' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutObject' {} a -> s {checksumAlgorithm = a} :: PutObject)
    |                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:724:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32 = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
724 | putObject_checksumCRC32 = Lens.lens (\PutObject' {checksumCRC32} -> checksumCRC32) (\s@PutObject' {} a -> s {checksumCRC32 = a} :: PutObject)
    |                                                                                                              ^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:733:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32C = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
733 | putObject_checksumCRC32C = Lens.lens (\PutObject' {checksumCRC32C} -> checksumCRC32C) (\s@PutObject' {} a -> s {checksumCRC32C = a} :: PutObject)
    |                                                                                                                 ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:742:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA1 = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
742 | putObject_checksumSHA1 = Lens.lens (\PutObject' {checksumSHA1} -> checksumSHA1) (\s@PutObject' {} a -> s {checksumSHA1 = a} :: PutObject)
    |                                                                                                           ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:751:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA256 = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
751 | putObject_checksumSHA256 = Lens.lens (\PutObject' {checksumSHA256} -> checksumSHA256) (\s@PutObject' {} a -> s {checksumSHA256 = a} :: PutObject)
    |                                                                                                                 ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:855:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
855 | putObject_sSECustomerAlgorithm = Lens.lens (\PutObject' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@PutObject' {} a -> s {sSECustomerAlgorithm = a} :: PutObject)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:869:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
869 | putObject_sSECustomerKeyMD5 = Lens.lens (\PutObject' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@PutObject' {} a -> s {sSECustomerKeyMD5 = a} :: PutObject)
    |                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:875:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSEKMSEncryptionContext = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
875 | putObject_sSEKMSEncryptionContext = Lens.lens (\PutObject' {sSEKMSEncryptionContext} -> sSEKMSEncryptionContext) (\s@PutObject' {} a -> s {sSEKMSEncryptionContext = a} :: PutObject) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:887:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSEKMSKeyId = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
887 | putObject_sSEKMSKeyId = Lens.lens (\PutObject' {sSEKMSKeyId} -> sSEKMSKeyId) (\s@PutObject' {} a -> s {sSEKMSKeyId = a} :: PutObject) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                        ^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:892:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverSideEncryption = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
892 | putObject_serverSideEncryption = Lens.lens (\PutObject' {serverSideEncryption} -> serverSideEncryption) (\s@PutObject' {} a -> s {serverSideEncryption = a} :: PutObject)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:902:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {storageClass = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
902 | putObject_storageClass = Lens.lens (\PutObject' {storageClass} -> storageClass) (\s@PutObject' {} a -> s {storageClass = a} :: PutObject)
    |                                                                                                           ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:907:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagging = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
907 | putObject_tagging = Lens.lens (\PutObject' {tagging} -> tagging) (\s@PutObject' {} a -> s {tagging = a} :: PutObject)
    |                                                                                            ^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:953:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
953 | putObject_bucket = Lens.lens (\PutObject' {bucket} -> bucket) (\s@PutObject' {} a -> s {bucket = a} :: PutObject)
    |                                                                                         ^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:957:80: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type PutObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
957 | putObject_key = Lens.lens (\PutObject' {key} -> key) (\s@PutObject' {} a -> s {key = a} :: PutObject)
    |                                                                                ^^^^^^^

gen/Amazonka/S3/PutObject.hs:1232:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucketKeyEnabled = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1232 | putObjectResponse_bucketKeyEnabled = Lens.lens (\PutObjectResponse' {bucketKeyEnabled} -> bucketKeyEnabled) (\s@PutObjectResponse' {} a -> s {bucketKeyEnabled = a} :: PutObjectResponse)
     |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:1241:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32 = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1241 | putObjectResponse_checksumCRC32 = Lens.lens (\PutObjectResponse' {checksumCRC32} -> checksumCRC32) (\s@PutObjectResponse' {} a -> s {checksumCRC32 = a} :: PutObjectResponse)
     |                                                                                                                                      ^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:1250:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32C = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1250 | putObjectResponse_checksumCRC32C = Lens.lens (\PutObjectResponse' {checksumCRC32C} -> checksumCRC32C) (\s@PutObjectResponse' {} a -> s {checksumCRC32C = a} :: PutObjectResponse)
     |                                                                                                                                         ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:1259:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA1 = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1259 | putObjectResponse_checksumSHA1 = Lens.lens (\PutObjectResponse' {checksumSHA1} -> checksumSHA1) (\s@PutObjectResponse' {} a -> s {checksumSHA1 = a} :: PutObjectResponse)
     |                                                                                                                                   ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:1268:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA256 = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1268 | putObjectResponse_checksumSHA256 = Lens.lens (\PutObjectResponse' {checksumSHA256} -> checksumSHA256) (\s@PutObjectResponse' {} a -> s {checksumSHA256 = a} :: PutObjectResponse)
     |                                                                                                                                         ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:1272:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {eTag = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1272 | putObjectResponse_eTag = Lens.lens (\PutObjectResponse' {eTag} -> eTag) (\s@PutObjectResponse' {} a -> s {eTag = a} :: PutObjectResponse)
     |                                                                                                           ^^^^^^^^

gen/Amazonka/S3/PutObject.hs:1280:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {expiration = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1280 | putObjectResponse_expiration = Lens.lens (\PutObjectResponse' {expiration} -> expiration) (\s@PutObjectResponse' {} a -> s {expiration = a} :: PutObjectResponse)
     |                                                                                                                             ^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:1290:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1290 | putObjectResponse_sSECustomerAlgorithm = Lens.lens (\PutObjectResponse' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@PutObjectResponse' {} a -> s {sSECustomerAlgorithm = a} :: PutObjectResponse)
     |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:1296:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1296 | putObjectResponse_sSECustomerKeyMD5 = Lens.lens (\PutObjectResponse' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@PutObjectResponse' {} a -> s {sSECustomerKeyMD5 = a} :: PutObjectResponse)
     |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:1302:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSEKMSEncryptionContext = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1302 | putObjectResponse_sSEKMSEncryptionContext = Lens.lens (\PutObjectResponse' {sSEKMSEncryptionContext} -> sSEKMSEncryptionContext) (\s@PutObjectResponse' {} a -> s {sSEKMSEncryptionContext = a} :: PutObjectResponse) Prelude.. Lens.mapping Data._Sensitive
     |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:1309:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSEKMSKeyId = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1309 | putObjectResponse_sSEKMSKeyId = Lens.lens (\PutObjectResponse' {sSEKMSKeyId} -> sSEKMSKeyId) (\s@PutObjectResponse' {} a -> s {sSEKMSKeyId = a} :: PutObjectResponse) Prelude.. Lens.mapping Data._Sensitive
     |                                                                                                                                ^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:1316:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverSideEncryption = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1316 | putObjectResponse_serverSideEncryption = Lens.lens (\PutObjectResponse' {serverSideEncryption} -> serverSideEncryption) (\s@PutObjectResponse' {} a -> s {serverSideEncryption = a} :: PutObjectResponse)
     |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutObject.hs:1320:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type PutObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1320 | putObjectResponse_versionId = Lens.lens (\PutObjectResponse' {versionId} -> versionId) (\s@PutObjectResponse' {} a -> s {versionId = a} :: PutObjectResponse)
     |                                                                                                                          ^^^^^^^^^^^^^
[200 of 286] Compiling Amazonka.S3.PutBucketWebsite

gen/Amazonka/S3/PutBucketWebsite.hs:216:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutBucketWebsite is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
216 | putBucketWebsite_checksumAlgorithm = Lens.lens (\PutBucketWebsite' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutBucketWebsite' {} a -> s {checksumAlgorithm = a} :: PutBucketWebsite)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutBucketWebsite.hs:237:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketWebsite is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
237 | putBucketWebsite_bucket = Lens.lens (\PutBucketWebsite' {bucket} -> bucket) (\s@PutBucketWebsite' {} a -> s {bucket = a} :: PutBucketWebsite)
    |                                                                                                              ^^^^^^^^^^
[201 of 286] Compiling Amazonka.S3.PutBucketVersioning

gen/Amazonka/S3/PutBucketVersioning.hs:194:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutBucketVersioning is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
194 | putBucketVersioning_checksumAlgorithm = Lens.lens (\PutBucketVersioning' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutBucketVersioning' {} a -> s {checksumAlgorithm = a} :: PutBucketVersioning)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutBucketVersioning.hs:220:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketVersioning is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
220 | putBucketVersioning_bucket = Lens.lens (\PutBucketVersioning' {bucket} -> bucket) (\s@PutBucketVersioning' {} a -> s {bucket = a} :: PutBucketVersioning)
    |                                                                                                                       ^^^^^^^^^^
[202 of 286] Compiling Amazonka.S3.PutBucketTagging

gen/Amazonka/S3/PutBucketTagging.hs:203:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutBucketTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
203 | putBucketTagging_checksumAlgorithm = Lens.lens (\PutBucketTagging' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutBucketTagging' {} a -> s {checksumAlgorithm = a} :: PutBucketTagging)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutBucketTagging.hs:224:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
224 | putBucketTagging_bucket = Lens.lens (\PutBucketTagging' {bucket} -> bucket) (\s@PutBucketTagging' {} a -> s {bucket = a} :: PutBucketTagging)
    |                                                                                                              ^^^^^^^^^^

gen/Amazonka/S3/PutBucketTagging.hs:228:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagging = a} with type PutBucketTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
228 | putBucketTagging_tagging = Lens.lens (\PutBucketTagging' {tagging} -> tagging) (\s@PutBucketTagging' {} a -> s {tagging = a} :: PutBucketTagging)
    |                                                                                                                 ^^^^^^^^^^^
[203 of 286] Compiling Amazonka.S3.PutBucketRequestPayment

gen/Amazonka/S3/PutBucketRequestPayment.hs:162:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutBucketRequestPayment is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
162 | putBucketRequestPayment_checksumAlgorithm = Lens.lens (\PutBucketRequestPayment' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutBucketRequestPayment' {} a -> s {checksumAlgorithm = a} :: PutBucketRequestPayment)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutBucketRequestPayment.hs:183:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketRequestPayment is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
183 | putBucketRequestPayment_bucket = Lens.lens (\PutBucketRequestPayment' {bucket} -> bucket) (\s@PutBucketRequestPayment' {} a -> s {bucket = a} :: PutBucketRequestPayment)
    |                                                                                                                                   ^^^^^^^^^^
[204 of 286] Compiling Amazonka.S3.PutBucketReplication

gen/Amazonka/S3/PutBucketReplication.hs:222:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutBucketReplication is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
222 | putBucketReplication_checksumAlgorithm = Lens.lens (\PutBucketReplication' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutBucketReplication' {} a -> s {checksumAlgorithm = a} :: PutBucketReplication)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutBucketReplication.hs:247:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketReplication is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
247 | putBucketReplication_bucket = Lens.lens (\PutBucketReplication' {bucket} -> bucket) (\s@PutBucketReplication' {} a -> s {bucket = a} :: PutBucketReplication)
    |                                                                                                                          ^^^^^^^^^^
[205 of 286] Compiling Amazonka.S3.PutBucketPolicy

gen/Amazonka/S3/PutBucketPolicy.hs:173:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutBucketPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
173 | putBucketPolicy_checksumAlgorithm = Lens.lens (\PutBucketPolicy' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutBucketPolicy' {} a -> s {checksumAlgorithm = a} :: PutBucketPolicy)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutBucketPolicy.hs:196:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
196 | putBucketPolicy_bucket = Lens.lens (\PutBucketPolicy' {bucket} -> bucket) (\s@PutBucketPolicy' {} a -> s {bucket = a} :: PutBucketPolicy)
    |                                                                                                           ^^^^^^^^^^
[206 of 286] Compiling Amazonka.S3.PutBucketOwnershipControls

gen/Amazonka/S3/PutBucketOwnershipControls.hs:139:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketOwnershipControls is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | putBucketOwnershipControls_bucket = Lens.lens (\PutBucketOwnershipControls' {bucket} -> bucket) (\s@PutBucketOwnershipControls' {} a -> s {bucket = a} :: PutBucketOwnershipControls)
    |                                                                                                                                            ^^^^^^^^^^
[207 of 286] Compiling Amazonka.S3.PutBucketNotificationConfiguration

gen/Amazonka/S3/PutBucketNotificationConfiguration.hs:174:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketNotificationConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
174 | putBucketNotificationConfiguration_bucket = Lens.lens (\PutBucketNotificationConfiguration' {bucket} -> bucket) (\s@PutBucketNotificationConfiguration' {} a -> s {bucket = a} :: PutBucketNotificationConfiguration)
    |                                                                                                                                                                    ^^^^^^^^^^
[208 of 286] Compiling Amazonka.S3.PutBucketMetricsConfiguration

gen/Amazonka/S3/PutBucketMetricsConfiguration.hs:142:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketMetricsConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
142 | putBucketMetricsConfiguration_bucket = Lens.lens (\PutBucketMetricsConfiguration' {bucket} -> bucket) (\s@PutBucketMetricsConfiguration' {} a -> s {bucket = a} :: PutBucketMetricsConfiguration)
    |                                                                                                                                                     ^^^^^^^^^^

gen/Amazonka/S3/PutBucketMetricsConfiguration.hs:146:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type PutBucketMetricsConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
146 | putBucketMetricsConfiguration_id = Lens.lens (\PutBucketMetricsConfiguration' {id} -> id) (\s@PutBucketMetricsConfiguration' {} a -> s {id = a} :: PutBucketMetricsConfiguration)
    |                                                                                                                                         ^^^^^^
[209 of 286] Compiling Amazonka.S3.PutBucketLogging

gen/Amazonka/S3/PutBucketLogging.hs:204:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutBucketLogging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
204 | putBucketLogging_checksumAlgorithm = Lens.lens (\PutBucketLogging' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutBucketLogging' {} a -> s {checksumAlgorithm = a} :: PutBucketLogging)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutBucketLogging.hs:222:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketLogging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
222 | putBucketLogging_bucket = Lens.lens (\PutBucketLogging' {bucket} -> bucket) (\s@PutBucketLogging' {} a -> s {bucket = a} :: PutBucketLogging)
    |                                                                                                              ^^^^^^^^^^
[210 of 286] Compiling Amazonka.S3.PutBucketLifecycleConfiguration

gen/Amazonka/S3/PutBucketLifecycleConfiguration.hs:197:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutBucketLifecycleConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
197 | putBucketLifecycleConfiguration_checksumAlgorithm = Lens.lens (\PutBucketLifecycleConfiguration' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutBucketLifecycleConfiguration' {} a -> s {checksumAlgorithm = a} :: PutBucketLifecycleConfiguration)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutBucketLifecycleConfiguration.hs:211:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketLifecycleConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
211 | putBucketLifecycleConfiguration_bucket = Lens.lens (\PutBucketLifecycleConfiguration' {bucket} -> bucket) (\s@PutBucketLifecycleConfiguration' {} a -> s {bucket = a} :: PutBucketLifecycleConfiguration)
    |                                                                                                                                                           ^^^^^^^^^^
[211 of 286] Compiling Amazonka.S3.PutBucketInventoryConfiguration

gen/Amazonka/S3/PutBucketInventoryConfiguration.hs:172:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketInventoryConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
172 | putBucketInventoryConfiguration_bucket = Lens.lens (\PutBucketInventoryConfiguration' {bucket} -> bucket) (\s@PutBucketInventoryConfiguration' {} a -> s {bucket = a} :: PutBucketInventoryConfiguration)
    |                                                                                                                                                           ^^^^^^^^^^

gen/Amazonka/S3/PutBucketInventoryConfiguration.hs:176:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type PutBucketInventoryConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
176 | putBucketInventoryConfiguration_id = Lens.lens (\PutBucketInventoryConfiguration' {id} -> id) (\s@PutBucketInventoryConfiguration' {} a -> s {id = a} :: PutBucketInventoryConfiguration)
    |                                                                                                                                               ^^^^^^
[212 of 286] Compiling Amazonka.S3.PutBucketIntelligentTieringConfiguration

gen/Amazonka/S3/PutBucketIntelligentTieringConfiguration.hs:153:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketIntelligentTieringConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
153 | putBucketIntelligentTieringConfiguration_bucket = Lens.lens (\PutBucketIntelligentTieringConfiguration' {bucket} -> bucket) (\s@PutBucketIntelligentTieringConfiguration' {} a -> s {bucket = a} :: PutBucketIntelligentTieringConfiguration)
    |                                                                                                                                                                                      ^^^^^^^^^^

gen/Amazonka/S3/PutBucketIntelligentTieringConfiguration.hs:157:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type PutBucketIntelligentTieringConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
157 | putBucketIntelligentTieringConfiguration_id = Lens.lens (\PutBucketIntelligentTieringConfiguration' {id} -> id) (\s@PutBucketIntelligentTieringConfiguration' {} a -> s {id = a} :: PutBucketIntelligentTieringConfiguration)
    |                                                                                                                                                                          ^^^^^^
[213 of 286] Compiling Amazonka.S3.PutBucketEncryption

gen/Amazonka/S3/PutBucketEncryption.hs:187:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutBucketEncryption is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
187 | putBucketEncryption_checksumAlgorithm = Lens.lens (\PutBucketEncryption' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutBucketEncryption' {} a -> s {checksumAlgorithm = a} :: PutBucketEncryption)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutBucketEncryption.hs:210:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketEncryption is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
210 | putBucketEncryption_bucket = Lens.lens (\PutBucketEncryption' {bucket} -> bucket) (\s@PutBucketEncryption' {} a -> s {bucket = a} :: PutBucketEncryption)
    |                                                                                                                       ^^^^^^^^^^
[214 of 286] Compiling Amazonka.S3.PutBucketCors

gen/Amazonka/S3/PutBucketCors.hs:198:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutBucketCors is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
198 | putBucketCors_checksumAlgorithm = Lens.lens (\PutBucketCors' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutBucketCors' {} a -> s {checksumAlgorithm = a} :: PutBucketCors)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutBucketCors.hs:219:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketCors is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
219 | putBucketCors_bucket = Lens.lens (\PutBucketCors' {bucket} -> bucket) (\s@PutBucketCors' {} a -> s {bucket = a} :: PutBucketCors)
    |                                                                                                     ^^^^^^^^^^
[215 of 286] Compiling Amazonka.S3.PutBucketAnalyticsConfiguration

gen/Amazonka/S3/PutBucketAnalyticsConfiguration.hs:167:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketAnalyticsConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
167 | putBucketAnalyticsConfiguration_bucket = Lens.lens (\PutBucketAnalyticsConfiguration' {bucket} -> bucket) (\s@PutBucketAnalyticsConfiguration' {} a -> s {bucket = a} :: PutBucketAnalyticsConfiguration)
    |                                                                                                                                                           ^^^^^^^^^^

gen/Amazonka/S3/PutBucketAnalyticsConfiguration.hs:171:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type PutBucketAnalyticsConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
171 | putBucketAnalyticsConfiguration_id = Lens.lens (\PutBucketAnalyticsConfiguration' {id} -> id) (\s@PutBucketAnalyticsConfiguration' {} a -> s {id = a} :: PutBucketAnalyticsConfiguration)
    |                                                                                                                                               ^^^^^^
[216 of 286] Compiling Amazonka.S3.PutBucketAcl

gen/Amazonka/S3/PutBucketAcl.hs:348:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutBucketAcl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
348 | putBucketAcl_checksumAlgorithm = Lens.lens (\PutBucketAcl' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutBucketAcl' {} a -> s {checksumAlgorithm = a} :: PutBucketAcl)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutBucketAcl.hs:393:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketAcl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
393 | putBucketAcl_bucket = Lens.lens (\PutBucketAcl' {bucket} -> bucket) (\s@PutBucketAcl' {} a -> s {bucket = a} :: PutBucketAcl)
    |                                                                                                  ^^^^^^^^^^
[217 of 286] Compiling Amazonka.S3.PutBucketAccelerateConfiguration

gen/Amazonka/S3/PutBucketAccelerateConfiguration.hs:169:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type PutBucketAccelerateConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
169 | putBucketAccelerateConfiguration_checksumAlgorithm = Lens.lens (\PutBucketAccelerateConfiguration' {checksumAlgorithm} -> checksumAlgorithm) (\s@PutBucketAccelerateConfiguration' {} a -> s {checksumAlgorithm = a} :: PutBucketAccelerateConfiguration)
    |                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/PutBucketAccelerateConfiguration.hs:179:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type PutBucketAccelerateConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
179 | putBucketAccelerateConfiguration_bucket = Lens.lens (\PutBucketAccelerateConfiguration' {bucket} -> bucket) (\s@PutBucketAccelerateConfiguration' {} a -> s {bucket = a} :: PutBucketAccelerateConfiguration)
    |                                                                                                                                                              ^^^^^^^^^^
[218 of 286] Compiling Amazonka.S3.ListParts

gen/Amazonka/S3/ListParts.hs:260:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxParts = a} with type ListParts is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
260 | listParts_maxParts = Lens.lens (\ListParts' {maxParts} -> maxParts) (\s@ListParts' {} a -> s {maxParts = a} :: ListParts)
    |                                                                                               ^^^^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:265:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {partNumberMarker = a} with type ListParts is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
265 | listParts_partNumberMarker = Lens.lens (\ListParts' {partNumberMarker} -> partNumberMarker) (\s@ListParts' {} a -> s {partNumberMarker = a} :: ListParts)
    |                                                                                                                       ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:316:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type ListParts is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
316 | listParts_bucket = Lens.lens (\ListParts' {bucket} -> bucket) (\s@ListParts' {} a -> s {bucket = a} :: ListParts)
    |                                                                                         ^^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:320:80: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type ListParts is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
320 | listParts_key = Lens.lens (\ListParts' {key} -> key) (\s@ListParts' {} a -> s {key = a} :: ListParts)
    |                                                                                ^^^^^^^

gen/Amazonka/S3/ListParts.hs:324:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {uploadId = a} with type ListParts is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
324 | listParts_uploadId = Lens.lens (\ListParts' {uploadId} -> uploadId) (\s@ListParts' {} a -> s {uploadId = a} :: ListParts)
    |                                                                                               ^^^^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:600:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type ListPartsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
600 | listPartsResponse_bucket = Lens.lens (\ListPartsResponse' {bucket} -> bucket) (\s@ListPartsResponse' {} a -> s {bucket = a} :: ListPartsResponse)
    |                                                                                                                 ^^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:604:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type ListPartsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
604 | listPartsResponse_checksumAlgorithm = Lens.lens (\ListPartsResponse' {checksumAlgorithm} -> checksumAlgorithm) (\s@ListPartsResponse' {} a -> s {checksumAlgorithm = a} :: ListPartsResponse)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:611:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {initiator = a} with type ListPartsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
611 | listPartsResponse_initiator = Lens.lens (\ListPartsResponse' {initiator} -> initiator) (\s@ListPartsResponse' {} a -> s {initiator = a} :: ListPartsResponse)
    |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:617:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListPartsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
617 | listPartsResponse_isTruncated = Lens.lens (\ListPartsResponse' {isTruncated} -> isTruncated) (\s@ListPartsResponse' {} a -> s {isTruncated = a} :: ListPartsResponse)
    |                                                                                                                                ^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:621:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type ListPartsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
621 | listPartsResponse_key = Lens.lens (\ListPartsResponse' {key} -> key) (\s@ListPartsResponse' {} a -> s {key = a} :: ListPartsResponse)
    |                                                                                                        ^^^^^^^

gen/Amazonka/S3/ListParts.hs:625:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxParts = a} with type ListPartsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
625 | listPartsResponse_maxParts = Lens.lens (\ListPartsResponse' {maxParts} -> maxParts) (\s@ListPartsResponse' {} a -> s {maxParts = a} :: ListPartsResponse)
    |                                                                                                                       ^^^^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:631:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextPartNumberMarker = a} with type ListPartsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
631 | listPartsResponse_nextPartNumberMarker = Lens.lens (\ListPartsResponse' {nextPartNumberMarker} -> nextPartNumberMarker) (\s@ListPartsResponse' {} a -> s {nextPartNumberMarker = a} :: ListPartsResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:637:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {owner = a} with type ListPartsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
637 | listPartsResponse_owner = Lens.lens (\ListPartsResponse' {owner} -> owner) (\s@ListPartsResponse' {} a -> s {owner = a} :: ListPartsResponse)
    |                                                                                                              ^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:643:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {partNumberMarker = a} with type ListPartsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
643 | listPartsResponse_partNumberMarker = Lens.lens (\ListPartsResponse' {partNumberMarker} -> partNumberMarker) (\s@ListPartsResponse' {} a -> s {partNumberMarker = a} :: ListPartsResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:648:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {parts = a} with type ListPartsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
648 | listPartsResponse_parts = Lens.lens (\ListPartsResponse' {parts} -> parts) (\s@ListPartsResponse' {} a -> s {parts = a} :: ListPartsResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                              ^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:657:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {storageClass = a} with type ListPartsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
657 | listPartsResponse_storageClass = Lens.lens (\ListPartsResponse' {storageClass} -> storageClass) (\s@ListPartsResponse' {} a -> s {storageClass = a} :: ListPartsResponse)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListParts.hs:661:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {uploadId = a} with type ListPartsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
661 | listPartsResponse_uploadId = Lens.lens (\ListPartsResponse' {uploadId} -> uploadId) (\s@ListPartsResponse' {} a -> s {uploadId = a} :: ListPartsResponse)
    |                                                                                                                       ^^^^^^^^^^^^
[219 of 286] Compiling Amazonka.S3.ListObjectsV2

gen/Amazonka/S3/ListObjectsV2.hs:242:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuationToken = a} with type ListObjectsV2 is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
242 | listObjectsV2_continuationToken = Lens.lens (\ListObjectsV2' {continuationToken} -> continuationToken) (\s@ListObjectsV2' {} a -> s {continuationToken = a} :: ListObjectsV2)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:246:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {delimiter = a} with type ListObjectsV2 is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
246 | listObjectsV2_delimiter = Lens.lens (\ListObjectsV2' {delimiter} -> delimiter) (\s@ListObjectsV2' {} a -> s {delimiter = a} :: ListObjectsV2)
    |                                                                                                              ^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:250:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encodingType = a} with type ListObjectsV2 is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
250 | listObjectsV2_encodingType = Lens.lens (\ListObjectsV2' {encodingType} -> encodingType) (\s@ListObjectsV2' {} a -> s {encodingType = a} :: ListObjectsV2)
    |                                                                                                                       ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:268:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxKeys = a} with type ListObjectsV2 is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
268 | listObjectsV2_maxKeys = Lens.lens (\ListObjectsV2' {maxKeys} -> maxKeys) (\s@ListObjectsV2' {} a -> s {maxKeys = a} :: ListObjectsV2)
    |                                                                                                        ^^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:272:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type ListObjectsV2 is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
272 | listObjectsV2_prefix = Lens.lens (\ListObjectsV2' {prefix} -> prefix) (\s@ListObjectsV2' {} a -> s {prefix = a} :: ListObjectsV2)
    |                                                                                                     ^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:284:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {startAfter = a} with type ListObjectsV2 is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
284 | listObjectsV2_startAfter = Lens.lens (\ListObjectsV2' {startAfter} -> startAfter) (\s@ListObjectsV2' {} a -> s {startAfter = a} :: ListObjectsV2)
    |                                                                                                                 ^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:307:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type ListObjectsV2 is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
307 | listObjectsV2_bucket = Lens.lens (\ListObjectsV2' {bucket} -> bucket) (\s@ListObjectsV2' {} a -> s {bucket = a} :: ListObjectsV2)
    |                                                                                                     ^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:630:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuationToken = a} with type ListObjectsV2Response is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
630 | listObjectsV2Response_continuationToken = Lens.lens (\ListObjectsV2Response' {continuationToken} -> continuationToken) (\s@ListObjectsV2Response' {} a -> s {continuationToken = a} :: ListObjectsV2Response)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:638:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {delimiter = a} with type ListObjectsV2Response is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
638 | listObjectsV2Response_delimiter = Lens.lens (\ListObjectsV2Response' {delimiter} -> delimiter) (\s@ListObjectsV2Response' {} a -> s {delimiter = a} :: ListObjectsV2Response)
    |                                                                                                                                      ^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:649:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encodingType = a} with type ListObjectsV2Response is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
649 | listObjectsV2Response_encodingType = Lens.lens (\ListObjectsV2Response' {encodingType} -> encodingType) (\s@ListObjectsV2Response' {} a -> s {encodingType = a} :: ListObjectsV2Response)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:655:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListObjectsV2Response is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
655 | listObjectsV2Response_isTruncated = Lens.lens (\ListObjectsV2Response' {isTruncated} -> isTruncated) (\s@ListObjectsV2Response' {} a -> s {isTruncated = a} :: ListObjectsV2Response)
    |                                                                                                                                            ^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:667:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxKeys = a} with type ListObjectsV2Response is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
667 | listObjectsV2Response_maxKeys = Lens.lens (\ListObjectsV2Response' {maxKeys} -> maxKeys) (\s@ListObjectsV2Response' {} a -> s {maxKeys = a} :: ListObjectsV2Response)
    |                                                                                                                                ^^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:690:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type ListObjectsV2Response is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
690 | listObjectsV2Response_name = Lens.lens (\ListObjectsV2Response' {name} -> name) (\s@ListObjectsV2Response' {} a -> s {name = a} :: ListObjectsV2Response)
    |                                                                                                                       ^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:702:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type ListObjectsV2Response is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
702 | listObjectsV2Response_prefix = Lens.lens (\ListObjectsV2Response' {prefix} -> prefix) (\s@ListObjectsV2Response' {} a -> s {prefix = a} :: ListObjectsV2Response)
    |                                                                                                                             ^^^^^^^^^^

gen/Amazonka/S3/ListObjectsV2.hs:706:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {startAfter = a} with type ListObjectsV2Response is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
706 | listObjectsV2Response_startAfter = Lens.lens (\ListObjectsV2Response' {startAfter} -> startAfter) (\s@ListObjectsV2Response' {} a -> s {startAfter = a} :: ListObjectsV2Response)
    |                                                                                                                                         ^^^^^^^^^^^^^^
[220 of 286] Compiling Amazonka.S3.ListObjects

gen/Amazonka/S3/ListObjects.hs:205:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {delimiter = a} with type ListObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
205 | listObjects_delimiter = Lens.lens (\ListObjects' {delimiter} -> delimiter) (\s@ListObjects' {} a -> s {delimiter = a} :: ListObjects)
    |                                                                                                        ^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjects.hs:209:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encodingType = a} with type ListObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
209 | listObjects_encodingType = Lens.lens (\ListObjects' {encodingType} -> encodingType) (\s@ListObjects' {} a -> s {encodingType = a} :: ListObjects)
    |                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjects.hs:221:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
221 | listObjects_marker = Lens.lens (\ListObjects' {marker} -> marker) (\s@ListObjects' {} a -> s {marker = a} :: ListObjects)
    |                                                                                               ^^^^^^^^^^

gen/Amazonka/S3/ListObjects.hs:227:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxKeys = a} with type ListObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
227 | listObjects_maxKeys = Lens.lens (\ListObjects' {maxKeys} -> maxKeys) (\s@ListObjects' {} a -> s {maxKeys = a} :: ListObjects)
    |                                                                                                  ^^^^^^^^^^^

gen/Amazonka/S3/ListObjects.hs:231:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type ListObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
231 | listObjects_prefix = Lens.lens (\ListObjects' {prefix} -> prefix) (\s@ListObjects' {} a -> s {prefix = a} :: ListObjects)
    |                                                                                               ^^^^^^^^^^

gen/Amazonka/S3/ListObjects.hs:260:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type ListObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
260 | listObjects_bucket = Lens.lens (\ListObjects' {bucket} -> bucket) (\s@ListObjects' {} a -> s {bucket = a} :: ListObjects)
    |                                                                                               ^^^^^^^^^^

gen/Amazonka/S3/ListObjects.hs:531:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {delimiter = a} with type ListObjectsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
531 | listObjectsResponse_delimiter = Lens.lens (\ListObjectsResponse' {delimiter} -> delimiter) (\s@ListObjectsResponse' {} a -> s {delimiter = a} :: ListObjectsResponse)
    |                                                                                                                                ^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjects.hs:535:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encodingType = a} with type ListObjectsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
535 | listObjectsResponse_encodingType = Lens.lens (\ListObjectsResponse' {encodingType} -> encodingType) (\s@ListObjectsResponse' {} a -> s {encodingType = a} :: ListObjectsResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjects.hs:540:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListObjectsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
540 | listObjectsResponse_isTruncated = Lens.lens (\ListObjectsResponse' {isTruncated} -> isTruncated) (\s@ListObjectsResponse' {} a -> s {isTruncated = a} :: ListObjectsResponse)
    |                                                                                                                                      ^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjects.hs:545:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListObjectsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
545 | listObjectsResponse_marker = Lens.lens (\ListObjectsResponse' {marker} -> marker) (\s@ListObjectsResponse' {} a -> s {marker = a} :: ListObjectsResponse)
    |                                                                                                                       ^^^^^^^^^^

gen/Amazonka/S3/ListObjects.hs:549:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxKeys = a} with type ListObjectsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
549 | listObjectsResponse_maxKeys = Lens.lens (\ListObjectsResponse' {maxKeys} -> maxKeys) (\s@ListObjectsResponse' {} a -> s {maxKeys = a} :: ListObjectsResponse)
    |                                                                                                                          ^^^^^^^^^^^

gen/Amazonka/S3/ListObjects.hs:553:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type ListObjectsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
553 | listObjectsResponse_name = Lens.lens (\ListObjectsResponse' {name} -> name) (\s@ListObjectsResponse' {} a -> s {name = a} :: ListObjectsResponse)
    |                                                                                                                 ^^^^^^^^

gen/Amazonka/S3/ListObjects.hs:568:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type ListObjectsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
568 | listObjectsResponse_prefix = Lens.lens (\ListObjectsResponse' {prefix} -> prefix) (\s@ListObjectsResponse' {} a -> s {prefix = a} :: ListObjectsResponse)
    |                                                                                                                       ^^^^^^^^^^
[221 of 286] Compiling Amazonka.S3.ListObjectVersions

gen/Amazonka/S3/ListObjectVersions.hs:194:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {delimiter = a} with type ListObjectVersions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
194 | listObjectVersions_delimiter = Lens.lens (\ListObjectVersions' {delimiter} -> delimiter) (\s@ListObjectVersions' {} a -> s {delimiter = a} :: ListObjectVersions)
    |                                                                                                                             ^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:198:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encodingType = a} with type ListObjectVersions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
198 | listObjectVersions_encodingType = Lens.lens (\ListObjectVersions' {encodingType} -> encodingType) (\s@ListObjectVersions' {} a -> s {encodingType = a} :: ListObjectVersions)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:208:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyMarker = a} with type ListObjectVersions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
208 | listObjectVersions_keyMarker = Lens.lens (\ListObjectVersions' {keyMarker} -> keyMarker) (\s@ListObjectVersions' {} a -> s {keyMarker = a} :: ListObjectVersions)
    |                                                                                                                             ^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:217:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxKeys = a} with type ListObjectVersions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
217 | listObjectVersions_maxKeys = Lens.lens (\ListObjectVersions' {maxKeys} -> maxKeys) (\s@ListObjectVersions' {} a -> s {maxKeys = a} :: ListObjectVersions)
    |                                                                                                                       ^^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:226:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type ListObjectVersions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
226 | listObjectVersions_prefix = Lens.lens (\ListObjectVersions' {prefix} -> prefix) (\s@ListObjectVersions' {} a -> s {prefix = a} :: ListObjectVersions)
    |                                                                                                                    ^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:230:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionIdMarker = a} with type ListObjectVersions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
230 | listObjectVersions_versionIdMarker = Lens.lens (\ListObjectVersions' {versionIdMarker} -> versionIdMarker) (\s@ListObjectVersions' {} a -> s {versionIdMarker = a} :: ListObjectVersions)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:234:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type ListObjectVersions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
234 | listObjectVersions_bucket = Lens.lens (\ListObjectVersions' {bucket} -> bucket) (\s@ListObjectVersions' {} a -> s {bucket = a} :: ListObjectVersions)
    |                                                                                                                    ^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:493:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {delimiter = a} with type ListObjectVersionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
493 | listObjectVersionsResponse_delimiter = Lens.lens (\ListObjectVersionsResponse' {delimiter} -> delimiter) (\s@ListObjectVersionsResponse' {} a -> s {delimiter = a} :: ListObjectVersionsResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:504:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encodingType = a} with type ListObjectVersionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
504 | listObjectVersionsResponse_encodingType = Lens.lens (\ListObjectVersionsResponse' {encodingType} -> encodingType) (\s@ListObjectVersionsResponse' {} a -> s {encodingType = a} :: ListObjectVersionsResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:512:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListObjectVersionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
512 | listObjectVersionsResponse_isTruncated = Lens.lens (\ListObjectVersionsResponse' {isTruncated} -> isTruncated) (\s@ListObjectVersionsResponse' {} a -> s {isTruncated = a} :: ListObjectVersionsResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:516:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyMarker = a} with type ListObjectVersionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
516 | listObjectVersionsResponse_keyMarker = Lens.lens (\ListObjectVersionsResponse' {keyMarker} -> keyMarker) (\s@ListObjectVersionsResponse' {} a -> s {keyMarker = a} :: ListObjectVersionsResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:520:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxKeys = a} with type ListObjectVersionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
520 | listObjectVersionsResponse_maxKeys = Lens.lens (\ListObjectVersionsResponse' {maxKeys} -> maxKeys) (\s@ListObjectVersionsResponse' {} a -> s {maxKeys = a} :: ListObjectVersionsResponse)
    |                                                                                                                                               ^^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:524:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type ListObjectVersionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
524 | listObjectVersionsResponse_name = Lens.lens (\ListObjectVersionsResponse' {name} -> name) (\s@ListObjectVersionsResponse' {} a -> s {name = a} :: ListObjectVersionsResponse)
    |                                                                                                                                      ^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:542:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type ListObjectVersionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
542 | listObjectVersionsResponse_prefix = Lens.lens (\ListObjectVersionsResponse' {prefix} -> prefix) (\s@ListObjectVersionsResponse' {} a -> s {prefix = a} :: ListObjectVersionsResponse)
    |                                                                                                                                            ^^^^^^^^^^

gen/Amazonka/S3/ListObjectVersions.hs:546:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionIdMarker = a} with type ListObjectVersionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
546 | listObjectVersionsResponse_versionIdMarker = Lens.lens (\ListObjectVersionsResponse' {versionIdMarker} -> versionIdMarker) (\s@ListObjectVersionsResponse' {} a -> s {versionIdMarker = a} :: ListObjectVersionsResponse)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^
[222 of 286] Compiling Amazonka.S3.ListMultipartUploads

gen/Amazonka/S3/ListMultipartUploads.hs:269:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {delimiter = a} with type ListMultipartUploads is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
269 | listMultipartUploads_delimiter = Lens.lens (\ListMultipartUploads' {delimiter} -> delimiter) (\s@ListMultipartUploads' {} a -> s {delimiter = a} :: ListMultipartUploads)
    |                                                                                                                                   ^^^^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:273:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encodingType = a} with type ListMultipartUploads is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
273 | listMultipartUploads_encodingType = Lens.lens (\ListMultipartUploads' {encodingType} -> encodingType) (\s@ListMultipartUploads' {} a -> s {encodingType = a} :: ListMultipartUploads)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:292:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyMarker = a} with type ListMultipartUploads is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
292 | listMultipartUploads_keyMarker = Lens.lens (\ListMultipartUploads' {keyMarker} -> keyMarker) (\s@ListMultipartUploads' {} a -> s {keyMarker = a} :: ListMultipartUploads)
    |                                                                                                                                   ^^^^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:298:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxUploads = a} with type ListMultipartUploads is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
298 | listMultipartUploads_maxUploads = Lens.lens (\ListMultipartUploads' {maxUploads} -> maxUploads) (\s@ListMultipartUploads' {} a -> s {maxUploads = a} :: ListMultipartUploads)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:305:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type ListMultipartUploads is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
305 | listMultipartUploads_prefix = Lens.lens (\ListMultipartUploads' {prefix} -> prefix) (\s@ListMultipartUploads' {} a -> s {prefix = a} :: ListMultipartUploads)
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:314:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {uploadIdMarker = a} with type ListMultipartUploads is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
314 | listMultipartUploads_uploadIdMarker = Lens.lens (\ListMultipartUploads' {uploadIdMarker} -> uploadIdMarker) (\s@ListMultipartUploads' {} a -> s {uploadIdMarker = a} :: ListMultipartUploads)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:337:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type ListMultipartUploads is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
337 | listMultipartUploads_bucket = Lens.lens (\ListMultipartUploads' {bucket} -> bucket) (\s@ListMultipartUploads' {} a -> s {bucket = a} :: ListMultipartUploads)
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:575:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type ListMultipartUploadsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
575 | listMultipartUploadsResponse_bucket = Lens.lens (\ListMultipartUploadsResponse' {bucket} -> bucket) (\s@ListMultipartUploadsResponse' {} a -> s {bucket = a} :: ListMultipartUploadsResponse)
    |                                                                                                                                                  ^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:588:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {delimiter = a} with type ListMultipartUploadsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
588 | listMultipartUploadsResponse_delimiter = Lens.lens (\ListMultipartUploadsResponse' {delimiter} -> delimiter) (\s@ListMultipartUploadsResponse' {} a -> s {delimiter = a} :: ListMultipartUploadsResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:598:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encodingType = a} with type ListMultipartUploadsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
598 | listMultipartUploadsResponse_encodingType = Lens.lens (\ListMultipartUploadsResponse' {encodingType} -> encodingType) (\s@ListMultipartUploadsResponse' {} a -> s {encodingType = a} :: ListMultipartUploadsResponse)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:605:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListMultipartUploadsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
605 | listMultipartUploadsResponse_isTruncated = Lens.lens (\ListMultipartUploadsResponse' {isTruncated} -> isTruncated) (\s@ListMultipartUploadsResponse' {} a -> s {isTruncated = a} :: ListMultipartUploadsResponse)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:609:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyMarker = a} with type ListMultipartUploadsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
609 | listMultipartUploadsResponse_keyMarker = Lens.lens (\ListMultipartUploadsResponse' {keyMarker} -> keyMarker) (\s@ListMultipartUploadsResponse' {} a -> s {keyMarker = a} :: ListMultipartUploadsResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:614:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxUploads = a} with type ListMultipartUploadsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
614 | listMultipartUploadsResponse_maxUploads = Lens.lens (\ListMultipartUploadsResponse' {maxUploads} -> maxUploads) (\s@ListMultipartUploadsResponse' {} a -> s {maxUploads = a} :: ListMultipartUploadsResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:631:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {prefix = a} with type ListMultipartUploadsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
631 | listMultipartUploadsResponse_prefix = Lens.lens (\ListMultipartUploadsResponse' {prefix} -> prefix) (\s@ListMultipartUploadsResponse' {} a -> s {prefix = a} :: ListMultipartUploadsResponse)
    |                                                                                                                                                  ^^^^^^^^^^

gen/Amazonka/S3/ListMultipartUploads.hs:635:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {uploadIdMarker = a} with type ListMultipartUploadsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
635 | listMultipartUploadsResponse_uploadIdMarker = Lens.lens (\ListMultipartUploadsResponse' {uploadIdMarker} -> uploadIdMarker) (\s@ListMultipartUploadsResponse' {} a -> s {uploadIdMarker = a} :: ListMultipartUploadsResponse)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^
[223 of 286] Compiling Amazonka.S3.ListBuckets

gen/Amazonka/S3/ListBuckets.hs:139:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {owner = a} with type ListBucketsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | listBucketsResponse_owner = Lens.lens (\ListBucketsResponse' {owner} -> owner) (\s@ListBucketsResponse' {} a -> s {owner = a} :: ListBucketsResponse)
    |                                                                                                                    ^^^^^^^^^
[224 of 286] Compiling Amazonka.S3.ListBucketMetricsConfigurations

gen/Amazonka/S3/ListBucketMetricsConfigurations.hs:141:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuationToken = a} with type ListBucketMetricsConfigurations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
141 | listBucketMetricsConfigurations_continuationToken = Lens.lens (\ListBucketMetricsConfigurations' {continuationToken} -> continuationToken) (\s@ListBucketMetricsConfigurations' {} a -> s {continuationToken = a} :: ListBucketMetricsConfigurations)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListBucketMetricsConfigurations.hs:152:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type ListBucketMetricsConfigurations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
152 | listBucketMetricsConfigurations_bucket = Lens.lens (\ListBucketMetricsConfigurations' {bucket} -> bucket) (\s@ListBucketMetricsConfigurations' {} a -> s {bucket = a} :: ListBucketMetricsConfigurations)
    |                                                                                                                                                           ^^^^^^^^^^

gen/Amazonka/S3/ListBucketMetricsConfigurations.hs:287:212: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuationToken = a} with type ListBucketMetricsConfigurationsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
287 | listBucketMetricsConfigurationsResponse_continuationToken = Lens.lens (\ListBucketMetricsConfigurationsResponse' {continuationToken} -> continuationToken) (\s@ListBucketMetricsConfigurationsResponse' {} a -> s {continuationToken = a} :: ListBucketMetricsConfigurationsResponse)
    |                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListBucketMetricsConfigurations.hs:293:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListBucketMetricsConfigurationsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
293 | listBucketMetricsConfigurationsResponse_isTruncated = Lens.lens (\ListBucketMetricsConfigurationsResponse' {isTruncated} -> isTruncated) (\s@ListBucketMetricsConfigurationsResponse' {} a -> s {isTruncated = a} :: ListBucketMetricsConfigurationsResponse)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^
[225 of 286] Compiling Amazonka.S3.ListBucketInventoryConfigurations

gen/Amazonka/S3/ListBucketInventoryConfigurations.hs:138:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuationToken = a} with type ListBucketInventoryConfigurations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | listBucketInventoryConfigurations_continuationToken = Lens.lens (\ListBucketInventoryConfigurations' {continuationToken} -> continuationToken) (\s@ListBucketInventoryConfigurations' {} a -> s {continuationToken = a} :: ListBucketInventoryConfigurations)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListBucketInventoryConfigurations.hs:149:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type ListBucketInventoryConfigurations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
149 | listBucketInventoryConfigurations_bucket = Lens.lens (\ListBucketInventoryConfigurations' {bucket} -> bucket) (\s@ListBucketInventoryConfigurations' {} a -> s {bucket = a} :: ListBucketInventoryConfigurations)
    |                                                                                                                                                                 ^^^^^^^^^^

gen/Amazonka/S3/ListBucketInventoryConfigurations.hs:287:218: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuationToken = a} with type ListBucketInventoryConfigurationsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
287 | listBucketInventoryConfigurationsResponse_continuationToken = Lens.lens (\ListBucketInventoryConfigurationsResponse' {continuationToken} -> continuationToken) (\s@ListBucketInventoryConfigurationsResponse' {} a -> s {continuationToken = a} :: ListBucketInventoryConfigurationsResponse)
    |                                                                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListBucketInventoryConfigurations.hs:297:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListBucketInventoryConfigurationsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
297 | listBucketInventoryConfigurationsResponse_isTruncated = Lens.lens (\ListBucketInventoryConfigurationsResponse' {isTruncated} -> isTruncated) (\s@ListBucketInventoryConfigurationsResponse' {} a -> s {isTruncated = a} :: ListBucketInventoryConfigurationsResponse)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^
[226 of 286] Compiling Amazonka.S3.ListBucketIntelligentTieringConfigurations

gen/Amazonka/S3/ListBucketIntelligentTieringConfigurations.hs:122:221: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuationToken = a} with type ListBucketIntelligentTieringConfigurations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
122 | listBucketIntelligentTieringConfigurations_continuationToken = Lens.lens (\ListBucketIntelligentTieringConfigurations' {continuationToken} -> continuationToken) (\s@ListBucketIntelligentTieringConfigurations' {} a -> s {continuationToken = a} :: ListBucketIntelligentTieringConfigurations)
    |                                                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListBucketIntelligentTieringConfigurations.hs:127:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type ListBucketIntelligentTieringConfigurations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | listBucketIntelligentTieringConfigurations_bucket = Lens.lens (\ListBucketIntelligentTieringConfigurations' {bucket} -> bucket) (\s@ListBucketIntelligentTieringConfigurations' {} a -> s {bucket = a} :: ListBucketIntelligentTieringConfigurations)
    |                                                                                                                                                                                            ^^^^^^^^^^

gen/Amazonka/S3/ListBucketIntelligentTieringConfigurations.hs:264:245: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuationToken = a} with type ListBucketIntelligentTieringConfigurationsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
264 | listBucketIntelligentTieringConfigurationsResponse_continuationToken = Lens.lens (\ListBucketIntelligentTieringConfigurationsResponse' {continuationToken} -> continuationToken) (\s@ListBucketIntelligentTieringConfigurationsResponse' {} a -> s {continuationToken = a} :: ListBucketIntelligentTieringConfigurationsResponse)
    |                                                                                                                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListBucketIntelligentTieringConfigurations.hs:274:227: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListBucketIntelligentTieringConfigurationsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
274 | listBucketIntelligentTieringConfigurationsResponse_isTruncated = Lens.lens (\ListBucketIntelligentTieringConfigurationsResponse' {isTruncated} -> isTruncated) (\s@ListBucketIntelligentTieringConfigurationsResponse' {} a -> s {isTruncated = a} :: ListBucketIntelligentTieringConfigurationsResponse)
    |                                                                                                                                                                                                                                   ^^^^^^^^^^^^^^^
[227 of 286] Compiling Amazonka.S3.ListBucketAnalyticsConfigurations

gen/Amazonka/S3/ListBucketAnalyticsConfigurations.hs:132:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuationToken = a} with type ListBucketAnalyticsConfigurations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | listBucketAnalyticsConfigurations_continuationToken = Lens.lens (\ListBucketAnalyticsConfigurations' {continuationToken} -> continuationToken) (\s@ListBucketAnalyticsConfigurations' {} a -> s {continuationToken = a} :: ListBucketAnalyticsConfigurations)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListBucketAnalyticsConfigurations.hs:143:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type ListBucketAnalyticsConfigurations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
143 | listBucketAnalyticsConfigurations_bucket = Lens.lens (\ListBucketAnalyticsConfigurations' {bucket} -> bucket) (\s@ListBucketAnalyticsConfigurations' {} a -> s {bucket = a} :: ListBucketAnalyticsConfigurations)
    |                                                                                                                                                                 ^^^^^^^^^^

gen/Amazonka/S3/ListBucketAnalyticsConfigurations.hs:288:218: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuationToken = a} with type ListBucketAnalyticsConfigurationsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
288 | listBucketAnalyticsConfigurationsResponse_continuationToken = Lens.lens (\ListBucketAnalyticsConfigurationsResponse' {continuationToken} -> continuationToken) (\s@ListBucketAnalyticsConfigurationsResponse' {} a -> s {continuationToken = a} :: ListBucketAnalyticsConfigurationsResponse)
    |                                                                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/ListBucketAnalyticsConfigurations.hs:294:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListBucketAnalyticsConfigurationsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
294 | listBucketAnalyticsConfigurationsResponse_isTruncated = Lens.lens (\ListBucketAnalyticsConfigurationsResponse' {isTruncated} -> isTruncated) (\s@ListBucketAnalyticsConfigurationsResponse' {} a -> s {isTruncated = a} :: ListBucketAnalyticsConfigurationsResponse)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^
[228 of 286] Compiling Amazonka.S3.HeadObject

gen/Amazonka/S3/HeadObject.hs:394:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {partNumber = a} with type HeadObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
394 | headObject_partNumber = Lens.lens (\HeadObject' {partNumber} -> partNumber) (\s@HeadObject' {} a -> s {partNumber = a} :: HeadObject)
    |                                                                                                        ^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:408:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type HeadObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
408 | headObject_sSECustomerAlgorithm = Lens.lens (\HeadObject' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@HeadObject' {} a -> s {sSECustomerAlgorithm = a} :: HeadObject)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:422:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type HeadObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
422 | headObject_sSECustomerKeyMD5 = Lens.lens (\HeadObject' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@HeadObject' {} a -> s {sSECustomerKeyMD5 = a} :: HeadObject)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:426:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type HeadObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
426 | headObject_versionId = Lens.lens (\HeadObject' {versionId} -> versionId) (\s@HeadObject' {} a -> s {versionId = a} :: HeadObject)
    |                                                                                                     ^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:449:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type HeadObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
449 | headObject_bucket = Lens.lens (\HeadObject' {bucket} -> bucket) (\s@HeadObject' {} a -> s {bucket = a} :: HeadObject)
    |                                                                                            ^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:453:83: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type HeadObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
453 | headObject_key = Lens.lens (\HeadObject' {key} -> key) (\s@HeadObject' {} a -> s {key = a} :: HeadObject)
    |                                                                                   ^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1007:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucketKeyEnabled = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1007 | headObjectResponse_bucketKeyEnabled = Lens.lens (\HeadObjectResponse' {bucketKeyEnabled} -> bucketKeyEnabled) (\s@HeadObjectResponse' {} a -> s {bucketKeyEnabled = a} :: HeadObjectResponse)
     |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1020:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32 = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1020 | headObjectResponse_checksumCRC32 = Lens.lens (\HeadObjectResponse' {checksumCRC32} -> checksumCRC32) (\s@HeadObjectResponse' {} a -> s {checksumCRC32 = a} :: HeadObjectResponse)
     |                                                                                                                                         ^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1029:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32C = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1029 | headObjectResponse_checksumCRC32C = Lens.lens (\HeadObjectResponse' {checksumCRC32C} -> checksumCRC32C) (\s@HeadObjectResponse' {} a -> s {checksumCRC32C = a} :: HeadObjectResponse)
     |                                                                                                                                            ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1038:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA1 = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1038 | headObjectResponse_checksumSHA1 = Lens.lens (\HeadObjectResponse' {checksumSHA1} -> checksumSHA1) (\s@HeadObjectResponse' {} a -> s {checksumSHA1 = a} :: HeadObjectResponse)
     |                                                                                                                                      ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1047:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA256 = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1047 | headObjectResponse_checksumSHA256 = Lens.lens (\HeadObjectResponse' {checksumSHA256} -> checksumSHA256) (\s@HeadObjectResponse' {} a -> s {checksumSHA256 = a} :: HeadObjectResponse)
     |                                                                                                                                            ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1075:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deleteMarker = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1075 | headObjectResponse_deleteMarker = Lens.lens (\HeadObjectResponse' {deleteMarker} -> deleteMarker) (\s@HeadObjectResponse' {} a -> s {deleteMarker = a} :: HeadObjectResponse)
     |                                                                                                                                      ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1080:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {eTag = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1080 | headObjectResponse_eTag = Lens.lens (\HeadObjectResponse' {eTag} -> eTag) (\s@HeadObjectResponse' {} a -> s {eTag = a} :: HeadObjectResponse)
     |                                                                                                              ^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1087:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {expiration = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1087 | headObjectResponse_expiration = Lens.lens (\HeadObjectResponse' {expiration} -> expiration) (\s@HeadObjectResponse' {} a -> s {expiration = a} :: HeadObjectResponse)
     |                                                                                                                                ^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1095:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lastModified = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1095 | headObjectResponse_lastModified = Lens.lens (\HeadObjectResponse' {lastModified} -> lastModified) (\s@HeadObjectResponse' {} a -> s {lastModified = a} :: HeadObjectResponse) Prelude.. Lens.mapping Data._Time
     |                                                                                                                                      ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1204:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1204 | headObjectResponse_sSECustomerAlgorithm = Lens.lens (\HeadObjectResponse' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@HeadObjectResponse' {} a -> s {sSECustomerAlgorithm = a} :: HeadObjectResponse)
     |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1210:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1210 | headObjectResponse_sSECustomerKeyMD5 = Lens.lens (\HeadObjectResponse' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@HeadObjectResponse' {} a -> s {sSECustomerKeyMD5 = a} :: HeadObjectResponse)
     |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1232:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {storageClass = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1232 | headObjectResponse_storageClass = Lens.lens (\HeadObjectResponse' {storageClass} -> storageClass) (\s@HeadObjectResponse' {} a -> s {storageClass = a} :: HeadObjectResponse)
     |                                                                                                                                      ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/HeadObject.hs:1236:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type HeadObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1236 | headObjectResponse_versionId = Lens.lens (\HeadObjectResponse' {versionId} -> versionId) (\s@HeadObjectResponse' {} a -> s {versionId = a} :: HeadObjectResponse)
     |                                                                                                                             ^^^^^^^^^^^^^
[229 of 286] Compiling Amazonka.S3.HeadBucket

gen/Amazonka/S3/HeadBucket.hs:170:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type HeadBucket is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
170 | headBucket_bucket = Lens.lens (\HeadBucket' {bucket} -> bucket) (\s@HeadBucket' {} a -> s {bucket = a} :: HeadBucket)
    |                                                                                            ^^^^^^^^^^
[230 of 286] Compiling Amazonka.S3.GetPublicAccessBlock

gen/Amazonka/S3/GetPublicAccessBlock.hs:121:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetPublicAccessBlock is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
121 | getPublicAccessBlock_bucket = Lens.lens (\GetPublicAccessBlock' {bucket} -> bucket) (\s@GetPublicAccessBlock' {} a -> s {bucket = a} :: GetPublicAccessBlock)
    |                                                                                                                          ^^^^^^^^^^
[231 of 286] Compiling Amazonka.S3.GetObjectTorrent

gen/Amazonka/S3/GetObjectTorrent.hs:130:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetObjectTorrent is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
130 | getObjectTorrent_bucket = Lens.lens (\GetObjectTorrent' {bucket} -> bucket) (\s@GetObjectTorrent' {} a -> s {bucket = a} :: GetObjectTorrent)
    |                                                                                                              ^^^^^^^^^^

gen/Amazonka/S3/GetObjectTorrent.hs:134:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type GetObjectTorrent is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
134 | getObjectTorrent_key = Lens.lens (\GetObjectTorrent' {key} -> key) (\s@GetObjectTorrent' {} a -> s {key = a} :: GetObjectTorrent)
    |                                                                                                     ^^^^^^^
[232 of 286] Compiling Amazonka.S3.GetObjectTagging

gen/Amazonka/S3/GetObjectTagging.hs:180:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type GetObjectTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
180 | getObjectTagging_versionId = Lens.lens (\GetObjectTagging' {versionId} -> versionId) (\s@GetObjectTagging' {} a -> s {versionId = a} :: GetObjectTagging)
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/S3/GetObjectTagging.hs:204:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetObjectTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
204 | getObjectTagging_bucket = Lens.lens (\GetObjectTagging' {bucket} -> bucket) (\s@GetObjectTagging' {} a -> s {bucket = a} :: GetObjectTagging)
    |                                                                                                              ^^^^^^^^^^

gen/Amazonka/S3/GetObjectTagging.hs:208:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type GetObjectTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
208 | getObjectTagging_key = Lens.lens (\GetObjectTagging' {key} -> key) (\s@GetObjectTagging' {} a -> s {key = a} :: GetObjectTagging)
    |                                                                                                     ^^^^^^^

gen/Amazonka/S3/GetObjectTagging.hs:303:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type GetObjectTaggingResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
303 | getObjectTaggingResponse_versionId = Lens.lens (\GetObjectTaggingResponse' {versionId} -> versionId) (\s@GetObjectTaggingResponse' {} a -> s {versionId = a} :: GetObjectTaggingResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^

gen/Amazonka/S3/GetObjectTagging.hs:311:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagSet = a} with type GetObjectTaggingResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
311 | getObjectTaggingResponse_tagSet = Lens.lens (\GetObjectTaggingResponse' {tagSet} -> tagSet) (\s@GetObjectTaggingResponse' {} a -> s {tagSet = a} :: GetObjectTaggingResponse) Prelude.. Lens.coerced
    |                                                                                                                                      ^^^^^^^^^^
[233 of 286] Compiling Amazonka.S3.GetObjectRetention

gen/Amazonka/S3/GetObjectRetention.hs:149:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type GetObjectRetention is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
149 | getObjectRetention_versionId = Lens.lens (\GetObjectRetention' {versionId} -> versionId) (\s@GetObjectRetention' {} a -> s {versionId = a} :: GetObjectRetention)
    |                                                                                                                             ^^^^^^^^^^^^^

gen/Amazonka/S3/GetObjectRetention.hs:163:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetObjectRetention is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
163 | getObjectRetention_bucket = Lens.lens (\GetObjectRetention' {bucket} -> bucket) (\s@GetObjectRetention' {} a -> s {bucket = a} :: GetObjectRetention)
    |                                                                                                                    ^^^^^^^^^^

gen/Amazonka/S3/GetObjectRetention.hs:168:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type GetObjectRetention is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
168 | getObjectRetention_key = Lens.lens (\GetObjectRetention' {key} -> key) (\s@GetObjectRetention' {} a -> s {key = a} :: GetObjectRetention)
    |                                                                                                           ^^^^^^^
[234 of 286] Compiling Amazonka.S3.GetObjectLockConfiguration

gen/Amazonka/S3/GetObjectLockConfiguration.hs:128:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetObjectLockConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
128 | getObjectLockConfiguration_bucket = Lens.lens (\GetObjectLockConfiguration' {bucket} -> bucket) (\s@GetObjectLockConfiguration' {} a -> s {bucket = a} :: GetObjectLockConfiguration)
    |                                                                                                                                            ^^^^^^^^^^
[235 of 286] Compiling Amazonka.S3.GetObjectLegalHold

gen/Amazonka/S3/GetObjectLegalHold.hs:149:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type GetObjectLegalHold is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
149 | getObjectLegalHold_versionId = Lens.lens (\GetObjectLegalHold' {versionId} -> versionId) (\s@GetObjectLegalHold' {} a -> s {versionId = a} :: GetObjectLegalHold)
    |                                                                                                                             ^^^^^^^^^^^^^

gen/Amazonka/S3/GetObjectLegalHold.hs:163:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetObjectLegalHold is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
163 | getObjectLegalHold_bucket = Lens.lens (\GetObjectLegalHold' {bucket} -> bucket) (\s@GetObjectLegalHold' {} a -> s {bucket = a} :: GetObjectLegalHold)
    |                                                                                                                    ^^^^^^^^^^

gen/Amazonka/S3/GetObjectLegalHold.hs:168:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type GetObjectLegalHold is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
168 | getObjectLegalHold_key = Lens.lens (\GetObjectLegalHold' {key} -> key) (\s@GetObjectLegalHold' {} a -> s {key = a} :: GetObjectLegalHold)
    |                                                                                                           ^^^^^^^
[236 of 286] Compiling Amazonka.S3.GetObjectAttributes

gen/Amazonka/S3/GetObjectAttributes.hs:308:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxParts = a} with type GetObjectAttributes is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
308 | getObjectAttributes_maxParts = Lens.lens (\GetObjectAttributes' {maxParts} -> maxParts) (\s@GetObjectAttributes' {} a -> s {maxParts = a} :: GetObjectAttributes)
    |                                                                                                                             ^^^^^^^^^^^^

gen/Amazonka/S3/GetObjectAttributes.hs:313:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {partNumberMarker = a} with type GetObjectAttributes is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
313 | getObjectAttributes_partNumberMarker = Lens.lens (\GetObjectAttributes' {partNumberMarker} -> partNumberMarker) (\s@GetObjectAttributes' {} a -> s {partNumberMarker = a} :: GetObjectAttributes)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObjectAttributes.hs:340:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type GetObjectAttributes is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
340 | getObjectAttributes_versionId = Lens.lens (\GetObjectAttributes' {versionId} -> versionId) (\s@GetObjectAttributes' {} a -> s {versionId = a} :: GetObjectAttributes)
    |                                                                                                                                ^^^^^^^^^^^^^

gen/Amazonka/S3/GetObjectAttributes.hs:363:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetObjectAttributes is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
363 | getObjectAttributes_bucket = Lens.lens (\GetObjectAttributes' {bucket} -> bucket) (\s@GetObjectAttributes' {} a -> s {bucket = a} :: GetObjectAttributes)
    |                                                                                                                       ^^^^^^^^^^

gen/Amazonka/S3/GetObjectAttributes.hs:367:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type GetObjectAttributes is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
367 | getObjectAttributes_key = Lens.lens (\GetObjectAttributes' {key} -> key) (\s@GetObjectAttributes' {} a -> s {key = a} :: GetObjectAttributes)
    |                                                                                                              ^^^^^^^

gen/Amazonka/S3/GetObjectAttributes.hs:548:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deleteMarker = a} with type GetObjectAttributesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
548 | getObjectAttributesResponse_deleteMarker = Lens.lens (\GetObjectAttributesResponse' {deleteMarker} -> deleteMarker) (\s@GetObjectAttributesResponse' {} a -> s {deleteMarker = a} :: GetObjectAttributesResponse)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObjectAttributes.hs:553:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {eTag = a} with type GetObjectAttributesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
553 | getObjectAttributesResponse_eTag = Lens.lens (\GetObjectAttributesResponse' {eTag} -> eTag) (\s@GetObjectAttributesResponse' {} a -> s {eTag = a} :: GetObjectAttributesResponse)
    |                                                                                                                                         ^^^^^^^^

gen/Amazonka/S3/GetObjectAttributes.hs:557:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lastModified = a} with type GetObjectAttributesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
557 | getObjectAttributesResponse_lastModified = Lens.lens (\GetObjectAttributesResponse' {lastModified} -> lastModified) (\s@GetObjectAttributesResponse' {} a -> s {lastModified = a} :: GetObjectAttributesResponse) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObjectAttributes.hs:578:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {storageClass = a} with type GetObjectAttributesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
578 | getObjectAttributesResponse_storageClass = Lens.lens (\GetObjectAttributesResponse' {storageClass} -> storageClass) (\s@GetObjectAttributesResponse' {} a -> s {storageClass = a} :: GetObjectAttributesResponse)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObjectAttributes.hs:582:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type GetObjectAttributesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
582 | getObjectAttributesResponse_versionId = Lens.lens (\GetObjectAttributesResponse' {versionId} -> versionId) (\s@GetObjectAttributesResponse' {} a -> s {versionId = a} :: GetObjectAttributesResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^
[237 of 286] Compiling Amazonka.S3.GetObjectAcl

gen/Amazonka/S3/GetObjectAcl.hs:168:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type GetObjectAcl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
168 | getObjectAcl_versionId = Lens.lens (\GetObjectAcl' {versionId} -> versionId) (\s@GetObjectAcl' {} a -> s {versionId = a} :: GetObjectAcl)
    |                                                                                                           ^^^^^^^^^^^^^

gen/Amazonka/S3/GetObjectAcl.hs:182:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetObjectAcl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
182 | getObjectAcl_bucket = Lens.lens (\GetObjectAcl' {bucket} -> bucket) (\s@GetObjectAcl' {} a -> s {bucket = a} :: GetObjectAcl)
    |                                                                                                  ^^^^^^^^^^

gen/Amazonka/S3/GetObjectAcl.hs:186:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type GetObjectAcl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
186 | getObjectAcl_key = Lens.lens (\GetObjectAcl' {key} -> key) (\s@GetObjectAcl' {} a -> s {key = a} :: GetObjectAcl)
    |                                                                                         ^^^^^^^

gen/Amazonka/S3/GetObjectAcl.hs:283:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {grants = a} with type GetObjectAclResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
283 | getObjectAclResponse_grants = Lens.lens (\GetObjectAclResponse' {grants} -> grants) (\s@GetObjectAclResponse' {} a -> s {grants = a} :: GetObjectAclResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/S3/GetObjectAcl.hs:287:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {owner = a} with type GetObjectAclResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
287 | getObjectAclResponse_owner = Lens.lens (\GetObjectAclResponse' {owner} -> owner) (\s@GetObjectAclResponse' {} a -> s {owner = a} :: GetObjectAclResponse)
    |                                                                                                                       ^^^^^^^^^
[238 of 286] Compiling Amazonka.S3.GetObject

gen/Amazonka/S3/GetObject.hs:490:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {partNumber = a} with type GetObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
490 | getObject_partNumber = Lens.lens (\GetObject' {partNumber} -> partNumber) (\s@GetObject' {} a -> s {partNumber = a} :: GetObject)
    |                                                                                                     ^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:532:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type GetObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
532 | getObject_sSECustomerAlgorithm = Lens.lens (\GetObject' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@GetObject' {} a -> s {sSECustomerAlgorithm = a} :: GetObject)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:546:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type GetObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
546 | getObject_sSECustomerKeyMD5 = Lens.lens (\GetObject' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@GetObject' {} a -> s {sSECustomerKeyMD5 = a} :: GetObject)
    |                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:550:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type GetObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
550 | getObject_versionId = Lens.lens (\GetObject' {versionId} -> versionId) (\s@GetObject' {} a -> s {versionId = a} :: GetObject)
    |                                                                                                  ^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:576:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
576 | getObject_bucket = Lens.lens (\GetObject' {bucket} -> bucket) (\s@GetObject' {} a -> s {bucket = a} :: GetObject)
    |                                                                                         ^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:580:80: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type GetObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
580 | getObject_key = Lens.lens (\GetObject' {key} -> key) (\s@GetObject' {} a -> s {key = a} :: GetObject)
    |                                                                                ^^^^^^^

gen/Amazonka/S3/GetObject.hs:1040:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucketKeyEnabled = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1040 | getObjectResponse_bucketKeyEnabled = Lens.lens (\GetObjectResponse' {bucketKeyEnabled} -> bucketKeyEnabled) (\s@GetObjectResponse' {} a -> s {bucketKeyEnabled = a} :: GetObjectResponse)
     |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:1053:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32 = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1053 | getObjectResponse_checksumCRC32 = Lens.lens (\GetObjectResponse' {checksumCRC32} -> checksumCRC32) (\s@GetObjectResponse' {} a -> s {checksumCRC32 = a} :: GetObjectResponse)
     |                                                                                                                                      ^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:1062:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32C = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1062 | getObjectResponse_checksumCRC32C = Lens.lens (\GetObjectResponse' {checksumCRC32C} -> checksumCRC32C) (\s@GetObjectResponse' {} a -> s {checksumCRC32C = a} :: GetObjectResponse)
     |                                                                                                                                         ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:1071:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA1 = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1071 | getObjectResponse_checksumSHA1 = Lens.lens (\GetObjectResponse' {checksumSHA1} -> checksumSHA1) (\s@GetObjectResponse' {} a -> s {checksumSHA1 = a} :: GetObjectResponse)
     |                                                                                                                                   ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:1080:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA256 = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1080 | getObjectResponse_checksumSHA256 = Lens.lens (\GetObjectResponse' {checksumSHA256} -> checksumSHA256) (\s@GetObjectResponse' {} a -> s {checksumSHA256 = a} :: GetObjectResponse)
     |                                                                                                                                         ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:1112:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deleteMarker = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1112 | getObjectResponse_deleteMarker = Lens.lens (\GetObjectResponse' {deleteMarker} -> deleteMarker) (\s@GetObjectResponse' {} a -> s {deleteMarker = a} :: GetObjectResponse)
     |                                                                                                                                   ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:1117:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {eTag = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1117 | getObjectResponse_eTag = Lens.lens (\GetObjectResponse' {eTag} -> eTag) (\s@GetObjectResponse' {} a -> s {eTag = a} :: GetObjectResponse)
     |                                                                                                           ^^^^^^^^

gen/Amazonka/S3/GetObject.hs:1124:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {expiration = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1124 | getObjectResponse_expiration = Lens.lens (\GetObjectResponse' {expiration} -> expiration) (\s@GetObjectResponse' {} a -> s {expiration = a} :: GetObjectResponse)
     |                                                                                                                             ^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:1132:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lastModified = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1132 | getObjectResponse_lastModified = Lens.lens (\GetObjectResponse' {lastModified} -> lastModified) (\s@GetObjectResponse' {} a -> s {lastModified = a} :: GetObjectResponse) Prelude.. Lens.mapping Data._Time
     |                                                                                                                                   ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:1184:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1184 | getObjectResponse_sSECustomerAlgorithm = Lens.lens (\GetObjectResponse' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@GetObjectResponse' {} a -> s {sSECustomerAlgorithm = a} :: GetObjectResponse)
     |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:1190:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1190 | getObjectResponse_sSECustomerKeyMD5 = Lens.lens (\GetObjectResponse' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@GetObjectResponse' {} a -> s {sSECustomerKeyMD5 = a} :: GetObjectResponse)
     |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:1206:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {storageClass = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1206 | getObjectResponse_storageClass = Lens.lens (\GetObjectResponse' {storageClass} -> storageClass) (\s@GetObjectResponse' {} a -> s {storageClass = a} :: GetObjectResponse)
     |                                                                                                                                   ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetObject.hs:1214:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type GetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1214 | getObjectResponse_versionId = Lens.lens (\GetObjectResponse' {versionId} -> versionId) (\s@GetObjectResponse' {} a -> s {versionId = a} :: GetObjectResponse)
     |                                                                                                                          ^^^^^^^^^^^^^
[239 of 286] Compiling Amazonka.S3.GetBucketWebsite

gen/Amazonka/S3/GetBucketWebsite.hs:112:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketWebsite is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | getBucketWebsite_bucket = Lens.lens (\GetBucketWebsite' {bucket} -> bucket) (\s@GetBucketWebsite' {} a -> s {bucket = a} :: GetBucketWebsite)
    |                                                                                                              ^^^^^^^^^^

gen/Amazonka/S3/GetBucketWebsite.hs:216:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {errorDocument = a} with type GetBucketWebsiteResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
216 | getBucketWebsiteResponse_errorDocument = Lens.lens (\GetBucketWebsiteResponse' {errorDocument} -> errorDocument) (\s@GetBucketWebsiteResponse' {} a -> s {errorDocument = a} :: GetBucketWebsiteResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetBucketWebsite.hs:221:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {indexDocument = a} with type GetBucketWebsiteResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
221 | getBucketWebsiteResponse_indexDocument = Lens.lens (\GetBucketWebsiteResponse' {indexDocument} -> indexDocument) (\s@GetBucketWebsiteResponse' {} a -> s {indexDocument = a} :: GetBucketWebsiteResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetBucketWebsite.hs:226:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {redirectAllRequestsTo = a} with type GetBucketWebsiteResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
226 | getBucketWebsiteResponse_redirectAllRequestsTo = Lens.lens (\GetBucketWebsiteResponse' {redirectAllRequestsTo} -> redirectAllRequestsTo) (\s@GetBucketWebsiteResponse' {} a -> s {redirectAllRequestsTo = a} :: GetBucketWebsiteResponse)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/GetBucketWebsite.hs:230:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {routingRules = a} with type GetBucketWebsiteResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
230 | getBucketWebsiteResponse_routingRules = Lens.lens (\GetBucketWebsiteResponse' {routingRules} -> routingRules) (\s@GetBucketWebsiteResponse' {} a -> s {routingRules = a} :: GetBucketWebsiteResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^
[240 of 286] Compiling Amazonka.S3.GetBucketVersioning

gen/Amazonka/S3/GetBucketVersioning.hs:110:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketVersioning is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | getBucketVersioning_bucket = Lens.lens (\GetBucketVersioning' {bucket} -> bucket) (\s@GetBucketVersioning' {} a -> s {bucket = a} :: GetBucketVersioning)
    |                                                                                                                       ^^^^^^^^^^

gen/Amazonka/S3/GetBucketVersioning.hs:201:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {mfaDelete = a} with type GetBucketVersioningResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
201 | getBucketVersioningResponse_mfaDelete = Lens.lens (\GetBucketVersioningResponse' {mfaDelete} -> mfaDelete) (\s@GetBucketVersioningResponse' {} a -> s {mfaDelete = a} :: GetBucketVersioningResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^

gen/Amazonka/S3/GetBucketVersioning.hs:205:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type GetBucketVersioningResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
205 | getBucketVersioningResponse_status = Lens.lens (\GetBucketVersioningResponse' {status} -> status) (\s@GetBucketVersioningResponse' {} a -> s {status = a} :: GetBucketVersioningResponse)
    |                                                                                                                                               ^^^^^^^^^^
[241 of 286] Compiling Amazonka.S3.GetBucketTagging

gen/Amazonka/S3/GetBucketTagging.hs:110:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | getBucketTagging_bucket = Lens.lens (\GetBucketTagging' {bucket} -> bucket) (\s@GetBucketTagging' {} a -> s {bucket = a} :: GetBucketTagging)
    |                                                                                                              ^^^^^^^^^^

gen/Amazonka/S3/GetBucketTagging.hs:193:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagSet = a} with type GetBucketTaggingResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
193 | getBucketTaggingResponse_tagSet = Lens.lens (\GetBucketTaggingResponse' {tagSet} -> tagSet) (\s@GetBucketTaggingResponse' {} a -> s {tagSet = a} :: GetBucketTaggingResponse) Prelude.. Lens.coerced
    |                                                                                                                                      ^^^^^^^^^^
[242 of 286] Compiling Amazonka.S3.GetBucketRequestPayment

gen/Amazonka/S3/GetBucketRequestPayment.hs:104:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketRequestPayment is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | getBucketRequestPayment_bucket = Lens.lens (\GetBucketRequestPayment' {bucket} -> bucket) (\s@GetBucketRequestPayment' {} a -> s {bucket = a} :: GetBucketRequestPayment)
    |                                                                                                                                   ^^^^^^^^^^

gen/Amazonka/S3/GetBucketRequestPayment.hs:180:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {payer = a} with type GetBucketRequestPaymentResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
180 | getBucketRequestPaymentResponse_payer = Lens.lens (\GetBucketRequestPaymentResponse' {payer} -> payer) (\s@GetBucketRequestPaymentResponse' {} a -> s {payer = a} :: GetBucketRequestPaymentResponse)
    |                                                                                                                                                        ^^^^^^^^^
[243 of 286] Compiling Amazonka.S3.GetBucketReplication

gen/Amazonka/S3/GetBucketReplication.hs:120:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketReplication is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | getBucketReplication_bucket = Lens.lens (\GetBucketReplication' {bucket} -> bucket) (\s@GetBucketReplication' {} a -> s {bucket = a} :: GetBucketReplication)
    |                                                                                                                          ^^^^^^^^^^
[244 of 286] Compiling Amazonka.S3.GetBucketPolicyStatus

gen/Amazonka/S3/GetBucketPolicyStatus.hs:114:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketPolicyStatus is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | getBucketPolicyStatus_bucket = Lens.lens (\GetBucketPolicyStatus' {bucket} -> bucket) (\s@GetBucketPolicyStatus' {} a -> s {bucket = a} :: GetBucketPolicyStatus)
    |                                                                                                                             ^^^^^^^^^^
[245 of 286] Compiling Amazonka.S3.GetBucketPolicy

gen/Amazonka/S3/GetBucketPolicy.hs:115:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | getBucketPolicy_bucket = Lens.lens (\GetBucketPolicy' {bucket} -> bucket) (\s@GetBucketPolicy' {} a -> s {bucket = a} :: GetBucketPolicy)
    |                                                                                                           ^^^^^^^^^^
[246 of 286] Compiling Amazonka.S3.GetBucketOwnershipControls

gen/Amazonka/S3/GetBucketOwnershipControls.hs:109:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketOwnershipControls is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | getBucketOwnershipControls_bucket = Lens.lens (\GetBucketOwnershipControls' {bucket} -> bucket) (\s@GetBucketOwnershipControls' {} a -> s {bucket = a} :: GetBucketOwnershipControls)
    |                                                                                                                                            ^^^^^^^^^^
[247 of 286] Compiling Amazonka.S3.GetBucketNotificationConfiguration

gen/Amazonka/S3/GetBucketNotificationConfiguration.hs:114:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketNotificationConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | getBucketNotificationConfiguration_bucket = Lens.lens (\GetBucketNotificationConfiguration' {bucket} -> bucket) (\s@GetBucketNotificationConfiguration' {} a -> s {bucket = a} :: GetBucketNotificationConfiguration)
    |                                                                                                                                                                    ^^^^^^^^^^
[248 of 286] Compiling Amazonka.S3.GetBucketMetricsConfiguration

gen/Amazonka/S3/GetBucketMetricsConfiguration.hs:125:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketMetricsConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
125 | getBucketMetricsConfiguration_bucket = Lens.lens (\GetBucketMetricsConfiguration' {bucket} -> bucket) (\s@GetBucketMetricsConfiguration' {} a -> s {bucket = a} :: GetBucketMetricsConfiguration)
    |                                                                                                                                                     ^^^^^^^^^^

gen/Amazonka/S3/GetBucketMetricsConfiguration.hs:129:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetBucketMetricsConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | getBucketMetricsConfiguration_id = Lens.lens (\GetBucketMetricsConfiguration' {id} -> id) (\s@GetBucketMetricsConfiguration' {} a -> s {id = a} :: GetBucketMetricsConfiguration)
    |                                                                                                                                         ^^^^^^
[249 of 286] Compiling Amazonka.S3.GetBucketLogging

gen/Amazonka/S3/GetBucketLogging.hs:101:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketLogging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | getBucketLogging_bucket = Lens.lens (\GetBucketLogging' {bucket} -> bucket) (\s@GetBucketLogging' {} a -> s {bucket = a} :: GetBucketLogging)
    |                                                                                                              ^^^^^^^^^^

gen/Amazonka/S3/GetBucketLogging.hs:175:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {loggingEnabled = a} with type GetBucketLoggingResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
175 | getBucketLoggingResponse_loggingEnabled = Lens.lens (\GetBucketLoggingResponse' {loggingEnabled} -> loggingEnabled) (\s@GetBucketLoggingResponse' {} a -> s {loggingEnabled = a} :: GetBucketLoggingResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^
[250 of 286] Compiling Amazonka.S3.GetBucketLocation

gen/Amazonka/S3/GetBucketLocation.hs:109:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketLocation is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | getBucketLocation_bucket = Lens.lens (\GetBucketLocation' {bucket} -> bucket) (\s@GetBucketLocation' {} a -> s {bucket = a} :: GetBucketLocation)
    |                                                                                                                 ^^^^^^^^^^

gen/Amazonka/S3/GetBucketLocation.hs:201:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {locationConstraint = a} with type GetBucketLocationResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
201 | getBucketLocationResponse_locationConstraint = Lens.lens (\GetBucketLocationResponse' {locationConstraint} -> locationConstraint) (\s@GetBucketLocationResponse' {} a -> s {locationConstraint = a} :: GetBucketLocationResponse)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^
[251 of 286] Compiling Amazonka.S3.GetBucketLifecycleConfiguration

gen/Amazonka/S3/GetBucketLifecycleConfiguration.hs:132:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketLifecycleConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | getBucketLifecycleConfiguration_bucket = Lens.lens (\GetBucketLifecycleConfiguration' {bucket} -> bucket) (\s@GetBucketLifecycleConfiguration' {} a -> s {bucket = a} :: GetBucketLifecycleConfiguration)
    |                                                                                                                                                           ^^^^^^^^^^

gen/Amazonka/S3/GetBucketLifecycleConfiguration.hs:223:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {rules = a} with type GetBucketLifecycleConfigurationResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
223 | getBucketLifecycleConfigurationResponse_rules = Lens.lens (\GetBucketLifecycleConfigurationResponse' {rules} -> rules) (\s@GetBucketLifecycleConfigurationResponse' {} a -> s {rules = a} :: GetBucketLifecycleConfigurationResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                                ^^^^^^^^^
[252 of 286] Compiling Amazonka.S3.GetBucketInventoryConfiguration

gen/Amazonka/S3/GetBucketInventoryConfiguration.hs:126:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketInventoryConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
126 | getBucketInventoryConfiguration_bucket = Lens.lens (\GetBucketInventoryConfiguration' {bucket} -> bucket) (\s@GetBucketInventoryConfiguration' {} a -> s {bucket = a} :: GetBucketInventoryConfiguration)
    |                                                                                                                                                           ^^^^^^^^^^

gen/Amazonka/S3/GetBucketInventoryConfiguration.hs:130:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetBucketInventoryConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
130 | getBucketInventoryConfiguration_id = Lens.lens (\GetBucketInventoryConfiguration' {id} -> id) (\s@GetBucketInventoryConfiguration' {} a -> s {id = a} :: GetBucketInventoryConfiguration)
    |                                                                                                                                               ^^^^^^
[253 of 286] Compiling Amazonka.S3.GetBucketIntelligentTieringConfiguration

gen/Amazonka/S3/GetBucketIntelligentTieringConfiguration.hs:119:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketIntelligentTieringConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | getBucketIntelligentTieringConfiguration_bucket = Lens.lens (\GetBucketIntelligentTieringConfiguration' {bucket} -> bucket) (\s@GetBucketIntelligentTieringConfiguration' {} a -> s {bucket = a} :: GetBucketIntelligentTieringConfiguration)
    |                                                                                                                                                                                      ^^^^^^^^^^

gen/Amazonka/S3/GetBucketIntelligentTieringConfiguration.hs:123:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetBucketIntelligentTieringConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | getBucketIntelligentTieringConfiguration_id = Lens.lens (\GetBucketIntelligentTieringConfiguration' {id} -> id) (\s@GetBucketIntelligentTieringConfiguration' {} a -> s {id = a} :: GetBucketIntelligentTieringConfiguration)
    |                                                                                                                                                                          ^^^^^^
[254 of 286] Compiling Amazonka.S3.GetBucketEncryption

gen/Amazonka/S3/GetBucketEncryption.hs:117:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketEncryption is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
117 | getBucketEncryption_bucket = Lens.lens (\GetBucketEncryption' {bucket} -> bucket) (\s@GetBucketEncryption' {} a -> s {bucket = a} :: GetBucketEncryption)
    |                                                                                                                       ^^^^^^^^^^
[255 of 286] Compiling Amazonka.S3.GetBucketCors

gen/Amazonka/S3/GetBucketCors.hs:108:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketCors is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | getBucketCors_bucket = Lens.lens (\GetBucketCors' {bucket} -> bucket) (\s@GetBucketCors' {} a -> s {bucket = a} :: GetBucketCors)
    |                                                                                                     ^^^^^^^^^^

gen/Amazonka/S3/GetBucketCors.hs:185:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cORSRules = a} with type GetBucketCorsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
185 | getBucketCorsResponse_cORSRules = Lens.lens (\GetBucketCorsResponse' {cORSRules} -> cORSRules) (\s@GetBucketCorsResponse' {} a -> s {cORSRules = a} :: GetBucketCorsResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                      ^^^^^^^^^^^^^
[256 of 286] Compiling Amazonka.S3.GetBucketAnalyticsConfiguration

gen/Amazonka/S3/GetBucketAnalyticsConfiguration.hs:127:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketAnalyticsConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | getBucketAnalyticsConfiguration_bucket = Lens.lens (\GetBucketAnalyticsConfiguration' {bucket} -> bucket) (\s@GetBucketAnalyticsConfiguration' {} a -> s {bucket = a} :: GetBucketAnalyticsConfiguration)
    |                                                                                                                                                           ^^^^^^^^^^

gen/Amazonka/S3/GetBucketAnalyticsConfiguration.hs:131:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetBucketAnalyticsConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | getBucketAnalyticsConfiguration_id = Lens.lens (\GetBucketAnalyticsConfiguration' {id} -> id) (\s@GetBucketAnalyticsConfiguration' {} a -> s {id = a} :: GetBucketAnalyticsConfiguration)
    |                                                                                                                                               ^^^^^^
[257 of 286] Compiling Amazonka.S3.GetBucketAcl

gen/Amazonka/S3/GetBucketAcl.hs:110:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketAcl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | getBucketAcl_bucket = Lens.lens (\GetBucketAcl' {bucket} -> bucket) (\s@GetBucketAcl' {} a -> s {bucket = a} :: GetBucketAcl)
    |                                                                                                  ^^^^^^^^^^

gen/Amazonka/S3/GetBucketAcl.hs:192:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {grants = a} with type GetBucketAclResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
192 | getBucketAclResponse_grants = Lens.lens (\GetBucketAclResponse' {grants} -> grants) (\s@GetBucketAclResponse' {} a -> s {grants = a} :: GetBucketAclResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/S3/GetBucketAcl.hs:196:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {owner = a} with type GetBucketAclResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
196 | getBucketAclResponse_owner = Lens.lens (\GetBucketAclResponse' {owner} -> owner) (\s@GetBucketAclResponse' {} a -> s {owner = a} :: GetBucketAclResponse)
    |                                                                                                                       ^^^^^^^^^
[258 of 286] Compiling Amazonka.S3.GetBucketAccelerateConfiguration

gen/Amazonka/S3/GetBucketAccelerateConfiguration.hs:127:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type GetBucketAccelerateConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | getBucketAccelerateConfiguration_bucket = Lens.lens (\GetBucketAccelerateConfiguration' {bucket} -> bucket) (\s@GetBucketAccelerateConfiguration' {} a -> s {bucket = a} :: GetBucketAccelerateConfiguration)
    |                                                                                                                                                              ^^^^^^^^^^

gen/Amazonka/S3/GetBucketAccelerateConfiguration.hs:221:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type GetBucketAccelerateConfigurationResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
221 | getBucketAccelerateConfigurationResponse_status = Lens.lens (\GetBucketAccelerateConfigurationResponse' {status} -> status) (\s@GetBucketAccelerateConfigurationResponse' {} a -> s {status = a} :: GetBucketAccelerateConfigurationResponse)
    |                                                                                                                                                                                      ^^^^^^^^^^
[259 of 286] Compiling Amazonka.S3.DeletePublicAccessBlock

gen/Amazonka/S3/DeletePublicAccessBlock.hs:108:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeletePublicAccessBlock is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | deletePublicAccessBlock_bucket = Lens.lens (\DeletePublicAccessBlock' {bucket} -> bucket) (\s@DeletePublicAccessBlock' {} a -> s {bucket = a} :: DeletePublicAccessBlock)
    |                                                                                                                                   ^^^^^^^^^^
[260 of 286] Compiling Amazonka.S3.DeleteObjects

gen/Amazonka/S3/DeleteObjects.hs:257:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type DeleteObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
257 | deleteObjects_checksumAlgorithm = Lens.lens (\DeleteObjects' {checksumAlgorithm} -> checksumAlgorithm) (\s@DeleteObjects' {} a -> s {checksumAlgorithm = a} :: DeleteObjects)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/DeleteObjects.hs:297:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
297 | deleteObjects_bucket = Lens.lens (\DeleteObjects' {bucket} -> bucket) (\s@DeleteObjects' {} a -> s {bucket = a} :: DeleteObjects)
    |                                                                                                     ^^^^^^^^^^
[261 of 286] Compiling Amazonka.S3.DeleteObjectTagging

gen/Amazonka/S3/DeleteObjectTagging.hs:164:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type DeleteObjectTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
164 | deleteObjectTagging_versionId = Lens.lens (\DeleteObjectTagging' {versionId} -> versionId) (\s@DeleteObjectTagging' {} a -> s {versionId = a} :: DeleteObjectTagging)
    |                                                                                                                                ^^^^^^^^^^^^^

gen/Amazonka/S3/DeleteObjectTagging.hs:187:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteObjectTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
187 | deleteObjectTagging_bucket = Lens.lens (\DeleteObjectTagging' {bucket} -> bucket) (\s@DeleteObjectTagging' {} a -> s {bucket = a} :: DeleteObjectTagging)
    |                                                                                                                       ^^^^^^^^^^

gen/Amazonka/S3/DeleteObjectTagging.hs:192:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type DeleteObjectTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
192 | deleteObjectTagging_key = Lens.lens (\DeleteObjectTagging' {key} -> key) (\s@DeleteObjectTagging' {} a -> s {key = a} :: DeleteObjectTagging)
    |                                                                                                              ^^^^^^^

gen/Amazonka/S3/DeleteObjectTagging.hs:274:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type DeleteObjectTaggingResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
274 | deleteObjectTaggingResponse_versionId = Lens.lens (\DeleteObjectTaggingResponse' {versionId} -> versionId) (\s@DeleteObjectTaggingResponse' {} a -> s {versionId = a} :: DeleteObjectTaggingResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^
[262 of 286] Compiling Amazonka.S3.DeleteObject

gen/Amazonka/S3/DeleteObject.hs:222:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type DeleteObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
222 | deleteObject_versionId = Lens.lens (\DeleteObject' {versionId} -> versionId) (\s@DeleteObject' {} a -> s {versionId = a} :: DeleteObject)
    |                                                                                                           ^^^^^^^^^^^^^

gen/Amazonka/S3/DeleteObject.hs:245:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
245 | deleteObject_bucket = Lens.lens (\DeleteObject' {bucket} -> bucket) (\s@DeleteObject' {} a -> s {bucket = a} :: DeleteObject)
    |                                                                                                  ^^^^^^^^^^

gen/Amazonka/S3/DeleteObject.hs:249:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type DeleteObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
249 | deleteObject_key = Lens.lens (\DeleteObject' {key} -> key) (\s@DeleteObject' {} a -> s {key = a} :: DeleteObject)
    |                                                                                         ^^^^^^^

gen/Amazonka/S3/DeleteObject.hs:354:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deleteMarker = a} with type DeleteObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
354 | deleteObjectResponse_deleteMarker = Lens.lens (\DeleteObjectResponse' {deleteMarker} -> deleteMarker) (\s@DeleteObjectResponse' {} a -> s {deleteMarker = a} :: DeleteObjectResponse)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/DeleteObject.hs:363:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type DeleteObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
363 | deleteObjectResponse_versionId = Lens.lens (\DeleteObjectResponse' {versionId} -> versionId) (\s@DeleteObjectResponse' {} a -> s {versionId = a} :: DeleteObjectResponse)
    |                                                                                                                                   ^^^^^^^^^^^^^
[263 of 286] Compiling Amazonka.S3.DeleteBucketWebsite

gen/Amazonka/S3/DeleteBucketWebsite.hs:110:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucketWebsite is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | deleteBucketWebsite_bucket = Lens.lens (\DeleteBucketWebsite' {bucket} -> bucket) (\s@DeleteBucketWebsite' {} a -> s {bucket = a} :: DeleteBucketWebsite)
    |                                                                                                                       ^^^^^^^^^^
[264 of 286] Compiling Amazonka.S3.DeleteBucketTagging

gen/Amazonka/S3/DeleteBucketTagging.hs:100:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucketTagging is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | deleteBucketTagging_bucket = Lens.lens (\DeleteBucketTagging' {bucket} -> bucket) (\s@DeleteBucketTagging' {} a -> s {bucket = a} :: DeleteBucketTagging)
    |                                                                                                                       ^^^^^^^^^^
[265 of 286] Compiling Amazonka.S3.DeleteBucketReplication

gen/Amazonka/S3/DeleteBucketReplication.hs:111:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucketReplication is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
111 | deleteBucketReplication_bucket = Lens.lens (\DeleteBucketReplication' {bucket} -> bucket) (\s@DeleteBucketReplication' {} a -> s {bucket = a} :: DeleteBucketReplication)
    |                                                                                                                                   ^^^^^^^^^^
[266 of 286] Compiling Amazonka.S3.DeleteBucketPolicy

gen/Amazonka/S3/DeleteBucketPolicy.hs:114:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucketPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | deleteBucketPolicy_bucket = Lens.lens (\DeleteBucketPolicy' {bucket} -> bucket) (\s@DeleteBucketPolicy' {} a -> s {bucket = a} :: DeleteBucketPolicy)
    |                                                                                                                    ^^^^^^^^^^
[267 of 286] Compiling Amazonka.S3.DeleteBucketOwnershipControls

gen/Amazonka/S3/DeleteBucketOwnershipControls.hs:102:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucketOwnershipControls is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | deleteBucketOwnershipControls_bucket = Lens.lens (\DeleteBucketOwnershipControls' {bucket} -> bucket) (\s@DeleteBucketOwnershipControls' {} a -> s {bucket = a} :: DeleteBucketOwnershipControls)
    |                                                                                                                                                     ^^^^^^^^^^
[268 of 286] Compiling Amazonka.S3.DeleteBucketMetricsConfiguration

gen/Amazonka/S3/DeleteBucketMetricsConfiguration.hs:122:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucketMetricsConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
122 | deleteBucketMetricsConfiguration_bucket = Lens.lens (\DeleteBucketMetricsConfiguration' {bucket} -> bucket) (\s@DeleteBucketMetricsConfiguration' {} a -> s {bucket = a} :: DeleteBucketMetricsConfiguration)
    |                                                                                                                                                              ^^^^^^^^^^

gen/Amazonka/S3/DeleteBucketMetricsConfiguration.hs:126:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteBucketMetricsConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
126 | deleteBucketMetricsConfiguration_id = Lens.lens (\DeleteBucketMetricsConfiguration' {id} -> id) (\s@DeleteBucketMetricsConfiguration' {} a -> s {id = a} :: DeleteBucketMetricsConfiguration)
    |                                                                                                                                                  ^^^^^^
[269 of 286] Compiling Amazonka.S3.DeleteBucketLifecycle

gen/Amazonka/S3/DeleteBucketLifecycle.hs:111:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucketLifecycle is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
111 | deleteBucketLifecycle_bucket = Lens.lens (\DeleteBucketLifecycle' {bucket} -> bucket) (\s@DeleteBucketLifecycle' {} a -> s {bucket = a} :: DeleteBucketLifecycle)
    |                                                                                                                             ^^^^^^^^^^
[270 of 286] Compiling Amazonka.S3.DeleteBucketInventoryConfiguration

gen/Amazonka/S3/DeleteBucketInventoryConfiguration.hs:118:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucketInventoryConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
118 | deleteBucketInventoryConfiguration_bucket = Lens.lens (\DeleteBucketInventoryConfiguration' {bucket} -> bucket) (\s@DeleteBucketInventoryConfiguration' {} a -> s {bucket = a} :: DeleteBucketInventoryConfiguration)
    |                                                                                                                                                                    ^^^^^^^^^^

gen/Amazonka/S3/DeleteBucketInventoryConfiguration.hs:122:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteBucketInventoryConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
122 | deleteBucketInventoryConfiguration_id = Lens.lens (\DeleteBucketInventoryConfiguration' {id} -> id) (\s@DeleteBucketInventoryConfiguration' {} a -> s {id = a} :: DeleteBucketInventoryConfiguration)
    |                                                                                                                                                        ^^^^^^
[271 of 286] Compiling Amazonka.S3.DeleteBucketIntelligentTieringConfiguration

gen/Amazonka/S3/DeleteBucketIntelligentTieringConfiguration.hs:116:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucketIntelligentTieringConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | deleteBucketIntelligentTieringConfiguration_bucket = Lens.lens (\DeleteBucketIntelligentTieringConfiguration' {bucket} -> bucket) (\s@DeleteBucketIntelligentTieringConfiguration' {} a -> s {bucket = a} :: DeleteBucketIntelligentTieringConfiguration)
    |                                                                                                                                                                                               ^^^^^^^^^^

gen/Amazonka/S3/DeleteBucketIntelligentTieringConfiguration.hs:120:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteBucketIntelligentTieringConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | deleteBucketIntelligentTieringConfiguration_id = Lens.lens (\DeleteBucketIntelligentTieringConfiguration' {id} -> id) (\s@DeleteBucketIntelligentTieringConfiguration' {} a -> s {id = a} :: DeleteBucketIntelligentTieringConfiguration)
    |                                                                                                                                                                                   ^^^^^^
[272 of 286] Compiling Amazonka.S3.DeleteBucketEncryption

gen/Amazonka/S3/DeleteBucketEncryption.hs:112:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucketEncryption is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | deleteBucketEncryption_bucket = Lens.lens (\DeleteBucketEncryption' {bucket} -> bucket) (\s@DeleteBucketEncryption' {} a -> s {bucket = a} :: DeleteBucketEncryption)
    |                                                                                                                                ^^^^^^^^^^
[273 of 286] Compiling Amazonka.S3.DeleteBucketCors

gen/Amazonka/S3/DeleteBucketCors.hs:104:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucketCors is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | deleteBucketCors_bucket = Lens.lens (\DeleteBucketCors' {bucket} -> bucket) (\s@DeleteBucketCors' {} a -> s {bucket = a} :: DeleteBucketCors)
    |                                                                                                              ^^^^^^^^^^
[274 of 286] Compiling Amazonka.S3.DeleteBucketAnalyticsConfiguration

gen/Amazonka/S3/DeleteBucketAnalyticsConfiguration.hs:119:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucketAnalyticsConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | deleteBucketAnalyticsConfiguration_bucket = Lens.lens (\DeleteBucketAnalyticsConfiguration' {bucket} -> bucket) (\s@DeleteBucketAnalyticsConfiguration' {} a -> s {bucket = a} :: DeleteBucketAnalyticsConfiguration)
    |                                                                                                                                                                    ^^^^^^^^^^

gen/Amazonka/S3/DeleteBucketAnalyticsConfiguration.hs:123:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteBucketAnalyticsConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | deleteBucketAnalyticsConfiguration_id = Lens.lens (\DeleteBucketAnalyticsConfiguration' {id} -> id) (\s@DeleteBucketAnalyticsConfiguration' {} a -> s {id = a} :: DeleteBucketAnalyticsConfiguration)
    |                                                                                                                                                        ^^^^^^
[275 of 286] Compiling Amazonka.S3.DeleteBucket

gen/Amazonka/S3/DeleteBucket.hs:98:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type DeleteBucket is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | deleteBucket_bucket = Lens.lens (\DeleteBucket' {bucket} -> bucket) (\s@DeleteBucket' {} a -> s {bucket = a} :: DeleteBucket)
   |                                                                                                  ^^^^^^^^^^
[276 of 286] Compiling Amazonka.S3.CreateMultipartUpload

gen/Amazonka/S3/CreateMultipartUpload.hs:635:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucketKeyEnabled = a} with type CreateMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
635 | createMultipartUpload_bucketKeyEnabled = Lens.lens (\CreateMultipartUpload' {bucketKeyEnabled} -> bucketKeyEnabled) (\s@CreateMultipartUpload' {} a -> s {bucketKeyEnabled = a} :: CreateMultipartUpload)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:646:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type CreateMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
646 | createMultipartUpload_checksumAlgorithm = Lens.lens (\CreateMultipartUpload' {checksumAlgorithm} -> checksumAlgorithm) (\s@CreateMultipartUpload' {} a -> s {checksumAlgorithm = a} :: CreateMultipartUpload)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:725:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type CreateMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
725 | createMultipartUpload_sSECustomerAlgorithm = Lens.lens (\CreateMultipartUpload' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@CreateMultipartUpload' {} a -> s {sSECustomerAlgorithm = a} :: CreateMultipartUpload)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:739:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type CreateMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
739 | createMultipartUpload_sSECustomerKeyMD5 = Lens.lens (\CreateMultipartUpload' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@CreateMultipartUpload' {} a -> s {sSECustomerKeyMD5 = a} :: CreateMultipartUpload)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:745:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSEKMSEncryptionContext = a} with type CreateMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
745 | createMultipartUpload_sSEKMSEncryptionContext = Lens.lens (\CreateMultipartUpload' {sSEKMSEncryptionContext} -> sSEKMSEncryptionContext) (\s@CreateMultipartUpload' {} a -> s {sSEKMSEncryptionContext = a} :: CreateMultipartUpload) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:755:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSEKMSKeyId = a} with type CreateMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
755 | createMultipartUpload_sSEKMSKeyId = Lens.lens (\CreateMultipartUpload' {sSEKMSKeyId} -> sSEKMSKeyId) (\s@CreateMultipartUpload' {} a -> s {sSEKMSKeyId = a} :: CreateMultipartUpload) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                                                            ^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:760:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverSideEncryption = a} with type CreateMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
760 | createMultipartUpload_serverSideEncryption = Lens.lens (\CreateMultipartUpload' {serverSideEncryption} -> serverSideEncryption) (\s@CreateMultipartUpload' {} a -> s {serverSideEncryption = a} :: CreateMultipartUpload)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:770:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {storageClass = a} with type CreateMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
770 | createMultipartUpload_storageClass = Lens.lens (\CreateMultipartUpload' {storageClass} -> storageClass) (\s@CreateMultipartUpload' {} a -> s {storageClass = a} :: CreateMultipartUpload)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:775:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagging = a} with type CreateMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
775 | createMultipartUpload_tagging = Lens.lens (\CreateMultipartUpload' {tagging} -> tagging) (\s@CreateMultipartUpload' {} a -> s {tagging = a} :: CreateMultipartUpload)
    |                                                                                                                                ^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:804:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type CreateMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
804 | createMultipartUpload_bucket = Lens.lens (\CreateMultipartUpload' {bucket} -> bucket) (\s@CreateMultipartUpload' {} a -> s {bucket = a} :: CreateMultipartUpload)
    |                                                                                                                             ^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:808:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type CreateMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
808 | createMultipartUpload_key = Lens.lens (\CreateMultipartUpload' {key} -> key) (\s@CreateMultipartUpload' {} a -> s {key = a} :: CreateMultipartUpload)
    |                                                                                                                    ^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:1192:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type CreateMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1192 | createMultipartUploadResponse_bucket = Lens.lens (\CreateMultipartUploadResponse' {bucket} -> bucket) (\s@CreateMultipartUploadResponse' {} a -> s {bucket = a} :: CreateMultipartUploadResponse)
     |                                                                                                                                                     ^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:1197:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucketKeyEnabled = a} with type CreateMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1197 | createMultipartUploadResponse_bucketKeyEnabled = Lens.lens (\CreateMultipartUploadResponse' {bucketKeyEnabled} -> bucketKeyEnabled) (\s@CreateMultipartUploadResponse' {} a -> s {bucketKeyEnabled = a} :: CreateMultipartUploadResponse)
     |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:1201:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type CreateMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1201 | createMultipartUploadResponse_checksumAlgorithm = Lens.lens (\CreateMultipartUploadResponse' {checksumAlgorithm} -> checksumAlgorithm) (\s@CreateMultipartUploadResponse' {} a -> s {checksumAlgorithm = a} :: CreateMultipartUploadResponse)
     |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:1205:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type CreateMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1205 | createMultipartUploadResponse_key = Lens.lens (\CreateMultipartUploadResponse' {key} -> key) (\s@CreateMultipartUploadResponse' {} a -> s {key = a} :: CreateMultipartUploadResponse)
     |                                                                                                                                            ^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:1215:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type CreateMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1215 | createMultipartUploadResponse_sSECustomerAlgorithm = Lens.lens (\CreateMultipartUploadResponse' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@CreateMultipartUploadResponse' {} a -> s {sSECustomerAlgorithm = a} :: CreateMultipartUploadResponse)
     |                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:1221:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type CreateMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1221 | createMultipartUploadResponse_sSECustomerKeyMD5 = Lens.lens (\CreateMultipartUploadResponse' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@CreateMultipartUploadResponse' {} a -> s {sSECustomerKeyMD5 = a} :: CreateMultipartUploadResponse)
     |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:1227:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSEKMSEncryptionContext = a} with type CreateMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1227 | createMultipartUploadResponse_sSEKMSEncryptionContext = Lens.lens (\CreateMultipartUploadResponse' {sSEKMSEncryptionContext} -> sSEKMSEncryptionContext) (\s@CreateMultipartUploadResponse' {} a -> s {sSEKMSEncryptionContext = a} :: CreateMultipartUploadResponse) Prelude.. Lens.mapping Data._Sensitive
     |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:1233:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSEKMSKeyId = a} with type CreateMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1233 | createMultipartUploadResponse_sSEKMSKeyId = Lens.lens (\CreateMultipartUploadResponse' {sSEKMSKeyId} -> sSEKMSKeyId) (\s@CreateMultipartUploadResponse' {} a -> s {sSEKMSKeyId = a} :: CreateMultipartUploadResponse) Prelude.. Lens.mapping Data._Sensitive
     |                                                                                                                                                                    ^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:1238:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverSideEncryption = a} with type CreateMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1238 | createMultipartUploadResponse_serverSideEncryption = Lens.lens (\CreateMultipartUploadResponse' {serverSideEncryption} -> serverSideEncryption) (\s@CreateMultipartUploadResponse' {} a -> s {serverSideEncryption = a} :: CreateMultipartUploadResponse)
     |                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateMultipartUpload.hs:1246:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {uploadId = a} with type CreateMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1246 | createMultipartUploadResponse_uploadId = Lens.lens (\CreateMultipartUploadResponse' {uploadId} -> uploadId) (\s@CreateMultipartUploadResponse' {} a -> s {uploadId = a} :: CreateMultipartUploadResponse)
     |                                                                                                                                                           ^^^^^^^^^^^^
[277 of 286] Compiling Amazonka.S3.CreateBucket

gen/Amazonka/S3/CreateBucket.hs:304:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {objectOwnership = a} with type CreateBucket is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
304 | createBucket_objectOwnership = Lens.lens (\CreateBucket' {objectOwnership} -> objectOwnership) (\s@CreateBucket' {} a -> s {objectOwnership = a} :: CreateBucket)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CreateBucket.hs:308:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type CreateBucket is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
308 | createBucket_bucket = Lens.lens (\CreateBucket' {bucket} -> bucket) (\s@CreateBucket' {} a -> s {bucket = a} :: CreateBucket)
    |                                                                                                  ^^^^^^^^^^
[278 of 286] Compiling Amazonka.S3.CopyObject

gen/Amazonka/S3/CopyObject.hs:761:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucketKeyEnabled = a} with type CopyObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
761 | copyObject_bucketKeyEnabled = Lens.lens (\CopyObject' {bucketKeyEnabled} -> bucketKeyEnabled) (\s@CopyObject' {} a -> s {bucketKeyEnabled = a} :: CopyObject)
    |                                                                                                                          ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:772:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type CopyObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
772 | copyObject_checksumAlgorithm = Lens.lens (\CopyObject' {checksumAlgorithm} -> checksumAlgorithm) (\s@CopyObject' {} a -> s {checksumAlgorithm = a} :: CopyObject)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:896:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type CopyObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
896 | copyObject_sSECustomerAlgorithm = Lens.lens (\CopyObject' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@CopyObject' {} a -> s {sSECustomerAlgorithm = a} :: CopyObject)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:910:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type CopyObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
910 | copyObject_sSECustomerKeyMD5 = Lens.lens (\CopyObject' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@CopyObject' {} a -> s {sSECustomerKeyMD5 = a} :: CopyObject)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:916:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSEKMSEncryptionContext = a} with type CopyObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
916 | copyObject_sSEKMSEncryptionContext = Lens.lens (\CopyObject' {sSEKMSEncryptionContext} -> sSEKMSEncryptionContext) (\s@CopyObject' {} a -> s {sSEKMSEncryptionContext = a} :: CopyObject) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:926:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSEKMSKeyId = a} with type CopyObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
926 | copyObject_sSEKMSKeyId = Lens.lens (\CopyObject' {sSEKMSKeyId} -> sSEKMSKeyId) (\s@CopyObject' {} a -> s {sSEKMSKeyId = a} :: CopyObject) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                           ^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:931:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverSideEncryption = a} with type CopyObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
931 | copyObject_serverSideEncryption = Lens.lens (\CopyObject' {serverSideEncryption} -> serverSideEncryption) (\s@CopyObject' {} a -> s {serverSideEncryption = a} :: CopyObject)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:941:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {storageClass = a} with type CopyObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
941 | copyObject_storageClass = Lens.lens (\CopyObject' {storageClass} -> storageClass) (\s@CopyObject' {} a -> s {storageClass = a} :: CopyObject)
    |                                                                                                              ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:947:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagging = a} with type CopyObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
947 | copyObject_tagging = Lens.lens (\CopyObject' {tagging} -> tagging) (\s@CopyObject' {} a -> s {tagging = a} :: CopyObject)
    |                                                                                               ^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:981:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type CopyObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
981 | copyObject_bucket = Lens.lens (\CopyObject' {bucket} -> bucket) (\s@CopyObject' {} a -> s {bucket = a} :: CopyObject)
    |                                                                                            ^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:1028:83: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type CopyObject is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1028 | copyObject_key = Lens.lens (\CopyObject' {key} -> key) (\s@CopyObject' {} a -> s {key = a} :: CopyObject)
     |                                                                                   ^^^^^^^

gen/Amazonka/S3/CopyObject.hs:1345:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucketKeyEnabled = a} with type CopyObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1345 | copyObjectResponse_bucketKeyEnabled = Lens.lens (\CopyObjectResponse' {bucketKeyEnabled} -> bucketKeyEnabled) (\s@CopyObjectResponse' {} a -> s {bucketKeyEnabled = a} :: CopyObjectResponse)
     |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:1358:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {expiration = a} with type CopyObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1358 | copyObjectResponse_expiration = Lens.lens (\CopyObjectResponse' {expiration} -> expiration) (\s@CopyObjectResponse' {} a -> s {expiration = a} :: CopyObjectResponse)
     |                                                                                                                                ^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:1368:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type CopyObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1368 | copyObjectResponse_sSECustomerAlgorithm = Lens.lens (\CopyObjectResponse' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@CopyObjectResponse' {} a -> s {sSECustomerAlgorithm = a} :: CopyObjectResponse)
     |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:1374:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type CopyObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1374 | copyObjectResponse_sSECustomerKeyMD5 = Lens.lens (\CopyObjectResponse' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@CopyObjectResponse' {} a -> s {sSECustomerKeyMD5 = a} :: CopyObjectResponse)
     |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:1380:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSEKMSEncryptionContext = a} with type CopyObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1380 | copyObjectResponse_sSEKMSEncryptionContext = Lens.lens (\CopyObjectResponse' {sSEKMSEncryptionContext} -> sSEKMSEncryptionContext) (\s@CopyObjectResponse' {} a -> s {sSEKMSEncryptionContext = a} :: CopyObjectResponse) Prelude.. Lens.mapping Data._Sensitive
     |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:1386:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSEKMSKeyId = a} with type CopyObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1386 | copyObjectResponse_sSEKMSKeyId = Lens.lens (\CopyObjectResponse' {sSEKMSKeyId} -> sSEKMSKeyId) (\s@CopyObjectResponse' {} a -> s {sSEKMSKeyId = a} :: CopyObjectResponse) Prelude.. Lens.mapping Data._Sensitive
     |                                                                                                                                   ^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:1391:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverSideEncryption = a} with type CopyObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1391 | copyObjectResponse_serverSideEncryption = Lens.lens (\CopyObjectResponse' {serverSideEncryption} -> serverSideEncryption) (\s@CopyObjectResponse' {} a -> s {serverSideEncryption = a} :: CopyObjectResponse)
     |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CopyObject.hs:1395:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type CopyObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1395 | copyObjectResponse_versionId = Lens.lens (\CopyObjectResponse' {versionId} -> versionId) (\s@CopyObjectResponse' {} a -> s {versionId = a} :: CopyObjectResponse)
     |                                                                                                                             ^^^^^^^^^^^^^
[279 of 286] Compiling Amazonka.S3.CompleteMultipartUpload

gen/Amazonka/S3/CompleteMultipartUpload.hs:359:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32 = a} with type CompleteMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
359 | completeMultipartUpload_checksumCRC32 = Lens.lens (\CompleteMultipartUpload' {checksumCRC32} -> checksumCRC32) (\s@CompleteMultipartUpload' {} a -> s {checksumCRC32 = a} :: CompleteMultipartUpload)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:368:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32C = a} with type CompleteMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
368 | completeMultipartUpload_checksumCRC32C = Lens.lens (\CompleteMultipartUpload' {checksumCRC32C} -> checksumCRC32C) (\s@CompleteMultipartUpload' {} a -> s {checksumCRC32C = a} :: CompleteMultipartUpload)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:377:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA1 = a} with type CompleteMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
377 | completeMultipartUpload_checksumSHA1 = Lens.lens (\CompleteMultipartUpload' {checksumSHA1} -> checksumSHA1) (\s@CompleteMultipartUpload' {} a -> s {checksumSHA1 = a} :: CompleteMultipartUpload)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:386:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA256 = a} with type CompleteMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
386 | completeMultipartUpload_checksumSHA256 = Lens.lens (\CompleteMultipartUpload' {checksumSHA256} -> checksumSHA256) (\s@CompleteMultipartUpload' {} a -> s {checksumSHA256 = a} :: CompleteMultipartUpload)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:447:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type CompleteMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
447 | completeMultipartUpload_bucket = Lens.lens (\CompleteMultipartUpload' {bucket} -> bucket) (\s@CompleteMultipartUpload' {} a -> s {bucket = a} :: CompleteMultipartUpload)
    |                                                                                                                                   ^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:451:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type CompleteMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
451 | completeMultipartUpload_key = Lens.lens (\CompleteMultipartUpload' {key} -> key) (\s@CompleteMultipartUpload' {} a -> s {key = a} :: CompleteMultipartUpload)
    |                                                                                                                          ^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:455:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {uploadId = a} with type CompleteMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
455 | completeMultipartUpload_uploadId = Lens.lens (\CompleteMultipartUpload' {uploadId} -> uploadId) (\s@CompleteMultipartUpload' {} a -> s {uploadId = a} :: CompleteMultipartUpload)
    |                                                                                                                                         ^^^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:786:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type CompleteMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
786 | completeMultipartUploadResponse_bucket = Lens.lens (\CompleteMultipartUploadResponse' {bucket} -> bucket) (\s@CompleteMultipartUploadResponse' {} a -> s {bucket = a} :: CompleteMultipartUploadResponse)
    |                                                                                                                                                           ^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:791:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucketKeyEnabled = a} with type CompleteMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
791 | completeMultipartUploadResponse_bucketKeyEnabled = Lens.lens (\CompleteMultipartUploadResponse' {bucketKeyEnabled} -> bucketKeyEnabled) (\s@CompleteMultipartUploadResponse' {} a -> s {bucketKeyEnabled = a} :: CompleteMultipartUploadResponse)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:800:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32 = a} with type CompleteMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
800 | completeMultipartUploadResponse_checksumCRC32 = Lens.lens (\CompleteMultipartUploadResponse' {checksumCRC32} -> checksumCRC32) (\s@CompleteMultipartUploadResponse' {} a -> s {checksumCRC32 = a} :: CompleteMultipartUploadResponse)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:809:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32C = a} with type CompleteMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
809 | completeMultipartUploadResponse_checksumCRC32C = Lens.lens (\CompleteMultipartUploadResponse' {checksumCRC32C} -> checksumCRC32C) (\s@CompleteMultipartUploadResponse' {} a -> s {checksumCRC32C = a} :: CompleteMultipartUploadResponse)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:818:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA1 = a} with type CompleteMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
818 | completeMultipartUploadResponse_checksumSHA1 = Lens.lens (\CompleteMultipartUploadResponse' {checksumSHA1} -> checksumSHA1) (\s@CompleteMultipartUploadResponse' {} a -> s {checksumSHA1 = a} :: CompleteMultipartUploadResponse)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:827:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA256 = a} with type CompleteMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
827 | completeMultipartUploadResponse_checksumSHA256 = Lens.lens (\CompleteMultipartUploadResponse' {checksumSHA256} -> checksumSHA256) (\s@CompleteMultipartUploadResponse' {} a -> s {checksumSHA256 = a} :: CompleteMultipartUploadResponse)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:839:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {eTag = a} with type CompleteMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
839 | completeMultipartUploadResponse_eTag = Lens.lens (\CompleteMultipartUploadResponse' {eTag} -> eTag) (\s@CompleteMultipartUploadResponse' {} a -> s {eTag = a} :: CompleteMultipartUploadResponse)
    |                                                                                                                                                     ^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:845:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {expiration = a} with type CompleteMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
845 | completeMultipartUploadResponse_expiration = Lens.lens (\CompleteMultipartUploadResponse' {expiration} -> expiration) (\s@CompleteMultipartUploadResponse' {} a -> s {expiration = a} :: CompleteMultipartUploadResponse)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:849:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type CompleteMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
849 | completeMultipartUploadResponse_key = Lens.lens (\CompleteMultipartUploadResponse' {key} -> key) (\s@CompleteMultipartUploadResponse' {} a -> s {key = a} :: CompleteMultipartUploadResponse)
    |                                                                                                                                                  ^^^^^^^

gen/Amazonka/S3/CompleteMultipartUpload.hs:875:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type CompleteMultipartUploadResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
875 | completeMultipartUploadResponse_versionId = Lens.lens (\CompleteMultipartUploadResponse' {versionId} -> versionId) (\s@CompleteMultipartUploadResponse' {} a -> s {versionId = a} :: CompleteMultipartUploadResponse)
    |                                                                                                                                                                    ^^^^^^^^^^^^^
[280 of 286] Compiling Amazonka.S3.AbortMultipartUpload

gen/Amazonka/S3/AbortMultipartUpload.hs:203:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type AbortMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
203 | abortMultipartUpload_bucket = Lens.lens (\AbortMultipartUpload' {bucket} -> bucket) (\s@AbortMultipartUpload' {} a -> s {bucket = a} :: AbortMultipartUpload)
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/S3/AbortMultipartUpload.hs:207:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type AbortMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
207 | abortMultipartUpload_key = Lens.lens (\AbortMultipartUpload' {key} -> key) (\s@AbortMultipartUpload' {} a -> s {key = a} :: AbortMultipartUpload)
    |                                                                                                                 ^^^^^^^

gen/Amazonka/S3/AbortMultipartUpload.hs:211:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {uploadId = a} with type AbortMultipartUpload is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
211 | abortMultipartUpload_uploadId = Lens.lens (\AbortMultipartUpload' {uploadId} -> uploadId) (\s@AbortMultipartUpload' {} a -> s {uploadId = a} :: AbortMultipartUpload)
    |                                                                                                                                ^^^^^^^^^^^^
[281 of 286] Compiling Amazonka.S3.UploadPart

gen/Amazonka/S3/UploadPart.hs:445:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumAlgorithm = a} with type UploadPart is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
445 | uploadPart_checksumAlgorithm = Lens.lens (\UploadPart' {checksumAlgorithm} -> checksumAlgorithm) (\s@UploadPart' {} a -> s {checksumAlgorithm = a} :: UploadPart)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:454:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32 = a} with type UploadPart is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
454 | uploadPart_checksumCRC32 = Lens.lens (\UploadPart' {checksumCRC32} -> checksumCRC32) (\s@UploadPart' {} a -> s {checksumCRC32 = a} :: UploadPart)
    |                                                                                                                 ^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:463:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32C = a} with type UploadPart is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
463 | uploadPart_checksumCRC32C = Lens.lens (\UploadPart' {checksumCRC32C} -> checksumCRC32C) (\s@UploadPart' {} a -> s {checksumCRC32C = a} :: UploadPart)
    |                                                                                                                    ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:472:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA1 = a} with type UploadPart is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
472 | uploadPart_checksumSHA1 = Lens.lens (\UploadPart' {checksumSHA1} -> checksumSHA1) (\s@UploadPart' {} a -> s {checksumSHA1 = a} :: UploadPart)
    |                                                                                                              ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:481:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA256 = a} with type UploadPart is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
481 | uploadPart_checksumSHA256 = Lens.lens (\UploadPart' {checksumSHA256} -> checksumSHA256) (\s@UploadPart' {} a -> s {checksumSHA256 = a} :: UploadPart)
    |                                                                                                                    ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:507:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type UploadPart is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
507 | uploadPart_sSECustomerAlgorithm = Lens.lens (\UploadPart' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@UploadPart' {} a -> s {sSECustomerAlgorithm = a} :: UploadPart)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:523:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type UploadPart is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
523 | uploadPart_sSECustomerKeyMD5 = Lens.lens (\UploadPart' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@UploadPart' {} a -> s {sSECustomerKeyMD5 = a} :: UploadPart)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:546:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type UploadPart is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
546 | uploadPart_bucket = Lens.lens (\UploadPart' {bucket} -> bucket) (\s@UploadPart' {} a -> s {bucket = a} :: UploadPart)
    |                                                                                            ^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:550:83: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type UploadPart is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
550 | uploadPart_key = Lens.lens (\UploadPart' {key} -> key) (\s@UploadPart' {} a -> s {key = a} :: UploadPart)
    |                                                                                   ^^^^^^^

gen/Amazonka/S3/UploadPart.hs:555:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {partNumber = a} with type UploadPart is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
555 | uploadPart_partNumber = Lens.lens (\UploadPart' {partNumber} -> partNumber) (\s@UploadPart' {} a -> s {partNumber = a} :: UploadPart)
    |                                                                                                        ^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:559:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {uploadId = a} with type UploadPart is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
559 | uploadPart_uploadId = Lens.lens (\UploadPart' {uploadId} -> uploadId) (\s@UploadPart' {} a -> s {uploadId = a} :: UploadPart)
    |                                                                                                  ^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:772:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucketKeyEnabled = a} with type UploadPartResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
772 | uploadPartResponse_bucketKeyEnabled = Lens.lens (\UploadPartResponse' {bucketKeyEnabled} -> bucketKeyEnabled) (\s@UploadPartResponse' {} a -> s {bucketKeyEnabled = a} :: UploadPartResponse)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:781:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32 = a} with type UploadPartResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
781 | uploadPartResponse_checksumCRC32 = Lens.lens (\UploadPartResponse' {checksumCRC32} -> checksumCRC32) (\s@UploadPartResponse' {} a -> s {checksumCRC32 = a} :: UploadPartResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:790:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32C = a} with type UploadPartResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
790 | uploadPartResponse_checksumCRC32C = Lens.lens (\UploadPartResponse' {checksumCRC32C} -> checksumCRC32C) (\s@UploadPartResponse' {} a -> s {checksumCRC32C = a} :: UploadPartResponse)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:799:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA1 = a} with type UploadPartResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
799 | uploadPartResponse_checksumSHA1 = Lens.lens (\UploadPartResponse' {checksumSHA1} -> checksumSHA1) (\s@UploadPartResponse' {} a -> s {checksumSHA1 = a} :: UploadPartResponse)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:808:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA256 = a} with type UploadPartResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
808 | uploadPartResponse_checksumSHA256 = Lens.lens (\UploadPartResponse' {checksumSHA256} -> checksumSHA256) (\s@UploadPartResponse' {} a -> s {checksumSHA256 = a} :: UploadPartResponse)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:812:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {eTag = a} with type UploadPartResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
812 | uploadPartResponse_eTag = Lens.lens (\UploadPartResponse' {eTag} -> eTag) (\s@UploadPartResponse' {} a -> s {eTag = a} :: UploadPartResponse)
    |                                                                                                              ^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:822:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type UploadPartResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
822 | uploadPartResponse_sSECustomerAlgorithm = Lens.lens (\UploadPartResponse' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@UploadPartResponse' {} a -> s {sSECustomerAlgorithm = a} :: UploadPartResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPart.hs:828:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type UploadPartResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
828 | uploadPartResponse_sSECustomerKeyMD5 = Lens.lens (\UploadPartResponse' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@UploadPartResponse' {} a -> s {sSECustomerKeyMD5 = a} :: UploadPartResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^
[282 of 286] Compiling Amazonka.S3.UploadPartCopy

gen/Amazonka/S3/UploadPartCopy.hs:546:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type UploadPartCopy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
546 | uploadPartCopy_sSECustomerAlgorithm = Lens.lens (\UploadPartCopy' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@UploadPartCopy' {} a -> s {sSECustomerAlgorithm = a} :: UploadPartCopy)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPartCopy.hs:562:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type UploadPartCopy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
562 | uploadPartCopy_sSECustomerKeyMD5 = Lens.lens (\UploadPartCopy' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@UploadPartCopy' {} a -> s {sSECustomerKeyMD5 = a} :: UploadPartCopy)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPartCopy.hs:585:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucket = a} with type UploadPartCopy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
585 | uploadPartCopy_bucket = Lens.lens (\UploadPartCopy' {bucket} -> bucket) (\s@UploadPartCopy' {} a -> s {bucket = a} :: UploadPartCopy)
    |                                                                                                        ^^^^^^^^^^

gen/Amazonka/S3/UploadPartCopy.hs:632:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {key = a} with type UploadPartCopy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
632 | uploadPartCopy_key = Lens.lens (\UploadPartCopy' {key} -> key) (\s@UploadPartCopy' {} a -> s {key = a} :: UploadPartCopy)
    |                                                                                               ^^^^^^^

gen/Amazonka/S3/UploadPartCopy.hs:637:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {partNumber = a} with type UploadPartCopy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
637 | uploadPartCopy_partNumber = Lens.lens (\UploadPartCopy' {partNumber} -> partNumber) (\s@UploadPartCopy' {} a -> s {partNumber = a} :: UploadPartCopy)
    |                                                                                                                    ^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPartCopy.hs:641:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {uploadId = a} with type UploadPartCopy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
641 | uploadPartCopy_uploadId = Lens.lens (\UploadPartCopy' {uploadId} -> uploadId) (\s@UploadPartCopy' {} a -> s {uploadId = a} :: UploadPartCopy)
    |                                                                                                              ^^^^^^^^^^^^

gen/Amazonka/S3/UploadPartCopy.hs:848:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucketKeyEnabled = a} with type UploadPartCopyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
848 | uploadPartCopyResponse_bucketKeyEnabled = Lens.lens (\UploadPartCopyResponse' {bucketKeyEnabled} -> bucketKeyEnabled) (\s@UploadPartCopyResponse' {} a -> s {bucketKeyEnabled = a} :: UploadPartCopyResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPartCopy.hs:867:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerAlgorithm = a} with type UploadPartCopyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
867 | uploadPartCopyResponse_sSECustomerAlgorithm = Lens.lens (\UploadPartCopyResponse' {sSECustomerAlgorithm} -> sSECustomerAlgorithm) (\s@UploadPartCopyResponse' {} a -> s {sSECustomerAlgorithm = a} :: UploadPartCopyResponse)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/UploadPartCopy.hs:873:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSECustomerKeyMD5 = a} with type UploadPartCopyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
873 | uploadPartCopyResponse_sSECustomerKeyMD5 = Lens.lens (\UploadPartCopyResponse' {sSECustomerKeyMD5} -> sSECustomerKeyMD5) (\s@UploadPartCopyResponse' {} a -> s {sSECustomerKeyMD5 = a} :: UploadPartCopyResponse)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^
[283 of 286] Compiling Amazonka.S3.WriteGetObjectResponse

gen/Amazonka/S3/WriteGetObjectResponse.hs:596:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bucketKeyEnabled = a} with type WriteGetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
596 | writeGetObjectResponse_bucketKeyEnabled = Lens.lens (\WriteGetObjectResponse' {bucketKeyEnabled} -> bucketKeyEnabled) (\s@WriteGetObjectResponse' {} a -> s {bucketKeyEnabled = a} :: WriteGetObjectResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/WriteGetObjectResponse.hs:615:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32 = a} with type WriteGetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
615 | writeGetObjectResponse_checksumCRC32 = Lens.lens (\WriteGetObjectResponse' {checksumCRC32} -> checksumCRC32) (\s@WriteGetObjectResponse' {} a -> s {checksumCRC32 = a} :: WriteGetObjectResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/WriteGetObjectResponse.hs:630:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumCRC32C = a} with type WriteGetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
630 | writeGetObjectResponse_checksumCRC32C = Lens.lens (\WriteGetObjectResponse' {checksumCRC32C} -> checksumCRC32C) (\s@WriteGetObjectResponse' {} a -> s {checksumCRC32C = a} :: WriteGetObjectResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/WriteGetObjectResponse.hs:645:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA1 = a} with type WriteGetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
645 | writeGetObjectResponse_checksumSHA1 = Lens.lens (\WriteGetObjectResponse' {checksumSHA1} -> checksumSHA1) (\s@WriteGetObjectResponse' {} a -> s {checksumSHA1 = a} :: WriteGetObjectResponse)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/WriteGetObjectResponse.hs:660:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {checksumSHA256 = a} with type WriteGetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
660 | writeGetObjectResponse_checksumSHA256 = Lens.lens (\WriteGetObjectResponse' {checksumSHA256} -> checksumSHA256) (\s@WriteGetObjectResponse' {} a -> s {checksumSHA256 = a} :: WriteGetObjectResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^

gen/Amazonka/S3/WriteGetObjectResponse.hs:691:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deleteMarker = a} with type WriteGetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
691 | writeGetObjectResponse_deleteMarker = Lens.lens (\WriteGetObjectResponse' {deleteMarker} -> deleteMarker) (\s@WriteGetObjectResponse' {} a -> s {deleteMarker = a} :: WriteGetObjectResponse)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/WriteGetObjectResponse.hs:696:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {eTag = a} with type WriteGetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
696 | writeGetObjectResponse_eTag = Lens.lens (\WriteGetObjectResponse' {eTag} -> eTag) (\s@WriteGetObjectResponse' {} a -> s {eTag = a} :: WriteGetObjectResponse)
    |                                                                                                                          ^^^^^^^^

gen/Amazonka/S3/WriteGetObjectResponse.hs:719:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {expiration = a} with type WriteGetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
719 | writeGetObjectResponse_expiration = Lens.lens (\WriteGetObjectResponse' {expiration} -> expiration) (\s@WriteGetObjectResponse' {} a -> s {expiration = a} :: WriteGetObjectResponse)
    |                                                                                                                                            ^^^^^^^^^^^^^^

gen/Amazonka/S3/WriteGetObjectResponse.hs:727:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lastModified = a} with type WriteGetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
727 | writeGetObjectResponse_lastModified = Lens.lens (\WriteGetObjectResponse' {lastModified} -> lastModified) (\s@WriteGetObjectResponse' {} a -> s {lastModified = a} :: WriteGetObjectResponse) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/WriteGetObjectResponse.hs:840:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {storageClass = a} with type WriteGetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
840 | writeGetObjectResponse_storageClass = Lens.lens (\WriteGetObjectResponse' {storageClass} -> storageClass) (\s@WriteGetObjectResponse' {} a -> s {storageClass = a} :: WriteGetObjectResponse)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^

gen/Amazonka/S3/WriteGetObjectResponse.hs:848:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type WriteGetObjectResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
848 | writeGetObjectResponse_versionId = Lens.lens (\WriteGetObjectResponse' {versionId} -> versionId) (\s@WriteGetObjectResponse' {} a -> s {versionId = a} :: WriteGetObjectResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^
[284 of 286] Compiling Amazonka.S3.Lens
[285 of 286] Compiling Amazonka.S3.Waiters
[286 of 286] Compiling Amazonka.S3
Configuring test suite 'amazonka-s3-test' for amazonka-s3-2.0...
Preprocessing test suite 'amazonka-s3-test' for amazonka-s3-2.0...
Building test suite 'amazonka-s3-test' for amazonka-s3-2.0...
[1 of 4] Compiling Test.Amazonka.S3
[2 of 4] Compiling Test.Amazonka.S3.Internal
[3 of 4] Compiling Test.Amazonka.Gen.S3
[4 of 4] Compiling Main
[5 of 5] Linking /tmp/workdir-amazonka-s3/amazonka-s3-2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/amazonka-s3-2.0/t/amazonka-s3-test/build/amazonka-s3-test/amazonka-s3-test
