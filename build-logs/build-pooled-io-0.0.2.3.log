Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - pooled-io-0.0.2.3 (lib) (first run)
Configuring library for pooled-io-0.0.2.3...
Preprocessing library for pooled-io-0.0.2.3...
Building library for pooled-io-0.0.2.3...
[1 of 5] Compiling Control.Concurrent.PooledIO.Monad
[2 of 5] Compiling Control.Concurrent.PooledIO.Independent
[3 of 5] Compiling Control.Concurrent.PooledIO.InOrder

src/Control/Concurrent/PooledIO/InOrder.hs:11:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
11 | import Control.Applicative (Applicative, pure, (<*>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Control/Concurrent/PooledIO/InOrder.hs:24:4: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad T’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
   |
24 |    return = Cons . return
   |    ^^^^^^^^^^^^^^^^^^^^^^
[4 of 5] Compiling Control.Concurrent.PooledIO.Final

src/Control/Concurrent/PooledIO/Final.hs:16:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
16 | import Control.Applicative (Applicative, pure, (<*>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[5 of 5] Compiling Control.Concurrent.PooledIO.Sequence
