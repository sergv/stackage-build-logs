Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - lambdabot-core-5.3.1.2 (lib) (first run)
Configuring library for lambdabot-core-5.3.1.2...
Preprocessing library for lambdabot-core-5.3.1.2...
Building library for lambdabot-core-5.3.1.2...
[ 1 of 32] Compiling Lambdabot.Compat.AltTime
[ 2 of 32] Compiling Lambdabot.Config

src/Lambdabot/Config.hs:20:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
20 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 3 of 32] Compiling Lambdabot.Logging
[ 4 of 32] Compiling Lambdabot.Config.Core
[ 5 of 32] Compiling Lambdabot.Util
[ 6 of 32] Compiling Lambdabot.Nick
[ 7 of 32] Compiling Lambdabot.Message
[ 8 of 32] Compiling Lambdabot.IRC

src/Lambdabot/IRC.hs:48:17: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a lambda abstraction: Patterns of type ‘[Char]’ not matched: []
   |
48 |            map (\(x:xs) -> if x == ':' then xs else x:xs) (splitOn "," cstr)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Lambdabot/IRC.hs:95:14: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘codepage’ shadows the existing binding
      defined at src/Lambdabot/IRC.hs:95:1
   |
95 | codepage svr codepage = mkMessage svr "CODEPAGE" [' ':codepage]
   |              ^^^^^^^^
[ 9 of 32] Compiling Lambdabot.Compat.PackedNick
[10 of 32] Compiling Lambdabot.Command

src/Lambdabot/Command.hs:30:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
30 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Lambdabot/Command.hs:31:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Fail’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fail’
    To import instances alone, use: import Control.Monad.Fail()
   |
31 | import Control.Monad.Fail (MonadFail)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Lambdabot/Command.hs:32:1: warning: [-Wunused-imports]
    The qualified import of ‘Control.Monad.Fail’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fail’
    To import instances alone, use: import Control.Monad.Fail()
   |
32 | import qualified Control.Monad.Fail
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Lambdabot/Command.hs:52:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad (Cmd m)’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
   |
52 |     return = Cmd . return
   |     ^^^^^^^^^^^^^^^^^^^^^
[11 of 32] Compiling Lambdabot.ChanName

src/Lambdabot/ChanName.hs:9:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
  |
9 | import Control.Applicative
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^
[12 of 32] Compiling Lambdabot.Util.Network

src/Lambdabot/Util/Network.hs:38:12: warning: [-Wunused-matches]
    Defined but not used: ‘l’
   |
38 |         go l@(_:_) [] = ioError . userError $ "could not connect to host `" ++
   |            ^
[13 of 32] Compiling Lambdabot.Util.Serial

src/Lambdabot/Util/Serial.hs:34:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Fail’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fail’
    To import instances alone, use: import Control.Monad.Fail()
   |
34 | import Control.Monad.Fail (MonadFail)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[14 of 32] Compiling Lambdabot.Monad[boot]

src/Lambdabot/Monad.hs-boot:5:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
  |
5 | import Control.Applicative
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^
[15 of 32] Compiling Lambdabot.Module

src/Lambdabot/Module.hs:25:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
25 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Lambdabot/Module.hs:27:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad’ is redundant
      except perhaps to import instances from ‘Control.Monad’
    To import instances alone, use: import Control.Monad()
   |
27 | import Control.Monad
   | ^^^^^^^^^^^^^^^^^^^^

src/Lambdabot/Module.hs:28:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Fail’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fail’
    To import instances alone, use: import Control.Monad.Fail()
   |
28 | import Control.Monad.Fail (MonadFail)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Lambdabot/Module.hs:29:1: warning: [-Wunused-imports]
    The qualified import of ‘Control.Monad.Fail’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fail’
    To import instances alone, use: import Control.Monad.Fail()
   |
29 | import qualified Control.Monad.Fail
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[16 of 32] Compiling Lambdabot.Monad

src/Lambdabot/Monad.hs:61:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
61 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Lambdabot/Monad.hs:64:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Fail’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fail’
    To import instances alone, use: import Control.Monad.Fail()
   |
64 | import Control.Monad.Fail (MonadFail)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Lambdabot/Monad.hs:65:1: warning: [-Wunused-imports]
    The qualified import of ‘Control.Monad.Fail’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fail’
    To import instances alone, use: import Control.Monad.Fail()
   |
65 | import qualified Control.Monad.Fail
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[17 of 32] Compiling Lambdabot.File

src/Lambdabot/File.hs:25:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
25 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Lambdabot/File.hs:95:9: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘b’ shadows the existing binding
      bound at src/Lambdabot/File.hs:92:5
   |
95 |         b <- findLBFileForReading f
   |         ^
[18 of 32] Compiling Lambdabot.State
[19 of 32] Compiling Lambdabot.Bot
[20 of 32] Compiling Lambdabot.Plugin
[21 of 32] Compiling Lambdabot.Plugin.Core.Version
[22 of 32] Compiling Lambdabot.Plugin.Core.OfflineRC
[23 of 32] Compiling Lambdabot.Plugin.Core.More
[24 of 32] Compiling Lambdabot.Plugin.Core.Help

src/Lambdabot/Plugin/Core/Help.hs:50:11: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding: Patterns of type ‘[String]’ not matched: []
   |
50 |     where (arg:_) = words rest
   |           ^^^^^^^^^^^^^^^^^^^^
[25 of 32] Compiling Lambdabot.Plugin.Core.Compose
[26 of 32] Compiling Lambdabot.Plugin.Core.Base

src/Lambdabot/Plugin/Core/Base.hs:17:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
17 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Lambdabot/Plugin/Core/Base.hs:193:11: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘Maybe String’ not matched: Nothing
    |
193 |     = let Just wholeCmd = maybeCommand (fmtNick (ircMsgServer msg) myname) text
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[27 of 32] Compiling Lambdabot.Compat.FreenodeNick
[28 of 32] Compiling Lambdabot.Plugin.Core.System
[29 of 32] Compiling Lambdabot.Plugin.Core
[30 of 32] Compiling Lambdabot.Util.Signals
[31 of 32] Compiling Paths_lambdabot_core
[32 of 32] Compiling Lambdabot.Main
