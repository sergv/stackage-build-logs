Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - amazonka-route53-domains-2.0 (lib) (first run)
 - amazonka-route53-domains-2.0 (test:amazonka-route53-domains-test) (first run)
Configuring library for amazonka-route53-domains-2.0...
Preprocessing library for amazonka-route53-domains-2.0...
Building library for amazonka-route53-domains-2.0...
[ 1 of 67] Compiling Amazonka.Route53Domains.Types.Consent
[ 2 of 67] Compiling Amazonka.Route53Domains.Types.ContactType
[ 3 of 67] Compiling Amazonka.Route53Domains.Types.CountryCode
[ 4 of 67] Compiling Amazonka.Route53Domains.Types.DnssecKey
[ 5 of 67] Compiling Amazonka.Route53Domains.Types.DnssecSigningAttributes
[ 6 of 67] Compiling Amazonka.Route53Domains.Types.DomainAvailability
[ 7 of 67] Compiling Amazonka.Route53Domains.Types.DomainSuggestion
[ 8 of 67] Compiling Amazonka.Route53Domains.Types.DomainSummary
[ 9 of 67] Compiling Amazonka.Route53Domains.Types.ExtraParamName
[10 of 67] Compiling Amazonka.Route53Domains.Types.ExtraParam
[11 of 67] Compiling Amazonka.Route53Domains.Types.ContactDetail
[12 of 67] Compiling Amazonka.Route53Domains.Types.ListDomainsAttributeName
[13 of 67] Compiling Amazonka.Route53Domains.Types.ListOperationsSortAttributeName
[14 of 67] Compiling Amazonka.Route53Domains.Types.Nameserver
[15 of 67] Compiling Amazonka.Route53Domains.Types.OperationStatus
[16 of 67] Compiling Amazonka.Route53Domains.Types.OperationType
[17 of 67] Compiling Amazonka.Route53Domains.Types.BillingRecord
[18 of 67] Compiling Amazonka.Route53Domains.Types.Operator
[19 of 67] Compiling Amazonka.Route53Domains.Types.FilterCondition
[20 of 67] Compiling Amazonka.Route53Domains.Types.PriceWithCurrency
[21 of 67] Compiling Amazonka.Route53Domains.Types.DomainPrice
[22 of 67] Compiling Amazonka.Route53Domains.Types.ReachabilityStatus
[23 of 67] Compiling Amazonka.Route53Domains.Types.SortOrder
[24 of 67] Compiling Amazonka.Route53Domains.Types.SortCondition
[25 of 67] Compiling Amazonka.Route53Domains.Types.StatusFlag
[26 of 67] Compiling Amazonka.Route53Domains.Types.OperationSummary
[27 of 67] Compiling Amazonka.Route53Domains.Types.Tag
[28 of 67] Compiling Amazonka.Route53Domains.Types.Transferable
[29 of 67] Compiling Amazonka.Route53Domains.Types.DomainTransferability
[30 of 67] Compiling Amazonka.Route53Domains.Types
[31 of 67] Compiling Amazonka.Route53Domains.TransferDomainToAnotherAwsAccount

gen/Amazonka/Route53Domains/TransferDomainToAnotherAwsAccount.hs:127:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type TransferDomainToAnotherAwsAccount is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | transferDomainToAnotherAwsAccount_domainName = Lens.lens (\TransferDomainToAnotherAwsAccount' {domainName} -> domainName) (\s@TransferDomainToAnotherAwsAccount' {} a -> s {domainName = a} :: TransferDomainToAnotherAwsAccount)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/TransferDomainToAnotherAwsAccount.hs:269:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type TransferDomainToAnotherAwsAccountResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
269 | transferDomainToAnotherAwsAccountResponse_operationId = Lens.lens (\TransferDomainToAnotherAwsAccountResponse' {operationId} -> operationId) (\s@TransferDomainToAnotherAwsAccountResponse' {} a -> s {operationId = a} :: TransferDomainToAnotherAwsAccountResponse)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^
[32 of 67] Compiling Amazonka.Route53Domains.TransferDomain

gen/Amazonka/Route53Domains/TransferDomain.hs:314:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {autoRenew = a} with type TransferDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
314 | transferDomain_autoRenew = Lens.lens (\TransferDomain' {autoRenew} -> autoRenew) (\s@TransferDomain' {} a -> s {autoRenew = a} :: TransferDomain)
    |                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/TransferDomain.hs:384:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type TransferDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
384 | transferDomain_domainName = Lens.lens (\TransferDomain' {domainName} -> domainName) (\s@TransferDomain' {} a -> s {domainName = a} :: TransferDomain)
    |                                                                                                                    ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/TransferDomain.hs:537:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type TransferDomainResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
537 | transferDomainResponse_operationId = Lens.lens (\TransferDomainResponse' {operationId} -> operationId) (\s@TransferDomainResponse' {} a -> s {operationId = a} :: TransferDomainResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^^^
[33 of 67] Compiling Amazonka.Route53Domains.RetrieveDomainAuthCode

gen/Amazonka/Route53Domains/RetrieveDomainAuthCode.hs:81:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type RetrieveDomainAuthCode is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
81 | retrieveDomainAuthCode_domainName = Lens.lens (\RetrieveDomainAuthCode' {domainName} -> domainName) (\s@RetrieveDomainAuthCode' {} a -> s {domainName = a} :: RetrieveDomainAuthCode)
   |                                                                                                                                            ^^^^^^^^^^^^^^
[34 of 67] Compiling Amazonka.Route53Domains.ResendOperationAuthorization

gen/Amazonka/Route53Domains/ResendOperationAuthorization.hs:74:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type ResendOperationAuthorization is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
74 | resendOperationAuthorization_operationId = Lens.lens (\ResendOperationAuthorization' {operationId} -> operationId) (\s@ResendOperationAuthorization' {} a -> s {operationId = a} :: ResendOperationAuthorization)
   |                                                                                                                                                                 ^^^^^^^^^^^^^^^
[35 of 67] Compiling Amazonka.Route53Domains.ResendContactReachabilityEmail

gen/Amazonka/Route53Domains/ResendContactReachabilityEmail.hs:84:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type ResendContactReachabilityEmail is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
84 | resendContactReachabilityEmail_domainName = Lens.lens (\ResendContactReachabilityEmail' {domainName} -> domainName) (\s@ResendContactReachabilityEmail' {} a -> s {domainName = a} :: ResendContactReachabilityEmail)
   |                                                                                                                                                                    ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/ResendContactReachabilityEmail.hs:202:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type ResendContactReachabilityEmailResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
202 | resendContactReachabilityEmailResponse_domainName = Lens.lens (\ResendContactReachabilityEmailResponse' {domainName} -> domainName) (\s@ResendContactReachabilityEmailResponse' {} a -> s {domainName = a} :: ResendContactReachabilityEmailResponse)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^
[36 of 67] Compiling Amazonka.Route53Domains.RenewDomain

gen/Amazonka/Route53Domains/RenewDomain.hs:127:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type RenewDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | renewDomain_domainName = Lens.lens (\RenewDomain' {domainName} -> domainName) (\s@RenewDomain' {} a -> s {domainName = a} :: RenewDomain)
    |                                                                                                           ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/RenewDomain.hs:230:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type RenewDomainResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
230 | renewDomainResponse_operationId = Lens.lens (\RenewDomainResponse' {operationId} -> operationId) (\s@RenewDomainResponse' {} a -> s {operationId = a} :: RenewDomainResponse)
    |                                                                                                                                      ^^^^^^^^^^^^^^^
[37 of 67] Compiling Amazonka.Route53Domains.RejectDomainTransferFromAnotherAwsAccount

gen/Amazonka/Route53Domains/RejectDomainTransferFromAnotherAwsAccount.hs:103:197: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type RejectDomainTransferFromAnotherAwsAccount is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | rejectDomainTransferFromAnotherAwsAccount_domainName = Lens.lens (\RejectDomainTransferFromAnotherAwsAccount' {domainName} -> domainName) (\s@RejectDomainTransferFromAnotherAwsAccount' {} a -> s {domainName = a} :: RejectDomainTransferFromAnotherAwsAccount)
    |                                                                                                                                                                                                     ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/RejectDomainTransferFromAnotherAwsAccount.hs:226:224: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type RejectDomainTransferFromAnotherAwsAccountResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
226 | rejectDomainTransferFromAnotherAwsAccountResponse_operationId = Lens.lens (\RejectDomainTransferFromAnotherAwsAccountResponse' {operationId} -> operationId) (\s@RejectDomainTransferFromAnotherAwsAccountResponse' {} a -> s {operationId = a} :: RejectDomainTransferFromAnotherAwsAccountResponse)
    |                                                                                                                                                                                                                                ^^^^^^^^^^^^^^^
[38 of 67] Compiling Amazonka.Route53Domains.RegisterDomain

gen/Amazonka/Route53Domains/RegisterDomain.hs:322:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {autoRenew = a} with type RegisterDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
322 | registerDomain_autoRenew = Lens.lens (\RegisterDomain' {autoRenew} -> autoRenew) (\s@RegisterDomain' {} a -> s {autoRenew = a} :: RegisterDomain)
    |                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/RegisterDomain.hs:395:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type RegisterDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
395 | registerDomain_domainName = Lens.lens (\RegisterDomain' {domainName} -> domainName) (\s@RegisterDomain' {} a -> s {domainName = a} :: RegisterDomain)
    |                                                                                                                    ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/RegisterDomain.hs:550:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type RegisterDomainResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
550 | registerDomainResponse_operationId = Lens.lens (\RegisterDomainResponse' {operationId} -> operationId) (\s@RegisterDomainResponse' {} a -> s {operationId = a} :: RegisterDomainResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^^^
[39 of 67] Compiling Amazonka.Route53Domains.PushDomain

gen/Amazonka/Route53Domains/PushDomain.hs:87:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type PushDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | pushDomain_domainName = Lens.lens (\PushDomain' {domainName} -> domainName) (\s@PushDomain' {} a -> s {domainName = a} :: PushDomain)
   |                                                                                                        ^^^^^^^^^^^^^^
[40 of 67] Compiling Amazonka.Route53Domains.ListTagsForDomain

gen/Amazonka/Route53Domains/ListTagsForDomain.hs:81:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type ListTagsForDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
81 | listTagsForDomain_domainName = Lens.lens (\ListTagsForDomain' {domainName} -> domainName) (\s@ListTagsForDomain' {} a -> s {domainName = a} :: ListTagsForDomain)
   |                                                                                                                             ^^^^^^^^^^^^^^
[41 of 67] Compiling Amazonka.Route53Domains.ListPrices
[42 of 67] Compiling Amazonka.Route53Domains.ListOperations

gen/Amazonka/Route53Domains/ListOperations.hs:159:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sortOrder = a} with type ListOperations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
159 | listOperations_sortOrder = Lens.lens (\ListOperations' {sortOrder} -> sortOrder) (\s@ListOperations' {} a -> s {sortOrder = a} :: ListOperations)
    |                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/ListOperations.hs:163:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type ListOperations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
163 | listOperations_status = Lens.lens (\ListOperations' {status} -> status) (\s@ListOperations' {} a -> s {status = a} :: ListOperations) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                        ^^^^^^^^^^

gen/Amazonka/Route53Domains/ListOperations.hs:174:100: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {type' = a} with type ListOperations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
174 | listOperations_type = Lens.lens (\ListOperations' {type'} -> type') (\s@ListOperations' {} a -> s {type' = a} :: ListOperations) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                    ^^^^^^^^^
[43 of 67] Compiling Amazonka.Route53Domains.ListDomains
[44 of 67] Compiling Amazonka.Route53Domains.GetOperationDetail

gen/Amazonka/Route53Domains/GetOperationDetail.hs:93:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type GetOperationDetail is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | getOperationDetail_operationId = Lens.lens (\GetOperationDetail' {operationId} -> operationId) (\s@GetOperationDetail' {} a -> s {operationId = a} :: GetOperationDetail)
   |                                                                                                                                   ^^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/GetOperationDetail.hs:255:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type GetOperationDetailResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
255 | getOperationDetailResponse_domainName = Lens.lens (\GetOperationDetailResponse' {domainName} -> domainName) (\s@GetOperationDetailResponse' {} a -> s {domainName = a} :: GetOperationDetailResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/GetOperationDetail.hs:259:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lastUpdatedDate = a} with type GetOperationDetailResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
259 | getOperationDetailResponse_lastUpdatedDate = Lens.lens (\GetOperationDetailResponse' {lastUpdatedDate} -> lastUpdatedDate) (\s@GetOperationDetailResponse' {} a -> s {lastUpdatedDate = a} :: GetOperationDetailResponse) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/GetOperationDetail.hs:263:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {message = a} with type GetOperationDetailResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
263 | getOperationDetailResponse_message = Lens.lens (\GetOperationDetailResponse' {message} -> message) (\s@GetOperationDetailResponse' {} a -> s {message = a} :: GetOperationDetailResponse)
    |                                                                                                                                               ^^^^^^^^^^^

gen/Amazonka/Route53Domains/GetOperationDetail.hs:267:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type GetOperationDetailResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
267 | getOperationDetailResponse_operationId = Lens.lens (\GetOperationDetailResponse' {operationId} -> operationId) (\s@GetOperationDetailResponse' {} a -> s {operationId = a} :: GetOperationDetailResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/GetOperationDetail.hs:271:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type GetOperationDetailResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
271 | getOperationDetailResponse_status = Lens.lens (\GetOperationDetailResponse' {status} -> status) (\s@GetOperationDetailResponse' {} a -> s {status = a} :: GetOperationDetailResponse)
    |                                                                                                                                            ^^^^^^^^^^

gen/Amazonka/Route53Domains/GetOperationDetail.hs:292:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {statusFlag = a} with type GetOperationDetailResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
292 | getOperationDetailResponse_statusFlag = Lens.lens (\GetOperationDetailResponse' {statusFlag} -> statusFlag) (\s@GetOperationDetailResponse' {} a -> s {statusFlag = a} :: GetOperationDetailResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/GetOperationDetail.hs:296:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {submittedDate = a} with type GetOperationDetailResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
296 | getOperationDetailResponse_submittedDate = Lens.lens (\GetOperationDetailResponse' {submittedDate} -> submittedDate) (\s@GetOperationDetailResponse' {} a -> s {submittedDate = a} :: GetOperationDetailResponse) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/GetOperationDetail.hs:300:136: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {type' = a} with type GetOperationDetailResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
300 | getOperationDetailResponse_type = Lens.lens (\GetOperationDetailResponse' {type'} -> type') (\s@GetOperationDetailResponse' {} a -> s {type' = a} :: GetOperationDetailResponse)
    |                                                                                                                                        ^^^^^^^^^
[45 of 67] Compiling Amazonka.Route53Domains.GetDomainSuggestions

gen/Amazonka/Route53Domains/GetDomainSuggestions.hs:170:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type GetDomainSuggestions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
170 | getDomainSuggestions_domainName = Lens.lens (\GetDomainSuggestions' {domainName} -> domainName) (\s@GetDomainSuggestions' {} a -> s {domainName = a} :: GetDomainSuggestions)
    |                                                                                                                                      ^^^^^^^^^^^^^^
[46 of 67] Compiling Amazonka.Route53Domains.GetDomainDetail

gen/Amazonka/Route53Domains/GetDomainDetail.hs:100:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type GetDomainDetail is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | getDomainDetail_domainName = Lens.lens (\GetDomainDetail' {domainName} -> domainName) (\s@GetDomainDetail' {} a -> s {domainName = a} :: GetDomainDetail)
    |                                                                                                                       ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/GetDomainDetail.hs:420:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {autoRenew = a} with type GetDomainDetailResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
420 | getDomainDetailResponse_autoRenew = Lens.lens (\GetDomainDetailResponse' {autoRenew} -> autoRenew) (\s@GetDomainDetailResponse' {} a -> s {autoRenew = a} :: GetDomainDetailResponse)
    |                                                                                                                                            ^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/GetDomainDetail.hs:438:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type GetDomainDetailResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
438 | getDomainDetailResponse_domainName = Lens.lens (\GetDomainDetailResponse' {domainName} -> domainName) (\s@GetDomainDetailResponse' {} a -> s {domainName = a} :: GetDomainDetailResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^^
[47 of 67] Compiling Amazonka.Route53Domains.GetContactReachabilityStatus

gen/Amazonka/Route53Domains/GetContactReachabilityStatus.hs:86:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type GetContactReachabilityStatus is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
86 | getContactReachabilityStatus_domainName = Lens.lens (\GetContactReachabilityStatus' {domainName} -> domainName) (\s@GetContactReachabilityStatus' {} a -> s {domainName = a} :: GetContactReachabilityStatus)
   |                                                                                                                                                              ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/GetContactReachabilityStatus.hs:200:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type GetContactReachabilityStatusResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
200 | getContactReachabilityStatusResponse_domainName = Lens.lens (\GetContactReachabilityStatusResponse' {domainName} -> domainName) (\s@GetContactReachabilityStatusResponse' {} a -> s {domainName = a} :: GetContactReachabilityStatusResponse)
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/GetContactReachabilityStatus.hs:214:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type GetContactReachabilityStatusResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
214 | getContactReachabilityStatusResponse_status = Lens.lens (\GetContactReachabilityStatusResponse' {status} -> status) (\s@GetContactReachabilityStatusResponse' {} a -> s {status = a} :: GetContactReachabilityStatusResponse)
    |                                                                                                                                                                          ^^^^^^^^^^
[48 of 67] Compiling Amazonka.Route53Domains.EnableDomainTransferLock

gen/Amazonka/Route53Domains/EnableDomainTransferLock.hs:84:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type EnableDomainTransferLock is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
84 | enableDomainTransferLock_domainName = Lens.lens (\EnableDomainTransferLock' {domainName} -> domainName) (\s@EnableDomainTransferLock' {} a -> s {domainName = a} :: EnableDomainTransferLock)
   |                                                                                                                                                  ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/EnableDomainTransferLock.hs:174:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type EnableDomainTransferLockResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
174 | enableDomainTransferLockResponse_operationId = Lens.lens (\EnableDomainTransferLockResponse' {operationId} -> operationId) (\s@EnableDomainTransferLockResponse' {} a -> s {operationId = a} :: EnableDomainTransferLockResponse)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^
[49 of 67] Compiling Amazonka.Route53Domains.EnableDomainAutoRenew

gen/Amazonka/Route53Domains/EnableDomainAutoRenew.hs:84:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type EnableDomainAutoRenew is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
84 | enableDomainAutoRenew_domainName = Lens.lens (\EnableDomainAutoRenew' {domainName} -> domainName) (\s@EnableDomainAutoRenew' {} a -> s {domainName = a} :: EnableDomainAutoRenew)
   |                                                                                                                                         ^^^^^^^^^^^^^^
[50 of 67] Compiling Amazonka.Route53Domains.DisassociateDelegationSignerFromDomain

gen/Amazonka/Route53Domains/DisassociateDelegationSignerFromDomain.hs:93:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type DisassociateDelegationSignerFromDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | disassociateDelegationSignerFromDomain_domainName = Lens.lens (\DisassociateDelegationSignerFromDomain' {domainName} -> domainName) (\s@DisassociateDelegationSignerFromDomain' {} a -> s {domainName = a} :: DisassociateDelegationSignerFromDomain)
   |                                                                                                                                                                                            ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/DisassociateDelegationSignerFromDomain.hs:99:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DisassociateDelegationSignerFromDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | disassociateDelegationSignerFromDomain_id = Lens.lens (\DisassociateDelegationSignerFromDomain' {id} -> id) (\s@DisassociateDelegationSignerFromDomain' {} a -> s {id = a} :: DisassociateDelegationSignerFromDomain)
   |                                                                                                                                                                    ^^^^^^

gen/Amazonka/Route53Domains/DisassociateDelegationSignerFromDomain.hs:219:215: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type DisassociateDelegationSignerFromDomainResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
219 | disassociateDelegationSignerFromDomainResponse_operationId = Lens.lens (\DisassociateDelegationSignerFromDomainResponse' {operationId} -> operationId) (\s@DisassociateDelegationSignerFromDomainResponse' {} a -> s {operationId = a} :: DisassociateDelegationSignerFromDomainResponse)
    |                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^
[51 of 67] Compiling Amazonka.Route53Domains.DisableDomainTransferLock

gen/Amazonka/Route53Domains/DisableDomainTransferLock.hs:86:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type DisableDomainTransferLock is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
86 | disableDomainTransferLock_domainName = Lens.lens (\DisableDomainTransferLock' {domainName} -> domainName) (\s@DisableDomainTransferLock' {} a -> s {domainName = a} :: DisableDomainTransferLock)
   |                                                                                                                                                     ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/DisableDomainTransferLock.hs:179:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type DisableDomainTransferLockResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
179 | disableDomainTransferLockResponse_operationId = Lens.lens (\DisableDomainTransferLockResponse' {operationId} -> operationId) (\s@DisableDomainTransferLockResponse' {} a -> s {operationId = a} :: DisableDomainTransferLockResponse)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^
[52 of 67] Compiling Amazonka.Route53Domains.DisableDomainAutoRenew

gen/Amazonka/Route53Domains/DisableDomainAutoRenew.hs:75:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type DisableDomainAutoRenew is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
75 | disableDomainAutoRenew_domainName = Lens.lens (\DisableDomainAutoRenew' {domainName} -> domainName) (\s@DisableDomainAutoRenew' {} a -> s {domainName = a} :: DisableDomainAutoRenew)
   |                                                                                                                                            ^^^^^^^^^^^^^^
[53 of 67] Compiling Amazonka.Route53Domains.DeleteTagsForDomain

gen/Amazonka/Route53Domains/DeleteTagsForDomain.hs:87:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type DeleteTagsForDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | deleteTagsForDomain_domainName = Lens.lens (\DeleteTagsForDomain' {domainName} -> domainName) (\s@DeleteTagsForDomain' {} a -> s {domainName = a} :: DeleteTagsForDomain)
   |                                                                                                                                   ^^^^^^^^^^^^^^
[54 of 67] Compiling Amazonka.Route53Domains.DeleteDomain

gen/Amazonka/Route53Domains/DeleteDomain.hs:93:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type DeleteDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | deleteDomain_domainName = Lens.lens (\DeleteDomain' {domainName} -> domainName) (\s@DeleteDomain' {} a -> s {domainName = a} :: DeleteDomain)
   |                                                                                                              ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/DeleteDomain.hs:181:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type DeleteDomainResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
181 | deleteDomainResponse_operationId = Lens.lens (\DeleteDomainResponse' {operationId} -> operationId) (\s@DeleteDomainResponse' {} a -> s {operationId = a} :: DeleteDomainResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^^^
[55 of 67] Compiling Amazonka.Route53Domains.CheckDomainTransferability

gen/Amazonka/Route53Domains/CheckDomainTransferability.hs:144:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type CheckDomainTransferability is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
144 | checkDomainTransferability_domainName = Lens.lens (\CheckDomainTransferability' {domainName} -> domainName) (\s@CheckDomainTransferability' {} a -> s {domainName = a} :: CheckDomainTransferability)
    |                                                                                                                                                        ^^^^^^^^^^^^^^
[56 of 67] Compiling Amazonka.Route53Domains.CheckDomainAvailability

gen/Amazonka/Route53Domains/CheckDomainAvailability.hs:161:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type CheckDomainAvailability is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
161 | checkDomainAvailability_domainName = Lens.lens (\CheckDomainAvailability' {domainName} -> domainName) (\s@CheckDomainAvailability' {} a -> s {domainName = a} :: CheckDomainAvailability)
    |                                                                                                                                               ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/CheckDomainAvailability.hs:364:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {availability = a} with type CheckDomainAvailabilityResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
364 | checkDomainAvailabilityResponse_availability = Lens.lens (\CheckDomainAvailabilityResponse' {availability} -> availability) (\s@CheckDomainAvailabilityResponse' {} a -> s {availability = a} :: CheckDomainAvailabilityResponse)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^
[57 of 67] Compiling Amazonka.Route53Domains.CancelDomainTransferToAnotherAwsAccount

gen/Amazonka/Route53Domains/CancelDomainTransferToAnotherAwsAccount.hs:101:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type CancelDomainTransferToAnotherAwsAccount is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | cancelDomainTransferToAnotherAwsAccount_domainName = Lens.lens (\CancelDomainTransferToAnotherAwsAccount' {domainName} -> domainName) (\s@CancelDomainTransferToAnotherAwsAccount' {} a -> s {domainName = a} :: CancelDomainTransferToAnotherAwsAccount)
    |                                                                                                                                                                                               ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/CancelDomainTransferToAnotherAwsAccount.hs:223:218: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type CancelDomainTransferToAnotherAwsAccountResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
223 | cancelDomainTransferToAnotherAwsAccountResponse_operationId = Lens.lens (\CancelDomainTransferToAnotherAwsAccountResponse' {operationId} -> operationId) (\s@CancelDomainTransferToAnotherAwsAccountResponse' {} a -> s {operationId = a} :: CancelDomainTransferToAnotherAwsAccountResponse)
    |                                                                                                                                                                                                                          ^^^^^^^^^^^^^^^
[58 of 67] Compiling Amazonka.Route53Domains.AssociateDelegationSignerToDomain

gen/Amazonka/Route53Domains/AssociateDelegationSignerToDomain.hs:98:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type AssociateDelegationSignerToDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | associateDelegationSignerToDomain_domainName = Lens.lens (\AssociateDelegationSignerToDomain' {domainName} -> domainName) (\s@AssociateDelegationSignerToDomain' {} a -> s {domainName = a} :: AssociateDelegationSignerToDomain)
   |                                                                                                                                                                             ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/AssociateDelegationSignerToDomain.hs:224:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type AssociateDelegationSignerToDomainResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
224 | associateDelegationSignerToDomainResponse_operationId = Lens.lens (\AssociateDelegationSignerToDomainResponse' {operationId} -> operationId) (\s@AssociateDelegationSignerToDomainResponse' {} a -> s {operationId = a} :: AssociateDelegationSignerToDomainResponse)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^
[59 of 67] Compiling Amazonka.Route53Domains.AcceptDomainTransferFromAnotherAwsAccount

gen/Amazonka/Route53Domains/AcceptDomainTransferFromAnotherAwsAccount.hs:121:197: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type AcceptDomainTransferFromAnotherAwsAccount is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
121 | acceptDomainTransferFromAnotherAwsAccount_domainName = Lens.lens (\AcceptDomainTransferFromAnotherAwsAccount' {domainName} -> domainName) (\s@AcceptDomainTransferFromAnotherAwsAccount' {} a -> s {domainName = a} :: AcceptDomainTransferFromAnotherAwsAccount)
    |                                                                                                                                                                                                     ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/AcceptDomainTransferFromAnotherAwsAccount.hs:252:224: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type AcceptDomainTransferFromAnotherAwsAccountResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
252 | acceptDomainTransferFromAnotherAwsAccountResponse_operationId = Lens.lens (\AcceptDomainTransferFromAnotherAwsAccountResponse' {operationId} -> operationId) (\s@AcceptDomainTransferFromAnotherAwsAccountResponse' {} a -> s {operationId = a} :: AcceptDomainTransferFromAnotherAwsAccountResponse)
    |                                                                                                                                                                                                                                ^^^^^^^^^^^^^^^
[60 of 67] Compiling Amazonka.Route53Domains.UpdateDomainContact

gen/Amazonka/Route53Domains/UpdateDomainContact.hs:127:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type UpdateDomainContact is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | updateDomainContact_domainName = Lens.lens (\UpdateDomainContact' {domainName} -> domainName) (\s@UpdateDomainContact' {} a -> s {domainName = a} :: UpdateDomainContact)
    |                                                                                                                                   ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/UpdateDomainContact.hs:235:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type UpdateDomainContactResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
235 | updateDomainContactResponse_operationId = Lens.lens (\UpdateDomainContactResponse' {operationId} -> operationId) (\s@UpdateDomainContactResponse' {} a -> s {operationId = a} :: UpdateDomainContactResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^
[61 of 67] Compiling Amazonka.Route53Domains.UpdateDomainContactPrivacy

gen/Amazonka/Route53Domains/UpdateDomainContactPrivacy.hs:207:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type UpdateDomainContactPrivacy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
207 | updateDomainContactPrivacy_domainName = Lens.lens (\UpdateDomainContactPrivacy' {domainName} -> domainName) (\s@UpdateDomainContactPrivacy' {} a -> s {domainName = a} :: UpdateDomainContactPrivacy)
    |                                                                                                                                                        ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/UpdateDomainContactPrivacy.hs:309:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type UpdateDomainContactPrivacyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
309 | updateDomainContactPrivacyResponse_operationId = Lens.lens (\UpdateDomainContactPrivacyResponse' {operationId} -> operationId) (\s@UpdateDomainContactPrivacyResponse' {} a -> s {operationId = a} :: UpdateDomainContactPrivacyResponse)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^
[62 of 67] Compiling Amazonka.Route53Domains.UpdateDomainNameservers

gen/Amazonka/Route53Domains/UpdateDomainNameservers.hs:112:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type UpdateDomainNameservers is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | updateDomainNameservers_domainName = Lens.lens (\UpdateDomainNameservers' {domainName} -> domainName) (\s@UpdateDomainNameservers' {} a -> s {domainName = a} :: UpdateDomainNameservers)
    |                                                                                                                                               ^^^^^^^^^^^^^^

gen/Amazonka/Route53Domains/UpdateDomainNameservers.hs:217:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operationId = a} with type UpdateDomainNameserversResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
217 | updateDomainNameserversResponse_operationId = Lens.lens (\UpdateDomainNameserversResponse' {operationId} -> operationId) (\s@UpdateDomainNameserversResponse' {} a -> s {operationId = a} :: UpdateDomainNameserversResponse)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^
[63 of 67] Compiling Amazonka.Route53Domains.UpdateTagsForDomain

gen/Amazonka/Route53Domains/UpdateTagsForDomain.hs:98:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type UpdateTagsForDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | updateTagsForDomain_domainName = Lens.lens (\UpdateTagsForDomain' {domainName} -> domainName) (\s@UpdateTagsForDomain' {} a -> s {domainName = a} :: UpdateTagsForDomain)
   |                                                                                                                                   ^^^^^^^^^^^^^^
[64 of 67] Compiling Amazonka.Route53Domains.ViewBilling
[65 of 67] Compiling Amazonka.Route53Domains.Lens
[66 of 67] Compiling Amazonka.Route53Domains.Waiters
[67 of 67] Compiling Amazonka.Route53Domains
Configuring test suite 'amazonka-route53-domains-test' for amazonka-route53-domains-2.0...
Preprocessing test suite 'amazonka-route53-domains-test' for amazonka-route53-domains-2.0...
Building test suite 'amazonka-route53-domains-test' for amazonka-route53-domains-2.0...
[1 of 4] Compiling Test.Amazonka.Route53Domains
[2 of 4] Compiling Test.Amazonka.Route53Domains.Internal
[3 of 4] Compiling Test.Amazonka.Gen.Route53Domains
[4 of 4] Compiling Main
[5 of 5] Linking /tmp/workdir-amazonka-route53-domains/amazonka-route53-domains-2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/amazonka-route53-domains-2.0/t/amazonka-route53-domains-test/build/amazonka-route53-domains-test/amazonka-route53-domains-test
