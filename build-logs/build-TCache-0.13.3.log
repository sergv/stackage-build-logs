Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - TCache-0.13.3 (lib) (first run)
 - TCache-0.13.3 (test:caching) (first run)
Configuring library for TCache-0.13.3...
Preprocessing library for TCache-0.13.3...
Building library for TCache-0.13.3...
[ 1 of 11] Compiling Data.Persistent.IDynamic
[ 2 of 11] Compiling Data.TCache.Defs
[ 3 of 11] Compiling Data.TCache.IResource
[ 4 of 11] Compiling Data.TCache.Triggers

Data/TCache/Triggers.hs:44:3: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘(TyCon, [TypeRep])’ not matched: (_, [])
   |
44 |   (_,atype:_)= splitTyConApp  . typeOf $ TriggerType tr
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 5 of 11] Compiling Data.TCache

Data/TCache.hs:713:38: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a lambda abstraction:
        Patterns of type ‘[Maybe a]’ not matched:
            []
            (_:_:_)
    |
713 | withResource r f= withResources [r] (\[mr]-> [f mr])
    |                                      ^^^^^^^^^^^^^^
[ 6 of 11] Compiling Data.TCache.Memoization

Data/TCache/Memoization.hs:123:30: warning: [GHC-47082] [-Woperator-whitespace-ext-conflict]
    The prefix use of a ‘$’ would denote an untyped splice
      were the TemplateHaskell extension enabled.
    Suggested fix: Add whitespace after the ‘$’.
    |
123 |      let r = unsafePerformIO $return . fromJust =<< readResource proto   -- !> "fillIt"
    |                              ^
[ 7 of 11] Compiling Data.TCache.IndexQuery

Data/TCache/IndexQuery.hs:92:8: warning: [-Wcompat-unqualified-imports]
    To ensure compatibility with future core libraries changes
    imports to Data.List should be
    either qualified or have an explicit import list.
   |
92 | import Data.List
   |        ^^^^^^^^^

Data/TCache/IndexQuery.hs:94:31: warning: [-Wunused-imports]
    The import of ‘fromMaybe’ from module ‘Data.Maybe’ is redundant
   |
94 | import Data.Maybe (catMaybes, fromMaybe)
   |                               ^^^^^^^^^

Data/TCache/IndexQuery.hs:141:8: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[TypeRep]’ not matched:
            []
            [_]
            (_:_:_:_)
    |
141 |        [typeofreg, typeofa]= typeRepArgs $! typeOf map1
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Data/TCache/IndexQuery.hs:155:8: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[TypeRep]’ not matched:
            []
            [_]
            (_:_:_:_)
    |
155 |    let [one, two]= typeRepArgs $! typeOf selector
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Data/TCache/IndexQuery.hs:165:8: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘index’ shadows the existing binding
      defined at Data/TCache/IndexQuery.hs:213:1
    |
165 |    let index = case mindex of 
    |        ^^^^^

Data/TCache/IndexQuery.hs:166:21: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘index’ shadows the existing binding
      bound at Data/TCache/IndexQuery.hs:165:8
    |
166 |         Just (Index index) ->  index
    |                     ^^^^^

Data/TCache/IndexQuery.hs:172:15: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘dbrefs’ shadows the existing binding
      bound at Data/TCache/IndexQuery.hs:171:8
    |
172 |         Just  dbrefs -> dbrefs
    |               ^^^^^^

Data/TCache/IndexQuery.hs:214:8: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[TypeRep]’ not matched:
            []
            [_]
            (_:_:_:_)
    |
214 |    let [one, two]= typeRepArgs $! typeOf sel
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Data/TCache/IndexQuery.hs:323:8: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[TypeRep]’ not matched:
            []
            [_]
            (_:_:_:_)
    |
323 |    let [one, two]= typeRepArgs $! typeOf selector
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 8 of 11] Compiling Data.TCache.IndexText

Data/TCache/IndexText.hs:70:1: warning: [-Wunused-imports]
    The import of ‘GHC.Conc’ is redundant
      except perhaps to import instances from ‘GHC.Conc’
    To import instances alone, use: import GHC.Conc()
   |
70 | import GHC.Conc(unsafeIOToSTM)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Data/TCache/IndexText.hs:147:7: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[TypeRep]’ not matched:
            []
            [_]
            (_:_:_:_)
    |
147 |   let [t1,t2]=  typeRepArgs $! typeOf sel
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Data/TCache/IndexText.hs:203:9: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[TypeRep]’ not matched:
            []
            [_]
            (_:_:_:_)
    |
203 |         [t1, t2] = typeRepArgs $! typeOf sel
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Data/TCache/IndexText.hs:212:7: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[TypeRep]’ not matched:
            []
            [_]
            (_:_:_:_)
    |
212 |   let [t1, t2]=  typeRepArgs $! typeOf sel
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Data/TCache/IndexText.hs:216:8: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a lambda abstraction:
        Patterns of type ‘[Maybe IndexText]’ not matched:
            []
            (_:_:_)
    |
216 |      $ \[r] -> resources{toReturn= r}
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 9 of 11] Compiling Data.TCache.DefaultPersistence
[10 of 11] Compiling Data.Persistent.Collection

Data/Persistent/Collection.hs:34:1: warning: [-Wunused-imports]
    The import of ‘STM, atomically’
    from module ‘Control.Concurrent.STM’ is redundant
   |
34 | import Control.Concurrent.STM(STM,atomically, retry)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[11 of 11] Compiling Paths_TCache
Configuring test suite 'caching' for TCache-0.13.3...
Preprocessing test suite 'caching' for TCache-0.13.3...
Building test suite 'caching' for TCache-0.13.3...
[1 of 2] Compiling Main
[2 of 2] Compiling Paths_TCache
[3 of 3] Linking /tmp/workdir-TCache/TCache-0.13.3/dist-newstyle/build/x86_64-linux/ghc-9.6.6/TCache-0.13.3/t/caching/build/caching/caching
