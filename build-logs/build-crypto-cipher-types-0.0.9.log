Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - crypto-cipher-types-0.0.9 (lib) (first run)
Configuring library for crypto-cipher-types-0.0.9...
Preprocessing library for crypto-cipher-types-0.0.9...
Building library for crypto-cipher-types-0.0.9...
[ 1 of 10] Compiling Crypto.Cipher.Types.Base
[ 2 of 10] Compiling Crypto.Cipher.Types.GF

Crypto/Cipher/Types/GF.hs:16:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
16 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 3 of 10] Compiling Crypto.Cipher.Types.Stream
[ 4 of 10] Compiling Crypto.Cipher.Types.Utils
[ 5 of 10] Compiling Crypto.Cipher.Types.Block

Crypto/Cipher/Types/Block.hs:38:27: warning: [-Wunused-imports]
    The import of ‘Bits’ from module ‘Data.Bits’ is redundant
   |
38 | import Data.Bits (shiftR, Bits)
   |                           ^^^^
[ 6 of 10] Compiling Crypto.Cipher.Types.BlockIO

Crypto/Cipher/Types/BlockIO.hs:22:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
22 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Cipher/Types/BlockIO.hs:157:37: warning: [GHC-68441] [-Wdeprecations]
    In the use of ‘memcpy’
    (imported from Data.ByteString.Internal, but defined in Data.ByteString.Internal.Type):
    Deprecated: "Use Foreign.Marshal.Utils.copyBytes instead"
    |
157 |             withBytePtr res $ \r -> B.memcpy d r (fromIntegral bs)
    |                                     ^^^^^^^^
[ 7 of 10] Compiling Crypto.Cipher.Types.Unsafe
[ 8 of 10] Compiling Crypto.Cipher.Types.OfIO
[ 9 of 10] Compiling Crypto.Cipher.Types.AEAD
[10 of 10] Compiling Crypto.Cipher.Types
