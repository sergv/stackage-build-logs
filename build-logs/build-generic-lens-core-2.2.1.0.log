Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - generic-lens-core-2.2.1.0 (lib) (first run)
Configuring library for generic-lens-core-2.2.1.0...
Preprocessing library for generic-lens-core-2.2.1.0...
Building library for generic-lens-core-2.2.1.0...

src/Data/Generics/Product/Internal/Fields.hs:11:14: warning: [-Wdeprecated-flags]
    -XTypeInType is deprecated: use -XDataKinds and -XPolyKinds instead
   |
11 | {-# LANGUAGE TypeInType              #-}
   |              ^^^^^^^^^^

src/Data/Generics/Product/Internal/Typed.hs:11:14: warning: [-Wdeprecated-flags]
    -XTypeInType is deprecated: use -XDataKinds and -XPolyKinds instead
   |
11 | {-# LANGUAGE TypeInType            #-}
   |              ^^^^^^^^^^

src/Data/Generics/Product/Internal/Positions.hs:1:14: warning: [-Wdeprecated-flags]
    -XTypeInType is deprecated: use -XDataKinds and -XPolyKinds instead
  |
1 | {-# LANGUAGE TypeInType #-}
  |              ^^^^^^^^^^

src/Data/Generics/Product/Internal/GLens.hs:2:14: warning: [-Wdeprecated-flags]
    -XTypeInType is deprecated: use -XDataKinds and -XPolyKinds instead
  |
2 | {-# LANGUAGE TypeInType #-}
  |              ^^^^^^^^^^

src/Data/Generics/Product/Internal/Subtype.hs:2:14: warning: [-Wdeprecated-flags]
    -XTypeInType is deprecated: use -XDataKinds and -XPolyKinds instead
  |
2 | {-# LANGUAGE TypeInType #-}
  |              ^^^^^^^^^^

src/Data/Generics/Product/Internal/HList.hs:11:14: warning: [-Wdeprecated-flags]
    -XTypeInType is deprecated: use -XDataKinds and -XPolyKinds instead
   |
11 | {-# LANGUAGE TypeInType             #-}
   |              ^^^^^^^^^^
[ 1 of 24] Compiling Data.Generics.Internal.Errors

src/Data/Generics/Internal/Errors.hs:50:37: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
50 | type family Defined_list (break :: [*]) (err :: Constraint) (a :: k) :: k where
   |                                     ^
[ 2 of 24] Compiling Data.Generics.Internal.Families.Changing

src/Data/Generics/Internal/Families/Changing.hs:83:25: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
83 | type family Infer (s :: *) (a' :: *) (b :: *) :: * where
   |                         ^

src/Data/Generics/Internal/Families/Changing.hs:83:35: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
83 | type family Infer (s :: *) (a' :: *) (b :: *) :: * where
   |                                   ^

src/Data/Generics/Internal/Families/Changing.hs:83:44: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
83 | type family Infer (s :: *) (a' :: *) (b :: *) :: * where
   |                                            ^

src/Data/Generics/Internal/Families/Changing.hs:83:50: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
83 | type family Infer (s :: *) (a' :: *) (b :: *) :: * where
   |                                                  ^
[ 3 of 24] Compiling Data.Generics.Internal.GenericN
[ 4 of 24] Compiling Data.Generics.Internal.Profunctor.Iso
[ 5 of 24] Compiling Data.Generics.Internal.Profunctor.Lens
[ 6 of 24] Compiling Data.Generics.Internal.Profunctor.Prism
[ 7 of 24] Compiling Data.Generics.Internal.VL.Traversal
[ 8 of 24] Compiling Data.Generics.Internal.Void
[ 9 of 24] Compiling Data.Generics.Internal.Wrapped
[10 of 24] Compiling Data.Generics.Product.Internal.GLens
[11 of 24] Compiling Data.Generics.Product.Internal.HList

src/Data/Generics/Product/Internal/HList.hs:61:3: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (HList '[])’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
61 |   mappend _ _ = Nil
   |   ^^^^^^^^^^^^^^^^^

src/Data/Generics/Product/Internal/HList.hs:68:3: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (HList (a ': as))’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
68 |   mappend (x :> xs) (y :> ys) = mappend x y :> mappend xs ys
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[12 of 24] Compiling Data.Generics.Internal.Families.Has
[13 of 24] Compiling Data.Generics.Internal.Families.Collect

src/Data/Generics/Internal/Families/Collect.hs:101:1: warning: [-Wunused-top-binds]
    Defined but not used: type constructor or class ‘<&>’
    |
101 | type family (a :: Count) <&> (b :: Count) :: Count where
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

src/Data/Generics/Internal/Families/Collect.hs:105:40: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
105 | type family CollectFieldsOrdered (r :: * -> *) :: [Symbol] where
    |                                        ^

src/Data/Generics/Internal/Families/Collect.hs:105:45: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
105 | type family CollectFieldsOrdered (r :: * -> *) :: [Symbol] where
    |                                             ^
[14 of 24] Compiling Data.Generics.Internal.Families
[15 of 24] Compiling Data.Generics.Product.Internal.Fields
[16 of 24] Compiling Data.Generics.Product.Internal.Positions
[17 of 24] Compiling Data.Generics.Product.Internal.Subtype
[18 of 24] Compiling Data.GenericLens.Internal
[19 of 24] Compiling Data.Generics.Product.Internal.Typed
[20 of 24] Compiling Data.Generics.Product.Internal.Types
[21 of 24] Compiling Data.Generics.Product.Internal.Param
[22 of 24] Compiling Data.Generics.Sum.Internal.Constructors
[23 of 24] Compiling Data.Generics.Sum.Internal.Typed
[24 of 24] Compiling Data.Generics.Sum.Internal.Subtype
