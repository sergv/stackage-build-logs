Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - monad-memo-0.5.4 (lib) (first run)
 - monad-memo-0.5.4 (test:tests) (first run)
Configuring library for monad-memo-0.5.4...
Preprocessing library for monad-memo-0.5.4...
Building library for monad-memo-0.5.4...
[ 1 of 16] Compiling Control.Monad.Memo.Class
[ 2 of 16] Compiling Control.Monad.Trans.Memo.ReaderCache
[ 3 of 16] Compiling Control.Monad.Trans.Memo.StateCache
[ 4 of 16] Compiling Data.MapLike
[ 5 of 16] Compiling Control.Monad.Trans.Memo.State
[ 6 of 16] Compiling Data.MapLike.Instances
[ 7 of 16] Compiling Control.Monad.Trans.Memo.Map
[ 8 of 16] Compiling Data.MaybeLike
[ 9 of 16] Compiling Control.Monad.Memo.Vector.Unsafe

Control/Monad/Memo/Vector/Unsafe.hs:66:36: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
66 | instance (PrimMonad m, PrimState m ~ s, MaybeLike e v, MVector c e) =>
   |                                    ^

Control/Monad/Memo/Vector/Unsafe.hs:78:36: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
78 | instance (PrimMonad m, PrimState m ~ s, MaybeLike e v, MVector c e) =>
   |                                    ^
[10 of 16] Compiling Control.Monad.Memo.Vector.Expandable

Control/Monad/Memo/Vector/Expandable.hs:64:36: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
64 | instance (PrimMonad m, PrimState m ~ s, MaybeLike e v, MVector c e) =>
   |                                    ^

Control/Monad/Memo/Vector/Expandable.hs:77:36: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
77 | instance (PrimMonad m, PrimState m ~ s, MaybeLike e v, MVector c e) =>
   |                                    ^
[11 of 16] Compiling Control.Monad.Memo.Vector

Control/Monad/Memo/Vector.hs:68:36: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
68 | instance (PrimMonad m, PrimState m ~ s, MaybeLike e v, MVector c e) =>
   |                                    ^

Control/Monad/Memo/Vector.hs:80:36: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
80 | instance (PrimMonad m, PrimState m ~ s, MaybeLike e v, MVector c e) =>
   |                                    ^
[12 of 16] Compiling Control.Monad.Memo.Vector.Instances
[13 of 16] Compiling Control.Monad.Memo.Array

Control/Monad/Memo/Array.hs:98:25: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
98 | type family Array (m :: * -> *) :: * -> * -> *
   |                         ^

Control/Monad/Memo/Array.hs:98:30: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
98 | type family Array (m :: * -> *) :: * -> * -> *
   |                              ^

Control/Monad/Memo/Array.hs:98:36: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
98 | type family Array (m :: * -> *) :: * -> * -> *
   |                                    ^

Control/Monad/Memo/Array.hs:98:41: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
98 | type family Array (m :: * -> *) :: * -> * -> *
   |                                         ^

Control/Monad/Memo/Array.hs:98:46: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
98 | type family Array (m :: * -> *) :: * -> * -> *
   |                                              ^

Control/Monad/Memo/Array.hs:141:26: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
141 | type family UArray (m :: * -> *) :: * -> * -> *
    |                          ^

Control/Monad/Memo/Array.hs:141:31: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
141 | type family UArray (m :: * -> *) :: * -> * -> *
    |                               ^

Control/Monad/Memo/Array.hs:141:37: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
141 | type family UArray (m :: * -> *) :: * -> * -> *
    |                                     ^

Control/Monad/Memo/Array.hs:141:42: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
141 | type family UArray (m :: * -> *) :: * -> * -> *
    |                                          ^

Control/Monad/Memo/Array.hs:141:47: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
141 | type family UArray (m :: * -> *) :: * -> * -> *
    |                                               ^
[14 of 16] Compiling Control.Monad.Memo.Array.Instances
[15 of 16] Compiling Data.MaybeLike.Instances
[16 of 16] Compiling Control.Monad.Memo
Configuring test suite 'tests' for monad-memo-0.5.4...
Preprocessing test suite 'tests' for monad-memo-0.5.4...
Building test suite 'tests' for monad-memo-0.5.4...
[1 of 2] Compiling MemoTest
[2 of 2] Compiling Main
[3 of 3] Linking /tmp/workdir-monad-memo/monad-memo-0.5.4/dist-newstyle/build/x86_64-linux/ghc-9.6.6/monad-memo-0.5.4/t/tests/build/tests/tests
