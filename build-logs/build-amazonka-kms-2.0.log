Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - amazonka-kms-2.0 (lib) (first run)
 - amazonka-kms-2.0 (test:amazonka-kms-test) (first run)
Configuring library for amazonka-kms-2.0...
Preprocessing library for amazonka-kms-2.0...
Building library for amazonka-kms-2.0...
[ 1 of 88] Compiling Amazonka.KMS.Types.AlgorithmSpec
[ 2 of 88] Compiling Amazonka.KMS.Types.AliasListEntry
[ 3 of 88] Compiling Amazonka.KMS.Types.ConnectionErrorCodeType
[ 4 of 88] Compiling Amazonka.KMS.Types.ConnectionStateType
[ 5 of 88] Compiling Amazonka.KMS.Types.CustomKeyStoreType
[ 6 of 88] Compiling Amazonka.KMS.Types.CustomerMasterKeySpec
[ 7 of 88] Compiling Amazonka.KMS.Types.DataKeyPairSpec
[ 8 of 88] Compiling Amazonka.KMS.Types.DataKeySpec
[ 9 of 88] Compiling Amazonka.KMS.Types.EncryptionAlgorithmSpec
[10 of 88] Compiling Amazonka.KMS.Types.ExpirationModelType
[11 of 88] Compiling Amazonka.KMS.Types.GrantConstraints
[12 of 88] Compiling Amazonka.KMS.Types.GrantOperation
[13 of 88] Compiling Amazonka.KMS.Types.GrantListEntry
[14 of 88] Compiling Amazonka.KMS.Types.KeyListEntry
[15 of 88] Compiling Amazonka.KMS.Types.KeyManagerType
[16 of 88] Compiling Amazonka.KMS.Types.KeySpec
[17 of 88] Compiling Amazonka.KMS.Types.KeyState
[18 of 88] Compiling Amazonka.KMS.Types.KeyUsageType
[19 of 88] Compiling Amazonka.KMS.Types.ListGrantsResponse
[20 of 88] Compiling Amazonka.KMS.Types.MacAlgorithmSpec
[21 of 88] Compiling Amazonka.KMS.Types.MessageType
[22 of 88] Compiling Amazonka.KMS.Types.MultiRegionKey
[23 of 88] Compiling Amazonka.KMS.Types.MultiRegionKeyType
[24 of 88] Compiling Amazonka.KMS.Types.MultiRegionConfiguration
[25 of 88] Compiling Amazonka.KMS.Types.OriginType
[26 of 88] Compiling Amazonka.KMS.Types.SigningAlgorithmSpec
[27 of 88] Compiling Amazonka.KMS.Types.Tag
[28 of 88] Compiling Amazonka.KMS.Types.WrappingKeySpec
[29 of 88] Compiling Amazonka.KMS.Types.XksKeyConfigurationType
[30 of 88] Compiling Amazonka.KMS.Types.KeyMetadata
[31 of 88] Compiling Amazonka.KMS.Types.XksProxyAuthenticationCredentialType
[32 of 88] Compiling Amazonka.KMS.Types.XksProxyConnectivityType
[33 of 88] Compiling Amazonka.KMS.Types.XksProxyConfigurationType
[34 of 88] Compiling Amazonka.KMS.Types.CustomKeyStoresListEntry
[35 of 88] Compiling Amazonka.KMS.Types
[36 of 88] Compiling Amazonka.KMS.TagResource

gen/Amazonka/KMS/TagResource.hs:182:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type TagResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
182 | tagResource_keyId = Lens.lens (\TagResource' {keyId} -> keyId) (\s@TagResource' {} a -> s {keyId = a} :: TagResource)
    |                                                                                            ^^^^^^^^^
[37 of 88] Compiling Amazonka.KMS.Sign

gen/Amazonka/KMS/Sign.hs:291:71: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type Sign is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
291 | sign_keyId = Lens.lens (\Sign' {keyId} -> keyId) (\s@Sign' {} a -> s {keyId = a} :: Sign)
    |                                                                       ^^^^^^^^^

gen/Amazonka/KMS/Sign.hs:310:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {signingAlgorithm = a} with type Sign is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
310 | sign_signingAlgorithm = Lens.lens (\Sign' {signingAlgorithm} -> signingAlgorithm) (\s@Sign' {} a -> s {signingAlgorithm = a} :: Sign)
    |                                                                                                        ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/Sign.hs:455:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type SignResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
455 | signResponse_keyId = Lens.lens (\SignResponse' {keyId} -> keyId) (\s@SignResponse' {} a -> s {keyId = a} :: SignResponse)
    |                                                                                               ^^^^^^^^^

gen/Amazonka/KMS/Sign.hs:481:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {signingAlgorithm = a} with type SignResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
481 | signResponse_signingAlgorithm = Lens.lens (\SignResponse' {signingAlgorithm} -> signingAlgorithm) (\s@SignResponse' {} a -> s {signingAlgorithm = a} :: SignResponse)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^^^
[38 of 88] Compiling Amazonka.KMS.ScheduleKeyDeletion

gen/Amazonka/KMS/ScheduleKeyDeletion.hs:194:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {pendingWindowInDays = a} with type ScheduleKeyDeletion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
194 | scheduleKeyDeletion_pendingWindowInDays = Lens.lens (\ScheduleKeyDeletion' {pendingWindowInDays} -> pendingWindowInDays) (\s@ScheduleKeyDeletion' {} a -> s {pendingWindowInDays = a} :: ScheduleKeyDeletion)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/ScheduleKeyDeletion.hs:210:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type ScheduleKeyDeletion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
210 | scheduleKeyDeletion_keyId = Lens.lens (\ScheduleKeyDeletion' {keyId} -> keyId) (\s@ScheduleKeyDeletion' {} a -> s {keyId = a} :: ScheduleKeyDeletion)
    |                                                                                                                    ^^^^^^^^^

gen/Amazonka/KMS/ScheduleKeyDeletion.hs:353:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deletionDate = a} with type ScheduleKeyDeletionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
353 | scheduleKeyDeletionResponse_deletionDate = Lens.lens (\ScheduleKeyDeletionResponse' {deletionDate} -> deletionDate) (\s@ScheduleKeyDeletionResponse' {} a -> s {deletionDate = a} :: ScheduleKeyDeletionResponse) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/ScheduleKeyDeletion.hs:359:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type ScheduleKeyDeletionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
359 | scheduleKeyDeletionResponse_keyId = Lens.lens (\ScheduleKeyDeletionResponse' {keyId} -> keyId) (\s@ScheduleKeyDeletionResponse' {} a -> s {keyId = a} :: ScheduleKeyDeletionResponse)
    |                                                                                                                                            ^^^^^^^^^

gen/Amazonka/KMS/ScheduleKeyDeletion.hs:368:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyState = a} with type ScheduleKeyDeletionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
368 | scheduleKeyDeletionResponse_keyState = Lens.lens (\ScheduleKeyDeletionResponse' {keyState} -> keyState) (\s@ScheduleKeyDeletionResponse' {} a -> s {keyState = a} :: ScheduleKeyDeletionResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^

gen/Amazonka/KMS/ScheduleKeyDeletion.hs:376:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {pendingWindowInDays = a} with type ScheduleKeyDeletionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
376 | scheduleKeyDeletionResponse_pendingWindowInDays = Lens.lens (\ScheduleKeyDeletionResponse' {pendingWindowInDays} -> pendingWindowInDays) (\s@ScheduleKeyDeletionResponse' {} a -> s {pendingWindowInDays = a} :: ScheduleKeyDeletionResponse)
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^
[39 of 88] Compiling Amazonka.KMS.RevokeGrant

gen/Amazonka/KMS/RevokeGrant.hs:156:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type RevokeGrant is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
156 | revokeGrant_keyId = Lens.lens (\RevokeGrant' {keyId} -> keyId) (\s@RevokeGrant' {} a -> s {keyId = a} :: RevokeGrant)
    |                                                                                            ^^^^^^^^^

gen/Amazonka/KMS/RevokeGrant.hs:161:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {grantId = a} with type RevokeGrant is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
161 | revokeGrant_grantId = Lens.lens (\RevokeGrant' {grantId} -> grantId) (\s@RevokeGrant' {} a -> s {grantId = a} :: RevokeGrant)
    |                                                                                                  ^^^^^^^^^^^
[40 of 88] Compiling Amazonka.KMS.RetireGrant

gen/Amazonka/KMS/RetireGrant.hs:153:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {grantId = a} with type RetireGrant is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
153 | retireGrant_grantId = Lens.lens (\RetireGrant' {grantId} -> grantId) (\s@RetireGrant' {} a -> s {grantId = a} :: RetireGrant)
    |                                                                                                  ^^^^^^^^^^^

gen/Amazonka/KMS/RetireGrant.hs:172:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type RetireGrant is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
172 | retireGrant_keyId = Lens.lens (\RetireGrant' {keyId} -> keyId) (\s@RetireGrant' {} a -> s {keyId = a} :: RetireGrant)
    |                                                                                            ^^^^^^^^^
[41 of 88] Compiling Amazonka.KMS.ReplicateKey

gen/Amazonka/KMS/ReplicateKey.hs:499:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {description = a} with type ReplicateKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
499 | replicateKey_description = Lens.lens (\ReplicateKey' {description} -> description) (\s@ReplicateKey' {} a -> s {description = a} :: ReplicateKey)
    |                                                                                                                 ^^^^^^^^^^^^^^^

gen/Amazonka/KMS/ReplicateKey.hs:598:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type ReplicateKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
598 | replicateKey_keyId = Lens.lens (\ReplicateKey' {keyId} -> keyId) (\s@ReplicateKey' {} a -> s {keyId = a} :: ReplicateKey)
    |                                                                                               ^^^^^^^^^
[42 of 88] Compiling Amazonka.KMS.ReEncrypt

gen/Amazonka/KMS/ReEncrypt.hs:444:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {destinationEncryptionAlgorithm = a} with type ReEncrypt is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
444 | reEncrypt_destinationEncryptionAlgorithm = Lens.lens (\ReEncrypt' {destinationEncryptionAlgorithm} -> destinationEncryptionAlgorithm) (\s@ReEncrypt' {} a -> s {destinationEncryptionAlgorithm = a} :: ReEncrypt)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/ReEncrypt.hs:489:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sourceEncryptionAlgorithm = a} with type ReEncrypt is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
489 | reEncrypt_sourceEncryptionAlgorithm = Lens.lens (\ReEncrypt' {sourceEncryptionAlgorithm} -> sourceEncryptionAlgorithm) (\s@ReEncrypt' {} a -> s {sourceEncryptionAlgorithm = a} :: ReEncrypt)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/ReEncrypt.hs:540:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sourceKeyId = a} with type ReEncrypt is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
540 | reEncrypt_sourceKeyId = Lens.lens (\ReEncrypt' {sourceKeyId} -> sourceKeyId) (\s@ReEncrypt' {} a -> s {sourceKeyId = a} :: ReEncrypt)
    |                                                                                                        ^^^^^^^^^^^^^^^

gen/Amazonka/KMS/ReEncrypt.hs:548:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {ciphertextBlob = a} with type ReEncrypt is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
548 | reEncrypt_ciphertextBlob = Lens.lens (\ReEncrypt' {ciphertextBlob} -> ciphertextBlob) (\s@ReEncrypt' {} a -> s {ciphertextBlob = a} :: ReEncrypt) Prelude.. Data._Base64
    |                                                                                                                 ^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/ReEncrypt.hs:728:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {ciphertextBlob = a} with type ReEncryptResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
728 | reEncryptResponse_ciphertextBlob = Lens.lens (\ReEncryptResponse' {ciphertextBlob} -> ciphertextBlob) (\s@ReEncryptResponse' {} a -> s {ciphertextBlob = a} :: ReEncryptResponse) Prelude.. Lens.mapping Data._Base64
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/ReEncrypt.hs:732:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {destinationEncryptionAlgorithm = a} with type ReEncryptResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
732 | reEncryptResponse_destinationEncryptionAlgorithm = Lens.lens (\ReEncryptResponse' {destinationEncryptionAlgorithm} -> destinationEncryptionAlgorithm) (\s@ReEncryptResponse' {} a -> s {destinationEncryptionAlgorithm = a} :: ReEncryptResponse)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/ReEncrypt.hs:738:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type ReEncryptResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
738 | reEncryptResponse_keyId = Lens.lens (\ReEncryptResponse' {keyId} -> keyId) (\s@ReEncryptResponse' {} a -> s {keyId = a} :: ReEncryptResponse)
    |                                                                                                              ^^^^^^^^^

gen/Amazonka/KMS/ReEncrypt.hs:743:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sourceEncryptionAlgorithm = a} with type ReEncryptResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
743 | reEncryptResponse_sourceEncryptionAlgorithm = Lens.lens (\ReEncryptResponse' {sourceEncryptionAlgorithm} -> sourceEncryptionAlgorithm) (\s@ReEncryptResponse' {} a -> s {sourceEncryptionAlgorithm = a} :: ReEncryptResponse)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/ReEncrypt.hs:747:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sourceKeyId = a} with type ReEncryptResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
747 | reEncryptResponse_sourceKeyId = Lens.lens (\ReEncryptResponse' {sourceKeyId} -> sourceKeyId) (\s@ReEncryptResponse' {} a -> s {sourceKeyId = a} :: ReEncryptResponse)
    |                                                                                                                                ^^^^^^^^^^^^^^^
[43 of 88] Compiling Amazonka.KMS.PutKeyPolicy

gen/Amazonka/KMS/PutKeyPolicy.hs:275:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type PutKeyPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
275 | putKeyPolicy_keyId = Lens.lens (\PutKeyPolicy' {keyId} -> keyId) (\s@PutKeyPolicy' {} a -> s {keyId = a} :: PutKeyPolicy)
    |                                                                                               ^^^^^^^^^
[44 of 88] Compiling Amazonka.KMS.ListRetirableGrants

gen/Amazonka/KMS/ListRetirableGrants.hs:187:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {retiringPrincipal = a} with type ListRetirableGrants is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
187 | listRetirableGrants_retiringPrincipal = Lens.lens (\ListRetirableGrants' {retiringPrincipal} -> retiringPrincipal) (\s@ListRetirableGrants' {} a -> s {retiringPrincipal = a} :: ListRetirableGrants)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^
[45 of 88] Compiling Amazonka.KMS.ListResourceTags

gen/Amazonka/KMS/ListResourceTags.hs:190:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type ListResourceTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
190 | listResourceTags_keyId = Lens.lens (\ListResourceTags' {keyId} -> keyId) (\s@ListResourceTags' {} a -> s {keyId = a} :: ListResourceTags)
    |                                                                                                           ^^^^^^^^^

gen/Amazonka/KMS/ListResourceTags.hs:342:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextMarker = a} with type ListResourceTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
342 | listResourceTagsResponse_nextMarker = Lens.lens (\ListResourceTagsResponse' {nextMarker} -> nextMarker) (\s@ListResourceTagsResponse' {} a -> s {nextMarker = a} :: ListResourceTagsResponse)
    |                                                                                                                                                  ^^^^^^^^^^^^^^

gen/Amazonka/KMS/ListResourceTags.hs:358:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {truncated = a} with type ListResourceTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
358 | listResourceTagsResponse_truncated = Lens.lens (\ListResourceTagsResponse' {truncated} -> truncated) (\s@ListResourceTagsResponse' {} a -> s {truncated = a} :: ListResourceTagsResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^
[46 of 88] Compiling Amazonka.KMS.ListKeys

gen/Amazonka/KMS/ListKeys.hs:259:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextMarker = a} with type ListKeysResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
259 | listKeysResponse_nextMarker = Lens.lens (\ListKeysResponse' {nextMarker} -> nextMarker) (\s@ListKeysResponse' {} a -> s {nextMarker = a} :: ListKeysResponse)
    |                                                                                                                          ^^^^^^^^^^^^^^

gen/Amazonka/KMS/ListKeys.hs:266:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {truncated = a} with type ListKeysResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
266 | listKeysResponse_truncated = Lens.lens (\ListKeysResponse' {truncated} -> truncated) (\s@ListKeysResponse' {} a -> s {truncated = a} :: ListKeysResponse)
    |                                                                                                                       ^^^^^^^^^^^^^
[47 of 88] Compiling Amazonka.KMS.ListKeyPolicies

gen/Amazonka/KMS/ListKeyPolicies.hs:180:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type ListKeyPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
180 | listKeyPolicies_keyId = Lens.lens (\ListKeyPolicies' {keyId} -> keyId) (\s@ListKeyPolicies' {} a -> s {keyId = a} :: ListKeyPolicies)
    |                                                                                                        ^^^^^^^^^

gen/Amazonka/KMS/ListKeyPolicies.hs:316:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextMarker = a} with type ListKeyPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
316 | listKeyPoliciesResponse_nextMarker = Lens.lens (\ListKeyPoliciesResponse' {nextMarker} -> nextMarker) (\s@ListKeyPoliciesResponse' {} a -> s {nextMarker = a} :: ListKeyPoliciesResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^^

gen/Amazonka/KMS/ListKeyPolicies.hs:327:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {truncated = a} with type ListKeyPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
327 | listKeyPoliciesResponse_truncated = Lens.lens (\ListKeyPoliciesResponse' {truncated} -> truncated) (\s@ListKeyPoliciesResponse' {} a -> s {truncated = a} :: ListKeyPoliciesResponse)
    |                                                                                                                                            ^^^^^^^^^^^^^
[48 of 88] Compiling Amazonka.KMS.ListGrants

gen/Amazonka/KMS/ListGrants.hs:185:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {grantId = a} with type ListGrants is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
185 | listGrants_grantId = Lens.lens (\ListGrants' {grantId} -> grantId) (\s@ListGrants' {} a -> s {grantId = a} :: ListGrants)
    |                                                                                               ^^^^^^^^^^^

gen/Amazonka/KMS/ListGrants.hs:190:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {granteePrincipal = a} with type ListGrants is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
190 | listGrants_granteePrincipal = Lens.lens (\ListGrants' {granteePrincipal} -> granteePrincipal) (\s@ListGrants' {} a -> s {granteePrincipal = a} :: ListGrants)
    |                                                                                                                          ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/ListGrants.hs:223:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type ListGrants is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
223 | listGrants_keyId = Lens.lens (\ListGrants' {keyId} -> keyId) (\s@ListGrants' {} a -> s {keyId = a} :: ListGrants)
    |                                                                                         ^^^^^^^^^
[49 of 88] Compiling Amazonka.KMS.ListAliases

gen/Amazonka/KMS/ListAliases.hs:191:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type ListAliases is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
191 | listAliases_keyId = Lens.lens (\ListAliases' {keyId} -> keyId) (\s@ListAliases' {} a -> s {keyId = a} :: ListAliases)
    |                                                                                            ^^^^^^^^^

gen/Amazonka/KMS/ListAliases.hs:341:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextMarker = a} with type ListAliasesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
341 | listAliasesResponse_nextMarker = Lens.lens (\ListAliasesResponse' {nextMarker} -> nextMarker) (\s@ListAliasesResponse' {} a -> s {nextMarker = a} :: ListAliasesResponse)
    |                                                                                                                                   ^^^^^^^^^^^^^^

gen/Amazonka/KMS/ListAliases.hs:348:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {truncated = a} with type ListAliasesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
348 | listAliasesResponse_truncated = Lens.lens (\ListAliasesResponse' {truncated} -> truncated) (\s@ListAliasesResponse' {} a -> s {truncated = a} :: ListAliasesResponse)
    |                                                                                                                                ^^^^^^^^^^^^^
[50 of 88] Compiling Amazonka.KMS.ImportKeyMaterial

gen/Amazonka/KMS/ImportKeyMaterial.hs:287:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {expirationModel = a} with type ImportKeyMaterial is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
287 | importKeyMaterial_expirationModel = Lens.lens (\ImportKeyMaterial' {expirationModel} -> expirationModel) (\s@ImportKeyMaterial' {} a -> s {expirationModel = a} :: ImportKeyMaterial)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/ImportKeyMaterial.hs:305:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {validTo = a} with type ImportKeyMaterial is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
305 | importKeyMaterial_validTo = Lens.lens (\ImportKeyMaterial' {validTo} -> validTo) (\s@ImportKeyMaterial' {} a -> s {validTo = a} :: ImportKeyMaterial) Prelude.. Lens.mapping Data._Time
    |                                                                                                                    ^^^^^^^^^^^

gen/Amazonka/KMS/ImportKeyMaterial.hs:327:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type ImportKeyMaterial is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
327 | importKeyMaterial_keyId = Lens.lens (\ImportKeyMaterial' {keyId} -> keyId) (\s@ImportKeyMaterial' {} a -> s {keyId = a} :: ImportKeyMaterial)
    |                                                                                                              ^^^^^^^^^
[51 of 88] Compiling Amazonka.KMS.GetPublicKey

gen/Amazonka/KMS/GetPublicKey.hs:235:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GetPublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
235 | getPublicKey_keyId = Lens.lens (\GetPublicKey' {keyId} -> keyId) (\s@GetPublicKey' {} a -> s {keyId = a} :: GetPublicKey)
    |                                                                                               ^^^^^^^^^

gen/Amazonka/KMS/GetPublicKey.hs:423:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customerMasterKeySpec = a} with type GetPublicKeyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
423 | getPublicKeyResponse_customerMasterKeySpec = Lens.lens (\GetPublicKeyResponse' {customerMasterKeySpec} -> customerMasterKeySpec) (\s@GetPublicKeyResponse' {} a -> s {customerMasterKeySpec = a} :: GetPublicKeyResponse)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/GetPublicKey.hs:434:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encryptionAlgorithms = a} with type GetPublicKeyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
434 | getPublicKeyResponse_encryptionAlgorithms = Lens.lens (\GetPublicKeyResponse' {encryptionAlgorithms} -> encryptionAlgorithms) (\s@GetPublicKeyResponse' {} a -> s {encryptionAlgorithms = a} :: GetPublicKeyResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/GetPublicKey.hs:440:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GetPublicKeyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
440 | getPublicKeyResponse_keyId = Lens.lens (\GetPublicKeyResponse' {keyId} -> keyId) (\s@GetPublicKeyResponse' {} a -> s {keyId = a} :: GetPublicKeyResponse)
    |                                                                                                                       ^^^^^^^^^

gen/Amazonka/KMS/GetPublicKey.hs:444:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keySpec = a} with type GetPublicKeyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
444 | getPublicKeyResponse_keySpec = Lens.lens (\GetPublicKeyResponse' {keySpec} -> keySpec) (\s@GetPublicKeyResponse' {} a -> s {keySpec = a} :: GetPublicKeyResponse)
    |                                                                                                                             ^^^^^^^^^^^

gen/Amazonka/KMS/GetPublicKey.hs:452:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyUsage = a} with type GetPublicKeyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
452 | getPublicKeyResponse_keyUsage = Lens.lens (\GetPublicKeyResponse' {keyUsage} -> keyUsage) (\s@GetPublicKeyResponse' {} a -> s {keyUsage = a} :: GetPublicKeyResponse)
    |                                                                                                                                ^^^^^^^^^^^^

gen/Amazonka/KMS/GetPublicKey.hs:473:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {signingAlgorithms = a} with type GetPublicKeyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
473 | getPublicKeyResponse_signingAlgorithms = Lens.lens (\GetPublicKeyResponse' {signingAlgorithms} -> signingAlgorithms) (\s@GetPublicKeyResponse' {} a -> s {signingAlgorithms = a} :: GetPublicKeyResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^
[52 of 88] Compiling Amazonka.KMS.GetParametersForImport

gen/Amazonka/KMS/GetParametersForImport.hs:186:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GetParametersForImport is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
186 | getParametersForImport_keyId = Lens.lens (\GetParametersForImport' {keyId} -> keyId) (\s@GetParametersForImport' {} a -> s {keyId = a} :: GetParametersForImport)
    |                                                                                                                             ^^^^^^^^^

gen/Amazonka/KMS/GetParametersForImport.hs:344:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GetParametersForImportResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
344 | getParametersForImportResponse_keyId = Lens.lens (\GetParametersForImportResponse' {keyId} -> keyId) (\s@GetParametersForImportResponse' {} a -> s {keyId = a} :: GetParametersForImportResponse)
    |                                                                                                                                                     ^^^^^^^^^
[53 of 88] Compiling Amazonka.KMS.GetKeyRotationStatus

gen/Amazonka/KMS/GetKeyRotationStatus.hs:181:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GetKeyRotationStatus is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
181 | getKeyRotationStatus_keyId = Lens.lens (\GetKeyRotationStatus' {keyId} -> keyId) (\s@GetKeyRotationStatus' {} a -> s {keyId = a} :: GetKeyRotationStatus)
    |                                                                                                                       ^^^^^^^^^
[54 of 88] Compiling Amazonka.KMS.GetKeyPolicy

gen/Amazonka/KMS/GetKeyPolicy.hs:132:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GetKeyPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | getKeyPolicy_keyId = Lens.lens (\GetKeyPolicy' {keyId} -> keyId) (\s@GetKeyPolicy' {} a -> s {keyId = a} :: GetKeyPolicy)
    |                                                                                               ^^^^^^^^^
[55 of 88] Compiling Amazonka.KMS.GenerateRandom

gen/Amazonka/KMS/GenerateRandom.hs:123:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customKeyStoreId = a} with type GenerateRandom is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | generateRandom_customKeyStoreId = Lens.lens (\GenerateRandom' {customKeyStoreId} -> customKeyStoreId) (\s@GenerateRandom' {} a -> s {customKeyStoreId = a} :: GenerateRandom)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^
[56 of 88] Compiling Amazonka.KMS.GenerateMac

gen/Amazonka/KMS/GenerateMac.hs:217:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GenerateMac is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
217 | generateMac_keyId = Lens.lens (\GenerateMac' {keyId} -> keyId) (\s@GenerateMac' {} a -> s {keyId = a} :: GenerateMac)
    |                                                                                            ^^^^^^^^^

gen/Amazonka/KMS/GenerateMac.hs:226:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {macAlgorithm = a} with type GenerateMac is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
226 | generateMac_macAlgorithm = Lens.lens (\GenerateMac' {macAlgorithm} -> macAlgorithm) (\s@GenerateMac' {} a -> s {macAlgorithm = a} :: GenerateMac)
    |                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/GenerateMac.hs:341:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GenerateMacResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
341 | generateMacResponse_keyId = Lens.lens (\GenerateMacResponse' {keyId} -> keyId) (\s@GenerateMacResponse' {} a -> s {keyId = a} :: GenerateMacResponse)
    |                                                                                                                    ^^^^^^^^^

gen/Amazonka/KMS/GenerateMac.hs:357:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {macAlgorithm = a} with type GenerateMacResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
357 | generateMacResponse_macAlgorithm = Lens.lens (\GenerateMacResponse' {macAlgorithm} -> macAlgorithm) (\s@GenerateMacResponse' {} a -> s {macAlgorithm = a} :: GenerateMacResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^
[57 of 88] Compiling Amazonka.KMS.GenerateDataKeyWithoutPlaintext

gen/Amazonka/KMS/GenerateDataKeyWithoutPlaintext.hs:301:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keySpec = a} with type GenerateDataKeyWithoutPlaintext is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
301 | generateDataKeyWithoutPlaintext_keySpec = Lens.lens (\GenerateDataKeyWithoutPlaintext' {keySpec} -> keySpec) (\s@GenerateDataKeyWithoutPlaintext' {} a -> s {keySpec = a} :: GenerateDataKeyWithoutPlaintext)
    |                                                                                                                                                              ^^^^^^^^^^^

gen/Amazonka/KMS/GenerateDataKeyWithoutPlaintext.hs:334:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GenerateDataKeyWithoutPlaintext is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
334 | generateDataKeyWithoutPlaintext_keyId = Lens.lens (\GenerateDataKeyWithoutPlaintext' {keyId} -> keyId) (\s@GenerateDataKeyWithoutPlaintext' {} a -> s {keyId = a} :: GenerateDataKeyWithoutPlaintext)
    |                                                                                                                                                        ^^^^^^^^^

gen/Amazonka/KMS/GenerateDataKeyWithoutPlaintext.hs:479:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GenerateDataKeyWithoutPlaintextResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
479 | generateDataKeyWithoutPlaintextResponse_keyId = Lens.lens (\GenerateDataKeyWithoutPlaintextResponse' {keyId} -> keyId) (\s@GenerateDataKeyWithoutPlaintextResponse' {} a -> s {keyId = a} :: GenerateDataKeyWithoutPlaintextResponse)
    |                                                                                                                                                                                ^^^^^^^^^
[58 of 88] Compiling Amazonka.KMS.GenerateDataKeyPairWithoutPlaintext

gen/Amazonka/KMS/GenerateDataKeyPairWithoutPlaintext.hs:315:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GenerateDataKeyPairWithoutPlaintext is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
315 | generateDataKeyPairWithoutPlaintext_keyId = Lens.lens (\GenerateDataKeyPairWithoutPlaintext' {keyId} -> keyId) (\s@GenerateDataKeyPairWithoutPlaintext' {} a -> s {keyId = a} :: GenerateDataKeyPairWithoutPlaintext)
    |                                                                                                                                                                    ^^^^^^^^^

gen/Amazonka/KMS/GenerateDataKeyPairWithoutPlaintext.hs:325:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyPairSpec = a} with type GenerateDataKeyPairWithoutPlaintext is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
325 | generateDataKeyPairWithoutPlaintext_keyPairSpec = Lens.lens (\GenerateDataKeyPairWithoutPlaintext' {keyPairSpec} -> keyPairSpec) (\s@GenerateDataKeyPairWithoutPlaintext' {} a -> s {keyPairSpec = a} :: GenerateDataKeyPairWithoutPlaintext)
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^

gen/Amazonka/KMS/GenerateDataKeyPairWithoutPlaintext.hs:487:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GenerateDataKeyPairWithoutPlaintextResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
487 | generateDataKeyPairWithoutPlaintextResponse_keyId = Lens.lens (\GenerateDataKeyPairWithoutPlaintextResponse' {keyId} -> keyId) (\s@GenerateDataKeyPairWithoutPlaintextResponse' {} a -> s {keyId = a} :: GenerateDataKeyPairWithoutPlaintextResponse)
    |                                                                                                                                                                                            ^^^^^^^^^

gen/Amazonka/KMS/GenerateDataKeyPairWithoutPlaintext.hs:491:206: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyPairSpec = a} with type GenerateDataKeyPairWithoutPlaintextResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
491 | generateDataKeyPairWithoutPlaintextResponse_keyPairSpec = Lens.lens (\GenerateDataKeyPairWithoutPlaintextResponse' {keyPairSpec} -> keyPairSpec) (\s@GenerateDataKeyPairWithoutPlaintextResponse' {} a -> s {keyPairSpec = a} :: GenerateDataKeyPairWithoutPlaintextResponse)
    |                                                                                                                                                                                                              ^^^^^^^^^^^^^^^
[59 of 88] Compiling Amazonka.KMS.GenerateDataKeyPair

gen/Amazonka/KMS/GenerateDataKeyPair.hs:326:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GenerateDataKeyPair is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
326 | generateDataKeyPair_keyId = Lens.lens (\GenerateDataKeyPair' {keyId} -> keyId) (\s@GenerateDataKeyPair' {} a -> s {keyId = a} :: GenerateDataKeyPair)
    |                                                                                                                    ^^^^^^^^^

gen/Amazonka/KMS/GenerateDataKeyPair.hs:336:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyPairSpec = a} with type GenerateDataKeyPair is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
336 | generateDataKeyPair_keyPairSpec = Lens.lens (\GenerateDataKeyPair' {keyPairSpec} -> keyPairSpec) (\s@GenerateDataKeyPair' {} a -> s {keyPairSpec = a} :: GenerateDataKeyPair)
    |                                                                                                                                      ^^^^^^^^^^^^^^^

gen/Amazonka/KMS/GenerateDataKeyPair.hs:487:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GenerateDataKeyPairResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
487 | generateDataKeyPairResponse_keyId = Lens.lens (\GenerateDataKeyPairResponse' {keyId} -> keyId) (\s@GenerateDataKeyPairResponse' {} a -> s {keyId = a} :: GenerateDataKeyPairResponse)
    |                                                                                                                                            ^^^^^^^^^

gen/Amazonka/KMS/GenerateDataKeyPair.hs:491:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyPairSpec = a} with type GenerateDataKeyPairResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
491 | generateDataKeyPairResponse_keyPairSpec = Lens.lens (\GenerateDataKeyPairResponse' {keyPairSpec} -> keyPairSpec) (\s@GenerateDataKeyPairResponse' {} a -> s {keyPairSpec = a} :: GenerateDataKeyPairResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^
[60 of 88] Compiling Amazonka.KMS.GenerateDataKey

gen/Amazonka/KMS/GenerateDataKey.hs:341:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keySpec = a} with type GenerateDataKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
341 | generateDataKey_keySpec = Lens.lens (\GenerateDataKey' {keySpec} -> keySpec) (\s@GenerateDataKey' {} a -> s {keySpec = a} :: GenerateDataKey)
    |                                                                                                              ^^^^^^^^^^^

gen/Amazonka/KMS/GenerateDataKey.hs:377:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GenerateDataKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
377 | generateDataKey_keyId = Lens.lens (\GenerateDataKey' {keyId} -> keyId) (\s@GenerateDataKey' {} a -> s {keyId = a} :: GenerateDataKey)
    |                                                                                                        ^^^^^^^^^

gen/Amazonka/KMS/GenerateDataKey.hs:530:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type GenerateDataKeyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
530 | generateDataKeyResponse_keyId = Lens.lens (\GenerateDataKeyResponse' {keyId} -> keyId) (\s@GenerateDataKeyResponse' {} a -> s {keyId = a} :: GenerateDataKeyResponse)
    |                                                                                                                                ^^^^^^^^^
[61 of 88] Compiling Amazonka.KMS.Encrypt

gen/Amazonka/KMS/Encrypt.hs:311:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encryptionAlgorithm = a} with type Encrypt is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
311 | encrypt_encryptionAlgorithm = Lens.lens (\Encrypt' {encryptionAlgorithm} -> encryptionAlgorithm) (\s@Encrypt' {} a -> s {encryptionAlgorithm = a} :: Encrypt)
    |                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/Encrypt.hs:369:80: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type Encrypt is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
369 | encrypt_keyId = Lens.lens (\Encrypt' {keyId} -> keyId) (\s@Encrypt' {} a -> s {keyId = a} :: Encrypt)
    |                                                                                ^^^^^^^^^

gen/Amazonka/KMS/Encrypt.hs:507:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encryptionAlgorithm = a} with type EncryptResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
507 | encryptResponse_encryptionAlgorithm = Lens.lens (\EncryptResponse' {encryptionAlgorithm} -> encryptionAlgorithm) (\s@EncryptResponse' {} a -> s {encryptionAlgorithm = a} :: EncryptResponse)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/Encrypt.hs:513:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type EncryptResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
513 | encryptResponse_keyId = Lens.lens (\EncryptResponse' {keyId} -> keyId) (\s@EncryptResponse' {} a -> s {keyId = a} :: EncryptResponse)
    |                                                                                                        ^^^^^^^^^
[62 of 88] Compiling Amazonka.KMS.EnableKeyRotation

gen/Amazonka/KMS/EnableKeyRotation.hs:195:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type EnableKeyRotation is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
195 | enableKeyRotation_keyId = Lens.lens (\EnableKeyRotation' {keyId} -> keyId) (\s@EnableKeyRotation' {} a -> s {keyId = a} :: EnableKeyRotation)
    |                                                                                                              ^^^^^^^^^
[63 of 88] Compiling Amazonka.KMS.EnableKey

gen/Amazonka/KMS/EnableKey.hs:122:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type EnableKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
122 | enableKey_keyId = Lens.lens (\EnableKey' {keyId} -> keyId) (\s@EnableKey' {} a -> s {keyId = a} :: EnableKey)
    |                                                                                      ^^^^^^^^^
[64 of 88] Compiling Amazonka.KMS.DisconnectCustomKeyStore

gen/Amazonka/KMS/DisconnectCustomKeyStore.hs:127:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customKeyStoreId = a} with type DisconnectCustomKeyStore is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | disconnectCustomKeyStore_customKeyStoreId = Lens.lens (\DisconnectCustomKeyStore' {customKeyStoreId} -> customKeyStoreId) (\s@DisconnectCustomKeyStore' {} a -> s {customKeyStoreId = a} :: DisconnectCustomKeyStore)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^
[65 of 88] Compiling Amazonka.KMS.DisableKeyRotation

gen/Amazonka/KMS/DisableKeyRotation.hs:174:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type DisableKeyRotation is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
174 | disableKeyRotation_keyId = Lens.lens (\DisableKeyRotation' {keyId} -> keyId) (\s@DisableKeyRotation' {} a -> s {keyId = a} :: DisableKeyRotation)
    |                                                                                                                 ^^^^^^^^^
[66 of 88] Compiling Amazonka.KMS.DisableKey

gen/Amazonka/KMS/DisableKey.hs:127:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type DisableKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | disableKey_keyId = Lens.lens (\DisableKey' {keyId} -> keyId) (\s@DisableKey' {} a -> s {keyId = a} :: DisableKey)
    |                                                                                         ^^^^^^^^^
[67 of 88] Compiling Amazonka.KMS.DescribeKey

gen/Amazonka/KMS/DescribeKey.hs:250:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type DescribeKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
250 | describeKey_keyId = Lens.lens (\DescribeKey' {keyId} -> keyId) (\s@DescribeKey' {} a -> s {keyId = a} :: DescribeKey)
    |                                                                                            ^^^^^^^^^
[68 of 88] Compiling Amazonka.KMS.DescribeCustomKeyStores

gen/Amazonka/KMS/DescribeCustomKeyStores.hs:192:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customKeyStoreId = a} with type DescribeCustomKeyStores is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
192 | describeCustomKeyStores_customKeyStoreId = Lens.lens (\DescribeCustomKeyStores' {customKeyStoreId} -> customKeyStoreId) (\s@DescribeCustomKeyStores' {} a -> s {customKeyStoreId = a} :: DescribeCustomKeyStores)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/DescribeCustomKeyStores.hs:202:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customKeyStoreName = a} with type DescribeCustomKeyStores is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
202 | describeCustomKeyStores_customKeyStoreName = Lens.lens (\DescribeCustomKeyStores' {customKeyStoreName} -> customKeyStoreName) (\s@DescribeCustomKeyStores' {} a -> s {customKeyStoreName = a} :: DescribeCustomKeyStores)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/DescribeCustomKeyStores.hs:362:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextMarker = a} with type DescribeCustomKeyStoresResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
362 | describeCustomKeyStoresResponse_nextMarker = Lens.lens (\DescribeCustomKeyStoresResponse' {nextMarker} -> nextMarker) (\s@DescribeCustomKeyStoresResponse' {} a -> s {nextMarker = a} :: DescribeCustomKeyStoresResponse)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^

gen/Amazonka/KMS/DescribeCustomKeyStores.hs:369:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {truncated = a} with type DescribeCustomKeyStoresResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
369 | describeCustomKeyStoresResponse_truncated = Lens.lens (\DescribeCustomKeyStoresResponse' {truncated} -> truncated) (\s@DescribeCustomKeyStoresResponse' {} a -> s {truncated = a} :: DescribeCustomKeyStoresResponse)
    |                                                                                                                                                                    ^^^^^^^^^^^^^
[69 of 88] Compiling Amazonka.KMS.DeleteImportedKeyMaterial

gen/Amazonka/KMS/DeleteImportedKeyMaterial.hs:139:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type DeleteImportedKeyMaterial is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | deleteImportedKeyMaterial_keyId = Lens.lens (\DeleteImportedKeyMaterial' {keyId} -> keyId) (\s@DeleteImportedKeyMaterial' {} a -> s {keyId = a} :: DeleteImportedKeyMaterial)
    |                                                                                                                                      ^^^^^^^^^
[70 of 88] Compiling Amazonka.KMS.DeleteCustomKeyStore

gen/Amazonka/KMS/DeleteCustomKeyStore.hs:139:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customKeyStoreId = a} with type DeleteCustomKeyStore is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | deleteCustomKeyStore_customKeyStoreId = Lens.lens (\DeleteCustomKeyStore' {customKeyStoreId} -> customKeyStoreId) (\s@DeleteCustomKeyStore' {} a -> s {customKeyStoreId = a} :: DeleteCustomKeyStore)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^
[71 of 88] Compiling Amazonka.KMS.DeleteAlias

gen/Amazonka/KMS/DeleteAlias.hs:112:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {aliasName = a} with type DeleteAlias is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | deleteAlias_aliasName = Lens.lens (\DeleteAlias' {aliasName} -> aliasName) (\s@DeleteAlias' {} a -> s {aliasName = a} :: DeleteAlias)
    |                                                                                                        ^^^^^^^^^^^^^
[72 of 88] Compiling Amazonka.KMS.Decrypt

gen/Amazonka/KMS/Decrypt.hs:322:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encryptionAlgorithm = a} with type Decrypt is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
322 | decrypt_encryptionAlgorithm = Lens.lens (\Decrypt' {encryptionAlgorithm} -> encryptionAlgorithm) (\s@Decrypt' {} a -> s {encryptionAlgorithm = a} :: Decrypt)
    |                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/Decrypt.hs:388:80: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type Decrypt is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
388 | decrypt_keyId = Lens.lens (\Decrypt' {keyId} -> keyId) (\s@Decrypt' {} a -> s {keyId = a} :: Decrypt)
    |                                                                                ^^^^^^^^^

gen/Amazonka/KMS/Decrypt.hs:518:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {encryptionAlgorithm = a} with type DecryptResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
518 | decryptResponse_encryptionAlgorithm = Lens.lens (\DecryptResponse' {encryptionAlgorithm} -> encryptionAlgorithm) (\s@DecryptResponse' {} a -> s {encryptionAlgorithm = a} :: DecryptResponse)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/Decrypt.hs:524:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type DecryptResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
524 | decryptResponse_keyId = Lens.lens (\DecryptResponse' {keyId} -> keyId) (\s@DecryptResponse' {} a -> s {keyId = a} :: DecryptResponse)
    |                                                                                                        ^^^^^^^^^
[73 of 88] Compiling Amazonka.KMS.CreateKey

gen/Amazonka/KMS/CreateKey.hs:884:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customKeyStoreId = a} with type CreateKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
884 | createKey_customKeyStoreId = Lens.lens (\CreateKey' {customKeyStoreId} -> customKeyStoreId) (\s@CreateKey' {} a -> s {customKeyStoreId = a} :: CreateKey)
    |                                                                                                                       ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateKey.hs:893:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customerMasterKeySpec = a} with type CreateKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
893 | createKey_customerMasterKeySpec = Lens.lens (\CreateKey' {customerMasterKeySpec} -> customerMasterKeySpec) (\s@CreateKey' {} a -> s {customerMasterKeySpec = a} :: CreateKey)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateKey.hs:904:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {description = a} with type CreateKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
904 | createKey_description = Lens.lens (\CreateKey' {description} -> description) (\s@CreateKey' {} a -> s {description = a} :: CreateKey)
    |                                                                                                        ^^^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateKey.hs:971:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keySpec = a} with type CreateKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
971 | createKey_keySpec = Lens.lens (\CreateKey' {keySpec} -> keySpec) (\s@CreateKey' {} a -> s {keySpec = a} :: CreateKey)
    |                                                                                            ^^^^^^^^^^^

gen/Amazonka/KMS/CreateKey.hs:996:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyUsage = a} with type CreateKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
996 | createKey_keyUsage = Lens.lens (\CreateKey' {keyUsage} -> keyUsage) (\s@CreateKey' {} a -> s {keyUsage = a} :: CreateKey)
    |                                                                                               ^^^^^^^^^^^^

gen/Amazonka/KMS/CreateKey.hs:1024:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {multiRegion = a} with type CreateKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1024 | createKey_multiRegion = Lens.lens (\CreateKey' {multiRegion} -> multiRegion) (\s@CreateKey' {} a -> s {multiRegion = a} :: CreateKey)
     |                                                                                                        ^^^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateKey.hs:1052:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {origin = a} with type CreateKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
     |
1052 | createKey_origin = Lens.lens (\CreateKey' {origin} -> origin) (\s@CreateKey' {} a -> s {origin = a} :: CreateKey)
     |                                                                                         ^^^^^^^^^^
[74 of 88] Compiling Amazonka.KMS.CreateGrant

gen/Amazonka/KMS/CreateGrant.hs:400:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {constraints = a} with type CreateGrant is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
400 | createGrant_constraints = Lens.lens (\CreateGrant' {constraints} -> constraints) (\s@CreateGrant' {} a -> s {constraints = a} :: CreateGrant)
    |                                                                                                              ^^^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateGrant.hs:429:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type CreateGrant is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
429 | createGrant_name = Lens.lens (\CreateGrant' {name} -> name) (\s@CreateGrant' {} a -> s {name = a} :: CreateGrant)
    |                                                                                         ^^^^^^^^

gen/Amazonka/KMS/CreateGrant.hs:450:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {retiringPrincipal = a} with type CreateGrant is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
450 | createGrant_retiringPrincipal = Lens.lens (\CreateGrant' {retiringPrincipal} -> retiringPrincipal) (\s@CreateGrant' {} a -> s {retiringPrincipal = a} :: CreateGrant)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateGrant.hs:468:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type CreateGrant is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
468 | createGrant_keyId = Lens.lens (\CreateGrant' {keyId} -> keyId) (\s@CreateGrant' {} a -> s {keyId = a} :: CreateGrant)
    |                                                                                            ^^^^^^^^^

gen/Amazonka/KMS/CreateGrant.hs:482:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {granteePrincipal = a} with type CreateGrant is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
482 | createGrant_granteePrincipal = Lens.lens (\CreateGrant' {granteePrincipal} -> granteePrincipal) (\s@CreateGrant' {} a -> s {granteePrincipal = a} :: CreateGrant)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateGrant.hs:495:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {operations = a} with type CreateGrant is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
495 | createGrant_operations = Lens.lens (\CreateGrant' {operations} -> operations) (\s@CreateGrant' {} a -> s {operations = a} :: CreateGrant) Prelude.. Lens.coerced
    |                                                                                                           ^^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateGrant.hs:628:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {grantId = a} with type CreateGrantResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
628 | createGrantResponse_grantId = Lens.lens (\CreateGrantResponse' {grantId} -> grantId) (\s@CreateGrantResponse' {} a -> s {grantId = a} :: CreateGrantResponse)
    |                                                                                                                          ^^^^^^^^^^^
[75 of 88] Compiling Amazonka.KMS.CreateCustomKeyStore

gen/Amazonka/KMS/CreateCustomKeyStore.hs:502:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cloudHsmClusterId = a} with type CreateCustomKeyStore is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
502 | createCustomKeyStore_cloudHsmClusterId = Lens.lens (\CreateCustomKeyStore' {cloudHsmClusterId} -> cloudHsmClusterId) (\s@CreateCustomKeyStore' {} a -> s {cloudHsmClusterId = a} :: CreateCustomKeyStore)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateCustomKeyStore.hs:512:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customKeyStoreType = a} with type CreateCustomKeyStore is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
512 | createCustomKeyStore_customKeyStoreType = Lens.lens (\CreateCustomKeyStore' {customKeyStoreType} -> customKeyStoreType) (\s@CreateCustomKeyStore' {} a -> s {customKeyStoreType = a} :: CreateCustomKeyStore)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateCustomKeyStore.hs:540:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trustAnchorCertificate = a} with type CreateCustomKeyStore is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
540 | createCustomKeyStore_trustAnchorCertificate = Lens.lens (\CreateCustomKeyStore' {trustAnchorCertificate} -> trustAnchorCertificate) (\s@CreateCustomKeyStore' {} a -> s {trustAnchorCertificate = a} :: CreateCustomKeyStore)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateCustomKeyStore.hs:667:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customKeyStoreName = a} with type CreateCustomKeyStore is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
667 | createCustomKeyStore_customKeyStoreName = Lens.lens (\CreateCustomKeyStore' {customKeyStoreName} -> customKeyStoreName) (\s@CreateCustomKeyStore' {} a -> s {customKeyStoreName = a} :: CreateCustomKeyStore)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateCustomKeyStore.hs:791:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customKeyStoreId = a} with type CreateCustomKeyStoreResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
791 | createCustomKeyStoreResponse_customKeyStoreId = Lens.lens (\CreateCustomKeyStoreResponse' {customKeyStoreId} -> customKeyStoreId) (\s@CreateCustomKeyStoreResponse' {} a -> s {customKeyStoreId = a} :: CreateCustomKeyStoreResponse)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^
[76 of 88] Compiling Amazonka.KMS.CreateAlias

gen/Amazonka/KMS/CreateAlias.hs:199:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {aliasName = a} with type CreateAlias is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
199 | createAlias_aliasName = Lens.lens (\CreateAlias' {aliasName} -> aliasName) (\s@CreateAlias' {} a -> s {aliasName = a} :: CreateAlias)
    |                                                                                                        ^^^^^^^^^^^^^

gen/Amazonka/KMS/CreateAlias.hs:224:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {targetKeyId = a} with type CreateAlias is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
224 | createAlias_targetKeyId = Lens.lens (\CreateAlias' {targetKeyId} -> targetKeyId) (\s@CreateAlias' {} a -> s {targetKeyId = a} :: CreateAlias)
    |                                                                                                              ^^^^^^^^^^^^^^^
[77 of 88] Compiling Amazonka.KMS.ConnectCustomKeyStore

gen/Amazonka/KMS/ConnectCustomKeyStore.hs:182:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customKeyStoreId = a} with type ConnectCustomKeyStore is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
182 | connectCustomKeyStore_customKeyStoreId = Lens.lens (\ConnectCustomKeyStore' {customKeyStoreId} -> customKeyStoreId) (\s@ConnectCustomKeyStore' {} a -> s {customKeyStoreId = a} :: ConnectCustomKeyStore)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^
[78 of 88] Compiling Amazonka.KMS.CancelKeyDeletion

gen/Amazonka/KMS/CancelKeyDeletion.hs:132:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type CancelKeyDeletion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | cancelKeyDeletion_keyId = Lens.lens (\CancelKeyDeletion' {keyId} -> keyId) (\s@CancelKeyDeletion' {} a -> s {keyId = a} :: CancelKeyDeletion)
    |                                                                                                              ^^^^^^^^^

gen/Amazonka/KMS/CancelKeyDeletion.hs:221:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type CancelKeyDeletionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
221 | cancelKeyDeletionResponse_keyId = Lens.lens (\CancelKeyDeletionResponse' {keyId} -> keyId) (\s@CancelKeyDeletionResponse' {} a -> s {keyId = a} :: CancelKeyDeletionResponse)
    |                                                                                                                                      ^^^^^^^^^
[79 of 88] Compiling Amazonka.KMS.UntagResource

gen/Amazonka/KMS/UntagResource.hs:155:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type UntagResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
155 | untagResource_keyId = Lens.lens (\UntagResource' {keyId} -> keyId) (\s@UntagResource' {} a -> s {keyId = a} :: UntagResource)
    |                                                                                                  ^^^^^^^^^
[80 of 88] Compiling Amazonka.KMS.UpdateAlias

gen/Amazonka/KMS/UpdateAlias.hs:193:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {aliasName = a} with type UpdateAlias is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
193 | updateAlias_aliasName = Lens.lens (\UpdateAlias' {aliasName} -> aliasName) (\s@UpdateAlias' {} a -> s {aliasName = a} :: UpdateAlias)
    |                                                                                                        ^^^^^^^^^^^^^

gen/Amazonka/KMS/UpdateAlias.hs:221:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {targetKeyId = a} with type UpdateAlias is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
221 | updateAlias_targetKeyId = Lens.lens (\UpdateAlias' {targetKeyId} -> targetKeyId) (\s@UpdateAlias' {} a -> s {targetKeyId = a} :: UpdateAlias)
    |                                                                                                              ^^^^^^^^^^^^^^^
[81 of 88] Compiling Amazonka.KMS.UpdateCustomKeyStore

gen/Amazonka/KMS/UpdateCustomKeyStore.hs:414:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cloudHsmClusterId = a} with type UpdateCustomKeyStore is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
414 | updateCustomKeyStore_cloudHsmClusterId = Lens.lens (\UpdateCustomKeyStore' {cloudHsmClusterId} -> cloudHsmClusterId) (\s@UpdateCustomKeyStore' {} a -> s {cloudHsmClusterId = a} :: UpdateCustomKeyStore)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/UpdateCustomKeyStore.hs:523:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customKeyStoreId = a} with type UpdateCustomKeyStore is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
523 | updateCustomKeyStore_customKeyStoreId = Lens.lens (\UpdateCustomKeyStore' {customKeyStoreId} -> customKeyStoreId) (\s@UpdateCustomKeyStore' {} a -> s {customKeyStoreId = a} :: UpdateCustomKeyStore)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^
[82 of 88] Compiling Amazonka.KMS.UpdateKeyDescription

gen/Amazonka/KMS/UpdateKeyDescription.hs:136:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type UpdateKeyDescription is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
136 | updateKeyDescription_keyId = Lens.lens (\UpdateKeyDescription' {keyId} -> keyId) (\s@UpdateKeyDescription' {} a -> s {keyId = a} :: UpdateKeyDescription)
    |                                                                                                                       ^^^^^^^^^

gen/Amazonka/KMS/UpdateKeyDescription.hs:140:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {description = a} with type UpdateKeyDescription is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
140 | updateKeyDescription_description = Lens.lens (\UpdateKeyDescription' {description} -> description) (\s@UpdateKeyDescription' {} a -> s {description = a} :: UpdateKeyDescription)
    |                                                                                                                                         ^^^^^^^^^^^^^^^
[83 of 88] Compiling Amazonka.KMS.UpdatePrimaryRegion

gen/Amazonka/KMS/UpdatePrimaryRegion.hs:207:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type UpdatePrimaryRegion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
207 | updatePrimaryRegion_keyId = Lens.lens (\UpdatePrimaryRegion' {keyId} -> keyId) (\s@UpdatePrimaryRegion' {} a -> s {keyId = a} :: UpdatePrimaryRegion)
    |                                                                                                                    ^^^^^^^^^
[84 of 88] Compiling Amazonka.KMS.Verify

gen/Amazonka/KMS/Verify.hs:308:77: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type Verify is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
308 | verify_keyId = Lens.lens (\Verify' {keyId} -> keyId) (\s@Verify' {} a -> s {keyId = a} :: Verify)
    |                                                                             ^^^^^^^^^

gen/Amazonka/KMS/Verify.hs:335:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {signingAlgorithm = a} with type Verify is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
335 | verify_signingAlgorithm = Lens.lens (\Verify' {signingAlgorithm} -> signingAlgorithm) (\s@Verify' {} a -> s {signingAlgorithm = a} :: Verify)
    |                                                                                                              ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/Verify.hs:459:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type VerifyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
459 | verifyResponse_keyId = Lens.lens (\VerifyResponse' {keyId} -> keyId) (\s@VerifyResponse' {} a -> s {keyId = a} :: VerifyResponse)
    |                                                                                                     ^^^^^^^^^

gen/Amazonka/KMS/Verify.hs:471:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {signingAlgorithm = a} with type VerifyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
471 | verifyResponse_signingAlgorithm = Lens.lens (\VerifyResponse' {signingAlgorithm} -> signingAlgorithm) (\s@VerifyResponse' {} a -> s {signingAlgorithm = a} :: VerifyResponse)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^
[85 of 88] Compiling Amazonka.KMS.VerifyMac

gen/Amazonka/KMS/VerifyMac.hs:219:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type VerifyMac is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
219 | verifyMac_keyId = Lens.lens (\VerifyMac' {keyId} -> keyId) (\s@VerifyMac' {} a -> s {keyId = a} :: VerifyMac)
    |                                                                                      ^^^^^^^^^

gen/Amazonka/KMS/VerifyMac.hs:225:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {macAlgorithm = a} with type VerifyMac is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
225 | verifyMac_macAlgorithm = Lens.lens (\VerifyMac' {macAlgorithm} -> macAlgorithm) (\s@VerifyMac' {} a -> s {macAlgorithm = a} :: VerifyMac)
    |                                                                                                           ^^^^^^^^^^^^^^^^

gen/Amazonka/KMS/VerifyMac.hs:353:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyId = a} with type VerifyMacResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
353 | verifyMacResponse_keyId = Lens.lens (\VerifyMacResponse' {keyId} -> keyId) (\s@VerifyMacResponse' {} a -> s {keyId = a} :: VerifyMacResponse)
    |                                                                                                              ^^^^^^^^^

gen/Amazonka/KMS/VerifyMac.hs:357:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {macAlgorithm = a} with type VerifyMacResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
357 | verifyMacResponse_macAlgorithm = Lens.lens (\VerifyMacResponse' {macAlgorithm} -> macAlgorithm) (\s@VerifyMacResponse' {} a -> s {macAlgorithm = a} :: VerifyMacResponse)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^
[86 of 88] Compiling Amazonka.KMS.Lens
[87 of 88] Compiling Amazonka.KMS.Waiters
[88 of 88] Compiling Amazonka.KMS
Configuring test suite 'amazonka-kms-test' for amazonka-kms-2.0...
Preprocessing test suite 'amazonka-kms-test' for amazonka-kms-2.0...
Building test suite 'amazonka-kms-test' for amazonka-kms-2.0...
[1 of 4] Compiling Test.Amazonka.KMS
[2 of 4] Compiling Test.Amazonka.KMS.Internal
[3 of 4] Compiling Test.Amazonka.Gen.KMS
[4 of 4] Compiling Main
[5 of 5] Linking /tmp/workdir-amazonka-kms/amazonka-kms-2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/amazonka-kms-2.0/t/amazonka-kms-test/build/amazonka-kms-test/amazonka-kms-test
