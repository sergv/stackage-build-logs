Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - amazonka-iam-2.0 (lib) (first run)
 - amazonka-iam-2.0 (test:amazonka-iam-test) (first run)
Configuring library for amazonka-iam-2.0...
Preprocessing library for amazonka-iam-2.0...
Building library for amazonka-iam-2.0...
[  1 of 235] Compiling Amazonka.IAM.Types.AccessAdvisorUsageGranularityType
[  2 of 235] Compiling Amazonka.IAM.Types.AccessDetail
[  3 of 235] Compiling Amazonka.IAM.Types.AccessKeyLastUsed
[  4 of 235] Compiling Amazonka.IAM.Types.AssignmentStatusType
[  5 of 235] Compiling Amazonka.IAM.Types.AttachedPolicy
[  6 of 235] Compiling Amazonka.IAM.Types.ContextKeyTypeEnum
[  7 of 235] Compiling Amazonka.IAM.Types.ContextEntry
[  8 of 235] Compiling Amazonka.IAM.Types.DeletionTaskStatusType
[  9 of 235] Compiling Amazonka.IAM.Types.EncodingType
[ 10 of 235] Compiling Amazonka.IAM.Types.EntityType
[ 11 of 235] Compiling Amazonka.IAM.Types.ErrorDetails
[ 12 of 235] Compiling Amazonka.IAM.Types.GetContextKeysForPolicyResponse
[ 13 of 235] Compiling Amazonka.IAM.Types.GlobalEndpointTokenVersion
[ 14 of 235] Compiling Amazonka.IAM.Types.Group
[ 15 of 235] Compiling Amazonka.IAM.Types.JobStatusType
[ 16 of 235] Compiling Amazonka.IAM.Types.LoginProfile
[ 17 of 235] Compiling Amazonka.IAM.Types.MFADevice
[ 18 of 235] Compiling Amazonka.IAM.Types.OpenIDConnectProviderListEntry
[ 19 of 235] Compiling Amazonka.IAM.Types.OrganizationsDecisionDetail
[ 20 of 235] Compiling Amazonka.IAM.Types.PasswordPolicy
[ 21 of 235] Compiling Amazonka.IAM.Types.PermissionsBoundaryAttachmentType
[ 22 of 235] Compiling Amazonka.IAM.Types.AttachedPermissionsBoundary
[ 23 of 235] Compiling Amazonka.IAM.Types.PermissionsBoundaryDecisionDetail
[ 24 of 235] Compiling Amazonka.IAM.Types.PolicyDetail
[ 25 of 235] Compiling Amazonka.IAM.Types.GroupDetail
[ 26 of 235] Compiling Amazonka.IAM.Types.PolicyEvaluationDecisionType
[ 27 of 235] Compiling Amazonka.IAM.Types.PolicyGroup
[ 28 of 235] Compiling Amazonka.IAM.Types.PolicyOwnerEntityType
[ 29 of 235] Compiling Amazonka.IAM.Types.EntityInfo
[ 30 of 235] Compiling Amazonka.IAM.Types.EntityDetails
[ 31 of 235] Compiling Amazonka.IAM.Types.PolicyRole
[ 32 of 235] Compiling Amazonka.IAM.Types.PolicyScopeType
[ 33 of 235] Compiling Amazonka.IAM.Types.PolicySourceType
[ 34 of 235] Compiling Amazonka.IAM.Types.PolicyType
[ 35 of 235] Compiling Amazonka.IAM.Types.PolicyGrantingServiceAccess
[ 36 of 235] Compiling Amazonka.IAM.Types.ListPoliciesGrantingServiceAccessEntry
[ 37 of 235] Compiling Amazonka.IAM.Types.PolicyUsageType
[ 38 of 235] Compiling Amazonka.IAM.Types.PolicyUser
[ 39 of 235] Compiling Amazonka.IAM.Types.PolicyVersion
[ 40 of 235] Compiling Amazonka.IAM.Types.ManagedPolicyDetail

gen/Amazonka/IAM/Types/ManagedPolicyDetail.hs:187:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {createDate = a} with type ManagedPolicyDetail is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
187 | managedPolicyDetail_createDate = Lens.lens (\ManagedPolicyDetail' {createDate} -> createDate) (\s@ManagedPolicyDetail' {} a -> s {createDate = a} :: ManagedPolicyDetail) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                   ^^^^^^^^^^^^^^
[ 41 of 235] Compiling Amazonka.IAM.Types.Position
[ 42 of 235] Compiling Amazonka.IAM.Types.ReportFormatType
[ 43 of 235] Compiling Amazonka.IAM.Types.ReportStateType
[ 44 of 235] Compiling Amazonka.IAM.Types.RoleLastUsed
[ 45 of 235] Compiling Amazonka.IAM.Types.RoleUsageType
[ 46 of 235] Compiling Amazonka.IAM.Types.DeletionTaskFailureReasonType
[ 47 of 235] Compiling Amazonka.IAM.Types.SAMLProviderListEntry
[ 48 of 235] Compiling Amazonka.IAM.Types.ServerCertificateMetadata
[ 49 of 235] Compiling Amazonka.IAM.Types.SortKeyType
[ 50 of 235] Compiling Amazonka.IAM.Types.Statement
[ 51 of 235] Compiling Amazonka.IAM.Types.ResourceSpecificResult
[ 52 of 235] Compiling Amazonka.IAM.Types.EvaluationResult

gen/Amazonka/IAM/Types/EvaluationResult.hs:191:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {evalDecisionDetails = a} with type EvaluationResult is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
191 | evaluationResult_evalDecisionDetails = Lens.lens (\EvaluationResult' {evalDecisionDetails} -> evalDecisionDetails) (\s@EvaluationResult' {} a -> s {evalDecisionDetails = a} :: EvaluationResult) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/Types/EvaluationResult.hs:195:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {evalResourceName = a} with type EvaluationResult is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
195 | evaluationResult_evalResourceName = Lens.lens (\EvaluationResult' {evalResourceName} -> evalResourceName) (\s@EvaluationResult' {} a -> s {evalResourceName = a} :: EvaluationResult)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/Types/EvaluationResult.hs:203:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {matchedStatements = a} with type EvaluationResult is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
203 | evaluationResult_matchedStatements = Lens.lens (\EvaluationResult' {matchedStatements} -> matchedStatements) (\s@EvaluationResult' {} a -> s {matchedStatements = a} :: EvaluationResult) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/Types/EvaluationResult.hs:214:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {missingContextValues = a} with type EvaluationResult is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
214 | evaluationResult_missingContextValues = Lens.lens (\EvaluationResult' {missingContextValues} -> missingContextValues) (\s@EvaluationResult' {} a -> s {missingContextValues = a} :: EvaluationResult) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/Types/EvaluationResult.hs:225:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {permissionsBoundaryDecisionDetail = a} with type EvaluationResult is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
225 | evaluationResult_permissionsBoundaryDecisionDetail = Lens.lens (\EvaluationResult' {permissionsBoundaryDecisionDetail} -> permissionsBoundaryDecisionDetail) (\s@EvaluationResult' {} a -> s {permissionsBoundaryDecisionDetail = a} :: EvaluationResult)
    |                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 53 of 235] Compiling Amazonka.IAM.Types.SimulatePolicyResponse
[ 54 of 235] Compiling Amazonka.IAM.Types.StatusType
[ 55 of 235] Compiling Amazonka.IAM.Types.SigningCertificate
[ 56 of 235] Compiling Amazonka.IAM.Types.ServiceSpecificCredentialMetadata
[ 57 of 235] Compiling Amazonka.IAM.Types.ServiceSpecificCredential
[ 58 of 235] Compiling Amazonka.IAM.Types.SSHPublicKeyMetadata
[ 59 of 235] Compiling Amazonka.IAM.Types.SSHPublicKey
[ 60 of 235] Compiling Amazonka.IAM.Types.AccessKeyMetadata
[ 61 of 235] Compiling Amazonka.IAM.Types.AccessKeyInfo
[ 62 of 235] Compiling Amazonka.IAM.Types.SummaryKeyType
[ 63 of 235] Compiling Amazonka.IAM.Types.Tag
[ 64 of 235] Compiling Amazonka.IAM.Types.ServerCertificate
[ 65 of 235] Compiling Amazonka.IAM.Types.Role
[ 66 of 235] Compiling Amazonka.IAM.Types.Policy
[ 67 of 235] Compiling Amazonka.IAM.Types.InstanceProfile

gen/Amazonka/IAM/Types/InstanceProfile.hs:137:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type InstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | instanceProfile_tags = Lens.lens (\InstanceProfile' {tags} -> tags) (\s@InstanceProfile' {} a -> s {tags = a} :: InstanceProfile) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                     ^^^^^^^^

gen/Amazonka/IAM/Types/InstanceProfile.hs:143:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {path = a} with type InstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
143 | instanceProfile_path = Lens.lens (\InstanceProfile' {path} -> path) (\s@InstanceProfile' {} a -> s {path = a} :: InstanceProfile)
    |                                                                                                     ^^^^^^^^

gen/Amazonka/IAM/Types/InstanceProfile.hs:161:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {arn = a} with type InstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
161 | instanceProfile_arn = Lens.lens (\InstanceProfile' {arn} -> arn) (\s@InstanceProfile' {} a -> s {arn = a} :: InstanceProfile)
    |                                                                                                  ^^^^^^^

gen/Amazonka/IAM/Types/InstanceProfile.hs:165:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {createDate = a} with type InstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
165 | instanceProfile_createDate = Lens.lens (\InstanceProfile' {createDate} -> createDate) (\s@InstanceProfile' {} a -> s {createDate = a} :: InstanceProfile) Prelude.. Data._Time
    |                                                                                                                       ^^^^^^^^^^^^^^
[ 68 of 235] Compiling Amazonka.IAM.Types.RoleDetail

gen/Amazonka/IAM/Types/RoleDetail.hs:164:83: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {arn = a} with type RoleDetail is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
164 | roleDetail_arn = Lens.lens (\RoleDetail' {arn} -> arn) (\s@RoleDetail' {} a -> s {arn = a} :: RoleDetail)
    |                                                                                   ^^^^^^^

gen/Amazonka/IAM/Types/RoleDetail.hs:179:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {createDate = a} with type RoleDetail is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
179 | roleDetail_createDate = Lens.lens (\RoleDetail' {createDate} -> createDate) (\s@RoleDetail' {} a -> s {createDate = a} :: RoleDetail) Prelude.. Lens.mapping Data._Time
    |                                                                                                        ^^^^^^^^^^^^^^

gen/Amazonka/IAM/Types/RoleDetail.hs:189:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {path = a} with type RoleDetail is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
189 | roleDetail_path = Lens.lens (\RoleDetail' {path} -> path) (\s@RoleDetail' {} a -> s {path = a} :: RoleDetail)
    |                                                                                      ^^^^^^^^

gen/Amazonka/IAM/Types/RoleDetail.hs:231:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type RoleDetail is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
231 | roleDetail_tags = Lens.lens (\RoleDetail' {tags} -> tags) (\s@RoleDetail' {} a -> s {tags = a} :: RoleDetail) Prelude.. Lens.mapping Lens.coerced
    |                                                                                      ^^^^^^^^
[ 69 of 235] Compiling Amazonka.IAM.Types.TrackedActionLastAccessed
[ 70 of 235] Compiling Amazonka.IAM.Types.ServiceLastAccessed
[ 71 of 235] Compiling Amazonka.IAM.Types.User
[ 72 of 235] Compiling Amazonka.IAM.Types.UserDetail
[ 73 of 235] Compiling Amazonka.IAM.Types.VirtualMFADevice

gen/Amazonka/IAM/Types/VirtualMFADevice.hs:142:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type VirtualMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
142 | virtualMFADevice_tags = Lens.lens (\VirtualMFADevice' {tags} -> tags) (\s@VirtualMFADevice' {} a -> s {tags = a} :: VirtualMFADevice) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                        ^^^^^^^^
[ 74 of 235] Compiling Amazonka.IAM.Types
[ 75 of 235] Compiling Amazonka.IAM.TagUser

gen/Amazonka/IAM/TagUser.hs:133:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type TagUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
133 | tagUser_userName = Lens.lens (\TagUser' {userName} -> userName) (\s@TagUser' {} a -> s {userName = a} :: TagUser)
    |                                                                                         ^^^^^^^^^^^^

gen/Amazonka/IAM/TagUser.hs:138:77: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type TagUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | tagUser_tags = Lens.lens (\TagUser' {tags} -> tags) (\s@TagUser' {} a -> s {tags = a} :: TagUser) Prelude.. Lens.coerced
    |                                                                             ^^^^^^^^
[ 76 of 235] Compiling Amazonka.IAM.TagServerCertificate

gen/Amazonka/IAM/TagServerCertificate.hs:136:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverCertificateName = a} with type TagServerCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
136 | tagServerCertificate_serverCertificateName = Lens.lens (\TagServerCertificate' {serverCertificateName} -> serverCertificateName) (\s@TagServerCertificate' {} a -> s {serverCertificateName = a} :: TagServerCertificate)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/TagServerCertificate.hs:141:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type TagServerCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
141 | tagServerCertificate_tags = Lens.lens (\TagServerCertificate' {tags} -> tags) (\s@TagServerCertificate' {} a -> s {tags = a} :: TagServerCertificate) Prelude.. Lens.coerced
    |                                                                                                                    ^^^^^^^^
[ 77 of 235] Compiling Amazonka.IAM.TagSAMLProvider

gen/Amazonka/IAM/TagSAMLProvider.hs:137:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type TagSAMLProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | tagSAMLProvider_tags = Lens.lens (\TagSAMLProvider' {tags} -> tags) (\s@TagSAMLProvider' {} a -> s {tags = a} :: TagSAMLProvider) Prelude.. Lens.coerced
    |                                                                                                     ^^^^^^^^
[ 78 of 235] Compiling Amazonka.IAM.TagRole

gen/Amazonka/IAM/TagRole.hs:134:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type TagRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
134 | tagRole_roleName = Lens.lens (\TagRole' {roleName} -> roleName) (\s@TagRole' {} a -> s {roleName = a} :: TagRole)
    |                                                                                         ^^^^^^^^^^^^

gen/Amazonka/IAM/TagRole.hs:139:77: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type TagRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | tagRole_tags = Lens.lens (\TagRole' {tags} -> tags) (\s@TagRole' {} a -> s {tags = a} :: TagRole) Prelude.. Lens.coerced
    |                                                                             ^^^^^^^^
[ 79 of 235] Compiling Amazonka.IAM.TagPolicy

gen/Amazonka/IAM/TagPolicy.hs:129:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type TagPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | tagPolicy_policyArn = Lens.lens (\TagPolicy' {policyArn} -> policyArn) (\s@TagPolicy' {} a -> s {policyArn = a} :: TagPolicy)
    |                                                                                                  ^^^^^^^^^^^^^

gen/Amazonka/IAM/TagPolicy.hs:134:83: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type TagPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
134 | tagPolicy_tags = Lens.lens (\TagPolicy' {tags} -> tags) (\s@TagPolicy' {} a -> s {tags = a} :: TagPolicy) Prelude.. Lens.coerced
    |                                                                                   ^^^^^^^^
[ 80 of 235] Compiling Amazonka.IAM.TagOpenIDConnectProvider

gen/Amazonka/IAM/TagOpenIDConnectProvider.hs:137:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type TagOpenIDConnectProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | tagOpenIDConnectProvider_tags = Lens.lens (\TagOpenIDConnectProvider' {tags} -> tags) (\s@TagOpenIDConnectProvider' {} a -> s {tags = a} :: TagOpenIDConnectProvider) Prelude.. Lens.coerced
    |                                                                                                                                ^^^^^^^^
[ 81 of 235] Compiling Amazonka.IAM.TagMFADevice

gen/Amazonka/IAM/TagMFADevice.hs:132:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serialNumber = a} with type TagMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | tagMFADevice_serialNumber = Lens.lens (\TagMFADevice' {serialNumber} -> serialNumber) (\s@TagMFADevice' {} a -> s {serialNumber = a} :: TagMFADevice)
    |                                                                                                                    ^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/TagMFADevice.hs:137:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type TagMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | tagMFADevice_tags = Lens.lens (\TagMFADevice' {tags} -> tags) (\s@TagMFADevice' {} a -> s {tags = a} :: TagMFADevice) Prelude.. Lens.coerced
    |                                                                                            ^^^^^^^^
[ 82 of 235] Compiling Amazonka.IAM.TagInstanceProfile

gen/Amazonka/IAM/TagInstanceProfile.hs:127:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceProfileName = a} with type TagInstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | tagInstanceProfile_instanceProfileName = Lens.lens (\TagInstanceProfile' {instanceProfileName} -> instanceProfileName) (\s@TagInstanceProfile' {} a -> s {instanceProfileName = a} :: TagInstanceProfile)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/TagInstanceProfile.hs:132:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type TagInstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | tagInstanceProfile_tags = Lens.lens (\TagInstanceProfile' {tags} -> tags) (\s@TagInstanceProfile' {} a -> s {tags = a} :: TagInstanceProfile) Prelude.. Lens.coerced
    |                                                                                                              ^^^^^^^^
[ 83 of 235] Compiling Amazonka.IAM.SimulatePrincipalPolicy

gen/Amazonka/IAM/SimulatePrincipalPolicy.hs:542:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type SimulatePrincipalPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
542 | simulatePrincipalPolicy_marker = Lens.lens (\SimulatePrincipalPolicy' {marker} -> marker) (\s@SimulatePrincipalPolicy' {} a -> s {marker = a} :: SimulatePrincipalPolicy)
    |                                                                                                                                   ^^^^^^^^^^
[ 84 of 235] Compiling Amazonka.IAM.SimulateCustomPolicy

gen/Amazonka/IAM/SimulateCustomPolicy.hs:497:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type SimulateCustomPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
497 | simulateCustomPolicy_marker = Lens.lens (\SimulateCustomPolicy' {marker} -> marker) (\s@SimulateCustomPolicy' {} a -> s {marker = a} :: SimulateCustomPolicy)
    |                                                                                                                          ^^^^^^^^^^
[ 85 of 235] Compiling Amazonka.IAM.SetSecurityTokenServicePreferences
[ 86 of 235] Compiling Amazonka.IAM.SetDefaultPolicyVersion

gen/Amazonka/IAM/SetDefaultPolicyVersion.hs:113:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type SetDefaultPolicyVersion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | setDefaultPolicyVersion_policyArn = Lens.lens (\SetDefaultPolicyVersion' {policyArn} -> policyArn) (\s@SetDefaultPolicyVersion' {} a -> s {policyArn = a} :: SetDefaultPolicyVersion)
    |                                                                                                                                            ^^^^^^^^^^^^^

gen/Amazonka/IAM/SetDefaultPolicyVersion.hs:121:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type SetDefaultPolicyVersion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
121 | setDefaultPolicyVersion_versionId = Lens.lens (\SetDefaultPolicyVersion' {versionId} -> versionId) (\s@SetDefaultPolicyVersion' {} a -> s {versionId = a} :: SetDefaultPolicyVersion)
    |                                                                                                                                            ^^^^^^^^^^^^^
[ 87 of 235] Compiling Amazonka.IAM.ResyncMFADevice

gen/Amazonka/IAM/ResyncMFADevice.hs:140:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type ResyncMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
140 | resyncMFADevice_userName = Lens.lens (\ResyncMFADevice' {userName} -> userName) (\s@ResyncMFADevice' {} a -> s {userName = a} :: ResyncMFADevice)
    |                                                                                                                 ^^^^^^^^^^^^

gen/Amazonka/IAM/ResyncMFADevice.hs:149:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serialNumber = a} with type ResyncMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
149 | resyncMFADevice_serialNumber = Lens.lens (\ResyncMFADevice' {serialNumber} -> serialNumber) (\s@ResyncMFADevice' {} a -> s {serialNumber = a} :: ResyncMFADevice)
    |                                                                                                                             ^^^^^^^^^^^^^^^^
[ 88 of 235] Compiling Amazonka.IAM.ResetServiceSpecificCredential

gen/Amazonka/IAM/ResetServiceSpecificCredential.hs:118:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type ResetServiceSpecificCredential is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
118 | resetServiceSpecificCredential_userName = Lens.lens (\ResetServiceSpecificCredential' {userName} -> userName) (\s@ResetServiceSpecificCredential' {} a -> s {userName = a} :: ResetServiceSpecificCredential)
    |                                                                                                                                                              ^^^^^^^^^^^^

gen/Amazonka/IAM/ResetServiceSpecificCredential.hs:126:215: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceSpecificCredentialId = a} with type ResetServiceSpecificCredential is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
126 | resetServiceSpecificCredential_serviceSpecificCredentialId = Lens.lens (\ResetServiceSpecificCredential' {serviceSpecificCredentialId} -> serviceSpecificCredentialId) (\s@ResetServiceSpecificCredential' {} a -> s {serviceSpecificCredentialId = a} :: ResetServiceSpecificCredential)
    |                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 89 of 235] Compiling Amazonka.IAM.RemoveUserFromGroup

gen/Amazonka/IAM/RemoveUserFromGroup.hs:106:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type RemoveUserFromGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | removeUserFromGroup_groupName = Lens.lens (\RemoveUserFromGroup' {groupName} -> groupName) (\s@RemoveUserFromGroup' {} a -> s {groupName = a} :: RemoveUserFromGroup)
    |                                                                                                                                ^^^^^^^^^^^^^

gen/Amazonka/IAM/RemoveUserFromGroup.hs:115:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type RemoveUserFromGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | removeUserFromGroup_userName = Lens.lens (\RemoveUserFromGroup' {userName} -> userName) (\s@RemoveUserFromGroup' {} a -> s {userName = a} :: RemoveUserFromGroup)
    |                                                                                                                             ^^^^^^^^^^^^
[ 90 of 235] Compiling Amazonka.IAM.RemoveRoleFromInstanceProfile

gen/Amazonka/IAM/RemoveRoleFromInstanceProfile.hs:119:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceProfileName = a} with type RemoveRoleFromInstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | removeRoleFromInstanceProfile_instanceProfileName = Lens.lens (\RemoveRoleFromInstanceProfile' {instanceProfileName} -> instanceProfileName) (\s@RemoveRoleFromInstanceProfile' {} a -> s {instanceProfileName = a} :: RemoveRoleFromInstanceProfile)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/RemoveRoleFromInstanceProfile.hs:128:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type RemoveRoleFromInstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
128 | removeRoleFromInstanceProfile_roleName = Lens.lens (\RemoveRoleFromInstanceProfile' {roleName} -> roleName) (\s@RemoveRoleFromInstanceProfile' {} a -> s {roleName = a} :: RemoveRoleFromInstanceProfile)
    |                                                                                                                                                           ^^^^^^^^^^^^
[ 91 of 235] Compiling Amazonka.IAM.RemoveClientIDFromOpenIDConnectProvider
[ 92 of 235] Compiling Amazonka.IAM.PutUserPolicy

gen/Amazonka/IAM/PutUserPolicy.hs:169:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type PutUserPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
169 | putUserPolicy_userName = Lens.lens (\PutUserPolicy' {userName} -> userName) (\s@PutUserPolicy' {} a -> s {userName = a} :: PutUserPolicy)
    |                                                                                                           ^^^^^^^^^^^^

gen/Amazonka/IAM/PutUserPolicy.hs:178:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type PutUserPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
178 | putUserPolicy_policyName = Lens.lens (\PutUserPolicy' {policyName} -> policyName) (\s@PutUserPolicy' {} a -> s {policyName = a} :: PutUserPolicy)
    |                                                                                                                 ^^^^^^^^^^^^^^

gen/Amazonka/IAM/PutUserPolicy.hs:199:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyDocument = a} with type PutUserPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
199 | putUserPolicy_policyDocument = Lens.lens (\PutUserPolicy' {policyDocument} -> policyDocument) (\s@PutUserPolicy' {} a -> s {policyDocument = a} :: PutUserPolicy)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^
[ 93 of 235] Compiling Amazonka.IAM.PutUserPermissionsBoundary

gen/Amazonka/IAM/PutUserPermissionsBoundary.hs:99:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type PutUserPermissionsBoundary is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | putUserPermissionsBoundary_userName = Lens.lens (\PutUserPermissionsBoundary' {userName} -> userName) (\s@PutUserPermissionsBoundary' {} a -> s {userName = a} :: PutUserPermissionsBoundary)
   |                                                                                                                                                  ^^^^^^^^^^^^

gen/Amazonka/IAM/PutUserPermissionsBoundary.hs:104:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {permissionsBoundary = a} with type PutUserPermissionsBoundary is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | putUserPermissionsBoundary_permissionsBoundary = Lens.lens (\PutUserPermissionsBoundary' {permissionsBoundary} -> permissionsBoundary) (\s@PutUserPermissionsBoundary' {} a -> s {permissionsBoundary = a} :: PutUserPermissionsBoundary)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^
[ 94 of 235] Compiling Amazonka.IAM.PutRolePolicy

gen/Amazonka/IAM/PutRolePolicy.hs:176:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type PutRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
176 | putRolePolicy_roleName = Lens.lens (\PutRolePolicy' {roleName} -> roleName) (\s@PutRolePolicy' {} a -> s {roleName = a} :: PutRolePolicy)
    |                                                                                                           ^^^^^^^^^^^^

gen/Amazonka/IAM/PutRolePolicy.hs:185:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type PutRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
185 | putRolePolicy_policyName = Lens.lens (\PutRolePolicy' {policyName} -> policyName) (\s@PutRolePolicy' {} a -> s {policyName = a} :: PutRolePolicy)
    |                                                                                                                 ^^^^^^^^^^^^^^

gen/Amazonka/IAM/PutRolePolicy.hs:206:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyDocument = a} with type PutRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
206 | putRolePolicy_policyDocument = Lens.lens (\PutRolePolicy' {policyDocument} -> policyDocument) (\s@PutRolePolicy' {} a -> s {policyDocument = a} :: PutRolePolicy)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^
[ 95 of 235] Compiling Amazonka.IAM.PutRolePermissionsBoundary

gen/Amazonka/IAM/PutRolePermissionsBoundary.hs:101:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type PutRolePermissionsBoundary is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | putRolePermissionsBoundary_roleName = Lens.lens (\PutRolePermissionsBoundary' {roleName} -> roleName) (\s@PutRolePermissionsBoundary' {} a -> s {roleName = a} :: PutRolePermissionsBoundary)
    |                                                                                                                                                  ^^^^^^^^^^^^

gen/Amazonka/IAM/PutRolePermissionsBoundary.hs:106:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {permissionsBoundary = a} with type PutRolePermissionsBoundary is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | putRolePermissionsBoundary_permissionsBoundary = Lens.lens (\PutRolePermissionsBoundary' {permissionsBoundary} -> permissionsBoundary) (\s@PutRolePermissionsBoundary' {} a -> s {permissionsBoundary = a} :: PutRolePermissionsBoundary)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^
[ 96 of 235] Compiling Amazonka.IAM.PutGroupPolicy

gen/Amazonka/IAM/PutGroupPolicy.hs:169:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type PutGroupPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
169 | putGroupPolicy_groupName = Lens.lens (\PutGroupPolicy' {groupName} -> groupName) (\s@PutGroupPolicy' {} a -> s {groupName = a} :: PutGroupPolicy)
    |                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/IAM/PutGroupPolicy.hs:178:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type PutGroupPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
178 | putGroupPolicy_policyName = Lens.lens (\PutGroupPolicy' {policyName} -> policyName) (\s@PutGroupPolicy' {} a -> s {policyName = a} :: PutGroupPolicy)
    |                                                                                                                    ^^^^^^^^^^^^^^

gen/Amazonka/IAM/PutGroupPolicy.hs:199:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyDocument = a} with type PutGroupPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
199 | putGroupPolicy_policyDocument = Lens.lens (\PutGroupPolicy' {policyDocument} -> policyDocument) (\s@PutGroupPolicy' {} a -> s {policyDocument = a} :: PutGroupPolicy)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^
[ 97 of 235] Compiling Amazonka.IAM.ListVirtualMFADevices

gen/Amazonka/IAM/ListVirtualMFADevices.hs:138:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListVirtualMFADevices is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | listVirtualMFADevices_marker = Lens.lens (\ListVirtualMFADevices' {marker} -> marker) (\s@ListVirtualMFADevices' {} a -> s {marker = a} :: ListVirtualMFADevices)
    |                                                                                                                             ^^^^^^^^^^

gen/Amazonka/IAM/ListVirtualMFADevices.hs:295:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListVirtualMFADevicesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
295 | listVirtualMFADevicesResponse_isTruncated = Lens.lens (\ListVirtualMFADevicesResponse' {isTruncated} -> isTruncated) (\s@ListVirtualMFADevicesResponse' {} a -> s {isTruncated = a} :: ListVirtualMFADevicesResponse)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListVirtualMFADevices.hs:301:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListVirtualMFADevicesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
301 | listVirtualMFADevicesResponse_marker = Lens.lens (\ListVirtualMFADevicesResponse' {marker} -> marker) (\s@ListVirtualMFADevicesResponse' {} a -> s {marker = a} :: ListVirtualMFADevicesResponse)
    |                                                                                                                                                     ^^^^^^^^^^
[ 98 of 235] Compiling Amazonka.IAM.ListUsers

gen/Amazonka/IAM/ListUsers.hs:149:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListUsers is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
149 | listUsers_marker = Lens.lens (\ListUsers' {marker} -> marker) (\s@ListUsers' {} a -> s {marker = a} :: ListUsers)
    |                                                                                         ^^^^^^^^^^

gen/Amazonka/IAM/ListUsers.hs:316:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListUsersResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
316 | listUsersResponse_isTruncated = Lens.lens (\ListUsersResponse' {isTruncated} -> isTruncated) (\s@ListUsersResponse' {} a -> s {isTruncated = a} :: ListUsersResponse)
    |                                                                                                                                ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListUsers.hs:322:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListUsersResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
322 | listUsersResponse_marker = Lens.lens (\ListUsersResponse' {marker} -> marker) (\s@ListUsersResponse' {} a -> s {marker = a} :: ListUsersResponse)
    |                                                                                                                 ^^^^^^^^^^
[ 99 of 235] Compiling Amazonka.IAM.ListUserTags

gen/Amazonka/IAM/ListUserTags.hs:132:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListUserTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | listUserTags_marker = Lens.lens (\ListUserTags' {marker} -> marker) (\s@ListUserTags' {} a -> s {marker = a} :: ListUserTags)
    |                                                                                                  ^^^^^^^^^^

gen/Amazonka/IAM/ListUserTags.hs:153:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type ListUserTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
153 | listUserTags_userName = Lens.lens (\ListUserTags' {userName} -> userName) (\s@ListUserTags' {} a -> s {userName = a} :: ListUserTags)
    |                                                                                                        ^^^^^^^^^^^^

gen/Amazonka/IAM/ListUserTags.hs:296:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListUserTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
296 | listUserTagsResponse_isTruncated = Lens.lens (\ListUserTagsResponse' {isTruncated} -> isTruncated) (\s@ListUserTagsResponse' {} a -> s {isTruncated = a} :: ListUserTagsResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListUserTags.hs:302:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListUserTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
302 | listUserTagsResponse_marker = Lens.lens (\ListUserTagsResponse' {marker} -> marker) (\s@ListUserTagsResponse' {} a -> s {marker = a} :: ListUserTagsResponse)
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/IAM/ListUserTags.hs:312:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type ListUserTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
312 | listUserTagsResponse_tags = Lens.lens (\ListUserTagsResponse' {tags} -> tags) (\s@ListUserTagsResponse' {} a -> s {tags = a} :: ListUserTagsResponse) Prelude.. Lens.coerced
    |                                                                                                                    ^^^^^^^^
[100 of 235] Compiling Amazonka.IAM.ListUserPolicies

gen/Amazonka/IAM/ListUserPolicies.hs:139:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListUserPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | listUserPolicies_marker = Lens.lens (\ListUserPolicies' {marker} -> marker) (\s@ListUserPolicies' {} a -> s {marker = a} :: ListUserPolicies)
    |                                                                                                              ^^^^^^^^^^

gen/Amazonka/IAM/ListUserPolicies.hs:160:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type ListUserPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
160 | listUserPolicies_userName = Lens.lens (\ListUserPolicies' {userName} -> userName) (\s@ListUserPolicies' {} a -> s {userName = a} :: ListUserPolicies)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/IAM/ListUserPolicies.hs:303:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListUserPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
303 | listUserPoliciesResponse_isTruncated = Lens.lens (\ListUserPoliciesResponse' {isTruncated} -> isTruncated) (\s@ListUserPoliciesResponse' {} a -> s {isTruncated = a} :: ListUserPoliciesResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListUserPolicies.hs:309:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListUserPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
309 | listUserPoliciesResponse_marker = Lens.lens (\ListUserPoliciesResponse' {marker} -> marker) (\s@ListUserPoliciesResponse' {} a -> s {marker = a} :: ListUserPoliciesResponse)
    |                                                                                                                                      ^^^^^^^^^^
[101 of 235] Compiling Amazonka.IAM.ListSigningCertificates

gen/Amazonka/IAM/ListSigningCertificates.hs:138:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListSigningCertificates is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | listSigningCertificates_marker = Lens.lens (\ListSigningCertificates' {marker} -> marker) (\s@ListSigningCertificates' {} a -> s {marker = a} :: ListSigningCertificates)
    |                                                                                                                                   ^^^^^^^^^^

gen/Amazonka/IAM/ListSigningCertificates.hs:159:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type ListSigningCertificates is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
159 | listSigningCertificates_userName = Lens.lens (\ListSigningCertificates' {userName} -> userName) (\s@ListSigningCertificates' {} a -> s {userName = a} :: ListSigningCertificates)
    |                                                                                                                                         ^^^^^^^^^^^^

gen/Amazonka/IAM/ListSigningCertificates.hs:302:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListSigningCertificatesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
302 | listSigningCertificatesResponse_isTruncated = Lens.lens (\ListSigningCertificatesResponse' {isTruncated} -> isTruncated) (\s@ListSigningCertificatesResponse' {} a -> s {isTruncated = a} :: ListSigningCertificatesResponse)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListSigningCertificates.hs:308:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListSigningCertificatesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
308 | listSigningCertificatesResponse_marker = Lens.lens (\ListSigningCertificatesResponse' {marker} -> marker) (\s@ListSigningCertificatesResponse' {} a -> s {marker = a} :: ListSigningCertificatesResponse)
    |                                                                                                                                                           ^^^^^^^^^^
[102 of 235] Compiling Amazonka.IAM.ListServiceSpecificCredentials

gen/Amazonka/IAM/ListServiceSpecificCredentials.hs:109:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type ListServiceSpecificCredentials is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | listServiceSpecificCredentials_serviceName = Lens.lens (\ListServiceSpecificCredentials' {serviceName} -> serviceName) (\s@ListServiceSpecificCredentials' {} a -> s {serviceName = a} :: ListServiceSpecificCredentials)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListServiceSpecificCredentials.hs:120:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type ListServiceSpecificCredentials is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | listServiceSpecificCredentials_userName = Lens.lens (\ListServiceSpecificCredentials' {userName} -> userName) (\s@ListServiceSpecificCredentials' {} a -> s {userName = a} :: ListServiceSpecificCredentials)
    |                                                                                                                                                              ^^^^^^^^^^^^
[103 of 235] Compiling Amazonka.IAM.ListServerCertificates

gen/Amazonka/IAM/ListServerCertificates.hs:154:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListServerCertificates is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
154 | listServerCertificates_marker = Lens.lens (\ListServerCertificates' {marker} -> marker) (\s@ListServerCertificates' {} a -> s {marker = a} :: ListServerCertificates)
    |                                                                                                                                ^^^^^^^^^^

gen/Amazonka/IAM/ListServerCertificates.hs:325:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListServerCertificatesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
325 | listServerCertificatesResponse_isTruncated = Lens.lens (\ListServerCertificatesResponse' {isTruncated} -> isTruncated) (\s@ListServerCertificatesResponse' {} a -> s {isTruncated = a} :: ListServerCertificatesResponse)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListServerCertificates.hs:331:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListServerCertificatesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
331 | listServerCertificatesResponse_marker = Lens.lens (\ListServerCertificatesResponse' {marker} -> marker) (\s@ListServerCertificatesResponse' {} a -> s {marker = a} :: ListServerCertificatesResponse)
    |                                                                                                                                                        ^^^^^^^^^^
[104 of 235] Compiling Amazonka.IAM.ListServerCertificateTags

gen/Amazonka/IAM/ListServerCertificateTags.hs:138:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListServerCertificateTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | listServerCertificateTags_marker = Lens.lens (\ListServerCertificateTags' {marker} -> marker) (\s@ListServerCertificateTags' {} a -> s {marker = a} :: ListServerCertificateTags)
    |                                                                                                                                         ^^^^^^^^^^

gen/Amazonka/IAM/ListServerCertificateTags.hs:159:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverCertificateName = a} with type ListServerCertificateTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
159 | listServerCertificateTags_serverCertificateName = Lens.lens (\ListServerCertificateTags' {serverCertificateName} -> serverCertificateName) (\s@ListServerCertificateTags' {} a -> s {serverCertificateName = a} :: ListServerCertificateTags)
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListServerCertificateTags.hs:285:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListServerCertificateTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
285 | listServerCertificateTagsResponse_isTruncated = Lens.lens (\ListServerCertificateTagsResponse' {isTruncated} -> isTruncated) (\s@ListServerCertificateTagsResponse' {} a -> s {isTruncated = a} :: ListServerCertificateTagsResponse)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListServerCertificateTags.hs:291:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListServerCertificateTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
291 | listServerCertificateTagsResponse_marker = Lens.lens (\ListServerCertificateTagsResponse' {marker} -> marker) (\s@ListServerCertificateTagsResponse' {} a -> s {marker = a} :: ListServerCertificateTagsResponse)
    |                                                                                                                                                                 ^^^^^^^^^^

gen/Amazonka/IAM/ListServerCertificateTags.hs:302:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type ListServerCertificateTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
302 | listServerCertificateTagsResponse_tags = Lens.lens (\ListServerCertificateTagsResponse' {tags} -> tags) (\s@ListServerCertificateTagsResponse' {} a -> s {tags = a} :: ListServerCertificateTagsResponse) Prelude.. Lens.coerced
    |                                                                                                                                                           ^^^^^^^^
[105 of 235] Compiling Amazonka.IAM.ListSSHPublicKeys

gen/Amazonka/IAM/ListSSHPublicKeys.hs:141:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListSSHPublicKeys is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
141 | listSSHPublicKeys_marker = Lens.lens (\ListSSHPublicKeys' {marker} -> marker) (\s@ListSSHPublicKeys' {} a -> s {marker = a} :: ListSSHPublicKeys)
    |                                                                                                                 ^^^^^^^^^^

gen/Amazonka/IAM/ListSSHPublicKeys.hs:164:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type ListSSHPublicKeys is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
164 | listSSHPublicKeys_userName = Lens.lens (\ListSSHPublicKeys' {userName} -> userName) (\s@ListSSHPublicKeys' {} a -> s {userName = a} :: ListSSHPublicKeys)
    |                                                                                                                       ^^^^^^^^^^^^

gen/Amazonka/IAM/ListSSHPublicKeys.hs:307:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListSSHPublicKeysResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
307 | listSSHPublicKeysResponse_isTruncated = Lens.lens (\ListSSHPublicKeysResponse' {isTruncated} -> isTruncated) (\s@ListSSHPublicKeysResponse' {} a -> s {isTruncated = a} :: ListSSHPublicKeysResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListSSHPublicKeys.hs:313:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListSSHPublicKeysResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
313 | listSSHPublicKeysResponse_marker = Lens.lens (\ListSSHPublicKeysResponse' {marker} -> marker) (\s@ListSSHPublicKeysResponse' {} a -> s {marker = a} :: ListSSHPublicKeysResponse)
    |                                                                                                                                         ^^^^^^^^^^
[106 of 235] Compiling Amazonka.IAM.ListSAMLProviders
[107 of 235] Compiling Amazonka.IAM.ListSAMLProviderTags

gen/Amazonka/IAM/ListSAMLProviderTags.hs:135:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListSAMLProviderTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
135 | listSAMLProviderTags_marker = Lens.lens (\ListSAMLProviderTags' {marker} -> marker) (\s@ListSAMLProviderTags' {} a -> s {marker = a} :: ListSAMLProviderTags)
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/IAM/ListSAMLProviderTags.hs:282:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListSAMLProviderTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
282 | listSAMLProviderTagsResponse_isTruncated = Lens.lens (\ListSAMLProviderTagsResponse' {isTruncated} -> isTruncated) (\s@ListSAMLProviderTagsResponse' {} a -> s {isTruncated = a} :: ListSAMLProviderTagsResponse)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListSAMLProviderTags.hs:288:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListSAMLProviderTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
288 | listSAMLProviderTagsResponse_marker = Lens.lens (\ListSAMLProviderTagsResponse' {marker} -> marker) (\s@ListSAMLProviderTagsResponse' {} a -> s {marker = a} :: ListSAMLProviderTagsResponse)
    |                                                                                                                                                  ^^^^^^^^^^

gen/Amazonka/IAM/ListSAMLProviderTags.hs:299:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type ListSAMLProviderTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
299 | listSAMLProviderTagsResponse_tags = Lens.lens (\ListSAMLProviderTagsResponse' {tags} -> tags) (\s@ListSAMLProviderTagsResponse' {} a -> s {tags = a} :: ListSAMLProviderTagsResponse) Prelude.. Lens.coerced
    |                                                                                                                                            ^^^^^^^^
[108 of 235] Compiling Amazonka.IAM.ListRoles

gen/Amazonka/IAM/ListRoles.hs:149:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListRoles is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
149 | listRoles_marker = Lens.lens (\ListRoles' {marker} -> marker) (\s@ListRoles' {} a -> s {marker = a} :: ListRoles)
    |                                                                                         ^^^^^^^^^^

gen/Amazonka/IAM/ListRoles.hs:316:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListRolesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
316 | listRolesResponse_isTruncated = Lens.lens (\ListRolesResponse' {isTruncated} -> isTruncated) (\s@ListRolesResponse' {} a -> s {isTruncated = a} :: ListRolesResponse)
    |                                                                                                                                ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListRoles.hs:322:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListRolesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
322 | listRolesResponse_marker = Lens.lens (\ListRolesResponse' {marker} -> marker) (\s@ListRolesResponse' {} a -> s {marker = a} :: ListRolesResponse)
    |                                                                                                                 ^^^^^^^^^^

gen/Amazonka/IAM/ListRoles.hs:330:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roles = a} with type ListRolesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
330 | listRolesResponse_roles = Lens.lens (\ListRolesResponse' {roles} -> roles) (\s@ListRolesResponse' {} a -> s {roles = a} :: ListRolesResponse) Prelude.. Lens.coerced
    |                                                                                                              ^^^^^^^^^
[109 of 235] Compiling Amazonka.IAM.ListRoleTags

gen/Amazonka/IAM/ListRoleTags.hs:130:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListRoleTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
130 | listRoleTags_marker = Lens.lens (\ListRoleTags' {marker} -> marker) (\s@ListRoleTags' {} a -> s {marker = a} :: ListRoleTags)
    |                                                                                                  ^^^^^^^^^^

gen/Amazonka/IAM/ListRoleTags.hs:151:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type ListRoleTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
151 | listRoleTags_roleName = Lens.lens (\ListRoleTags' {roleName} -> roleName) (\s@ListRoleTags' {} a -> s {roleName = a} :: ListRoleTags)
    |                                                                                                        ^^^^^^^^^^^^

gen/Amazonka/IAM/ListRoleTags.hs:272:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListRoleTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
272 | listRoleTagsResponse_isTruncated = Lens.lens (\ListRoleTagsResponse' {isTruncated} -> isTruncated) (\s@ListRoleTagsResponse' {} a -> s {isTruncated = a} :: ListRoleTagsResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListRoleTags.hs:278:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListRoleTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
278 | listRoleTagsResponse_marker = Lens.lens (\ListRoleTagsResponse' {marker} -> marker) (\s@ListRoleTagsResponse' {} a -> s {marker = a} :: ListRoleTagsResponse)
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/IAM/ListRoleTags.hs:288:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type ListRoleTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
288 | listRoleTagsResponse_tags = Lens.lens (\ListRoleTagsResponse' {tags} -> tags) (\s@ListRoleTagsResponse' {} a -> s {tags = a} :: ListRoleTagsResponse) Prelude.. Lens.coerced
    |                                                                                                                    ^^^^^^^^
[110 of 235] Compiling Amazonka.IAM.ListRolePolicies

gen/Amazonka/IAM/ListRolePolicies.hs:139:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListRolePolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | listRolePolicies_marker = Lens.lens (\ListRolePolicies' {marker} -> marker) (\s@ListRolePolicies' {} a -> s {marker = a} :: ListRolePolicies)
    |                                                                                                              ^^^^^^^^^^

gen/Amazonka/IAM/ListRolePolicies.hs:160:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type ListRolePolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
160 | listRolePolicies_roleName = Lens.lens (\ListRolePolicies' {roleName} -> roleName) (\s@ListRolePolicies' {} a -> s {roleName = a} :: ListRolePolicies)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/IAM/ListRolePolicies.hs:303:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListRolePoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
303 | listRolePoliciesResponse_isTruncated = Lens.lens (\ListRolePoliciesResponse' {isTruncated} -> isTruncated) (\s@ListRolePoliciesResponse' {} a -> s {isTruncated = a} :: ListRolePoliciesResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListRolePolicies.hs:309:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListRolePoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
309 | listRolePoliciesResponse_marker = Lens.lens (\ListRolePoliciesResponse' {marker} -> marker) (\s@ListRolePoliciesResponse' {} a -> s {marker = a} :: ListRolePoliciesResponse)
    |                                                                                                                                      ^^^^^^^^^^
[111 of 235] Compiling Amazonka.IAM.ListPolicyVersions

gen/Amazonka/IAM/ListPolicyVersions.hs:134:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListPolicyVersions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
134 | listPolicyVersions_marker = Lens.lens (\ListPolicyVersions' {marker} -> marker) (\s@ListPolicyVersions' {} a -> s {marker = a} :: ListPolicyVersions)
    |                                                                                                                    ^^^^^^^^^^

gen/Amazonka/IAM/ListPolicyVersions.hs:155:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type ListPolicyVersions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
155 | listPolicyVersions_policyArn = Lens.lens (\ListPolicyVersions' {policyArn} -> policyArn) (\s@ListPolicyVersions' {} a -> s {policyArn = a} :: ListPolicyVersions)
    |                                                                                                                             ^^^^^^^^^^^^^

gen/Amazonka/IAM/ListPolicyVersions.hs:306:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListPolicyVersionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
306 | listPolicyVersionsResponse_isTruncated = Lens.lens (\ListPolicyVersionsResponse' {isTruncated} -> isTruncated) (\s@ListPolicyVersionsResponse' {} a -> s {isTruncated = a} :: ListPolicyVersionsResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListPolicyVersions.hs:312:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListPolicyVersionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
312 | listPolicyVersionsResponse_marker = Lens.lens (\ListPolicyVersionsResponse' {marker} -> marker) (\s@ListPolicyVersionsResponse' {} a -> s {marker = a} :: ListPolicyVersionsResponse)
    |                                                                                                                                            ^^^^^^^^^^
[112 of 235] Compiling Amazonka.IAM.ListPolicyTags

gen/Amazonka/IAM/ListPolicyTags.hs:130:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListPolicyTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
130 | listPolicyTags_marker = Lens.lens (\ListPolicyTags' {marker} -> marker) (\s@ListPolicyTags' {} a -> s {marker = a} :: ListPolicyTags)
    |                                                                                                        ^^^^^^^^^^

gen/Amazonka/IAM/ListPolicyTags.hs:151:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type ListPolicyTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
151 | listPolicyTags_policyArn = Lens.lens (\ListPolicyTags' {policyArn} -> policyArn) (\s@ListPolicyTags' {} a -> s {policyArn = a} :: ListPolicyTags)
    |                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/IAM/ListPolicyTags.hs:276:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListPolicyTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
276 | listPolicyTagsResponse_isTruncated = Lens.lens (\ListPolicyTagsResponse' {isTruncated} -> isTruncated) (\s@ListPolicyTagsResponse' {} a -> s {isTruncated = a} :: ListPolicyTagsResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListPolicyTags.hs:282:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListPolicyTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
282 | listPolicyTagsResponse_marker = Lens.lens (\ListPolicyTagsResponse' {marker} -> marker) (\s@ListPolicyTagsResponse' {} a -> s {marker = a} :: ListPolicyTagsResponse)
    |                                                                                                                                ^^^^^^^^^^

gen/Amazonka/IAM/ListPolicyTags.hs:293:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type ListPolicyTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
293 | listPolicyTagsResponse_tags = Lens.lens (\ListPolicyTagsResponse' {tags} -> tags) (\s@ListPolicyTagsResponse' {} a -> s {tags = a} :: ListPolicyTagsResponse) Prelude.. Lens.coerced
    |                                                                                                                          ^^^^^^^^
[113 of 235] Compiling Amazonka.IAM.ListPoliciesGrantingServiceAccess

gen/Amazonka/IAM/ListPoliciesGrantingServiceAccess.hs:166:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListPoliciesGrantingServiceAccess is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
166 | listPoliciesGrantingServiceAccess_marker = Lens.lens (\ListPoliciesGrantingServiceAccess' {marker} -> marker) (\s@ListPoliciesGrantingServiceAccess' {} a -> s {marker = a} :: ListPoliciesGrantingServiceAccess)
    |                                                                                                                                                                 ^^^^^^^^^^

gen/Amazonka/IAM/ListPoliciesGrantingServiceAccess.hs:171:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {arn = a} with type ListPoliciesGrantingServiceAccess is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
171 | listPoliciesGrantingServiceAccess_arn = Lens.lens (\ListPoliciesGrantingServiceAccess' {arn} -> arn) (\s@ListPoliciesGrantingServiceAccess' {} a -> s {arn = a} :: ListPoliciesGrantingServiceAccess)
    |                                                                                                                                                        ^^^^^^^

gen/Amazonka/IAM/ListPoliciesGrantingServiceAccess.hs:327:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListPoliciesGrantingServiceAccessResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
327 | listPoliciesGrantingServiceAccessResponse_isTruncated = Lens.lens (\ListPoliciesGrantingServiceAccessResponse' {isTruncated} -> isTruncated) (\s@ListPoliciesGrantingServiceAccessResponse' {} a -> s {isTruncated = a} :: ListPoliciesGrantingServiceAccessResponse)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListPoliciesGrantingServiceAccess.hs:333:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListPoliciesGrantingServiceAccessResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
333 | listPoliciesGrantingServiceAccessResponse_marker = Lens.lens (\ListPoliciesGrantingServiceAccessResponse' {marker} -> marker) (\s@ListPoliciesGrantingServiceAccessResponse' {} a -> s {marker = a} :: ListPoliciesGrantingServiceAccessResponse)
    |                                                                                                                                                                                         ^^^^^^^^^^
[114 of 235] Compiling Amazonka.IAM.ListPolicies

gen/Amazonka/IAM/ListPolicies.hs:210:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
210 | listPolicies_marker = Lens.lens (\ListPolicies' {marker} -> marker) (\s@ListPolicies' {} a -> s {marker = a} :: ListPolicies)
    |                                                                                                  ^^^^^^^^^^

gen/Amazonka/IAM/ListPolicies.hs:416:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
416 | listPoliciesResponse_isTruncated = Lens.lens (\ListPoliciesResponse' {isTruncated} -> isTruncated) (\s@ListPoliciesResponse' {} a -> s {isTruncated = a} :: ListPoliciesResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListPolicies.hs:422:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
422 | listPoliciesResponse_marker = Lens.lens (\ListPoliciesResponse' {marker} -> marker) (\s@ListPoliciesResponse' {} a -> s {marker = a} :: ListPoliciesResponse)
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/IAM/ListPolicies.hs:426:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policies = a} with type ListPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
426 | listPoliciesResponse_policies = Lens.lens (\ListPoliciesResponse' {policies} -> policies) (\s@ListPoliciesResponse' {} a -> s {policies = a} :: ListPoliciesResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                ^^^^^^^^^^^^
[115 of 235] Compiling Amazonka.IAM.ListOpenIDConnectProviders
[116 of 235] Compiling Amazonka.IAM.ListOpenIDConnectProviderTags

gen/Amazonka/IAM/ListOpenIDConnectProviderTags.hs:138:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListOpenIDConnectProviderTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | listOpenIDConnectProviderTags_marker = Lens.lens (\ListOpenIDConnectProviderTags' {marker} -> marker) (\s@ListOpenIDConnectProviderTags' {} a -> s {marker = a} :: ListOpenIDConnectProviderTags)
    |                                                                                                                                                     ^^^^^^^^^^

gen/Amazonka/IAM/ListOpenIDConnectProviderTags.hs:294:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListOpenIDConnectProviderTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
294 | listOpenIDConnectProviderTagsResponse_isTruncated = Lens.lens (\ListOpenIDConnectProviderTagsResponse' {isTruncated} -> isTruncated) (\s@ListOpenIDConnectProviderTagsResponse' {} a -> s {isTruncated = a} :: ListOpenIDConnectProviderTagsResponse)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListOpenIDConnectProviderTags.hs:300:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListOpenIDConnectProviderTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
300 | listOpenIDConnectProviderTagsResponse_marker = Lens.lens (\ListOpenIDConnectProviderTagsResponse' {marker} -> marker) (\s@ListOpenIDConnectProviderTagsResponse' {} a -> s {marker = a} :: ListOpenIDConnectProviderTagsResponse)
    |                                                                                                                                                                             ^^^^^^^^^^

gen/Amazonka/IAM/ListOpenIDConnectProviderTags.hs:311:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type ListOpenIDConnectProviderTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
311 | listOpenIDConnectProviderTagsResponse_tags = Lens.lens (\ListOpenIDConnectProviderTagsResponse' {tags} -> tags) (\s@ListOpenIDConnectProviderTagsResponse' {} a -> s {tags = a} :: ListOpenIDConnectProviderTagsResponse) Prelude.. Lens.coerced
    |                                                                                                                                                                       ^^^^^^^^
[117 of 235] Compiling Amazonka.IAM.ListMFADevices

gen/Amazonka/IAM/ListMFADevices.hs:133:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListMFADevices is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
133 | listMFADevices_marker = Lens.lens (\ListMFADevices' {marker} -> marker) (\s@ListMFADevices' {} a -> s {marker = a} :: ListMFADevices)
    |                                                                                                        ^^^^^^^^^^

gen/Amazonka/IAM/ListMFADevices.hs:154:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type ListMFADevices is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
154 | listMFADevices_userName = Lens.lens (\ListMFADevices' {userName} -> userName) (\s@ListMFADevices' {} a -> s {userName = a} :: ListMFADevices)
    |                                                                                                              ^^^^^^^^^^^^

gen/Amazonka/IAM/ListMFADevices.hs:297:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListMFADevicesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
297 | listMFADevicesResponse_isTruncated = Lens.lens (\ListMFADevicesResponse' {isTruncated} -> isTruncated) (\s@ListMFADevicesResponse' {} a -> s {isTruncated = a} :: ListMFADevicesResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListMFADevices.hs:303:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListMFADevicesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
303 | listMFADevicesResponse_marker = Lens.lens (\ListMFADevicesResponse' {marker} -> marker) (\s@ListMFADevicesResponse' {} a -> s {marker = a} :: ListMFADevicesResponse)
    |                                                                                                                                ^^^^^^^^^^
[118 of 235] Compiling Amazonka.IAM.ListMFADeviceTags

gen/Amazonka/IAM/ListMFADeviceTags.hs:134:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListMFADeviceTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
134 | listMFADeviceTags_marker = Lens.lens (\ListMFADeviceTags' {marker} -> marker) (\s@ListMFADeviceTags' {} a -> s {marker = a} :: ListMFADeviceTags)
    |                                                                                                                 ^^^^^^^^^^

gen/Amazonka/IAM/ListMFADeviceTags.hs:157:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serialNumber = a} with type ListMFADeviceTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
157 | listMFADeviceTags_serialNumber = Lens.lens (\ListMFADeviceTags' {serialNumber} -> serialNumber) (\s@ListMFADeviceTags' {} a -> s {serialNumber = a} :: ListMFADeviceTags)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListMFADeviceTags.hs:280:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListMFADeviceTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
280 | listMFADeviceTagsResponse_isTruncated = Lens.lens (\ListMFADeviceTagsResponse' {isTruncated} -> isTruncated) (\s@ListMFADeviceTagsResponse' {} a -> s {isTruncated = a} :: ListMFADeviceTagsResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListMFADeviceTags.hs:286:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListMFADeviceTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
286 | listMFADeviceTagsResponse_marker = Lens.lens (\ListMFADeviceTagsResponse' {marker} -> marker) (\s@ListMFADeviceTagsResponse' {} a -> s {marker = a} :: ListMFADeviceTagsResponse)
    |                                                                                                                                         ^^^^^^^^^^

gen/Amazonka/IAM/ListMFADeviceTags.hs:296:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type ListMFADeviceTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
296 | listMFADeviceTagsResponse_tags = Lens.lens (\ListMFADeviceTagsResponse' {tags} -> tags) (\s@ListMFADeviceTagsResponse' {} a -> s {tags = a} :: ListMFADeviceTagsResponse) Prelude.. Lens.coerced
    |                                                                                                                                   ^^^^^^^^
[119 of 235] Compiling Amazonka.IAM.ListInstanceProfilesForRole

gen/Amazonka/IAM/ListInstanceProfilesForRole.hs:135:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListInstanceProfilesForRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
135 | listInstanceProfilesForRole_marker = Lens.lens (\ListInstanceProfilesForRole' {marker} -> marker) (\s@ListInstanceProfilesForRole' {} a -> s {marker = a} :: ListInstanceProfilesForRole)
    |                                                                                                                                               ^^^^^^^^^^

gen/Amazonka/IAM/ListInstanceProfilesForRole.hs:156:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type ListInstanceProfilesForRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
156 | listInstanceProfilesForRole_roleName = Lens.lens (\ListInstanceProfilesForRole' {roleName} -> roleName) (\s@ListInstanceProfilesForRole' {} a -> s {roleName = a} :: ListInstanceProfilesForRole)
    |                                                                                                                                                     ^^^^^^^^^^^^

gen/Amazonka/IAM/ListInstanceProfilesForRole.hs:302:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListInstanceProfilesForRoleResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
302 | listInstanceProfilesForRoleResponse_isTruncated = Lens.lens (\ListInstanceProfilesForRoleResponse' {isTruncated} -> isTruncated) (\s@ListInstanceProfilesForRoleResponse' {} a -> s {isTruncated = a} :: ListInstanceProfilesForRoleResponse)
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListInstanceProfilesForRole.hs:308:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListInstanceProfilesForRoleResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
308 | listInstanceProfilesForRoleResponse_marker = Lens.lens (\ListInstanceProfilesForRoleResponse' {marker} -> marker) (\s@ListInstanceProfilesForRoleResponse' {} a -> s {marker = a} :: ListInstanceProfilesForRoleResponse)
    |                                                                                                                                                                       ^^^^^^^^^^
[120 of 235] Compiling Amazonka.IAM.ListInstanceProfiles

gen/Amazonka/IAM/ListInstanceProfiles.hs:149:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListInstanceProfiles is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
149 | listInstanceProfiles_marker = Lens.lens (\ListInstanceProfiles' {marker} -> marker) (\s@ListInstanceProfiles' {} a -> s {marker = a} :: ListInstanceProfiles)
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/IAM/ListInstanceProfiles.hs:319:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListInstanceProfilesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
319 | listInstanceProfilesResponse_isTruncated = Lens.lens (\ListInstanceProfilesResponse' {isTruncated} -> isTruncated) (\s@ListInstanceProfilesResponse' {} a -> s {isTruncated = a} :: ListInstanceProfilesResponse)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListInstanceProfiles.hs:325:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListInstanceProfilesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
325 | listInstanceProfilesResponse_marker = Lens.lens (\ListInstanceProfilesResponse' {marker} -> marker) (\s@ListInstanceProfilesResponse' {} a -> s {marker = a} :: ListInstanceProfilesResponse)
    |                                                                                                                                                  ^^^^^^^^^^
[121 of 235] Compiling Amazonka.IAM.ListInstanceProfileTags

gen/Amazonka/IAM/ListInstanceProfileTags.hs:130:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListInstanceProfileTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
130 | listInstanceProfileTags_marker = Lens.lens (\ListInstanceProfileTags' {marker} -> marker) (\s@ListInstanceProfileTags' {} a -> s {marker = a} :: ListInstanceProfileTags)
    |                                                                                                                                   ^^^^^^^^^^

gen/Amazonka/IAM/ListInstanceProfileTags.hs:151:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceProfileName = a} with type ListInstanceProfileTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
151 | listInstanceProfileTags_instanceProfileName = Lens.lens (\ListInstanceProfileTags' {instanceProfileName} -> instanceProfileName) (\s@ListInstanceProfileTags' {} a -> s {instanceProfileName = a} :: ListInstanceProfileTags)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListInstanceProfileTags.hs:276:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListInstanceProfileTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
276 | listInstanceProfileTagsResponse_isTruncated = Lens.lens (\ListInstanceProfileTagsResponse' {isTruncated} -> isTruncated) (\s@ListInstanceProfileTagsResponse' {} a -> s {isTruncated = a} :: ListInstanceProfileTagsResponse)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListInstanceProfileTags.hs:282:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListInstanceProfileTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
282 | listInstanceProfileTagsResponse_marker = Lens.lens (\ListInstanceProfileTagsResponse' {marker} -> marker) (\s@ListInstanceProfileTagsResponse' {} a -> s {marker = a} :: ListInstanceProfileTagsResponse)
    |                                                                                                                                                           ^^^^^^^^^^

gen/Amazonka/IAM/ListInstanceProfileTags.hs:293:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type ListInstanceProfileTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
293 | listInstanceProfileTagsResponse_tags = Lens.lens (\ListInstanceProfileTagsResponse' {tags} -> tags) (\s@ListInstanceProfileTagsResponse' {} a -> s {tags = a} :: ListInstanceProfileTagsResponse) Prelude.. Lens.coerced
    |                                                                                                                                                     ^^^^^^^^
[122 of 235] Compiling Amazonka.IAM.ListGroupsForUser

gen/Amazonka/IAM/ListGroupsForUser.hs:131:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListGroupsForUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | listGroupsForUser_marker = Lens.lens (\ListGroupsForUser' {marker} -> marker) (\s@ListGroupsForUser' {} a -> s {marker = a} :: ListGroupsForUser)
    |                                                                                                                 ^^^^^^^^^^

gen/Amazonka/IAM/ListGroupsForUser.hs:152:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type ListGroupsForUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
152 | listGroupsForUser_userName = Lens.lens (\ListGroupsForUser' {userName} -> userName) (\s@ListGroupsForUser' {} a -> s {userName = a} :: ListGroupsForUser)
    |                                                                                                                       ^^^^^^^^^^^^

gen/Amazonka/IAM/ListGroupsForUser.hs:295:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListGroupsForUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
295 | listGroupsForUserResponse_isTruncated = Lens.lens (\ListGroupsForUserResponse' {isTruncated} -> isTruncated) (\s@ListGroupsForUserResponse' {} a -> s {isTruncated = a} :: ListGroupsForUserResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListGroupsForUser.hs:301:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListGroupsForUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
301 | listGroupsForUserResponse_marker = Lens.lens (\ListGroupsForUserResponse' {marker} -> marker) (\s@ListGroupsForUserResponse' {} a -> s {marker = a} :: ListGroupsForUserResponse)
    |                                                                                                                                         ^^^^^^^^^^
[123 of 235] Compiling Amazonka.IAM.ListGroups

gen/Amazonka/IAM/ListGroups.hs:141:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListGroups is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
141 | listGroups_marker = Lens.lens (\ListGroups' {marker} -> marker) (\s@ListGroups' {} a -> s {marker = a} :: ListGroups)
    |                                                                                            ^^^^^^^^^^

gen/Amazonka/IAM/ListGroups.hs:308:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListGroupsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
308 | listGroupsResponse_isTruncated = Lens.lens (\ListGroupsResponse' {isTruncated} -> isTruncated) (\s@ListGroupsResponse' {} a -> s {isTruncated = a} :: ListGroupsResponse)
    |                                                                                                                                   ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListGroups.hs:314:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListGroupsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
314 | listGroupsResponse_marker = Lens.lens (\ListGroupsResponse' {marker} -> marker) (\s@ListGroupsResponse' {} a -> s {marker = a} :: ListGroupsResponse)
    |                                                                                                                    ^^^^^^^^^^
[124 of 235] Compiling Amazonka.IAM.ListGroupPolicies

gen/Amazonka/IAM/ListGroupPolicies.hs:139:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListGroupPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | listGroupPolicies_marker = Lens.lens (\ListGroupPolicies' {marker} -> marker) (\s@ListGroupPolicies' {} a -> s {marker = a} :: ListGroupPolicies)
    |                                                                                                                 ^^^^^^^^^^

gen/Amazonka/IAM/ListGroupPolicies.hs:160:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type ListGroupPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
160 | listGroupPolicies_groupName = Lens.lens (\ListGroupPolicies' {groupName} -> groupName) (\s@ListGroupPolicies' {} a -> s {groupName = a} :: ListGroupPolicies)
    |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/IAM/ListGroupPolicies.hs:313:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListGroupPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
313 | listGroupPoliciesResponse_isTruncated = Lens.lens (\ListGroupPoliciesResponse' {isTruncated} -> isTruncated) (\s@ListGroupPoliciesResponse' {} a -> s {isTruncated = a} :: ListGroupPoliciesResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListGroupPolicies.hs:319:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListGroupPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
319 | listGroupPoliciesResponse_marker = Lens.lens (\ListGroupPoliciesResponse' {marker} -> marker) (\s@ListGroupPoliciesResponse' {} a -> s {marker = a} :: ListGroupPoliciesResponse)
    |                                                                                                                                         ^^^^^^^^^^
[125 of 235] Compiling Amazonka.IAM.ListEntitiesForPolicy

gen/Amazonka/IAM/ListEntitiesForPolicy.hs:216:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListEntitiesForPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
216 | listEntitiesForPolicy_marker = Lens.lens (\ListEntitiesForPolicy' {marker} -> marker) (\s@ListEntitiesForPolicy' {} a -> s {marker = a} :: ListEntitiesForPolicy)
    |                                                                                                                             ^^^^^^^^^^

gen/Amazonka/IAM/ListEntitiesForPolicy.hs:263:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type ListEntitiesForPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
263 | listEntitiesForPolicy_policyArn = Lens.lens (\ListEntitiesForPolicy' {policyArn} -> policyArn) (\s@ListEntitiesForPolicy' {} a -> s {policyArn = a} :: ListEntitiesForPolicy)
    |                                                                                                                                      ^^^^^^^^^^^^^

gen/Amazonka/IAM/ListEntitiesForPolicy.hs:435:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListEntitiesForPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
435 | listEntitiesForPolicyResponse_isTruncated = Lens.lens (\ListEntitiesForPolicyResponse' {isTruncated} -> isTruncated) (\s@ListEntitiesForPolicyResponse' {} a -> s {isTruncated = a} :: ListEntitiesForPolicyResponse)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListEntitiesForPolicy.hs:441:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListEntitiesForPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
441 | listEntitiesForPolicyResponse_marker = Lens.lens (\ListEntitiesForPolicyResponse' {marker} -> marker) (\s@ListEntitiesForPolicyResponse' {} a -> s {marker = a} :: ListEntitiesForPolicyResponse)
    |                                                                                                                                                     ^^^^^^^^^^
[126 of 235] Compiling Amazonka.IAM.ListAttachedUserPolicies

gen/Amazonka/IAM/ListAttachedUserPolicies.hs:168:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListAttachedUserPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
168 | listAttachedUserPolicies_marker = Lens.lens (\ListAttachedUserPolicies' {marker} -> marker) (\s@ListAttachedUserPolicies' {} a -> s {marker = a} :: ListAttachedUserPolicies)
    |                                                                                                                                      ^^^^^^^^^^

gen/Amazonka/IAM/ListAttachedUserPolicies.hs:204:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type ListAttachedUserPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
204 | listAttachedUserPolicies_userName = Lens.lens (\ListAttachedUserPolicies' {userName} -> userName) (\s@ListAttachedUserPolicies' {} a -> s {userName = a} :: ListAttachedUserPolicies)
    |                                                                                                                                            ^^^^^^^^^^^^

gen/Amazonka/IAM/ListAttachedUserPolicies.hs:354:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListAttachedUserPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
354 | listAttachedUserPoliciesResponse_isTruncated = Lens.lens (\ListAttachedUserPoliciesResponse' {isTruncated} -> isTruncated) (\s@ListAttachedUserPoliciesResponse' {} a -> s {isTruncated = a} :: ListAttachedUserPoliciesResponse)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListAttachedUserPolicies.hs:360:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListAttachedUserPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
360 | listAttachedUserPoliciesResponse_marker = Lens.lens (\ListAttachedUserPoliciesResponse' {marker} -> marker) (\s@ListAttachedUserPoliciesResponse' {} a -> s {marker = a} :: ListAttachedUserPoliciesResponse)
    |                                                                                                                                                              ^^^^^^^^^^
[127 of 235] Compiling Amazonka.IAM.ListAttachedRolePolicies

gen/Amazonka/IAM/ListAttachedRolePolicies.hs:168:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListAttachedRolePolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
168 | listAttachedRolePolicies_marker = Lens.lens (\ListAttachedRolePolicies' {marker} -> marker) (\s@ListAttachedRolePolicies' {} a -> s {marker = a} :: ListAttachedRolePolicies)
    |                                                                                                                                      ^^^^^^^^^^

gen/Amazonka/IAM/ListAttachedRolePolicies.hs:204:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type ListAttachedRolePolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
204 | listAttachedRolePolicies_roleName = Lens.lens (\ListAttachedRolePolicies' {roleName} -> roleName) (\s@ListAttachedRolePolicies' {} a -> s {roleName = a} :: ListAttachedRolePolicies)
    |                                                                                                                                            ^^^^^^^^^^^^

gen/Amazonka/IAM/ListAttachedRolePolicies.hs:354:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListAttachedRolePoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
354 | listAttachedRolePoliciesResponse_isTruncated = Lens.lens (\ListAttachedRolePoliciesResponse' {isTruncated} -> isTruncated) (\s@ListAttachedRolePoliciesResponse' {} a -> s {isTruncated = a} :: ListAttachedRolePoliciesResponse)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListAttachedRolePolicies.hs:360:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListAttachedRolePoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
360 | listAttachedRolePoliciesResponse_marker = Lens.lens (\ListAttachedRolePoliciesResponse' {marker} -> marker) (\s@ListAttachedRolePoliciesResponse' {} a -> s {marker = a} :: ListAttachedRolePoliciesResponse)
    |                                                                                                                                                              ^^^^^^^^^^
[128 of 235] Compiling Amazonka.IAM.ListAttachedGroupPolicies

gen/Amazonka/IAM/ListAttachedGroupPolicies.hs:169:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListAttachedGroupPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
169 | listAttachedGroupPolicies_marker = Lens.lens (\ListAttachedGroupPolicies' {marker} -> marker) (\s@ListAttachedGroupPolicies' {} a -> s {marker = a} :: ListAttachedGroupPolicies)
    |                                                                                                                                         ^^^^^^^^^^

gen/Amazonka/IAM/ListAttachedGroupPolicies.hs:205:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type ListAttachedGroupPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
205 | listAttachedGroupPolicies_groupName = Lens.lens (\ListAttachedGroupPolicies' {groupName} -> groupName) (\s@ListAttachedGroupPolicies' {} a -> s {groupName = a} :: ListAttachedGroupPolicies)
    |                                                                                                                                                  ^^^^^^^^^^^^^

gen/Amazonka/IAM/ListAttachedGroupPolicies.hs:355:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListAttachedGroupPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
355 | listAttachedGroupPoliciesResponse_isTruncated = Lens.lens (\ListAttachedGroupPoliciesResponse' {isTruncated} -> isTruncated) (\s@ListAttachedGroupPoliciesResponse' {} a -> s {isTruncated = a} :: ListAttachedGroupPoliciesResponse)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListAttachedGroupPolicies.hs:361:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListAttachedGroupPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
361 | listAttachedGroupPoliciesResponse_marker = Lens.lens (\ListAttachedGroupPoliciesResponse' {marker} -> marker) (\s@ListAttachedGroupPoliciesResponse' {} a -> s {marker = a} :: ListAttachedGroupPoliciesResponse)
    |                                                                                                                                                                 ^^^^^^^^^^
[129 of 235] Compiling Amazonka.IAM.ListAccountAliases

gen/Amazonka/IAM/ListAccountAliases.hs:114:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListAccountAliases is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | listAccountAliases_marker = Lens.lens (\ListAccountAliases' {marker} -> marker) (\s@ListAccountAliases' {} a -> s {marker = a} :: ListAccountAliases)
    |                                                                                                                    ^^^^^^^^^^

gen/Amazonka/IAM/ListAccountAliases.hs:268:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListAccountAliasesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
268 | listAccountAliasesResponse_isTruncated = Lens.lens (\ListAccountAliasesResponse' {isTruncated} -> isTruncated) (\s@ListAccountAliasesResponse' {} a -> s {isTruncated = a} :: ListAccountAliasesResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListAccountAliases.hs:274:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListAccountAliasesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
274 | listAccountAliasesResponse_marker = Lens.lens (\ListAccountAliasesResponse' {marker} -> marker) (\s@ListAccountAliasesResponse' {} a -> s {marker = a} :: ListAccountAliasesResponse)
    |                                                                                                                                            ^^^^^^^^^^
[130 of 235] Compiling Amazonka.IAM.ListAccessKeys

gen/Amazonka/IAM/ListAccessKeys.hs:143:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListAccessKeys is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
143 | listAccessKeys_marker = Lens.lens (\ListAccessKeys' {marker} -> marker) (\s@ListAccessKeys' {} a -> s {marker = a} :: ListAccessKeys)
    |                                                                                                        ^^^^^^^^^^

gen/Amazonka/IAM/ListAccessKeys.hs:164:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type ListAccessKeys is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
164 | listAccessKeys_userName = Lens.lens (\ListAccessKeys' {userName} -> userName) (\s@ListAccessKeys' {} a -> s {userName = a} :: ListAccessKeys)
    |                                                                                                              ^^^^^^^^^^^^

gen/Amazonka/IAM/ListAccessKeys.hs:307:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type ListAccessKeysResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
307 | listAccessKeysResponse_isTruncated = Lens.lens (\ListAccessKeysResponse' {isTruncated} -> isTruncated) (\s@ListAccessKeysResponse' {} a -> s {isTruncated = a} :: ListAccessKeysResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/ListAccessKeys.hs:313:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListAccessKeysResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
313 | listAccessKeysResponse_marker = Lens.lens (\ListAccessKeysResponse' {marker} -> marker) (\s@ListAccessKeysResponse' {} a -> s {marker = a} :: ListAccessKeysResponse)
    |                                                                                                                                ^^^^^^^^^^
[131 of 235] Compiling Amazonka.IAM.GetUserPolicy

gen/Amazonka/IAM/GetUserPolicy.hs:129:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type GetUserPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | getUserPolicy_userName = Lens.lens (\GetUserPolicy' {userName} -> userName) (\s@GetUserPolicy' {} a -> s {userName = a} :: GetUserPolicy)
    |                                                                                                           ^^^^^^^^^^^^

gen/Amazonka/IAM/GetUserPolicy.hs:138:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type GetUserPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | getUserPolicy_policyName = Lens.lens (\GetUserPolicy' {policyName} -> policyName) (\s@GetUserPolicy' {} a -> s {policyName = a} :: GetUserPolicy)
    |                                                                                                                 ^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetUserPolicy.hs:253:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type GetUserPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
253 | getUserPolicyResponse_userName = Lens.lens (\GetUserPolicyResponse' {userName} -> userName) (\s@GetUserPolicyResponse' {} a -> s {userName = a} :: GetUserPolicyResponse)
    |                                                                                                                                   ^^^^^^^^^^^^

gen/Amazonka/IAM/GetUserPolicy.hs:257:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type GetUserPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
257 | getUserPolicyResponse_policyName = Lens.lens (\GetUserPolicyResponse' {policyName} -> policyName) (\s@GetUserPolicyResponse' {} a -> s {policyName = a} :: GetUserPolicyResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetUserPolicy.hs:266:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyDocument = a} with type GetUserPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
266 | getUserPolicyResponse_policyDocument = Lens.lens (\GetUserPolicyResponse' {policyDocument} -> policyDocument) (\s@GetUserPolicyResponse' {} a -> s {policyDocument = a} :: GetUserPolicyResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^
[132 of 235] Compiling Amazonka.IAM.GetUser

gen/Amazonka/IAM/GetUser.hs:95:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type GetUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
95 | getUser_userName = Lens.lens (\GetUser' {userName} -> userName) (\s@GetUser' {} a -> s {userName = a} :: GetUser)
   |                                                                                         ^^^^^^^^^^^^

gen/Amazonka/IAM/GetUser.hs:229:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {user = a} with type GetUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
229 | getUserResponse_user = Lens.lens (\GetUserResponse' {user} -> user) (\s@GetUserResponse' {} a -> s {user = a} :: GetUserResponse)
    |                                                                                                     ^^^^^^^^
[133 of 235] Compiling Amazonka.IAM.GetServiceLinkedRoleDeletionStatus

gen/Amazonka/IAM/GetServiceLinkedRoleDeletionStatus.hs:197:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {reason = a} with type GetServiceLinkedRoleDeletionStatusResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
197 | getServiceLinkedRoleDeletionStatusResponse_reason = Lens.lens (\GetServiceLinkedRoleDeletionStatusResponse' {reason} -> reason) (\s@GetServiceLinkedRoleDeletionStatusResponse' {} a -> s {reason = a} :: GetServiceLinkedRoleDeletionStatusResponse)
    |                                                                                                                                                                                            ^^^^^^^^^^

gen/Amazonka/IAM/GetServiceLinkedRoleDeletionStatus.hs:205:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type GetServiceLinkedRoleDeletionStatusResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
205 | getServiceLinkedRoleDeletionStatusResponse_status = Lens.lens (\GetServiceLinkedRoleDeletionStatusResponse' {status} -> status) (\s@GetServiceLinkedRoleDeletionStatusResponse' {} a -> s {status = a} :: GetServiceLinkedRoleDeletionStatusResponse)
    |                                                                                                                                                                                            ^^^^^^^^^^
[134 of 235] Compiling Amazonka.IAM.GetServiceLastAccessedDetailsWithEntities

gen/Amazonka/IAM/GetServiceLastAccessedDetailsWithEntities.hs:178:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type GetServiceLastAccessedDetailsWithEntities is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
178 | getServiceLastAccessedDetailsWithEntities_marker = Lens.lens (\GetServiceLastAccessedDetailsWithEntities' {marker} -> marker) (\s@GetServiceLastAccessedDetailsWithEntities' {} a -> s {marker = a} :: GetServiceLastAccessedDetailsWithEntities)
    |                                                                                                                                                                                         ^^^^^^^^^^

gen/Amazonka/IAM/GetServiceLastAccessedDetailsWithEntities.hs:210:215: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceNamespace = a} with type GetServiceLastAccessedDetailsWithEntities is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
210 | getServiceLastAccessedDetailsWithEntities_serviceNamespace = Lens.lens (\GetServiceLastAccessedDetailsWithEntities' {serviceNamespace} -> serviceNamespace) (\s@GetServiceLastAccessedDetailsWithEntities' {} a -> s {serviceNamespace = a} :: GetServiceLastAccessedDetailsWithEntities)
    |                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetServiceLastAccessedDetailsWithEntities.hs:419:224: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type GetServiceLastAccessedDetailsWithEntitiesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
419 | getServiceLastAccessedDetailsWithEntitiesResponse_isTruncated = Lens.lens (\GetServiceLastAccessedDetailsWithEntitiesResponse' {isTruncated} -> isTruncated) (\s@GetServiceLastAccessedDetailsWithEntitiesResponse' {} a -> s {isTruncated = a} :: GetServiceLastAccessedDetailsWithEntitiesResponse)
    |                                                                                                                                                                                                                                ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetServiceLastAccessedDetailsWithEntities.hs:425:209: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type GetServiceLastAccessedDetailsWithEntitiesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
425 | getServiceLastAccessedDetailsWithEntitiesResponse_marker = Lens.lens (\GetServiceLastAccessedDetailsWithEntitiesResponse' {marker} -> marker) (\s@GetServiceLastAccessedDetailsWithEntitiesResponse' {} a -> s {marker = a} :: GetServiceLastAccessedDetailsWithEntitiesResponse)
    |                                                                                                                                                                                                                 ^^^^^^^^^^
[135 of 235] Compiling Amazonka.IAM.GetServiceLastAccessedDetails

gen/Amazonka/IAM/GetServiceLastAccessedDetails.hs:179:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type GetServiceLastAccessedDetails is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
179 | getServiceLastAccessedDetails_marker = Lens.lens (\GetServiceLastAccessedDetails' {marker} -> marker) (\s@GetServiceLastAccessedDetails' {} a -> s {marker = a} :: GetServiceLastAccessedDetails)
    |                                                                                                                                                     ^^^^^^^^^^

gen/Amazonka/IAM/GetServiceLastAccessedDetails.hs:395:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type GetServiceLastAccessedDetailsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
395 | getServiceLastAccessedDetailsResponse_isTruncated = Lens.lens (\GetServiceLastAccessedDetailsResponse' {isTruncated} -> isTruncated) (\s@GetServiceLastAccessedDetailsResponse' {} a -> s {isTruncated = a} :: GetServiceLastAccessedDetailsResponse)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetServiceLastAccessedDetails.hs:407:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type GetServiceLastAccessedDetailsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
407 | getServiceLastAccessedDetailsResponse_marker = Lens.lens (\GetServiceLastAccessedDetailsResponse' {marker} -> marker) (\s@GetServiceLastAccessedDetailsResponse' {} a -> s {marker = a} :: GetServiceLastAccessedDetailsResponse)
    |                                                                                                                                                                             ^^^^^^^^^^
[136 of 235] Compiling Amazonka.IAM.GetServerCertificate

gen/Amazonka/IAM/GetServerCertificate.hs:103:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverCertificateName = a} with type GetServerCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | getServerCertificate_serverCertificateName = Lens.lens (\GetServerCertificate' {serverCertificateName} -> serverCertificateName) (\s@GetServerCertificate' {} a -> s {serverCertificateName = a} :: GetServerCertificate)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
[137 of 235] Compiling Amazonka.IAM.GetSSHPublicKey

gen/Amazonka/IAM/GetSSHPublicKey.hs:131:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type GetSSHPublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | getSSHPublicKey_userName = Lens.lens (\GetSSHPublicKey' {userName} -> userName) (\s@GetSSHPublicKey' {} a -> s {userName = a} :: GetSSHPublicKey)
    |                                                                                                                 ^^^^^^^^^^^^

gen/Amazonka/IAM/GetSSHPublicKey.hs:139:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSHPublicKeyId = a} with type GetSSHPublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | getSSHPublicKey_sSHPublicKeyId = Lens.lens (\GetSSHPublicKey' {sSHPublicKeyId} -> sSHPublicKeyId) (\s@GetSSHPublicKey' {} a -> s {sSHPublicKeyId = a} :: GetSSHPublicKey)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^^^
[138 of 235] Compiling Amazonka.IAM.GetSAMLProvider

gen/Amazonka/IAM/GetSAMLProvider.hs:208:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {createDate = a} with type GetSAMLProviderResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
208 | getSAMLProviderResponse_createDate = Lens.lens (\GetSAMLProviderResponse' {createDate} -> createDate) (\s@GetSAMLProviderResponse' {} a -> s {createDate = a} :: GetSAMLProviderResponse) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                               ^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetSAMLProvider.hs:221:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type GetSAMLProviderResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
221 | getSAMLProviderResponse_tags = Lens.lens (\GetSAMLProviderResponse' {tags} -> tags) (\s@GetSAMLProviderResponse' {} a -> s {tags = a} :: GetSAMLProviderResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                             ^^^^^^^^

gen/Amazonka/IAM/GetSAMLProvider.hs:225:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {validUntil = a} with type GetSAMLProviderResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
225 | getSAMLProviderResponse_validUntil = Lens.lens (\GetSAMLProviderResponse' {validUntil} -> validUntil) (\s@GetSAMLProviderResponse' {} a -> s {validUntil = a} :: GetSAMLProviderResponse) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                               ^^^^^^^^^^^^^^
[139 of 235] Compiling Amazonka.IAM.GetRolePolicy

gen/Amazonka/IAM/GetRolePolicy.hs:132:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type GetRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | getRolePolicy_roleName = Lens.lens (\GetRolePolicy' {roleName} -> roleName) (\s@GetRolePolicy' {} a -> s {roleName = a} :: GetRolePolicy)
    |                                                                                                           ^^^^^^^^^^^^

gen/Amazonka/IAM/GetRolePolicy.hs:141:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type GetRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
141 | getRolePolicy_policyName = Lens.lens (\GetRolePolicy' {policyName} -> policyName) (\s@GetRolePolicy' {} a -> s {policyName = a} :: GetRolePolicy)
    |                                                                                                                 ^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetRolePolicy.hs:256:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type GetRolePolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
256 | getRolePolicyResponse_roleName = Lens.lens (\GetRolePolicyResponse' {roleName} -> roleName) (\s@GetRolePolicyResponse' {} a -> s {roleName = a} :: GetRolePolicyResponse)
    |                                                                                                                                   ^^^^^^^^^^^^

gen/Amazonka/IAM/GetRolePolicy.hs:260:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type GetRolePolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
260 | getRolePolicyResponse_policyName = Lens.lens (\GetRolePolicyResponse' {policyName} -> policyName) (\s@GetRolePolicyResponse' {} a -> s {policyName = a} :: GetRolePolicyResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetRolePolicy.hs:269:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyDocument = a} with type GetRolePolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
269 | getRolePolicyResponse_policyDocument = Lens.lens (\GetRolePolicyResponse' {policyDocument} -> policyDocument) (\s@GetRolePolicyResponse' {} a -> s {policyDocument = a} :: GetRolePolicyResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^
[140 of 235] Compiling Amazonka.IAM.GetRole

gen/Amazonka/IAM/GetRole.hs:100:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type GetRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | getRole_roleName = Lens.lens (\GetRole' {roleName} -> roleName) (\s@GetRole' {} a -> s {roleName = a} :: GetRole)
    |                                                                                         ^^^^^^^^^^^^
[141 of 235] Compiling Amazonka.IAM.GetPolicyVersion

gen/Amazonka/IAM/GetPolicyVersion.hs:134:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type GetPolicyVersion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
134 | getPolicyVersion_policyArn = Lens.lens (\GetPolicyVersion' {policyArn} -> policyArn) (\s@GetPolicyVersion' {} a -> s {policyArn = a} :: GetPolicyVersion)
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/IAM/GetPolicyVersion.hs:144:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type GetPolicyVersion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
144 | getPolicyVersion_versionId = Lens.lens (\GetPolicyVersion' {versionId} -> versionId) (\s@GetPolicyVersion' {} a -> s {versionId = a} :: GetPolicyVersion)
    |                                                                                                                       ^^^^^^^^^^^^^
[142 of 235] Compiling Amazonka.IAM.GetPolicy

gen/Amazonka/IAM/GetPolicy.hs:104:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type GetPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | getPolicy_policyArn = Lens.lens (\GetPolicy' {policyArn} -> policyArn) (\s@GetPolicy' {} a -> s {policyArn = a} :: GetPolicy)
    |                                                                                                  ^^^^^^^^^^^^^
[143 of 235] Compiling Amazonka.IAM.GetOrganizationsAccessReport

gen/Amazonka/IAM/GetOrganizationsAccessReport.hs:158:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type GetOrganizationsAccessReport is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
158 | getOrganizationsAccessReport_marker = Lens.lens (\GetOrganizationsAccessReport' {marker} -> marker) (\s@GetOrganizationsAccessReport' {} a -> s {marker = a} :: GetOrganizationsAccessReport)
    |                                                                                                                                                  ^^^^^^^^^^

gen/Amazonka/IAM/GetOrganizationsAccessReport.hs:382:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type GetOrganizationsAccessReportResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
382 | getOrganizationsAccessReportResponse_isTruncated = Lens.lens (\GetOrganizationsAccessReportResponse' {isTruncated} -> isTruncated) (\s@GetOrganizationsAccessReportResponse' {} a -> s {isTruncated = a} :: GetOrganizationsAccessReportResponse)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetOrganizationsAccessReport.hs:397:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type GetOrganizationsAccessReportResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
397 | getOrganizationsAccessReportResponse_marker = Lens.lens (\GetOrganizationsAccessReportResponse' {marker} -> marker) (\s@GetOrganizationsAccessReportResponse' {} a -> s {marker = a} :: GetOrganizationsAccessReportResponse)
    |                                                                                                                                                                          ^^^^^^^^^^
[144 of 235] Compiling Amazonka.IAM.GetOpenIDConnectProvider

gen/Amazonka/IAM/GetOpenIDConnectProvider.hs:243:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {createDate = a} with type GetOpenIDConnectProviderResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
243 | getOpenIDConnectProviderResponse_createDate = Lens.lens (\GetOpenIDConnectProviderResponse' {createDate} -> createDate) (\s@GetOpenIDConnectProviderResponse' {} a -> s {createDate = a} :: GetOpenIDConnectProviderResponse) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                                                          ^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetOpenIDConnectProvider.hs:251:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type GetOpenIDConnectProviderResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
251 | getOpenIDConnectProviderResponse_tags = Lens.lens (\GetOpenIDConnectProviderResponse' {tags} -> tags) (\s@GetOpenIDConnectProviderResponse' {} a -> s {tags = a} :: GetOpenIDConnectProviderResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                        ^^^^^^^^
[145 of 235] Compiling Amazonka.IAM.GetLoginProfile

gen/Amazonka/IAM/GetLoginProfile.hs:103:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type GetLoginProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | getLoginProfile_userName = Lens.lens (\GetLoginProfile' {userName} -> userName) (\s@GetLoginProfile' {} a -> s {userName = a} :: GetLoginProfile)
    |                                                                                                                 ^^^^^^^^^^^^
[146 of 235] Compiling Amazonka.IAM.GetInstanceProfile

gen/Amazonka/IAM/GetInstanceProfile.hs:97:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceProfileName = a} with type GetInstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
97 | getInstanceProfile_instanceProfileName = Lens.lens (\GetInstanceProfile' {instanceProfileName} -> instanceProfileName) (\s@GetInstanceProfile' {} a -> s {instanceProfileName = a} :: GetInstanceProfile)
   |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^
[147 of 235] Compiling Amazonka.IAM.GetGroupPolicy

gen/Amazonka/IAM/GetGroupPolicy.hs:129:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type GetGroupPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | getGroupPolicy_groupName = Lens.lens (\GetGroupPolicy' {groupName} -> groupName) (\s@GetGroupPolicy' {} a -> s {groupName = a} :: GetGroupPolicy)
    |                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/IAM/GetGroupPolicy.hs:138:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type GetGroupPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | getGroupPolicy_policyName = Lens.lens (\GetGroupPolicy' {policyName} -> policyName) (\s@GetGroupPolicy' {} a -> s {policyName = a} :: GetGroupPolicy)
    |                                                                                                                    ^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetGroupPolicy.hs:253:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type GetGroupPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
253 | getGroupPolicyResponse_groupName = Lens.lens (\GetGroupPolicyResponse' {groupName} -> groupName) (\s@GetGroupPolicyResponse' {} a -> s {groupName = a} :: GetGroupPolicyResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^

gen/Amazonka/IAM/GetGroupPolicy.hs:257:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type GetGroupPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
257 | getGroupPolicyResponse_policyName = Lens.lens (\GetGroupPolicyResponse' {policyName} -> policyName) (\s@GetGroupPolicyResponse' {} a -> s {policyName = a} :: GetGroupPolicyResponse)
    |                                                                                                                                            ^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetGroupPolicy.hs:266:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyDocument = a} with type GetGroupPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
266 | getGroupPolicyResponse_policyDocument = Lens.lens (\GetGroupPolicyResponse' {policyDocument} -> policyDocument) (\s@GetGroupPolicyResponse' {} a -> s {policyDocument = a} :: GetGroupPolicyResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^
[148 of 235] Compiling Amazonka.IAM.GetGroup

gen/Amazonka/IAM/GetGroup.hs:130:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type GetGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
130 | getGroup_marker = Lens.lens (\GetGroup' {marker} -> marker) (\s@GetGroup' {} a -> s {marker = a} :: GetGroup)
    |                                                                                      ^^^^^^^^^^

gen/Amazonka/IAM/GetGroup.hs:151:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type GetGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
151 | getGroup_groupName = Lens.lens (\GetGroup' {groupName} -> groupName) (\s@GetGroup' {} a -> s {groupName = a} :: GetGroup)
    |                                                                                               ^^^^^^^^^^^^^

gen/Amazonka/IAM/GetGroup.hs:298:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type GetGroupResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
298 | getGroupResponse_isTruncated = Lens.lens (\GetGroupResponse' {isTruncated} -> isTruncated) (\s@GetGroupResponse' {} a -> s {isTruncated = a} :: GetGroupResponse)
    |                                                                                                                             ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetGroup.hs:304:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type GetGroupResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
304 | getGroupResponse_marker = Lens.lens (\GetGroupResponse' {marker} -> marker) (\s@GetGroupResponse' {} a -> s {marker = a} :: GetGroupResponse)
    |                                                                                                              ^^^^^^^^^^
[149 of 235] Compiling Amazonka.IAM.GetCredentialReport
[150 of 235] Compiling Amazonka.IAM.GetContextKeysForPrincipalPolicy
[151 of 235] Compiling Amazonka.IAM.GetContextKeysForCustomPolicy
[152 of 235] Compiling Amazonka.IAM.GetAccountSummary
[153 of 235] Compiling Amazonka.IAM.GetAccountPasswordPolicy
[154 of 235] Compiling Amazonka.IAM.GetAccountAuthorizationDetails

gen/Amazonka/IAM/GetAccountAuthorizationDetails.hs:156:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type GetAccountAuthorizationDetails is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
156 | getAccountAuthorizationDetails_marker = Lens.lens (\GetAccountAuthorizationDetails' {marker} -> marker) (\s@GetAccountAuthorizationDetails' {} a -> s {marker = a} :: GetAccountAuthorizationDetails)
    |                                                                                                                                                        ^^^^^^^^^^

gen/Amazonka/IAM/GetAccountAuthorizationDetails.hs:365:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isTruncated = a} with type GetAccountAuthorizationDetailsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
365 | getAccountAuthorizationDetailsResponse_isTruncated = Lens.lens (\GetAccountAuthorizationDetailsResponse' {isTruncated} -> isTruncated) (\s@GetAccountAuthorizationDetailsResponse' {} a -> s {isTruncated = a} :: GetAccountAuthorizationDetailsResponse)
    |                                                                                                                                                                                               ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetAccountAuthorizationDetails.hs:371:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type GetAccountAuthorizationDetailsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
371 | getAccountAuthorizationDetailsResponse_marker = Lens.lens (\GetAccountAuthorizationDetailsResponse' {marker} -> marker) (\s@GetAccountAuthorizationDetailsResponse' {} a -> s {marker = a} :: GetAccountAuthorizationDetailsResponse)
    |                                                                                                                                                                                ^^^^^^^^^^

gen/Amazonka/IAM/GetAccountAuthorizationDetails.hs:375:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policies = a} with type GetAccountAuthorizationDetailsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
375 | getAccountAuthorizationDetailsResponse_policies = Lens.lens (\GetAccountAuthorizationDetailsResponse' {policies} -> policies) (\s@GetAccountAuthorizationDetailsResponse' {} a -> s {policies = a} :: GetAccountAuthorizationDetailsResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                                      ^^^^^^^^^^^^
[155 of 235] Compiling Amazonka.IAM.GetAccessKeyLastUsed

gen/Amazonka/IAM/GetAccessKeyLastUsed.hs:91:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessKeyId = a} with type GetAccessKeyLastUsed is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
91 | getAccessKeyLastUsed_accessKeyId = Lens.lens (\GetAccessKeyLastUsed' {accessKeyId} -> accessKeyId) (\s@GetAccessKeyLastUsed' {} a -> s {accessKeyId = a} :: GetAccessKeyLastUsed)
   |                                                                                                                                         ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/GetAccessKeyLastUsed.hs:179:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type GetAccessKeyLastUsedResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
179 | getAccessKeyLastUsedResponse_userName = Lens.lens (\GetAccessKeyLastUsedResponse' {userName} -> userName) (\s@GetAccessKeyLastUsedResponse' {} a -> s {userName = a} :: GetAccessKeyLastUsedResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^
[156 of 235] Compiling Amazonka.IAM.GenerateServiceLastAccessedDetails

gen/Amazonka/IAM/GenerateServiceLastAccessedDetails.hs:167:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {arn = a} with type GenerateServiceLastAccessedDetails is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
167 | generateServiceLastAccessedDetails_arn = Lens.lens (\GenerateServiceLastAccessedDetails' {arn} -> arn) (\s@GenerateServiceLastAccessedDetails' {} a -> s {arn = a} :: GenerateServiceLastAccessedDetails)
    |                                                                                                                                                           ^^^^^^^
[157 of 235] Compiling Amazonka.IAM.GenerateOrganizationsAccessReport

gen/Amazonka/IAM/GenerateOrganizationsAccessReport.hs:246:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {entityPath = a} with type GenerateOrganizationsAccessReport is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
246 | generateOrganizationsAccessReport_entityPath = Lens.lens (\GenerateOrganizationsAccessReport' {entityPath} -> entityPath) (\s@GenerateOrganizationsAccessReport' {} a -> s {entityPath = a} :: GenerateOrganizationsAccessReport)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^
[158 of 235] Compiling Amazonka.IAM.GenerateCredentialReport

gen/Amazonka/IAM/GenerateCredentialReport.hs:146:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {description = a} with type GenerateCredentialReportResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
146 | generateCredentialReportResponse_description = Lens.lens (\GenerateCredentialReportResponse' {description} -> description) (\s@GenerateCredentialReportResponse' {} a -> s {description = a} :: GenerateCredentialReportResponse)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^
[159 of 235] Compiling Amazonka.IAM.EnableMFADevice

gen/Amazonka/IAM/EnableMFADevice.hs:170:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type EnableMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
170 | enableMFADevice_userName = Lens.lens (\EnableMFADevice' {userName} -> userName) (\s@EnableMFADevice' {} a -> s {userName = a} :: EnableMFADevice)
    |                                                                                                                 ^^^^^^^^^^^^

gen/Amazonka/IAM/EnableMFADevice.hs:180:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serialNumber = a} with type EnableMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
180 | enableMFADevice_serialNumber = Lens.lens (\EnableMFADevice' {serialNumber} -> serialNumber) (\s@EnableMFADevice' {} a -> s {serialNumber = a} :: EnableMFADevice)
    |                                                                                                                             ^^^^^^^^^^^^^^^^
[160 of 235] Compiling Amazonka.IAM.DetachUserPolicy

gen/Amazonka/IAM/DetachUserPolicy.hs:112:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type DetachUserPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | detachUserPolicy_userName = Lens.lens (\DetachUserPolicy' {userName} -> userName) (\s@DetachUserPolicy' {} a -> s {userName = a} :: DetachUserPolicy)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/IAM/DetachUserPolicy.hs:120:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type DetachUserPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | detachUserPolicy_policyArn = Lens.lens (\DetachUserPolicy' {policyArn} -> policyArn) (\s@DetachUserPolicy' {} a -> s {policyArn = a} :: DetachUserPolicy)
    |                                                                                                                       ^^^^^^^^^^^^^
[161 of 235] Compiling Amazonka.IAM.DetachRolePolicy

gen/Amazonka/IAM/DetachRolePolicy.hs:112:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type DetachRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | detachRolePolicy_roleName = Lens.lens (\DetachRolePolicy' {roleName} -> roleName) (\s@DetachRolePolicy' {} a -> s {roleName = a} :: DetachRolePolicy)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/IAM/DetachRolePolicy.hs:120:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type DetachRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | detachRolePolicy_policyArn = Lens.lens (\DetachRolePolicy' {policyArn} -> policyArn) (\s@DetachRolePolicy' {} a -> s {policyArn = a} :: DetachRolePolicy)
    |                                                                                                                       ^^^^^^^^^^^^^
[162 of 235] Compiling Amazonka.IAM.DetachGroupPolicy

gen/Amazonka/IAM/DetachGroupPolicy.hs:113:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type DetachGroupPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | detachGroupPolicy_groupName = Lens.lens (\DetachGroupPolicy' {groupName} -> groupName) (\s@DetachGroupPolicy' {} a -> s {groupName = a} :: DetachGroupPolicy)
    |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/IAM/DetachGroupPolicy.hs:121:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type DetachGroupPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
121 | detachGroupPolicy_policyArn = Lens.lens (\DetachGroupPolicy' {policyArn} -> policyArn) (\s@DetachGroupPolicy' {} a -> s {policyArn = a} :: DetachGroupPolicy)
    |                                                                                                                          ^^^^^^^^^^^^^
[163 of 235] Compiling Amazonka.IAM.DeleteVirtualMFADevice

gen/Amazonka/IAM/DeleteVirtualMFADevice.hs:96:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serialNumber = a} with type DeleteVirtualMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
96 | deleteVirtualMFADevice_serialNumber = Lens.lens (\DeleteVirtualMFADevice' {serialNumber} -> serialNumber) (\s@DeleteVirtualMFADevice' {} a -> s {serialNumber = a} :: DeleteVirtualMFADevice)
   |                                                                                                                                                  ^^^^^^^^^^^^^^^^
[164 of 235] Compiling Amazonka.IAM.DeleteUserPolicy

gen/Amazonka/IAM/DeleteUserPolicy.hs:116:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type DeleteUserPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | deleteUserPolicy_userName = Lens.lens (\DeleteUserPolicy' {userName} -> userName) (\s@DeleteUserPolicy' {} a -> s {userName = a} :: DeleteUserPolicy)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/IAM/DeleteUserPolicy.hs:125:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type DeleteUserPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
125 | deleteUserPolicy_policyName = Lens.lens (\DeleteUserPolicy' {policyName} -> policyName) (\s@DeleteUserPolicy' {} a -> s {policyName = a} :: DeleteUserPolicy)
    |                                                                                                                          ^^^^^^^^^^^^^^
[165 of 235] Compiling Amazonka.IAM.DeleteUserPermissionsBoundary

gen/Amazonka/IAM/DeleteUserPermissionsBoundary.hs:81:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type DeleteUserPermissionsBoundary is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
81 | deleteUserPermissionsBoundary_userName = Lens.lens (\DeleteUserPermissionsBoundary' {userName} -> userName) (\s@DeleteUserPermissionsBoundary' {} a -> s {userName = a} :: DeleteUserPermissionsBoundary)
   |                                                                                                                                                           ^^^^^^^^^^^^
[166 of 235] Compiling Amazonka.IAM.DeleteUser

gen/Amazonka/IAM/DeleteUser.hs:110:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type DeleteUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | deleteUser_userName = Lens.lens (\DeleteUser' {userName} -> userName) (\s@DeleteUser' {} a -> s {userName = a} :: DeleteUser)
    |                                                                                                  ^^^^^^^^^^^^
[167 of 235] Compiling Amazonka.IAM.DeleteSigningCertificate

gen/Amazonka/IAM/DeleteSigningCertificate.hs:110:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type DeleteSigningCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | deleteSigningCertificate_userName = Lens.lens (\DeleteSigningCertificate' {userName} -> userName) (\s@DeleteSigningCertificate' {} a -> s {userName = a} :: DeleteSigningCertificate)
    |                                                                                                                                            ^^^^^^^^^^^^

gen/Amazonka/IAM/DeleteSigningCertificate.hs:118:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateId = a} with type DeleteSigningCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
118 | deleteSigningCertificate_certificateId = Lens.lens (\DeleteSigningCertificate' {certificateId} -> certificateId) (\s@DeleteSigningCertificate' {} a -> s {certificateId = a} :: DeleteSigningCertificate)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^
[168 of 235] Compiling Amazonka.IAM.DeleteServiceSpecificCredential

gen/Amazonka/IAM/DeleteServiceSpecificCredential.hs:113:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type DeleteServiceSpecificCredential is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | deleteServiceSpecificCredential_userName = Lens.lens (\DeleteServiceSpecificCredential' {userName} -> userName) (\s@DeleteServiceSpecificCredential' {} a -> s {userName = a} :: DeleteServiceSpecificCredential)
    |                                                                                                                                                                 ^^^^^^^^^^^^

gen/Amazonka/IAM/DeleteServiceSpecificCredential.hs:122:218: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceSpecificCredentialId = a} with type DeleteServiceSpecificCredential is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
122 | deleteServiceSpecificCredential_serviceSpecificCredentialId = Lens.lens (\DeleteServiceSpecificCredential' {serviceSpecificCredentialId} -> serviceSpecificCredentialId) (\s@DeleteServiceSpecificCredential' {} a -> s {serviceSpecificCredentialId = a} :: DeleteServiceSpecificCredential)
    |                                                                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[169 of 235] Compiling Amazonka.IAM.DeleteServiceLinkedRole

gen/Amazonka/IAM/DeleteServiceLinkedRole.hs:96:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type DeleteServiceLinkedRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
96 | deleteServiceLinkedRole_roleName = Lens.lens (\DeleteServiceLinkedRole' {roleName} -> roleName) (\s@DeleteServiceLinkedRole' {} a -> s {roleName = a} :: DeleteServiceLinkedRole)
   |                                                                                                                                         ^^^^^^^^^^^^
[170 of 235] Compiling Amazonka.IAM.DeleteServerCertificate

gen/Amazonka/IAM/DeleteServerCertificate.hs:106:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverCertificateName = a} with type DeleteServerCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | deleteServerCertificate_serverCertificateName = Lens.lens (\DeleteServerCertificate' {serverCertificateName} -> serverCertificateName) (\s@DeleteServerCertificate' {} a -> s {serverCertificateName = a} :: DeleteServerCertificate)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
[171 of 235] Compiling Amazonka.IAM.DeleteSSHPublicKey

gen/Amazonka/IAM/DeleteSSHPublicKey.hs:111:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type DeleteSSHPublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
111 | deleteSSHPublicKey_userName = Lens.lens (\DeleteSSHPublicKey' {userName} -> userName) (\s@DeleteSSHPublicKey' {} a -> s {userName = a} :: DeleteSSHPublicKey)
    |                                                                                                                          ^^^^^^^^^^^^

gen/Amazonka/IAM/DeleteSSHPublicKey.hs:119:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSHPublicKeyId = a} with type DeleteSSHPublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | deleteSSHPublicKey_sSHPublicKeyId = Lens.lens (\DeleteSSHPublicKey' {sSHPublicKeyId} -> sSHPublicKeyId) (\s@DeleteSSHPublicKey' {} a -> s {sSHPublicKeyId = a} :: DeleteSSHPublicKey)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^
[172 of 235] Compiling Amazonka.IAM.DeleteSAMLProvider
[173 of 235] Compiling Amazonka.IAM.DeleteRolePolicy

gen/Amazonka/IAM/DeleteRolePolicy.hs:116:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type DeleteRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | deleteRolePolicy_roleName = Lens.lens (\DeleteRolePolicy' {roleName} -> roleName) (\s@DeleteRolePolicy' {} a -> s {roleName = a} :: DeleteRolePolicy)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/IAM/DeleteRolePolicy.hs:125:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type DeleteRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
125 | deleteRolePolicy_policyName = Lens.lens (\DeleteRolePolicy' {policyName} -> policyName) (\s@DeleteRolePolicy' {} a -> s {policyName = a} :: DeleteRolePolicy)
    |                                                                                                                          ^^^^^^^^^^^^^^
[174 of 235] Compiling Amazonka.IAM.DeleteRolePermissionsBoundary

gen/Amazonka/IAM/DeleteRolePermissionsBoundary.hs:81:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type DeleteRolePermissionsBoundary is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
81 | deleteRolePermissionsBoundary_roleName = Lens.lens (\DeleteRolePermissionsBoundary' {roleName} -> roleName) (\s@DeleteRolePermissionsBoundary' {} a -> s {roleName = a} :: DeleteRolePermissionsBoundary)
   |                                                                                                                                                           ^^^^^^^^^^^^
[175 of 235] Compiling Amazonka.IAM.DeleteRole

gen/Amazonka/IAM/DeleteRole.hs:93:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type DeleteRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | deleteRole_roleName = Lens.lens (\DeleteRole' {roleName} -> roleName) (\s@DeleteRole' {} a -> s {roleName = a} :: DeleteRole)
   |                                                                                                  ^^^^^^^^^^^^
[176 of 235] Compiling Amazonka.IAM.DeletePolicyVersion

gen/Amazonka/IAM/DeletePolicyVersion.hs:125:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type DeletePolicyVersion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
125 | deletePolicyVersion_policyArn = Lens.lens (\DeletePolicyVersion' {policyArn} -> policyArn) (\s@DeletePolicyVersion' {} a -> s {policyArn = a} :: DeletePolicyVersion)
    |                                                                                                                                ^^^^^^^^^^^^^

gen/Amazonka/IAM/DeletePolicyVersion.hs:139:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {versionId = a} with type DeletePolicyVersion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | deletePolicyVersion_versionId = Lens.lens (\DeletePolicyVersion' {versionId} -> versionId) (\s@DeletePolicyVersion' {} a -> s {versionId = a} :: DeletePolicyVersion)
    |                                                                                                                                ^^^^^^^^^^^^^
[177 of 235] Compiling Amazonka.IAM.DeletePolicy

gen/Amazonka/IAM/DeletePolicy.hs:106:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type DeletePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | deletePolicy_policyArn = Lens.lens (\DeletePolicy' {policyArn} -> policyArn) (\s@DeletePolicy' {} a -> s {policyArn = a} :: DeletePolicy)
    |                                                                                                           ^^^^^^^^^^^^^
[178 of 235] Compiling Amazonka.IAM.DeleteOpenIDConnectProvider
[179 of 235] Compiling Amazonka.IAM.DeleteLoginProfile

gen/Amazonka/IAM/DeleteLoginProfile.hs:100:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type DeleteLoginProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | deleteLoginProfile_userName = Lens.lens (\DeleteLoginProfile' {userName} -> userName) (\s@DeleteLoginProfile' {} a -> s {userName = a} :: DeleteLoginProfile)
    |                                                                                                                          ^^^^^^^^^^^^
[180 of 235] Compiling Amazonka.IAM.DeleteInstanceProfile

gen/Amazonka/IAM/DeleteInstanceProfile.hs:98:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceProfileName = a} with type DeleteInstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | deleteInstanceProfile_instanceProfileName = Lens.lens (\DeleteInstanceProfile' {instanceProfileName} -> instanceProfileName) (\s@DeleteInstanceProfile' {} a -> s {instanceProfileName = a} :: DeleteInstanceProfile)
   |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^
[181 of 235] Compiling Amazonka.IAM.DeleteGroupPolicy

gen/Amazonka/IAM/DeleteGroupPolicy.hs:116:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type DeleteGroupPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | deleteGroupPolicy_groupName = Lens.lens (\DeleteGroupPolicy' {groupName} -> groupName) (\s@DeleteGroupPolicy' {} a -> s {groupName = a} :: DeleteGroupPolicy)
    |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/IAM/DeleteGroupPolicy.hs:125:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type DeleteGroupPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
125 | deleteGroupPolicy_policyName = Lens.lens (\DeleteGroupPolicy' {policyName} -> policyName) (\s@DeleteGroupPolicy' {} a -> s {policyName = a} :: DeleteGroupPolicy)
    |                                                                                                                             ^^^^^^^^^^^^^^
[182 of 235] Compiling Amazonka.IAM.DeleteGroup

gen/Amazonka/IAM/DeleteGroup.hs:87:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type DeleteGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | deleteGroup_groupName = Lens.lens (\DeleteGroup' {groupName} -> groupName) (\s@DeleteGroup' {} a -> s {groupName = a} :: DeleteGroup)
   |                                                                                                        ^^^^^^^^^^^^^
[183 of 235] Compiling Amazonka.IAM.DeleteAccountPasswordPolicy
[184 of 235] Compiling Amazonka.IAM.DeleteAccountAlias
[185 of 235] Compiling Amazonka.IAM.DeleteAccessKey

gen/Amazonka/IAM/DeleteAccessKey.hs:111:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type DeleteAccessKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
111 | deleteAccessKey_userName = Lens.lens (\DeleteAccessKey' {userName} -> userName) (\s@DeleteAccessKey' {} a -> s {userName = a} :: DeleteAccessKey)
    |                                                                                                                 ^^^^^^^^^^^^

gen/Amazonka/IAM/DeleteAccessKey.hs:120:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessKeyId = a} with type DeleteAccessKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | deleteAccessKey_accessKeyId = Lens.lens (\DeleteAccessKey' {accessKeyId} -> accessKeyId) (\s@DeleteAccessKey' {} a -> s {accessKeyId = a} :: DeleteAccessKey)
    |                                                                                                                          ^^^^^^^^^^^^^^^
[186 of 235] Compiling Amazonka.IAM.DeactivateMFADevice

gen/Amazonka/IAM/DeactivateMFADevice.hs:114:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type DeactivateMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | deactivateMFADevice_userName = Lens.lens (\DeactivateMFADevice' {userName} -> userName) (\s@DeactivateMFADevice' {} a -> s {userName = a} :: DeactivateMFADevice)
    |                                                                                                                             ^^^^^^^^^^^^

gen/Amazonka/IAM/DeactivateMFADevice.hs:124:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serialNumber = a} with type DeactivateMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
124 | deactivateMFADevice_serialNumber = Lens.lens (\DeactivateMFADevice' {serialNumber} -> serialNumber) (\s@DeactivateMFADevice' {} a -> s {serialNumber = a} :: DeactivateMFADevice)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^
[187 of 235] Compiling Amazonka.IAM.CreateVirtualMFADevice

gen/Amazonka/IAM/CreateVirtualMFADevice.hs:176:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {path = a} with type CreateVirtualMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
176 | createVirtualMFADevice_path = Lens.lens (\CreateVirtualMFADevice' {path} -> path) (\s@CreateVirtualMFADevice' {} a -> s {path = a} :: CreateVirtualMFADevice)
    |                                                                                                                          ^^^^^^^^

gen/Amazonka/IAM/CreateVirtualMFADevice.hs:188:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateVirtualMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
188 | createVirtualMFADevice_tags = Lens.lens (\CreateVirtualMFADevice' {tags} -> tags) (\s@CreateVirtualMFADevice' {} a -> s {tags = a} :: CreateVirtualMFADevice) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                          ^^^^^^^^
[188 of 235] Compiling Amazonka.IAM.CreateUser

gen/Amazonka/IAM/CreateUser.hs:165:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {path = a} with type CreateUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
165 | createUser_path = Lens.lens (\CreateUser' {path} -> path) (\s@CreateUser' {} a -> s {path = a} :: CreateUser)
    |                                                                                      ^^^^^^^^

gen/Amazonka/IAM/CreateUser.hs:170:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {permissionsBoundary = a} with type CreateUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
170 | createUser_permissionsBoundary = Lens.lens (\CreateUser' {permissionsBoundary} -> permissionsBoundary) (\s@CreateUser' {} a -> s {permissionsBoundary = a} :: CreateUser)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/CreateUser.hs:182:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
182 | createUser_tags = Lens.lens (\CreateUser' {tags} -> tags) (\s@CreateUser' {} a -> s {tags = a} :: CreateUser) Prelude.. Lens.mapping Lens.coerced
    |                                                                                      ^^^^^^^^

gen/Amazonka/IAM/CreateUser.hs:190:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type CreateUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
190 | createUser_userName = Lens.lens (\CreateUser' {userName} -> userName) (\s@CreateUser' {} a -> s {userName = a} :: CreateUser)
    |                                                                                                  ^^^^^^^^^^^^

gen/Amazonka/IAM/CreateUser.hs:275:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {user = a} with type CreateUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
275 | createUserResponse_user = Lens.lens (\CreateUserResponse' {user} -> user) (\s@CreateUserResponse' {} a -> s {user = a} :: CreateUserResponse)
    |                                                                                                              ^^^^^^^^
[189 of 235] Compiling Amazonka.IAM.CreateServiceSpecificCredential

gen/Amazonka/IAM/CreateServiceSpecificCredential.hs:132:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type CreateServiceSpecificCredential is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | createServiceSpecificCredential_userName = Lens.lens (\CreateServiceSpecificCredential' {userName} -> userName) (\s@CreateServiceSpecificCredential' {} a -> s {userName = a} :: CreateServiceSpecificCredential)
    |                                                                                                                                                                 ^^^^^^^^^^^^

gen/Amazonka/IAM/CreateServiceSpecificCredential.hs:138:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type CreateServiceSpecificCredential is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | createServiceSpecificCredential_serviceName = Lens.lens (\CreateServiceSpecificCredential' {serviceName} -> serviceName) (\s@CreateServiceSpecificCredential' {} a -> s {serviceName = a} :: CreateServiceSpecificCredential)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^
[190 of 235] Compiling Amazonka.IAM.CreateServiceLinkedRole

gen/Amazonka/IAM/CreateServiceLinkedRole.hs:147:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {description = a} with type CreateServiceLinkedRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
147 | createServiceLinkedRole_description = Lens.lens (\CreateServiceLinkedRole' {description} -> description) (\s@CreateServiceLinkedRole' {} a -> s {description = a} :: CreateServiceLinkedRole)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^
[191 of 235] Compiling Amazonka.IAM.CreateSAMLProvider

gen/Amazonka/IAM/CreateSAMLProvider.hs:168:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateSAMLProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
168 | createSAMLProvider_tags = Lens.lens (\CreateSAMLProvider' {tags} -> tags) (\s@CreateSAMLProvider' {} a -> s {tags = a} :: CreateSAMLProvider) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                              ^^^^^^^^

gen/Amazonka/IAM/CreateSAMLProvider.hs:190:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type CreateSAMLProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
190 | createSAMLProvider_name = Lens.lens (\CreateSAMLProvider' {name} -> name) (\s@CreateSAMLProvider' {} a -> s {name = a} :: CreateSAMLProvider)
    |                                                                                                              ^^^^^^^^

gen/Amazonka/IAM/CreateSAMLProvider.hs:301:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateSAMLProviderResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
301 | createSAMLProviderResponse_tags = Lens.lens (\CreateSAMLProviderResponse' {tags} -> tags) (\s@CreateSAMLProviderResponse' {} a -> s {tags = a} :: CreateSAMLProviderResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                      ^^^^^^^^
[192 of 235] Compiling Amazonka.IAM.CreateRole

gen/Amazonka/IAM/CreateRole.hs:246:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {description = a} with type CreateRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
246 | createRole_description = Lens.lens (\CreateRole' {description} -> description) (\s@CreateRole' {} a -> s {description = a} :: CreateRole)
    |                                                                                                           ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/CreateRole.hs:265:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxSessionDuration = a} with type CreateRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
265 | createRole_maxSessionDuration = Lens.lens (\CreateRole' {maxSessionDuration} -> maxSessionDuration) (\s@CreateRole' {} a -> s {maxSessionDuration = a} :: CreateRole)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/CreateRole.hs:282:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {path = a} with type CreateRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
282 | createRole_path = Lens.lens (\CreateRole' {path} -> path) (\s@CreateRole' {} a -> s {path = a} :: CreateRole)
    |                                                                                      ^^^^^^^^

gen/Amazonka/IAM/CreateRole.hs:287:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {permissionsBoundary = a} with type CreateRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
287 | createRole_permissionsBoundary = Lens.lens (\CreateRole' {permissionsBoundary} -> permissionsBoundary) (\s@CreateRole' {} a -> s {permissionsBoundary = a} :: CreateRole)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/CreateRole.hs:299:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
299 | createRole_tags = Lens.lens (\CreateRole' {tags} -> tags) (\s@CreateRole' {} a -> s {tags = a} :: CreateRole) Prelude.. Lens.mapping Lens.coerced
    |                                                                                      ^^^^^^^^

gen/Amazonka/IAM/CreateRole.hs:307:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type CreateRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
307 | createRole_roleName = Lens.lens (\CreateRole' {roleName} -> roleName) (\s@CreateRole' {} a -> s {roleName = a} :: CreateRole)
    |                                                                                                  ^^^^^^^^^^^^

gen/Amazonka/IAM/CreateRole.hs:332:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {assumeRolePolicyDocument = a} with type CreateRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
332 | createRole_assumeRolePolicyDocument = Lens.lens (\CreateRole' {assumeRolePolicyDocument} -> assumeRolePolicyDocument) (\s@CreateRole' {} a -> s {assumeRolePolicyDocument = a} :: CreateRole)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[193 of 235] Compiling Amazonka.IAM.CreatePolicyVersion

gen/Amazonka/IAM/CreatePolicyVersion.hs:193:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type CreatePolicyVersion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
193 | createPolicyVersion_policyArn = Lens.lens (\CreatePolicyVersion' {policyArn} -> policyArn) (\s@CreatePolicyVersion' {} a -> s {policyArn = a} :: CreatePolicyVersion)
    |                                                                                                                                ^^^^^^^^^^^^^

gen/Amazonka/IAM/CreatePolicyVersion.hs:220:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyDocument = a} with type CreatePolicyVersion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
220 | createPolicyVersion_policyDocument = Lens.lens (\CreatePolicyVersion' {policyDocument} -> policyDocument) (\s@CreatePolicyVersion' {} a -> s {policyDocument = a} :: CreatePolicyVersion)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^
[194 of 235] Compiling Amazonka.IAM.CreatePolicy

gen/Amazonka/IAM/CreatePolicy.hs:248:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {description = a} with type CreatePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
248 | createPolicy_description = Lens.lens (\CreatePolicy' {description} -> description) (\s@CreatePolicy' {} a -> s {description = a} :: CreatePolicy)
    |                                                                                                                 ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/CreatePolicy.hs:269:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {path = a} with type CreatePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
269 | createPolicy_path = Lens.lens (\CreatePolicy' {path} -> path) (\s@CreatePolicy' {} a -> s {path = a} :: CreatePolicy)
    |                                                                                            ^^^^^^^^

gen/Amazonka/IAM/CreatePolicy.hs:281:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreatePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
281 | createPolicy_tags = Lens.lens (\CreatePolicy' {tags} -> tags) (\s@CreatePolicy' {} a -> s {tags = a} :: CreatePolicy) Prelude.. Lens.mapping Lens.coerced
    |                                                                                            ^^^^^^^^

gen/Amazonka/IAM/CreatePolicy.hs:289:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyName = a} with type CreatePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
289 | createPolicy_policyName = Lens.lens (\CreatePolicy' {policyName} -> policyName) (\s@CreatePolicy' {} a -> s {policyName = a} :: CreatePolicy)
    |                                                                                                              ^^^^^^^^^^^^^^

gen/Amazonka/IAM/CreatePolicy.hs:320:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyDocument = a} with type CreatePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
320 | createPolicy_policyDocument = Lens.lens (\CreatePolicy' {policyDocument} -> policyDocument) (\s@CreatePolicy' {} a -> s {policyDocument = a} :: CreatePolicy)
    |                                                                                                                          ^^^^^^^^^^^^^^^^^^
[195 of 235] Compiling Amazonka.IAM.CreateOpenIDConnectProvider

gen/Amazonka/IAM/CreateOpenIDConnectProvider.hs:259:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateOpenIDConnectProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
259 | createOpenIDConnectProvider_tags = Lens.lens (\CreateOpenIDConnectProvider' {tags} -> tags) (\s@CreateOpenIDConnectProvider' {} a -> s {tags = a} :: CreateOpenIDConnectProvider) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                         ^^^^^^^^

gen/Amazonka/IAM/CreateOpenIDConnectProvider.hs:422:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateOpenIDConnectProviderResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
422 | createOpenIDConnectProviderResponse_tags = Lens.lens (\CreateOpenIDConnectProviderResponse' {tags} -> tags) (\s@CreateOpenIDConnectProviderResponse' {} a -> s {tags = a} :: CreateOpenIDConnectProviderResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                 ^^^^^^^^
[196 of 235] Compiling Amazonka.IAM.CreateLoginProfile

gen/Amazonka/IAM/CreateLoginProfile.hs:138:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {passwordResetRequired = a} with type CreateLoginProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | createLoginProfile_passwordResetRequired = Lens.lens (\CreateLoginProfile' {passwordResetRequired} -> passwordResetRequired) (\s@CreateLoginProfile' {} a -> s {passwordResetRequired = a} :: CreateLoginProfile)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/CreateLoginProfile.hs:148:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type CreateLoginProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
148 | createLoginProfile_userName = Lens.lens (\CreateLoginProfile' {userName} -> userName) (\s@CreateLoginProfile' {} a -> s {userName = a} :: CreateLoginProfile)
    |                                                                                                                          ^^^^^^^^^^^^
[197 of 235] Compiling Amazonka.IAM.CreateInstanceProfile

gen/Amazonka/IAM/CreateInstanceProfile.hs:164:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {path = a} with type CreateInstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
164 | createInstanceProfile_path = Lens.lens (\CreateInstanceProfile' {path} -> path) (\s@CreateInstanceProfile' {} a -> s {path = a} :: CreateInstanceProfile)
    |                                                                                                                       ^^^^^^^^

gen/Amazonka/IAM/CreateInstanceProfile.hs:176:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateInstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
176 | createInstanceProfile_tags = Lens.lens (\CreateInstanceProfile' {tags} -> tags) (\s@CreateInstanceProfile' {} a -> s {tags = a} :: CreateInstanceProfile) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                       ^^^^^^^^

gen/Amazonka/IAM/CreateInstanceProfile.hs:185:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceProfileName = a} with type CreateInstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
185 | createInstanceProfile_instanceProfileName = Lens.lens (\CreateInstanceProfile' {instanceProfileName} -> instanceProfileName) (\s@CreateInstanceProfile' {} a -> s {instanceProfileName = a} :: CreateInstanceProfile)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^
[198 of 235] Compiling Amazonka.IAM.CreateGroup

gen/Amazonka/IAM/CreateGroup.hs:134:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {path = a} with type CreateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
134 | createGroup_path = Lens.lens (\CreateGroup' {path} -> path) (\s@CreateGroup' {} a -> s {path = a} :: CreateGroup)
    |                                                                                         ^^^^^^^^

gen/Amazonka/IAM/CreateGroup.hs:142:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type CreateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
142 | createGroup_groupName = Lens.lens (\CreateGroup' {groupName} -> groupName) (\s@CreateGroup' {} a -> s {groupName = a} :: CreateGroup)
    |                                                                                                        ^^^^^^^^^^^^^
[199 of 235] Compiling Amazonka.IAM.CreateAccountAlias
[200 of 235] Compiling Amazonka.IAM.CreateAccessKey

gen/Amazonka/IAM/CreateAccessKey.hs:107:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type CreateAccessKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
107 | createAccessKey_userName = Lens.lens (\CreateAccessKey' {userName} -> userName) (\s@CreateAccessKey' {} a -> s {userName = a} :: CreateAccessKey)
    |                                                                                                                 ^^^^^^^^^^^^
[201 of 235] Compiling Amazonka.IAM.ChangePassword
[202 of 235] Compiling Amazonka.IAM.AttachUserPolicy

gen/Amazonka/IAM/AttachUserPolicy.hs:119:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type AttachUserPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | attachUserPolicy_userName = Lens.lens (\AttachUserPolicy' {userName} -> userName) (\s@AttachUserPolicy' {} a -> s {userName = a} :: AttachUserPolicy)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/IAM/AttachUserPolicy.hs:127:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type AttachUserPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | attachUserPolicy_policyArn = Lens.lens (\AttachUserPolicy' {policyArn} -> policyArn) (\s@AttachUserPolicy' {} a -> s {policyArn = a} :: AttachUserPolicy)
    |                                                                                                                       ^^^^^^^^^^^^^
[203 of 235] Compiling Amazonka.IAM.AttachRolePolicy

gen/Amazonka/IAM/AttachRolePolicy.hs:121:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type AttachRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
121 | attachRolePolicy_roleName = Lens.lens (\AttachRolePolicy' {roleName} -> roleName) (\s@AttachRolePolicy' {} a -> s {roleName = a} :: AttachRolePolicy)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/IAM/AttachRolePolicy.hs:129:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type AttachRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | attachRolePolicy_policyArn = Lens.lens (\AttachRolePolicy' {policyArn} -> policyArn) (\s@AttachRolePolicy' {} a -> s {policyArn = a} :: AttachRolePolicy)
    |                                                                                                                       ^^^^^^^^^^^^^
[204 of 235] Compiling Amazonka.IAM.AttachGroupPolicy

gen/Amazonka/IAM/AttachGroupPolicy.hs:116:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type AttachGroupPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | attachGroupPolicy_groupName = Lens.lens (\AttachGroupPolicy' {groupName} -> groupName) (\s@AttachGroupPolicy' {} a -> s {groupName = a} :: AttachGroupPolicy)
    |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/IAM/AttachGroupPolicy.hs:124:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type AttachGroupPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
124 | attachGroupPolicy_policyArn = Lens.lens (\AttachGroupPolicy' {policyArn} -> policyArn) (\s@AttachGroupPolicy' {} a -> s {policyArn = a} :: AttachGroupPolicy)
    |                                                                                                                          ^^^^^^^^^^^^^
[205 of 235] Compiling Amazonka.IAM.AddUserToGroup

gen/Amazonka/IAM/AddUserToGroup.hs:106:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type AddUserToGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | addUserToGroup_groupName = Lens.lens (\AddUserToGroup' {groupName} -> groupName) (\s@AddUserToGroup' {} a -> s {groupName = a} :: AddUserToGroup)
    |                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/IAM/AddUserToGroup.hs:115:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type AddUserToGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | addUserToGroup_userName = Lens.lens (\AddUserToGroup' {userName} -> userName) (\s@AddUserToGroup' {} a -> s {userName = a} :: AddUserToGroup)
    |                                                                                                              ^^^^^^^^^^^^
[206 of 235] Compiling Amazonka.IAM.AddRoleToInstanceProfile

gen/Amazonka/IAM/AddRoleToInstanceProfile.hs:127:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceProfileName = a} with type AddRoleToInstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | addRoleToInstanceProfile_instanceProfileName = Lens.lens (\AddRoleToInstanceProfile' {instanceProfileName} -> instanceProfileName) (\s@AddRoleToInstanceProfile' {} a -> s {instanceProfileName = a} :: AddRoleToInstanceProfile)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/AddRoleToInstanceProfile.hs:136:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type AddRoleToInstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
136 | addRoleToInstanceProfile_roleName = Lens.lens (\AddRoleToInstanceProfile' {roleName} -> roleName) (\s@AddRoleToInstanceProfile' {} a -> s {roleName = a} :: AddRoleToInstanceProfile)
    |                                                                                                                                            ^^^^^^^^^^^^
[207 of 235] Compiling Amazonka.IAM.AddClientIDToOpenIDConnectProvider
[208 of 235] Compiling Amazonka.IAM.UntagInstanceProfile

gen/Amazonka/IAM/UntagInstanceProfile.hs:100:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceProfileName = a} with type UntagInstanceProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | untagInstanceProfile_instanceProfileName = Lens.lens (\UntagInstanceProfile' {instanceProfileName} -> instanceProfileName) (\s@UntagInstanceProfile' {} a -> s {instanceProfileName = a} :: UntagInstanceProfile)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^
[209 of 235] Compiling Amazonka.IAM.UntagMFADevice

gen/Amazonka/IAM/UntagMFADevice.hs:105:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serialNumber = a} with type UntagMFADevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
105 | untagMFADevice_serialNumber = Lens.lens (\UntagMFADevice' {serialNumber} -> serialNumber) (\s@UntagMFADevice' {} a -> s {serialNumber = a} :: UntagMFADevice)
    |                                                                                                                          ^^^^^^^^^^^^^^^^
[210 of 235] Compiling Amazonka.IAM.UntagOpenIDConnectProvider
[211 of 235] Compiling Amazonka.IAM.UntagPolicy

gen/Amazonka/IAM/UntagPolicy.hs:102:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyArn = a} with type UntagPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | untagPolicy_policyArn = Lens.lens (\UntagPolicy' {policyArn} -> policyArn) (\s@UntagPolicy' {} a -> s {policyArn = a} :: UntagPolicy)
    |                                                                                                        ^^^^^^^^^^^^^
[212 of 235] Compiling Amazonka.IAM.UntagRole

gen/Amazonka/IAM/UntagRole.hs:99:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type UntagRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | untagRole_roleName = Lens.lens (\UntagRole' {roleName} -> roleName) (\s@UntagRole' {} a -> s {roleName = a} :: UntagRole)
   |                                                                                               ^^^^^^^^^^^^
[213 of 235] Compiling Amazonka.IAM.UntagSAMLProvider
[214 of 235] Compiling Amazonka.IAM.UntagServerCertificate

gen/Amazonka/IAM/UntagServerCertificate.hs:110:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverCertificateName = a} with type UntagServerCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | untagServerCertificate_serverCertificateName = Lens.lens (\UntagServerCertificate' {serverCertificateName} -> serverCertificateName) (\s@UntagServerCertificate' {} a -> s {serverCertificateName = a} :: UntagServerCertificate)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^
[215 of 235] Compiling Amazonka.IAM.UntagUser

gen/Amazonka/IAM/UntagUser.hs:99:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type UntagUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | untagUser_userName = Lens.lens (\UntagUser' {userName} -> userName) (\s@UntagUser' {} a -> s {userName = a} :: UntagUser)
   |                                                                                               ^^^^^^^^^^^^
[216 of 235] Compiling Amazonka.IAM.UpdateAccessKey

gen/Amazonka/IAM/UpdateAccessKey.hs:129:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type UpdateAccessKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | updateAccessKey_userName = Lens.lens (\UpdateAccessKey' {userName} -> userName) (\s@UpdateAccessKey' {} a -> s {userName = a} :: UpdateAccessKey)
    |                                                                                                                 ^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateAccessKey.hs:137:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessKeyId = a} with type UpdateAccessKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | updateAccessKey_accessKeyId = Lens.lens (\UpdateAccessKey' {accessKeyId} -> accessKeyId) (\s@UpdateAccessKey' {} a -> s {accessKeyId = a} :: UpdateAccessKey)
    |                                                                                                                          ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateAccessKey.hs:143:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type UpdateAccessKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
143 | updateAccessKey_status = Lens.lens (\UpdateAccessKey' {status} -> status) (\s@UpdateAccessKey' {} a -> s {status = a} :: UpdateAccessKey)
    |                                                                                                           ^^^^^^^^^^
[217 of 235] Compiling Amazonka.IAM.UpdateAccountPasswordPolicy

gen/Amazonka/IAM/UpdateAccountPasswordPolicy.hs:262:203: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {allowUsersToChangePassword = a} with type UpdateAccountPasswordPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
262 | updateAccountPasswordPolicy_allowUsersToChangePassword = Lens.lens (\UpdateAccountPasswordPolicy' {allowUsersToChangePassword} -> allowUsersToChangePassword) (\s@UpdateAccountPasswordPolicy' {} a -> s {allowUsersToChangePassword = a} :: UpdateAccountPasswordPolicy)
    |                                                                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateAccountPasswordPolicy.hs:283:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hardExpiry = a} with type UpdateAccountPasswordPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
283 | updateAccountPasswordPolicy_hardExpiry = Lens.lens (\UpdateAccountPasswordPolicy' {hardExpiry} -> hardExpiry) (\s@UpdateAccountPasswordPolicy' {} a -> s {hardExpiry = a} :: UpdateAccountPasswordPolicy)
    |                                                                                                                                                           ^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateAccountPasswordPolicy.hs:291:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxPasswordAge = a} with type UpdateAccountPasswordPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
291 | updateAccountPasswordPolicy_maxPasswordAge = Lens.lens (\UpdateAccountPasswordPolicy' {maxPasswordAge} -> maxPasswordAge) (\s@UpdateAccountPasswordPolicy' {} a -> s {maxPasswordAge = a} :: UpdateAccountPasswordPolicy)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateAccountPasswordPolicy.hs:298:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {minimumPasswordLength = a} with type UpdateAccountPasswordPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
298 | updateAccountPasswordPolicy_minimumPasswordLength = Lens.lens (\UpdateAccountPasswordPolicy' {minimumPasswordLength} -> minimumPasswordLength) (\s@UpdateAccountPasswordPolicy' {} a -> s {minimumPasswordLength = a} :: UpdateAccountPasswordPolicy)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateAccountPasswordPolicy.hs:307:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {passwordReusePrevention = a} with type UpdateAccountPasswordPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
307 | updateAccountPasswordPolicy_passwordReusePrevention = Lens.lens (\UpdateAccountPasswordPolicy' {passwordReusePrevention} -> passwordReusePrevention) (\s@UpdateAccountPasswordPolicy' {} a -> s {passwordReusePrevention = a} :: UpdateAccountPasswordPolicy)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateAccountPasswordPolicy.hs:316:203: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {requireLowercaseCharacters = a} with type UpdateAccountPasswordPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
316 | updateAccountPasswordPolicy_requireLowercaseCharacters = Lens.lens (\UpdateAccountPasswordPolicy' {requireLowercaseCharacters} -> requireLowercaseCharacters) (\s@UpdateAccountPasswordPolicy' {} a -> s {requireLowercaseCharacters = a} :: UpdateAccountPasswordPolicy)
    |                                                                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateAccountPasswordPolicy.hs:325:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {requireNumbers = a} with type UpdateAccountPasswordPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
325 | updateAccountPasswordPolicy_requireNumbers = Lens.lens (\UpdateAccountPasswordPolicy' {requireNumbers} -> requireNumbers) (\s@UpdateAccountPasswordPolicy' {} a -> s {requireNumbers = a} :: UpdateAccountPasswordPolicy)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateAccountPasswordPolicy.hs:336:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {requireSymbols = a} with type UpdateAccountPasswordPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
336 | updateAccountPasswordPolicy_requireSymbols = Lens.lens (\UpdateAccountPasswordPolicy' {requireSymbols} -> requireSymbols) (\s@UpdateAccountPasswordPolicy' {} a -> s {requireSymbols = a} :: UpdateAccountPasswordPolicy)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateAccountPasswordPolicy.hs:345:203: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {requireUppercaseCharacters = a} with type UpdateAccountPasswordPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
345 | updateAccountPasswordPolicy_requireUppercaseCharacters = Lens.lens (\UpdateAccountPasswordPolicy' {requireUppercaseCharacters} -> requireUppercaseCharacters) (\s@UpdateAccountPasswordPolicy' {} a -> s {requireUppercaseCharacters = a} :: UpdateAccountPasswordPolicy)
    |                                                                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[218 of 235] Compiling Amazonka.IAM.UpdateAssumeRolePolicy

gen/Amazonka/IAM/UpdateAssumeRolePolicy.hs:133:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type UpdateAssumeRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
133 | updateAssumeRolePolicy_roleName = Lens.lens (\UpdateAssumeRolePolicy' {roleName} -> roleName) (\s@UpdateAssumeRolePolicy' {} a -> s {roleName = a} :: UpdateAssumeRolePolicy)
    |                                                                                                                                      ^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateAssumeRolePolicy.hs:154:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policyDocument = a} with type UpdateAssumeRolePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
154 | updateAssumeRolePolicy_policyDocument = Lens.lens (\UpdateAssumeRolePolicy' {policyDocument} -> policyDocument) (\s@UpdateAssumeRolePolicy' {} a -> s {policyDocument = a} :: UpdateAssumeRolePolicy)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^
[219 of 235] Compiling Amazonka.IAM.UpdateGroup

gen/Amazonka/IAM/UpdateGroup.hs:166:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type UpdateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
166 | updateGroup_groupName = Lens.lens (\UpdateGroup' {groupName} -> groupName) (\s@UpdateGroup' {} a -> s {groupName = a} :: UpdateGroup)
    |                                                                                                        ^^^^^^^^^^^^^
[220 of 235] Compiling Amazonka.IAM.UpdateLoginProfile

gen/Amazonka/IAM/UpdateLoginProfile.hs:158:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {passwordResetRequired = a} with type UpdateLoginProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
158 | updateLoginProfile_passwordResetRequired = Lens.lens (\UpdateLoginProfile' {passwordResetRequired} -> passwordResetRequired) (\s@UpdateLoginProfile' {} a -> s {passwordResetRequired = a} :: UpdateLoginProfile)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateLoginProfile.hs:167:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type UpdateLoginProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
167 | updateLoginProfile_userName = Lens.lens (\UpdateLoginProfile' {userName} -> userName) (\s@UpdateLoginProfile' {} a -> s {userName = a} :: UpdateLoginProfile)
    |                                                                                                                          ^^^^^^^^^^^^
[221 of 235] Compiling Amazonka.IAM.UpdateOpenIDConnectProviderThumbprint
[222 of 235] Compiling Amazonka.IAM.UpdateRole

gen/Amazonka/IAM/UpdateRole.hs:118:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {description = a} with type UpdateRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
118 | updateRole_description = Lens.lens (\UpdateRole' {description} -> description) (\s@UpdateRole' {} a -> s {description = a} :: UpdateRole)
    |                                                                                                           ^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateRole.hs:137:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxSessionDuration = a} with type UpdateRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | updateRole_maxSessionDuration = Lens.lens (\UpdateRole' {maxSessionDuration} -> maxSessionDuration) (\s@UpdateRole' {} a -> s {maxSessionDuration = a} :: UpdateRole)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateRole.hs:141:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type UpdateRole is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
141 | updateRole_roleName = Lens.lens (\UpdateRole' {roleName} -> roleName) (\s@UpdateRole' {} a -> s {roleName = a} :: UpdateRole)
    |                                                                                                  ^^^^^^^^^^^^
[223 of 235] Compiling Amazonka.IAM.UpdateRoleDescription

gen/Amazonka/IAM/UpdateRoleDescription.hs:89:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleName = a} with type UpdateRoleDescription is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
89 | updateRoleDescription_roleName = Lens.lens (\UpdateRoleDescription' {roleName} -> roleName) (\s@UpdateRoleDescription' {} a -> s {roleName = a} :: UpdateRoleDescription)
   |                                                                                                                                   ^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateRoleDescription.hs:93:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {description = a} with type UpdateRoleDescription is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | updateRoleDescription_description = Lens.lens (\UpdateRoleDescription' {description} -> description) (\s@UpdateRoleDescription' {} a -> s {description = a} :: UpdateRoleDescription)
   |                                                                                                                                            ^^^^^^^^^^^^^^^
[224 of 235] Compiling Amazonka.IAM.UpdateSAMLProvider

gen/Amazonka/IAM/UpdateSAMLProvider.hs:123:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sAMLProviderArn = a} with type UpdateSAMLProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | updateSAMLProvider_sAMLProviderArn = Lens.lens (\UpdateSAMLProvider' {sAMLProviderArn} -> sAMLProviderArn) (\s@UpdateSAMLProvider' {} a -> s {sAMLProviderArn = a} :: UpdateSAMLProvider)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateSAMLProvider.hs:203:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sAMLProviderArn = a} with type UpdateSAMLProviderResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
203 | updateSAMLProviderResponse_sAMLProviderArn = Lens.lens (\UpdateSAMLProviderResponse' {sAMLProviderArn} -> sAMLProviderArn) (\s@UpdateSAMLProviderResponse' {} a -> s {sAMLProviderArn = a} :: UpdateSAMLProviderResponse)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^
[225 of 235] Compiling Amazonka.IAM.UpdateSSHPublicKey

gen/Amazonka/IAM/UpdateSSHPublicKey.hs:129:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type UpdateSSHPublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | updateSSHPublicKey_userName = Lens.lens (\UpdateSSHPublicKey' {userName} -> userName) (\s@UpdateSSHPublicKey' {} a -> s {userName = a} :: UpdateSSHPublicKey)
    |                                                                                                                          ^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateSSHPublicKey.hs:137:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSHPublicKeyId = a} with type UpdateSSHPublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | updateSSHPublicKey_sSHPublicKeyId = Lens.lens (\UpdateSSHPublicKey' {sSHPublicKeyId} -> sSHPublicKeyId) (\s@UpdateSSHPublicKey' {} a -> s {sSHPublicKeyId = a} :: UpdateSSHPublicKey)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateSSHPublicKey.hs:143:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type UpdateSSHPublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
143 | updateSSHPublicKey_status = Lens.lens (\UpdateSSHPublicKey' {status} -> status) (\s@UpdateSSHPublicKey' {} a -> s {status = a} :: UpdateSSHPublicKey)
    |                                                                                                                    ^^^^^^^^^^
[226 of 235] Compiling Amazonka.IAM.UpdateServerCertificate

gen/Amazonka/IAM/UpdateServerCertificate.hs:179:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverCertificateName = a} with type UpdateServerCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
179 | updateServerCertificate_serverCertificateName = Lens.lens (\UpdateServerCertificate' {serverCertificateName} -> serverCertificateName) (\s@UpdateServerCertificate' {} a -> s {serverCertificateName = a} :: UpdateServerCertificate)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
[227 of 235] Compiling Amazonka.IAM.UpdateServiceSpecificCredential

gen/Amazonka/IAM/UpdateServiceSpecificCredential.hs:124:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type UpdateServiceSpecificCredential is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
124 | updateServiceSpecificCredential_userName = Lens.lens (\UpdateServiceSpecificCredential' {userName} -> userName) (\s@UpdateServiceSpecificCredential' {} a -> s {userName = a} :: UpdateServiceSpecificCredential)
    |                                                                                                                                                                 ^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateServiceSpecificCredential.hs:132:218: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceSpecificCredentialId = a} with type UpdateServiceSpecificCredential is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | updateServiceSpecificCredential_serviceSpecificCredentialId = Lens.lens (\UpdateServiceSpecificCredential' {serviceSpecificCredentialId} -> serviceSpecificCredentialId) (\s@UpdateServiceSpecificCredential' {} a -> s {serviceSpecificCredentialId = a} :: UpdateServiceSpecificCredential)
    |                                                                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateServiceSpecificCredential.hs:136:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type UpdateServiceSpecificCredential is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
136 | updateServiceSpecificCredential_status = Lens.lens (\UpdateServiceSpecificCredential' {status} -> status) (\s@UpdateServiceSpecificCredential' {} a -> s {status = a} :: UpdateServiceSpecificCredential)
    |                                                                                                                                                           ^^^^^^^^^^
[228 of 235] Compiling Amazonka.IAM.UpdateSigningCertificate

gen/Amazonka/IAM/UpdateSigningCertificate.hs:124:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type UpdateSigningCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
124 | updateSigningCertificate_userName = Lens.lens (\UpdateSigningCertificate' {userName} -> userName) (\s@UpdateSigningCertificate' {} a -> s {userName = a} :: UpdateSigningCertificate)
    |                                                                                                                                            ^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateSigningCertificate.hs:132:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateId = a} with type UpdateSigningCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | updateSigningCertificate_certificateId = Lens.lens (\UpdateSigningCertificate' {certificateId} -> certificateId) (\s@UpdateSigningCertificate' {} a -> s {certificateId = a} :: UpdateSigningCertificate)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UpdateSigningCertificate.hs:138:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type UpdateSigningCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | updateSigningCertificate_status = Lens.lens (\UpdateSigningCertificate' {status} -> status) (\s@UpdateSigningCertificate' {} a -> s {status = a} :: UpdateSigningCertificate)
    |                                                                                                                                      ^^^^^^^^^^
[229 of 235] Compiling Amazonka.IAM.UpdateUser

gen/Amazonka/IAM/UpdateUser.hs:167:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type UpdateUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
167 | updateUser_userName = Lens.lens (\UpdateUser' {userName} -> userName) (\s@UpdateUser' {} a -> s {userName = a} :: UpdateUser)
    |                                                                                                  ^^^^^^^^^^^^
[230 of 235] Compiling Amazonka.IAM.UploadSSHPublicKey

gen/Amazonka/IAM/UploadSSHPublicKey.hs:137:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type UploadSSHPublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | uploadSSHPublicKey_userName = Lens.lens (\UploadSSHPublicKey' {userName} -> userName) (\s@UploadSSHPublicKey' {} a -> s {userName = a} :: UploadSSHPublicKey)
    |                                                                                                                          ^^^^^^^^^^^^

gen/Amazonka/IAM/UploadSSHPublicKey.hs:156:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sSHPublicKeyBody = a} with type UploadSSHPublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
156 | uploadSSHPublicKey_sSHPublicKeyBody = Lens.lens (\UploadSSHPublicKey' {sSHPublicKeyBody} -> sSHPublicKeyBody) (\s@UploadSSHPublicKey' {} a -> s {sSHPublicKeyBody = a} :: UploadSSHPublicKey)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^
[231 of 235] Compiling Amazonka.IAM.UploadServerCertificate

gen/Amazonka/IAM/UploadServerCertificate.hs:297:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateChain = a} with type UploadServerCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
297 | uploadServerCertificate_certificateChain = Lens.lens (\UploadServerCertificate' {certificateChain} -> certificateChain) (\s@UploadServerCertificate' {} a -> s {certificateChain = a} :: UploadServerCertificate)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UploadServerCertificate.hs:318:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {path = a} with type UploadServerCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
318 | uploadServerCertificate_path = Lens.lens (\UploadServerCertificate' {path} -> path) (\s@UploadServerCertificate' {} a -> s {path = a} :: UploadServerCertificate)
    |                                                                                                                             ^^^^^^^^

gen/Amazonka/IAM/UploadServerCertificate.hs:330:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type UploadServerCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
330 | uploadServerCertificate_tags = Lens.lens (\UploadServerCertificate' {tags} -> tags) (\s@UploadServerCertificate' {} a -> s {tags = a} :: UploadServerCertificate) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                             ^^^^^^^^

gen/Amazonka/IAM/UploadServerCertificate.hs:340:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverCertificateName = a} with type UploadServerCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
340 | uploadServerCertificate_serverCertificateName = Lens.lens (\UploadServerCertificate' {serverCertificateName} -> serverCertificateName) (\s@UploadServerCertificate' {} a -> s {serverCertificateName = a} :: UploadServerCertificate)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UploadServerCertificate.hs:356:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateBody = a} with type UploadServerCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
356 | uploadServerCertificate_certificateBody = Lens.lens (\UploadServerCertificate' {certificateBody} -> certificateBody) (\s@UploadServerCertificate' {} a -> s {certificateBody = a} :: UploadServerCertificate)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UploadServerCertificate.hs:488:212: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serverCertificateMetadata = a} with type UploadServerCertificateResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
488 | uploadServerCertificateResponse_serverCertificateMetadata = Lens.lens (\UploadServerCertificateResponse' {serverCertificateMetadata} -> serverCertificateMetadata) (\s@UploadServerCertificateResponse' {} a -> s {serverCertificateMetadata = a} :: UploadServerCertificateResponse)
    |                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/IAM/UploadServerCertificate.hs:496:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type UploadServerCertificateResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
496 | uploadServerCertificateResponse_tags = Lens.lens (\UploadServerCertificateResponse' {tags} -> tags) (\s@UploadServerCertificateResponse' {} a -> s {tags = a} :: UploadServerCertificateResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                     ^^^^^^^^
[232 of 235] Compiling Amazonka.IAM.UploadSigningCertificate

gen/Amazonka/IAM/UploadSigningCertificate.hs:149:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userName = a} with type UploadSigningCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
149 | uploadSigningCertificate_userName = Lens.lens (\UploadSigningCertificate' {userName} -> userName) (\s@UploadSigningCertificate' {} a -> s {userName = a} :: UploadSigningCertificate)
    |                                                                                                                                            ^^^^^^^^^^^^

gen/Amazonka/IAM/UploadSigningCertificate.hs:165:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateBody = a} with type UploadSigningCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
165 | uploadSigningCertificate_certificateBody = Lens.lens (\UploadSigningCertificate' {certificateBody} -> certificateBody) (\s@UploadSigningCertificate' {} a -> s {certificateBody = a} :: UploadSigningCertificate)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^
[233 of 235] Compiling Amazonka.IAM.Lens
[234 of 235] Compiling Amazonka.IAM.Waiters
[235 of 235] Compiling Amazonka.IAM
Configuring test suite 'amazonka-iam-test' for amazonka-iam-2.0...
Preprocessing test suite 'amazonka-iam-test' for amazonka-iam-2.0...
Building test suite 'amazonka-iam-test' for amazonka-iam-2.0...
[1 of 4] Compiling Test.Amazonka.IAM
[2 of 4] Compiling Test.Amazonka.IAM.Internal
[3 of 4] Compiling Test.Amazonka.Gen.IAM
[4 of 4] Compiling Main
[5 of 5] Linking /tmp/workdir-amazonka-iam/amazonka-iam-2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/amazonka-iam-2.0/t/amazonka-iam-test/build/amazonka-iam-test/amazonka-iam-test
