Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - xml-basic-0.1.3.2 (lib) (first run)
Configuring library for xml-basic-0.1.3.2...
Preprocessing library for xml-basic-0.1.3.2...
Building library for xml-basic-0.1.3.2...
[ 1 of 17] Compiling Text.XML.Basic.Entity

src/Text/XML/Basic/Entity.hs:12:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
12 | import Data.Monoid (Monoid(mempty, mappend), mconcat, )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Basic/Entity.hs:13:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
13 | import Data.Semigroup (Semigroup((<>)), )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 2 of 17] Compiling Text.HTML.Basic.Entity
[ 3 of 17] Compiling Text.XML.Basic.Name
[ 4 of 17] Compiling Text.XML.Basic.Format
[ 5 of 17] Compiling Text.XML.Basic.Character
[ 6 of 17] Compiling Text.HTML.Basic.Character
[ 7 of 17] Compiling Text.XML.Basic.Name.MixedCase
[ 8 of 17] Compiling Text.XML.Basic.Name.Qualified
[ 9 of 17] Compiling Text.XML.Basic.Position
[10 of 17] Compiling Text.XML.Basic.String
[11 of 17] Compiling Text.HTML.Basic.String
[12 of 17] Compiling Text.XML.Basic.Utility
[13 of 17] Compiling Text.XML.Basic.Attribute

src/Text/XML/Basic/Attribute.hs:10:1: warning: [-Wunused-imports]
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()
   |
10 | import Data.Foldable (Foldable(foldMap), )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Basic/Attribute.hs:11:1: warning: [-Wunused-imports]
    The import of ‘Data.Traversable’ is redundant
      except perhaps to import instances from ‘Data.Traversable’
    To import instances alone, use: import Data.Traversable()
   |
11 | import Data.Traversable (Traversable, sequenceA, traverse, )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Basic/Attribute.hs:12:1: warning: [-Wunused-imports]
    The import of ‘Applicative, pure’
    from module ‘Control.Applicative’ is redundant
   |
12 | import Control.Applicative (Applicative, pure, liftA, )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[14 of 17] Compiling Text.XML.Basic.ProcessingInstruction

src/Text/XML/Basic/ProcessingInstruction.hs:11:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
11 | import Data.Monoid (mempty, )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Basic/ProcessingInstruction.hs:13:1: warning: [-Wunused-imports]
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()
   |
13 | import Data.Foldable (Foldable(foldMap), )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Basic/ProcessingInstruction.hs:14:1: warning: [-Wunused-imports]
    The import of ‘Data.Traversable’ is redundant
      except perhaps to import instances from ‘Data.Traversable’
    To import instances alone, use: import Data.Traversable()
   |
14 | import Data.Traversable (Traversable(sequenceA), traverse, )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Basic/ProcessingInstruction.hs:15:1: warning: [-Wunused-imports]
    The import of ‘Applicative, pure’
    from module ‘Control.Applicative’ is redundant
   |
15 | import Control.Applicative (Applicative, pure, liftA, )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[15 of 17] Compiling Text.XML.Basic.Tag

src/Text/XML/Basic/Tag.hs:68:11: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘PI.T name string’ not matched: PI.Unknown _
   |
68 |       let (PI.Known attrs) = instr
   |           ^^^^^^^^^^^^^^^^^^^^^^^^
[16 of 17] Compiling Text.XML.Basic.Name.LowerCase
[17 of 17] Compiling Text.HTML.Basic.Tag
