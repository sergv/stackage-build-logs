Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - xml-conduit-1.9.1.3 (lib:xml-conduit, test:doctest, test:unit) (first run)
[1 of 2] Compiling Main             ( /tmp/workdir-xml-conduit/xml-conduit-1.9.1.3/dist-newstyle/build/x86_64-linux/ghc-9.6.6/xml-conduit-1.9.1.3/setup/setup.hs, /tmp/workdir-xml-conduit/xml-conduit-1.9.1.3/dist-newstyle/build/x86_64-linux/ghc-9.6.6/xml-conduit-1.9.1.3/setup/Main.o )
[2 of 2] Linking /tmp/workdir-xml-conduit/xml-conduit-1.9.1.3/dist-newstyle/build/x86_64-linux/ghc-9.6.6/xml-conduit-1.9.1.3/setup/setup
Configuring xml-conduit-1.9.1.3...
Preprocessing library for xml-conduit-1.9.1.3..
Building library for xml-conduit-1.9.1.3..
[1 of 7] Compiling Text.XML.Cursor.Generic
[2 of 7] Compiling Text.XML.Stream.Token

src/Text/XML/Stream/Token.hs:19:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
19 | import Data.Monoid (mconcat, mempty, (<>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[3 of 7] Compiling Text.XML.Stream.Render

src/Text/XML/Stream/Render.hs:33:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
33 | import           Control.Applicative          ((<$>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Stream/Render.hs:34:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Trans.Resource’ is redundant
      except perhaps to import instances from ‘Control.Monad.Trans.Resource’
    To import instances alone, use: import Control.Monad.Trans.Resource()
   |
34 | import           Control.Monad.Trans.Resource (MonadThrow)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Stream/Render.hs:43:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
43 | import           Data.Monoid                  (Monoid, mappend, mempty)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Stream/Render.hs:193:5: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘Stack’ not matched:
            []
            []
    |
193 |     (sl:s') = s
    |     ^^^^^^^^^^^
[4 of 7] Compiling Text.XML.Stream.Parse

src/Text/XML/Stream/Parse.hs:139:1: warning: [-Wunused-imports]
    The import of ‘<$>, Applicative’
    from module ‘Control.Applicative’ is redundant
    |
139 | import           Control.Applicative          (Alternative (empty, (<|>)),
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

src/Text/XML/Stream/Parse.hs:146:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.IO.Class’ is redundant
      except perhaps to import instances from ‘Control.Monad.IO.Class’
    To import instances alone, use: import Control.Monad.IO.Class()
    |
146 | import           Control.Monad.IO.Class       (liftIO)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Stream/Parse.hs:147:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Trans.Class’ is redundant
      except perhaps to import instances from ‘Control.Monad.Trans.Class’
    To import instances alone, use: import Control.Monad.Trans.Class()
    |
147 | import           Control.Monad.Trans.Class    (lift)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Stream/Parse.hs:149:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Trans.Resource’ is redundant
      except perhaps to import instances from ‘Control.Monad.Trans.Resource’
    To import instances alone, use: import Control.Monad.Trans.Resource()
    |
149 | import           Control.Monad.Trans.Resource (MonadResource, MonadThrow (..),
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

src/Text/XML/Stream/Parse.hs:151:1: warning: [-Wunused-imports]
    The import of ‘Data.Attoparsec.Internal’ is redundant
      except perhaps to import instances from ‘Data.Attoparsec.Internal’
    To import instances alone, use: import Data.Attoparsec.Internal()
    |
151 | import           Data.Attoparsec.Internal     (concatReverse)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Stream/Parse.hs:1122:13: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
     |
1122 | instance (a ~ Name) => IsString (NameMatcher a) where
     |             ^

src/Text/XML/Stream/Parse.hs:1155:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad AttrParser’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
     |
1155 |     return a = AttrParser $ \as -> Right (as, a)
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Stream/Parse.hs:1161:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘pure = return’ definition detected
    in the instance declaration for ‘Applicative AttrParser’.
    Move definition from ‘return’ to ‘pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
     |
1161 |     pure = return
     |     ^^^^^^^^^^^^^
[5 of 7] Compiling Text.XML.Unresolved

src/Text/XML/Unresolved.hs:47:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
47 | import           Control.Applicative          ((<$>), (<*>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Unresolved.hs:50:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Trans.Class’ is redundant
      except perhaps to import instances from ‘Control.Monad.Trans.Class’
    To import instances alone, use: import Control.Monad.Trans.Class()
   |
50 | import           Control.Monad.Trans.Class    (lift)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML/Unresolved.hs:59:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
59 | import           Data.Monoid                  (mconcat)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[6 of 7] Compiling Text.XML

src/Text/XML.hs:78:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
78 | import           Control.Applicative          ((<$>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML.hs:82:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Trans.Resource’ is redundant
      except perhaps to import instances from ‘Control.Monad.Trans.Resource’
    To import instances alone, use: import Control.Monad.Trans.Resource()
   |
82 | import           Control.Monad.Trans.Resource (MonadThrow, throwM)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML.hs:105:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Trans.Class’ is redundant
      except perhaps to import instances from ‘Control.Monad.Trans.Class’
    To import instances alone, use: import Control.Monad.Trans.Class()
    |
105 | import           Control.Monad.Trans.Class    (lift)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Text/XML.hs:115:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
    |
115 | import           Data.Monoid                  (mappend, mempty)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[7 of 7] Compiling Text.XML.Cursor
Preprocessing test suite 'doctest' for xml-conduit-1.9.1.3..
Building test suite 'doctest' for xml-conduit-1.9.1.3..
[1 of 2] Compiling Build_doctests
[2 of 2] Compiling Main
[3 of 3] Linking /tmp/workdir-xml-conduit/xml-conduit-1.9.1.3/dist-newstyle/build/x86_64-linux/ghc-9.6.6/xml-conduit-1.9.1.3/build/doctest/doctest
Preprocessing test suite 'unit' for xml-conduit-1.9.1.3..
Building test suite 'unit' for xml-conduit-1.9.1.3..
[1 of 1] Compiling Main
[2 of 2] Linking /tmp/workdir-xml-conduit/xml-conduit-1.9.1.3/dist-newstyle/build/x86_64-linux/ghc-9.6.6/xml-conduit-1.9.1.3/build/unit/unit
