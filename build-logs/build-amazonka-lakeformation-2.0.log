Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - amazonka-lakeformation-2.0 (lib) (first run)
 - amazonka-lakeformation-2.0 (test:amazonka-lakeformation-test) (first run)
Configuring library for amazonka-lakeformation-2.0...
Preprocessing library for amazonka-lakeformation-2.0...
Building library for amazonka-lakeformation-2.0...
[  1 of 105] Compiling Amazonka.LakeFormation.Types.AddObjectInput
[  2 of 105] Compiling Amazonka.LakeFormation.Types.AllRowsWildcard
[  3 of 105] Compiling Amazonka.LakeFormation.Types.AuditContext
[  4 of 105] Compiling Amazonka.LakeFormation.Types.CatalogResource
[  5 of 105] Compiling Amazonka.LakeFormation.Types.ColumnWildcard
[  6 of 105] Compiling Amazonka.LakeFormation.Types.ComparisonOperator
[  7 of 105] Compiling Amazonka.LakeFormation.Types.DataCellsFilterResource
[  8 of 105] Compiling Amazonka.LakeFormation.Types.DataLakePrincipal
[  9 of 105] Compiling Amazonka.LakeFormation.Types.DataLakeResourceType
[ 10 of 105] Compiling Amazonka.LakeFormation.Types.DataLocationResource
[ 11 of 105] Compiling Amazonka.LakeFormation.Types.DatabaseResource
[ 12 of 105] Compiling Amazonka.LakeFormation.Types.DeleteObjectInput
[ 13 of 105] Compiling Amazonka.LakeFormation.Types.DetailsMap
[ 14 of 105] Compiling Amazonka.LakeFormation.Types.ErrorDetail
[ 15 of 105] Compiling Amazonka.LakeFormation.Types.ExecutionStatistics
[ 16 of 105] Compiling Amazonka.LakeFormation.Types.FieldNameString
[ 17 of 105] Compiling Amazonka.LakeFormation.Types.FilterCondition
[ 18 of 105] Compiling Amazonka.LakeFormation.Types.LFTag
[ 19 of 105] Compiling Amazonka.LakeFormation.Types.LFTagKeyResource
[ 20 of 105] Compiling Amazonka.LakeFormation.Types.LFTagPair
[ 21 of 105] Compiling Amazonka.LakeFormation.Types.LFTagError
[ 22 of 105] Compiling Amazonka.LakeFormation.Types.ColumnLFTag
[ 23 of 105] Compiling Amazonka.LakeFormation.Types.OptimizerType
[ 24 of 105] Compiling Amazonka.LakeFormation.Types.PartitionValueList
[ 25 of 105] Compiling Amazonka.LakeFormation.Types.Permission
[ 26 of 105] Compiling Amazonka.LakeFormation.Types.PermissionType
[ 27 of 105] Compiling Amazonka.LakeFormation.Types.PlanningStatistics
[ 28 of 105] Compiling Amazonka.LakeFormation.Types.PrincipalPermissions
[ 29 of 105] Compiling Amazonka.LakeFormation.Types.DataLakeSettings
[ 30 of 105] Compiling Amazonka.LakeFormation.Types.QueryPlanningContext
[ 31 of 105] Compiling Amazonka.LakeFormation.Types.QueryStateString
[ 32 of 105] Compiling Amazonka.LakeFormation.Types.ResourceInfo
[ 33 of 105] Compiling Amazonka.LakeFormation.Types.ResourceShareType
[ 34 of 105] Compiling Amazonka.LakeFormation.Types.ResourceType
[ 35 of 105] Compiling Amazonka.LakeFormation.Types.LFTagPolicyResource
[ 36 of 105] Compiling Amazonka.LakeFormation.Types.RowFilter
[ 37 of 105] Compiling Amazonka.LakeFormation.Types.DataCellsFilter
[ 38 of 105] Compiling Amazonka.LakeFormation.Types.StorageOptimizer
[ 39 of 105] Compiling Amazonka.LakeFormation.Types.TableObject
[ 40 of 105] Compiling Amazonka.LakeFormation.Types.PartitionObjects
[ 41 of 105] Compiling Amazonka.LakeFormation.Types.TableWildcard
[ 42 of 105] Compiling Amazonka.LakeFormation.Types.TableResource
[ 43 of 105] Compiling Amazonka.LakeFormation.Types.TableWithColumnsResource
[ 44 of 105] Compiling Amazonka.LakeFormation.Types.Resource
[ 45 of 105] Compiling Amazonka.LakeFormation.Types.PrincipalResourcePermissions
[ 46 of 105] Compiling Amazonka.LakeFormation.Types.BatchPermissionsRequestEntry
[ 47 of 105] Compiling Amazonka.LakeFormation.Types.BatchPermissionsFailureEntry
[ 48 of 105] Compiling Amazonka.LakeFormation.Types.TaggedDatabase
[ 49 of 105] Compiling Amazonka.LakeFormation.Types.TaggedTable
[ 50 of 105] Compiling Amazonka.LakeFormation.Types.TransactionStatus
[ 51 of 105] Compiling Amazonka.LakeFormation.Types.TransactionDescription
[ 52 of 105] Compiling Amazonka.LakeFormation.Types.TransactionStatusFilter
[ 53 of 105] Compiling Amazonka.LakeFormation.Types.TransactionType
[ 54 of 105] Compiling Amazonka.LakeFormation.Types.VirtualObject
[ 55 of 105] Compiling Amazonka.LakeFormation.Types.WorkUnitRange
[ 56 of 105] Compiling Amazonka.LakeFormation.Types.WriteOperation
[ 57 of 105] Compiling Amazonka.LakeFormation.Types
[ 58 of 105] Compiling Amazonka.LakeFormation.StartTransaction

gen/Amazonka/LakeFormation/StartTransaction.hs:166:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {transactionId = a} with type StartTransactionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
166 | startTransactionResponse_transactionId = Lens.lens (\StartTransactionResponse' {transactionId} -> transactionId) (\s@StartTransactionResponse' {} a -> s {transactionId = a} :: StartTransactionResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^
[ 59 of 105] Compiling Amazonka.LakeFormation.StartQueryPlanning
[ 60 of 105] Compiling Amazonka.LakeFormation.SearchTablesByLFTags

gen/Amazonka/LakeFormation/SearchTablesByLFTags.hs:115:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type SearchTablesByLFTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | searchTablesByLFTags_catalogId = Lens.lens (\SearchTablesByLFTags' {catalogId} -> catalogId) (\s@SearchTablesByLFTags' {} a -> s {catalogId = a} :: SearchTablesByLFTags)
    |                                                                                                                                   ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/SearchTablesByLFTags.hs:124:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type SearchTablesByLFTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
124 | searchTablesByLFTags_nextToken = Lens.lens (\SearchTablesByLFTags' {nextToken} -> nextToken) (\s@SearchTablesByLFTags' {} a -> s {nextToken = a} :: SearchTablesByLFTags)
    |                                                                                                                                   ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/SearchTablesByLFTags.hs:129:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {expression = a} with type SearchTablesByLFTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | searchTablesByLFTags_expression = Lens.lens (\SearchTablesByLFTags' {expression} -> expression) (\s@SearchTablesByLFTags' {} a -> s {expression = a} :: SearchTablesByLFTags) Prelude.. Lens.coerced
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/SearchTablesByLFTags.hs:252:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type SearchTablesByLFTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
252 | searchTablesByLFTagsResponse_nextToken = Lens.lens (\SearchTablesByLFTagsResponse' {nextToken} -> nextToken) (\s@SearchTablesByLFTagsResponse' {} a -> s {nextToken = a} :: SearchTablesByLFTagsResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^
[ 61 of 105] Compiling Amazonka.LakeFormation.SearchDatabasesByLFTags

gen/Amazonka/LakeFormation/SearchDatabasesByLFTags.hs:117:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type SearchDatabasesByLFTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
117 | searchDatabasesByLFTags_catalogId = Lens.lens (\SearchDatabasesByLFTags' {catalogId} -> catalogId) (\s@SearchDatabasesByLFTags' {} a -> s {catalogId = a} :: SearchDatabasesByLFTags)
    |                                                                                                                                            ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/SearchDatabasesByLFTags.hs:126:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type SearchDatabasesByLFTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
126 | searchDatabasesByLFTags_nextToken = Lens.lens (\SearchDatabasesByLFTags' {nextToken} -> nextToken) (\s@SearchDatabasesByLFTags' {} a -> s {nextToken = a} :: SearchDatabasesByLFTags)
    |                                                                                                                                            ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/SearchDatabasesByLFTags.hs:131:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {expression = a} with type SearchDatabasesByLFTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | searchDatabasesByLFTags_expression = Lens.lens (\SearchDatabasesByLFTags' {expression} -> expression) (\s@SearchDatabasesByLFTags' {} a -> s {expression = a} :: SearchDatabasesByLFTags) Prelude.. Lens.coerced
    |                                                                                                                                               ^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/SearchDatabasesByLFTags.hs:258:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type SearchDatabasesByLFTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
258 | searchDatabasesByLFTagsResponse_nextToken = Lens.lens (\SearchDatabasesByLFTagsResponse' {nextToken} -> nextToken) (\s@SearchDatabasesByLFTagsResponse' {} a -> s {nextToken = a} :: SearchDatabasesByLFTagsResponse)
    |                                                                                                                                                                    ^^^^^^^^^^^^^
[ 62 of 105] Compiling Amazonka.LakeFormation.RevokePermissions

gen/Amazonka/LakeFormation/RevokePermissions.hs:118:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type RevokePermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
118 | revokePermissions_catalogId = Lens.lens (\RevokePermissions' {catalogId} -> catalogId) (\s@RevokePermissions' {} a -> s {catalogId = a} :: RevokePermissions)
    |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/RevokePermissions.hs:123:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {permissionsWithGrantOption = a} with type RevokePermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | revokePermissions_permissionsWithGrantOption = Lens.lens (\RevokePermissions' {permissionsWithGrantOption} -> permissionsWithGrantOption) (\s@RevokePermissions' {} a -> s {permissionsWithGrantOption = a} :: RevokePermissions) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/RevokePermissions.hs:127:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {principal = a} with type RevokePermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | revokePermissions_principal = Lens.lens (\RevokePermissions' {principal} -> principal) (\s@RevokePermissions' {} a -> s {principal = a} :: RevokePermissions)
    |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/RevokePermissions.hs:131:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resource = a} with type RevokePermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | revokePermissions_resource = Lens.lens (\RevokePermissions' {resource} -> resource) (\s@RevokePermissions' {} a -> s {resource = a} :: RevokePermissions)
    |                                                                                                                       ^^^^^^^^^^^^

gen/Amazonka/LakeFormation/RevokePermissions.hs:137:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {permissions = a} with type RevokePermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | revokePermissions_permissions = Lens.lens (\RevokePermissions' {permissions} -> permissions) (\s@RevokePermissions' {} a -> s {permissions = a} :: RevokePermissions) Prelude.. Lens.coerced
    |                                                                                                                                ^^^^^^^^^^^^^^^
[ 63 of 105] Compiling Amazonka.LakeFormation.RemoveLFTagsFromResource

gen/Amazonka/LakeFormation/RemoveLFTagsFromResource.hs:105:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type RemoveLFTagsFromResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
105 | removeLFTagsFromResource_catalogId = Lens.lens (\RemoveLFTagsFromResource' {catalogId} -> catalogId) (\s@RemoveLFTagsFromResource' {} a -> s {catalogId = a} :: RemoveLFTagsFromResource)
    |                                                                                                                                               ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/RemoveLFTagsFromResource.hs:110:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resource = a} with type RemoveLFTagsFromResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | removeLFTagsFromResource_resource = Lens.lens (\RemoveLFTagsFromResource' {resource} -> resource) (\s@RemoveLFTagsFromResource' {} a -> s {resource = a} :: RemoveLFTagsFromResource)
    |                                                                                                                                            ^^^^^^^^^^^^

gen/Amazonka/LakeFormation/RemoveLFTagsFromResource.hs:114:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lFTags = a} with type RemoveLFTagsFromResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | removeLFTagsFromResource_lFTags = Lens.lens (\RemoveLFTagsFromResource' {lFTags} -> lFTags) (\s@RemoveLFTagsFromResource' {} a -> s {lFTags = a} :: RemoveLFTagsFromResource) Prelude.. Lens.coerced
    |                                                                                                                                      ^^^^^^^^^^
[ 64 of 105] Compiling Amazonka.LakeFormation.RegisterResource

gen/Amazonka/LakeFormation/RegisterResource.hs:119:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleArn = a} with type RegisterResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | registerResource_roleArn = Lens.lens (\RegisterResource' {roleArn} -> roleArn) (\s@RegisterResource' {} a -> s {roleArn = a} :: RegisterResource)
    |                                                                                                                 ^^^^^^^^^^^

gen/Amazonka/LakeFormation/RegisterResource.hs:133:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceArn = a} with type RegisterResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
133 | registerResource_resourceArn = Lens.lens (\RegisterResource' {resourceArn} -> resourceArn) (\s@RegisterResource' {} a -> s {resourceArn = a} :: RegisterResource)
    |                                                                                                                             ^^^^^^^^^^^^^^^
[ 65 of 105] Compiling Amazonka.LakeFormation.PutDataLakeSettings

gen/Amazonka/LakeFormation/PutDataLakeSettings.hs:100:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type PutDataLakeSettings is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | putDataLakeSettings_catalogId = Lens.lens (\PutDataLakeSettings' {catalogId} -> catalogId) (\s@PutDataLakeSettings' {} a -> s {catalogId = a} :: PutDataLakeSettings)
    |                                                                                                                                ^^^^^^^^^^^^^
[ 66 of 105] Compiling Amazonka.LakeFormation.ListTransactions

gen/Amazonka/LakeFormation/ListTransactions.hs:106:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type ListTransactions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | listTransactions_catalogId = Lens.lens (\ListTransactions' {catalogId} -> catalogId) (\s@ListTransactions' {} a -> s {catalogId = a} :: ListTransactions)
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListTransactions.hs:115:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListTransactions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | listTransactions_nextToken = Lens.lens (\ListTransactions' {nextToken} -> nextToken) (\s@ListTransactions' {} a -> s {nextToken = a} :: ListTransactions)
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListTransactions.hs:220:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListTransactionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
220 | listTransactionsResponse_nextToken = Lens.lens (\ListTransactionsResponse' {nextToken} -> nextToken) (\s@ListTransactionsResponse' {} a -> s {nextToken = a} :: ListTransactionsResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^
[ 67 of 105] Compiling Amazonka.LakeFormation.ListTableStorageOptimizers

gen/Amazonka/LakeFormation/ListTableStorageOptimizers.hs:116:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type ListTableStorageOptimizers is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | listTableStorageOptimizers_catalogId = Lens.lens (\ListTableStorageOptimizers' {catalogId} -> catalogId) (\s@ListTableStorageOptimizers' {} a -> s {catalogId = a} :: ListTableStorageOptimizers)
    |                                                                                                                                                     ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListTableStorageOptimizers.hs:124:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListTableStorageOptimizers is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
124 | listTableStorageOptimizers_nextToken = Lens.lens (\ListTableStorageOptimizers' {nextToken} -> nextToken) (\s@ListTableStorageOptimizers' {} a -> s {nextToken = a} :: ListTableStorageOptimizers)
    |                                                                                                                                                     ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListTableStorageOptimizers.hs:129:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {storageOptimizerType = a} with type ListTableStorageOptimizers is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | listTableStorageOptimizers_storageOptimizerType = Lens.lens (\ListTableStorageOptimizers' {storageOptimizerType} -> storageOptimizerType) (\s@ListTableStorageOptimizers' {} a -> s {storageOptimizerType = a} :: ListTableStorageOptimizers)
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListTableStorageOptimizers.hs:133:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {databaseName = a} with type ListTableStorageOptimizers is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
133 | listTableStorageOptimizers_databaseName = Lens.lens (\ListTableStorageOptimizers' {databaseName} -> databaseName) (\s@ListTableStorageOptimizers' {} a -> s {databaseName = a} :: ListTableStorageOptimizers)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListTableStorageOptimizers.hs:137:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tableName = a} with type ListTableStorageOptimizers is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | listTableStorageOptimizers_tableName = Lens.lens (\ListTableStorageOptimizers' {tableName} -> tableName) (\s@ListTableStorageOptimizers' {} a -> s {tableName = a} :: ListTableStorageOptimizers)
    |                                                                                                                                                     ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListTableStorageOptimizers.hs:248:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListTableStorageOptimizersResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
248 | listTableStorageOptimizersResponse_nextToken = Lens.lens (\ListTableStorageOptimizersResponse' {nextToken} -> nextToken) (\s@ListTableStorageOptimizersResponse' {} a -> s {nextToken = a} :: ListTableStorageOptimizersResponse)
    |                                                                                                                                                                             ^^^^^^^^^^^^^
[ 68 of 105] Compiling Amazonka.LakeFormation.ListResources

gen/Amazonka/LakeFormation/ListResources.hs:103:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListResources is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | listResources_nextToken = Lens.lens (\ListResources' {nextToken} -> nextToken) (\s@ListResources' {} a -> s {nextToken = a} :: ListResources)
    |                                                                                                              ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListResources.hs:204:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListResourcesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
204 | listResourcesResponse_nextToken = Lens.lens (\ListResourcesResponse' {nextToken} -> nextToken) (\s@ListResourcesResponse' {} a -> s {nextToken = a} :: ListResourcesResponse)
    |                                                                                                                                      ^^^^^^^^^^^^^
[ 69 of 105] Compiling Amazonka.LakeFormation.ListPermissions

gen/Amazonka/LakeFormation/ListPermissions.hs:140:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type ListPermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
140 | listPermissions_catalogId = Lens.lens (\ListPermissions' {catalogId} -> catalogId) (\s@ListPermissions' {} a -> s {catalogId = a} :: ListPermissions)
    |                                                                                                                    ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListPermissions.hs:153:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListPermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
153 | listPermissions_nextToken = Lens.lens (\ListPermissions' {nextToken} -> nextToken) (\s@ListPermissions' {} a -> s {nextToken = a} :: ListPermissions)
    |                                                                                                                    ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListPermissions.hs:157:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {principal = a} with type ListPermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
157 | listPermissions_principal = Lens.lens (\ListPermissions' {principal} -> principal) (\s@ListPermissions' {} a -> s {principal = a} :: ListPermissions)
    |                                                                                                                    ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListPermissions.hs:165:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resource = a} with type ListPermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
165 | listPermissions_resource = Lens.lens (\ListPermissions' {resource} -> resource) (\s@ListPermissions' {} a -> s {resource = a} :: ListPermissions)
    |                                                                                                                 ^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListPermissions.hs:169:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceType = a} with type ListPermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
169 | listPermissions_resourceType = Lens.lens (\ListPermissions' {resourceType} -> resourceType) (\s@ListPermissions' {} a -> s {resourceType = a} :: ListPermissions)
    |                                                                                                                             ^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListPermissions.hs:285:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListPermissionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
285 | listPermissionsResponse_nextToken = Lens.lens (\ListPermissionsResponse' {nextToken} -> nextToken) (\s@ListPermissionsResponse' {} a -> s {nextToken = a} :: ListPermissionsResponse)
    |                                                                                                                                            ^^^^^^^^^^^^^
[ 70 of 105] Compiling Amazonka.LakeFormation.ListLFTags

gen/Amazonka/LakeFormation/ListLFTags.hs:115:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type ListLFTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | listLFTags_catalogId = Lens.lens (\ListLFTags' {catalogId} -> catalogId) (\s@ListLFTags' {} a -> s {catalogId = a} :: ListLFTags)
    |                                                                                                     ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListLFTags.hs:124:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListLFTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
124 | listLFTags_nextToken = Lens.lens (\ListLFTags' {nextToken} -> nextToken) (\s@ListLFTags' {} a -> s {nextToken = a} :: ListLFTags)
    |                                                                                                     ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListLFTags.hs:253:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lFTags = a} with type ListLFTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
253 | listLFTagsResponse_lFTags = Lens.lens (\ListLFTagsResponse' {lFTags} -> lFTags) (\s@ListLFTagsResponse' {} a -> s {lFTags = a} :: ListLFTagsResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                    ^^^^^^^^^^

gen/Amazonka/LakeFormation/ListLFTags.hs:258:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListLFTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
258 | listLFTagsResponse_nextToken = Lens.lens (\ListLFTagsResponse' {nextToken} -> nextToken) (\s@ListLFTagsResponse' {} a -> s {nextToken = a} :: ListLFTagsResponse)
    |                                                                                                                             ^^^^^^^^^^^^^
[ 71 of 105] Compiling Amazonka.LakeFormation.ListDataCellsFilter

gen/Amazonka/LakeFormation/ListDataCellsFilter.hs:94:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListDataCellsFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | listDataCellsFilter_nextToken = Lens.lens (\ListDataCellsFilter' {nextToken} -> nextToken) (\s@ListDataCellsFilter' {} a -> s {nextToken = a} :: ListDataCellsFilter)
   |                                                                                                                                ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/ListDataCellsFilter.hs:98:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {table = a} with type ListDataCellsFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | listDataCellsFilter_table = Lens.lens (\ListDataCellsFilter' {table} -> table) (\s@ListDataCellsFilter' {} a -> s {table = a} :: ListDataCellsFilter)
   |                                                                                                                    ^^^^^^^^^

gen/Amazonka/LakeFormation/ListDataCellsFilter.hs:225:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListDataCellsFilterResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
225 | listDataCellsFilterResponse_nextToken = Lens.lens (\ListDataCellsFilterResponse' {nextToken} -> nextToken) (\s@ListDataCellsFilterResponse' {} a -> s {nextToken = a} :: ListDataCellsFilterResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^
[ 72 of 105] Compiling Amazonka.LakeFormation.GrantPermissions

gen/Amazonka/LakeFormation/GrantPermissions.hs:141:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type GrantPermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
141 | grantPermissions_catalogId = Lens.lens (\GrantPermissions' {catalogId} -> catalogId) (\s@GrantPermissions' {} a -> s {catalogId = a} :: GrantPermissions)
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GrantPermissions.hs:147:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {permissionsWithGrantOption = a} with type GrantPermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
147 | grantPermissions_permissionsWithGrantOption = Lens.lens (\GrantPermissions' {permissionsWithGrantOption} -> permissionsWithGrantOption) (\s@GrantPermissions' {} a -> s {permissionsWithGrantOption = a} :: GrantPermissions) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GrantPermissions.hs:157:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {principal = a} with type GrantPermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
157 | grantPermissions_principal = Lens.lens (\GrantPermissions' {principal} -> principal) (\s@GrantPermissions' {} a -> s {principal = a} :: GrantPermissions)
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GrantPermissions.hs:162:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resource = a} with type GrantPermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
162 | grantPermissions_resource = Lens.lens (\GrantPermissions' {resource} -> resource) (\s@GrantPermissions' {} a -> s {resource = a} :: GrantPermissions)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GrantPermissions.hs:170:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {permissions = a} with type GrantPermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
170 | grantPermissions_permissions = Lens.lens (\GrantPermissions' {permissions} -> permissions) (\s@GrantPermissions' {} a -> s {permissions = a} :: GrantPermissions) Prelude.. Lens.coerced
    |                                                                                                                             ^^^^^^^^^^^^^^^
[ 73 of 105] Compiling Amazonka.LakeFormation.GetWorkUnits

gen/Amazonka/LakeFormation/GetWorkUnits.hs:102:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type GetWorkUnits is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | getWorkUnits_nextToken = Lens.lens (\GetWorkUnits' {nextToken} -> nextToken) (\s@GetWorkUnits' {} a -> s {nextToken = a} :: GetWorkUnits)
    |                                                                                                           ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetWorkUnits.hs:114:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {queryId = a} with type GetWorkUnits is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | getWorkUnits_queryId = Lens.lens (\GetWorkUnits' {queryId} -> queryId) (\s@GetWorkUnits' {} a -> s {queryId = a} :: GetWorkUnits)
    |                                                                                                     ^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetWorkUnits.hs:243:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type GetWorkUnitsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
243 | getWorkUnitsResponse_nextToken = Lens.lens (\GetWorkUnitsResponse' {nextToken} -> nextToken) (\s@GetWorkUnitsResponse' {} a -> s {nextToken = a} :: GetWorkUnitsResponse)
    |                                                                                                                                   ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetWorkUnits.hs:251:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {queryId = a} with type GetWorkUnitsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
251 | getWorkUnitsResponse_queryId = Lens.lens (\GetWorkUnitsResponse' {queryId} -> queryId) (\s@GetWorkUnitsResponse' {} a -> s {queryId = a} :: GetWorkUnitsResponse)
    |                                                                                                                             ^^^^^^^^^^^
[ 74 of 105] Compiling Amazonka.LakeFormation.GetWorkUnitResults

gen/Amazonka/LakeFormation/GetWorkUnitResults.hs:115:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {workUnitToken = a} with type GetWorkUnitResults is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | getWorkUnitResults_workUnitToken = Lens.lens (\GetWorkUnitResults' {workUnitToken} -> workUnitToken) (\s@GetWorkUnitResults' {} a -> s {workUnitToken = a} :: GetWorkUnitResults) Prelude.. Data._Sensitive
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^
[ 75 of 105] Compiling Amazonka.LakeFormation.GetTemporaryGlueTableCredentials

gen/Amazonka/LakeFormation/GetTemporaryGlueTableCredentials.hs:136:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {permissions = a} with type GetTemporaryGlueTableCredentials is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
136 | getTemporaryGlueTableCredentials_permissions = Lens.lens (\GetTemporaryGlueTableCredentials' {permissions} -> permissions) (\s@GetTemporaryGlueTableCredentials' {} a -> s {permissions = a} :: GetTemporaryGlueTableCredentials) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^
[ 76 of 105] Compiling Amazonka.LakeFormation.GetTemporaryGluePartitionCredentials

gen/Amazonka/LakeFormation/GetTemporaryGluePartitionCredentials.hs:143:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {permissions = a} with type GetTemporaryGluePartitionCredentials is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
143 | getTemporaryGluePartitionCredentials_permissions = Lens.lens (\GetTemporaryGluePartitionCredentials' {permissions} -> permissions) (\s@GetTemporaryGluePartitionCredentials' {} a -> s {permissions = a} :: GetTemporaryGluePartitionCredentials) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^
[ 77 of 105] Compiling Amazonka.LakeFormation.GetTableObjects

gen/Amazonka/LakeFormation/GetTableObjects.hs:157:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type GetTableObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
157 | getTableObjects_catalogId = Lens.lens (\GetTableObjects' {catalogId} -> catalogId) (\s@GetTableObjects' {} a -> s {catalogId = a} :: GetTableObjects)
    |                                                                                                                    ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetTableObjects.hs:166:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type GetTableObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
166 | getTableObjects_nextToken = Lens.lens (\GetTableObjects' {nextToken} -> nextToken) (\s@GetTableObjects' {} a -> s {nextToken = a} :: GetTableObjects)
    |                                                                                                                    ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetTableObjects.hs:185:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {queryAsOfTime = a} with type GetTableObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
185 | getTableObjects_queryAsOfTime = Lens.lens (\GetTableObjects' {queryAsOfTime} -> queryAsOfTime) (\s@GetTableObjects' {} a -> s {queryAsOfTime = a} :: GetTableObjects) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                ^^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetTableObjects.hs:192:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {transactionId = a} with type GetTableObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
192 | getTableObjects_transactionId = Lens.lens (\GetTableObjects' {transactionId} -> transactionId) (\s@GetTableObjects' {} a -> s {transactionId = a} :: GetTableObjects)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetTableObjects.hs:196:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {databaseName = a} with type GetTableObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
196 | getTableObjects_databaseName = Lens.lens (\GetTableObjects' {databaseName} -> databaseName) (\s@GetTableObjects' {} a -> s {databaseName = a} :: GetTableObjects)
    |                                                                                                                             ^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetTableObjects.hs:200:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tableName = a} with type GetTableObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
200 | getTableObjects_tableName = Lens.lens (\GetTableObjects' {tableName} -> tableName) (\s@GetTableObjects' {} a -> s {tableName = a} :: GetTableObjects)
    |                                                                                                                    ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetTableObjects.hs:311:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type GetTableObjectsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
311 | getTableObjectsResponse_nextToken = Lens.lens (\GetTableObjectsResponse' {nextToken} -> nextToken) (\s@GetTableObjectsResponse' {} a -> s {nextToken = a} :: GetTableObjectsResponse)
    |                                                                                                                                            ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetTableObjects.hs:315:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {objects = a} with type GetTableObjectsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
315 | getTableObjectsResponse_objects = Lens.lens (\GetTableObjectsResponse' {objects} -> objects) (\s@GetTableObjectsResponse' {} a -> s {objects = a} :: GetTableObjectsResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                      ^^^^^^^^^^^
[ 78 of 105] Compiling Amazonka.LakeFormation.GetResourceLFTags

gen/Amazonka/LakeFormation/GetResourceLFTags.hs:102:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type GetResourceLFTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | getResourceLFTags_catalogId = Lens.lens (\GetResourceLFTags' {catalogId} -> catalogId) (\s@GetResourceLFTags' {} a -> s {catalogId = a} :: GetResourceLFTags)
    |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetResourceLFTags.hs:111:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resource = a} with type GetResourceLFTags is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
111 | getResourceLFTags_resource = Lens.lens (\GetResourceLFTags' {resource} -> resource) (\s@GetResourceLFTags' {} a -> s {resource = a} :: GetResourceLFTags)
    |                                                                                                                       ^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetResourceLFTags.hs:216:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lFTagOnDatabase = a} with type GetResourceLFTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
216 | getResourceLFTagsResponse_lFTagOnDatabase = Lens.lens (\GetResourceLFTagsResponse' {lFTagOnDatabase} -> lFTagOnDatabase) (\s@GetResourceLFTagsResponse' {} a -> s {lFTagOnDatabase = a} :: GetResourceLFTagsResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetResourceLFTags.hs:220:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lFTagsOnColumns = a} with type GetResourceLFTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
220 | getResourceLFTagsResponse_lFTagsOnColumns = Lens.lens (\GetResourceLFTagsResponse' {lFTagsOnColumns} -> lFTagsOnColumns) (\s@GetResourceLFTagsResponse' {} a -> s {lFTagsOnColumns = a} :: GetResourceLFTagsResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetResourceLFTags.hs:224:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lFTagsOnTable = a} with type GetResourceLFTagsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
224 | getResourceLFTagsResponse_lFTagsOnTable = Lens.lens (\GetResourceLFTagsResponse' {lFTagsOnTable} -> lFTagsOnTable) (\s@GetResourceLFTagsResponse' {} a -> s {lFTagsOnTable = a} :: GetResourceLFTagsResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^
[ 79 of 105] Compiling Amazonka.LakeFormation.GetQueryStatistics
[ 80 of 105] Compiling Amazonka.LakeFormation.GetQueryState

gen/Amazonka/LakeFormation/GetQueryState.hs:190:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {error = a} with type GetQueryStateResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
190 | getQueryStateResponse_error = Lens.lens (\GetQueryStateResponse' {error} -> error) (\s@GetQueryStateResponse' {} a -> s {error = a} :: GetQueryStateResponse)
    |                                                                                                                          ^^^^^^^^^
[ 81 of 105] Compiling Amazonka.LakeFormation.GetLFTag

gen/Amazonka/LakeFormation/GetLFTag.hs:94:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type GetLFTag is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | getLFTag_catalogId = Lens.lens (\GetLFTag' {catalogId} -> catalogId) (\s@GetLFTag' {} a -> s {catalogId = a} :: GetLFTag)
   |                                                                                               ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetLFTag.hs:98:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagKey = a} with type GetLFTag is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | getLFTag_tagKey = Lens.lens (\GetLFTag' {tagKey} -> tagKey) (\s@GetLFTag' {} a -> s {tagKey = a} :: GetLFTag)
   |                                                                                      ^^^^^^^^^^

gen/Amazonka/LakeFormation/GetLFTag.hs:202:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type GetLFTagResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
202 | getLFTagResponse_catalogId = Lens.lens (\GetLFTagResponse' {catalogId} -> catalogId) (\s@GetLFTagResponse' {} a -> s {catalogId = a} :: GetLFTagResponse)
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetLFTag.hs:206:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagKey = a} with type GetLFTagResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
206 | getLFTagResponse_tagKey = Lens.lens (\GetLFTagResponse' {tagKey} -> tagKey) (\s@GetLFTagResponse' {} a -> s {tagKey = a} :: GetLFTagResponse)
    |                                                                                                              ^^^^^^^^^^

gen/Amazonka/LakeFormation/GetLFTag.hs:210:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagValues = a} with type GetLFTagResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
210 | getLFTagResponse_tagValues = Lens.lens (\GetLFTagResponse' {tagValues} -> tagValues) (\s@GetLFTagResponse' {} a -> s {tagValues = a} :: GetLFTagResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                       ^^^^^^^^^^^^^
[ 82 of 105] Compiling Amazonka.LakeFormation.GetEffectivePermissionsForPath

gen/Amazonka/LakeFormation/GetEffectivePermissionsForPath.hs:113:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type GetEffectivePermissionsForPath is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | getEffectivePermissionsForPath_catalogId = Lens.lens (\GetEffectivePermissionsForPath' {catalogId} -> catalogId) (\s@GetEffectivePermissionsForPath' {} a -> s {catalogId = a} :: GetEffectivePermissionsForPath)
    |                                                                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetEffectivePermissionsForPath.hs:122:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type GetEffectivePermissionsForPath is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
122 | getEffectivePermissionsForPath_nextToken = Lens.lens (\GetEffectivePermissionsForPath' {nextToken} -> nextToken) (\s@GetEffectivePermissionsForPath' {} a -> s {nextToken = a} :: GetEffectivePermissionsForPath)
    |                                                                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetEffectivePermissionsForPath.hs:127:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceArn = a} with type GetEffectivePermissionsForPath is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | getEffectivePermissionsForPath_resourceArn = Lens.lens (\GetEffectivePermissionsForPath' {resourceArn} -> resourceArn) (\s@GetEffectivePermissionsForPath' {} a -> s {resourceArn = a} :: GetEffectivePermissionsForPath)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetEffectivePermissionsForPath.hs:246:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type GetEffectivePermissionsForPathResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
246 | getEffectivePermissionsForPathResponse_nextToken = Lens.lens (\GetEffectivePermissionsForPathResponse' {nextToken} -> nextToken) (\s@GetEffectivePermissionsForPathResponse' {} a -> s {nextToken = a} :: GetEffectivePermissionsForPathResponse)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/GetEffectivePermissionsForPath.hs:251:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {permissions = a} with type GetEffectivePermissionsForPathResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
251 | getEffectivePermissionsForPathResponse_permissions = Lens.lens (\GetEffectivePermissionsForPathResponse' {permissions} -> permissions) (\s@GetEffectivePermissionsForPathResponse' {} a -> s {permissions = a} :: GetEffectivePermissionsForPathResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                                               ^^^^^^^^^^^^^^^
[ 83 of 105] Compiling Amazonka.LakeFormation.GetDataLakeSettings

gen/Amazonka/LakeFormation/GetDataLakeSettings.hs:83:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type GetDataLakeSettings is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
83 | getDataLakeSettings_catalogId = Lens.lens (\GetDataLakeSettings' {catalogId} -> catalogId) (\s@GetDataLakeSettings' {} a -> s {catalogId = a} :: GetDataLakeSettings)
   |                                                                                                                                ^^^^^^^^^^^^^
[ 84 of 105] Compiling Amazonka.LakeFormation.ExtendTransaction

gen/Amazonka/LakeFormation/ExtendTransaction.hs:76:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {transactionId = a} with type ExtendTransaction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
76 | extendTransaction_transactionId = Lens.lens (\ExtendTransaction' {transactionId} -> transactionId) (\s@ExtendTransaction' {} a -> s {transactionId = a} :: ExtendTransaction)
   |                                                                                                                                      ^^^^^^^^^^^^^^^^^
[ 85 of 105] Compiling Amazonka.LakeFormation.DescribeTransaction

gen/Amazonka/LakeFormation/DescribeTransaction.hs:78:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {transactionId = a} with type DescribeTransaction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
78 | describeTransaction_transactionId = Lens.lens (\DescribeTransaction' {transactionId} -> transactionId) (\s@DescribeTransaction' {} a -> s {transactionId = a} :: DescribeTransaction)
   |                                                                                                                                            ^^^^^^^^^^^^^^^^^
[ 86 of 105] Compiling Amazonka.LakeFormation.DescribeResource

gen/Amazonka/LakeFormation/DescribeResource.hs:76:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceArn = a} with type DescribeResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
76 | describeResource_resourceArn = Lens.lens (\DescribeResource' {resourceArn} -> resourceArn) (\s@DescribeResource' {} a -> s {resourceArn = a} :: DescribeResource)
   |                                                                                                                             ^^^^^^^^^^^^^^^
[ 87 of 105] Compiling Amazonka.LakeFormation.DeregisterResource

gen/Amazonka/LakeFormation/DeregisterResource.hs:80:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceArn = a} with type DeregisterResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
80 | deregisterResource_resourceArn = Lens.lens (\DeregisterResource' {resourceArn} -> resourceArn) (\s@DeregisterResource' {} a -> s {resourceArn = a} :: DeregisterResource)
   |                                                                                                                                   ^^^^^^^^^^^^^^^
[ 88 of 105] Compiling Amazonka.LakeFormation.DeleteObjectsOnCancel

gen/Amazonka/LakeFormation/DeleteObjectsOnCancel.hs:124:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type DeleteObjectsOnCancel is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
124 | deleteObjectsOnCancel_catalogId = Lens.lens (\DeleteObjectsOnCancel' {catalogId} -> catalogId) (\s@DeleteObjectsOnCancel' {} a -> s {catalogId = a} :: DeleteObjectsOnCancel)
    |                                                                                                                                      ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/DeleteObjectsOnCancel.hs:128:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {databaseName = a} with type DeleteObjectsOnCancel is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
128 | deleteObjectsOnCancel_databaseName = Lens.lens (\DeleteObjectsOnCancel' {databaseName} -> databaseName) (\s@DeleteObjectsOnCancel' {} a -> s {databaseName = a} :: DeleteObjectsOnCancel)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/DeleteObjectsOnCancel.hs:132:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tableName = a} with type DeleteObjectsOnCancel is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | deleteObjectsOnCancel_tableName = Lens.lens (\DeleteObjectsOnCancel' {tableName} -> tableName) (\s@DeleteObjectsOnCancel' {} a -> s {tableName = a} :: DeleteObjectsOnCancel)
    |                                                                                                                                      ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/DeleteObjectsOnCancel.hs:136:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {transactionId = a} with type DeleteObjectsOnCancel is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
136 | deleteObjectsOnCancel_transactionId = Lens.lens (\DeleteObjectsOnCancel' {transactionId} -> transactionId) (\s@DeleteObjectsOnCancel' {} a -> s {transactionId = a} :: DeleteObjectsOnCancel)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/DeleteObjectsOnCancel.hs:141:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {objects = a} with type DeleteObjectsOnCancel is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
141 | deleteObjectsOnCancel_objects = Lens.lens (\DeleteObjectsOnCancel' {objects} -> objects) (\s@DeleteObjectsOnCancel' {} a -> s {objects = a} :: DeleteObjectsOnCancel) Prelude.. Lens.coerced
    |                                                                                                                                ^^^^^^^^^^^
[ 89 of 105] Compiling Amazonka.LakeFormation.DeleteLFTag

gen/Amazonka/LakeFormation/DeleteLFTag.hs:96:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type DeleteLFTag is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
96 | deleteLFTag_catalogId = Lens.lens (\DeleteLFTag' {catalogId} -> catalogId) (\s@DeleteLFTag' {} a -> s {catalogId = a} :: DeleteLFTag)
   |                                                                                                        ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/DeleteLFTag.hs:100:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagKey = a} with type DeleteLFTag is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | deleteLFTag_tagKey = Lens.lens (\DeleteLFTag' {tagKey} -> tagKey) (\s@DeleteLFTag' {} a -> s {tagKey = a} :: DeleteLFTag)
    |                                                                                               ^^^^^^^^^^
[ 90 of 105] Compiling Amazonka.LakeFormation.DeleteDataCellsFilter

gen/Amazonka/LakeFormation/DeleteDataCellsFilter.hs:93:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {databaseName = a} with type DeleteDataCellsFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | deleteDataCellsFilter_databaseName = Lens.lens (\DeleteDataCellsFilter' {databaseName} -> databaseName) (\s@DeleteDataCellsFilter' {} a -> s {databaseName = a} :: DeleteDataCellsFilter)
   |                                                                                                                                               ^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/DeleteDataCellsFilter.hs:97:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type DeleteDataCellsFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
97 | deleteDataCellsFilter_name = Lens.lens (\DeleteDataCellsFilter' {name} -> name) (\s@DeleteDataCellsFilter' {} a -> s {name = a} :: DeleteDataCellsFilter)
   |                                                                                                                       ^^^^^^^^

gen/Amazonka/LakeFormation/DeleteDataCellsFilter.hs:101:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tableCatalogId = a} with type DeleteDataCellsFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | deleteDataCellsFilter_tableCatalogId = Lens.lens (\DeleteDataCellsFilter' {tableCatalogId} -> tableCatalogId) (\s@DeleteDataCellsFilter' {} a -> s {tableCatalogId = a} :: DeleteDataCellsFilter)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/DeleteDataCellsFilter.hs:105:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tableName = a} with type DeleteDataCellsFilter is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
105 | deleteDataCellsFilter_tableName = Lens.lens (\DeleteDataCellsFilter' {tableName} -> tableName) (\s@DeleteDataCellsFilter' {} a -> s {tableName = a} :: DeleteDataCellsFilter)
    |                                                                                                                                      ^^^^^^^^^^^^^
[ 91 of 105] Compiling Amazonka.LakeFormation.CreateLFTag

gen/Amazonka/LakeFormation/CreateLFTag.hs:99:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type CreateLFTag is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | createLFTag_catalogId = Lens.lens (\CreateLFTag' {catalogId} -> catalogId) (\s@CreateLFTag' {} a -> s {catalogId = a} :: CreateLFTag)
   |                                                                                                        ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/CreateLFTag.hs:103:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagKey = a} with type CreateLFTag is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | createLFTag_tagKey = Lens.lens (\CreateLFTag' {tagKey} -> tagKey) (\s@CreateLFTag' {} a -> s {tagKey = a} :: CreateLFTag)
    |                                                                                               ^^^^^^^^^^

gen/Amazonka/LakeFormation/CreateLFTag.hs:107:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagValues = a} with type CreateLFTag is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
107 | createLFTag_tagValues = Lens.lens (\CreateLFTag' {tagValues} -> tagValues) (\s@CreateLFTag' {} a -> s {tagValues = a} :: CreateLFTag) Prelude.. Lens.coerced
    |                                                                                                        ^^^^^^^^^^^^^
[ 92 of 105] Compiling Amazonka.LakeFormation.CreateDataCellsFilter
[ 93 of 105] Compiling Amazonka.LakeFormation.CommitTransaction

gen/Amazonka/LakeFormation/CommitTransaction.hs:77:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {transactionId = a} with type CommitTransaction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
77 | commitTransaction_transactionId = Lens.lens (\CommitTransaction' {transactionId} -> transactionId) (\s@CommitTransaction' {} a -> s {transactionId = a} :: CommitTransaction)
   |                                                                                                                                      ^^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/CommitTransaction.hs:160:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {transactionStatus = a} with type CommitTransactionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
160 | commitTransactionResponse_transactionStatus = Lens.lens (\CommitTransactionResponse' {transactionStatus} -> transactionStatus) (\s@CommitTransactionResponse' {} a -> s {transactionStatus = a} :: CommitTransactionResponse)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^
[ 94 of 105] Compiling Amazonka.LakeFormation.CancelTransaction

gen/Amazonka/LakeFormation/CancelTransaction.hs:75:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {transactionId = a} with type CancelTransaction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
75 | cancelTransaction_transactionId = Lens.lens (\CancelTransaction' {transactionId} -> transactionId) (\s@CancelTransaction' {} a -> s {transactionId = a} :: CancelTransaction)
   |                                                                                                                                      ^^^^^^^^^^^^^^^^^
[ 95 of 105] Compiling Amazonka.LakeFormation.BatchRevokePermissions

gen/Amazonka/LakeFormation/BatchRevokePermissions.hs:93:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type BatchRevokePermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | batchRevokePermissions_catalogId = Lens.lens (\BatchRevokePermissions' {catalogId} -> catalogId) (\s@BatchRevokePermissions' {} a -> s {catalogId = a} :: BatchRevokePermissions)
   |                                                                                                                                         ^^^^^^^^^^^^^
[ 96 of 105] Compiling Amazonka.LakeFormation.BatchGrantPermissions

gen/Amazonka/LakeFormation/BatchGrantPermissions.hs:92:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type BatchGrantPermissions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | batchGrantPermissions_catalogId = Lens.lens (\BatchGrantPermissions' {catalogId} -> catalogId) (\s@BatchGrantPermissions' {} a -> s {catalogId = a} :: BatchGrantPermissions)
   |                                                                                                                                      ^^^^^^^^^^^^^
[ 97 of 105] Compiling Amazonka.LakeFormation.AssumeDecoratedRoleWithSAML

gen/Amazonka/LakeFormation/AssumeDecoratedRoleWithSAML.hs:148:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleArn = a} with type AssumeDecoratedRoleWithSAML is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
148 | assumeDecoratedRoleWithSAML_roleArn = Lens.lens (\AssumeDecoratedRoleWithSAML' {roleArn} -> roleArn) (\s@AssumeDecoratedRoleWithSAML' {} a -> s {roleArn = a} :: AssumeDecoratedRoleWithSAML)
    |                                                                                                                                                  ^^^^^^^^^^^
[ 98 of 105] Compiling Amazonka.LakeFormation.AddLFTagsToResource

gen/Amazonka/LakeFormation/AddLFTagsToResource.hs:100:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type AddLFTagsToResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | addLFTagsToResource_catalogId = Lens.lens (\AddLFTagsToResource' {catalogId} -> catalogId) (\s@AddLFTagsToResource' {} a -> s {catalogId = a} :: AddLFTagsToResource)
    |                                                                                                                                ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/AddLFTagsToResource.hs:104:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resource = a} with type AddLFTagsToResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | addLFTagsToResource_resource = Lens.lens (\AddLFTagsToResource' {resource} -> resource) (\s@AddLFTagsToResource' {} a -> s {resource = a} :: AddLFTagsToResource)
    |                                                                                                                             ^^^^^^^^^^^^

gen/Amazonka/LakeFormation/AddLFTagsToResource.hs:108:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lFTags = a} with type AddLFTagsToResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | addLFTagsToResource_lFTags = Lens.lens (\AddLFTagsToResource' {lFTags} -> lFTags) (\s@AddLFTagsToResource' {} a -> s {lFTags = a} :: AddLFTagsToResource) Prelude.. Lens.coerced
    |                                                                                                                       ^^^^^^^^^^
[ 99 of 105] Compiling Amazonka.LakeFormation.UpdateLFTag

gen/Amazonka/LakeFormation/UpdateLFTag.hs:108:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type UpdateLFTag is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | updateLFTag_catalogId = Lens.lens (\UpdateLFTag' {catalogId} -> catalogId) (\s@UpdateLFTag' {} a -> s {catalogId = a} :: UpdateLFTag)
    |                                                                                                        ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/UpdateLFTag.hs:120:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tagKey = a} with type UpdateLFTag is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | updateLFTag_tagKey = Lens.lens (\UpdateLFTag' {tagKey} -> tagKey) (\s@UpdateLFTag' {} a -> s {tagKey = a} :: UpdateLFTag)
    |                                                                                               ^^^^^^^^^^
[100 of 105] Compiling Amazonka.LakeFormation.UpdateResource

gen/Amazonka/LakeFormation/UpdateResource.hs:85:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleArn = a} with type UpdateResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
85 | updateResource_roleArn = Lens.lens (\UpdateResource' {roleArn} -> roleArn) (\s@UpdateResource' {} a -> s {roleArn = a} :: UpdateResource)
   |                                                                                                           ^^^^^^^^^^^

gen/Amazonka/LakeFormation/UpdateResource.hs:89:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceArn = a} with type UpdateResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
89 | updateResource_resourceArn = Lens.lens (\UpdateResource' {resourceArn} -> resourceArn) (\s@UpdateResource' {} a -> s {resourceArn = a} :: UpdateResource)
   |                                                                                                                       ^^^^^^^^^^^^^^^
[101 of 105] Compiling Amazonka.LakeFormation.UpdateTableObjects

gen/Amazonka/LakeFormation/UpdateTableObjects.hs:114:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type UpdateTableObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | updateTableObjects_catalogId = Lens.lens (\UpdateTableObjects' {catalogId} -> catalogId) (\s@UpdateTableObjects' {} a -> s {catalogId = a} :: UpdateTableObjects)
    |                                                                                                                             ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/UpdateTableObjects.hs:118:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {transactionId = a} with type UpdateTableObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
118 | updateTableObjects_transactionId = Lens.lens (\UpdateTableObjects' {transactionId} -> transactionId) (\s@UpdateTableObjects' {} a -> s {transactionId = a} :: UpdateTableObjects)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/UpdateTableObjects.hs:122:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {databaseName = a} with type UpdateTableObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
122 | updateTableObjects_databaseName = Lens.lens (\UpdateTableObjects' {databaseName} -> databaseName) (\s@UpdateTableObjects' {} a -> s {databaseName = a} :: UpdateTableObjects)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/UpdateTableObjects.hs:126:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tableName = a} with type UpdateTableObjects is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
126 | updateTableObjects_tableName = Lens.lens (\UpdateTableObjects' {tableName} -> tableName) (\s@UpdateTableObjects' {} a -> s {tableName = a} :: UpdateTableObjects)
    |                                                                                                                             ^^^^^^^^^^^^^
[102 of 105] Compiling Amazonka.LakeFormation.UpdateTableStorageOptimizer

gen/Amazonka/LakeFormation/UpdateTableStorageOptimizer.hs:100:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {catalogId = a} with type UpdateTableStorageOptimizer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | updateTableStorageOptimizer_catalogId = Lens.lens (\UpdateTableStorageOptimizer' {catalogId} -> catalogId) (\s@UpdateTableStorageOptimizer' {} a -> s {catalogId = a} :: UpdateTableStorageOptimizer)
    |                                                                                                                                                        ^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/UpdateTableStorageOptimizer.hs:104:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {databaseName = a} with type UpdateTableStorageOptimizer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | updateTableStorageOptimizer_databaseName = Lens.lens (\UpdateTableStorageOptimizer' {databaseName} -> databaseName) (\s@UpdateTableStorageOptimizer' {} a -> s {databaseName = a} :: UpdateTableStorageOptimizer)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/LakeFormation/UpdateTableStorageOptimizer.hs:108:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tableName = a} with type UpdateTableStorageOptimizer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | updateTableStorageOptimizer_tableName = Lens.lens (\UpdateTableStorageOptimizer' {tableName} -> tableName) (\s@UpdateTableStorageOptimizer' {} a -> s {tableName = a} :: UpdateTableStorageOptimizer)
    |                                                                                                                                                        ^^^^^^^^^^^^^
[103 of 105] Compiling Amazonka.LakeFormation.Lens
[104 of 105] Compiling Amazonka.LakeFormation.Waiters
[105 of 105] Compiling Amazonka.LakeFormation
Configuring test suite 'amazonka-lakeformation-test' for amazonka-lakeformation-2.0...
Preprocessing test suite 'amazonka-lakeformation-test' for amazonka-lakeformation-2.0...
Building test suite 'amazonka-lakeformation-test' for amazonka-lakeformation-2.0...
[1 of 4] Compiling Test.Amazonka.LakeFormation
[2 of 4] Compiling Test.Amazonka.LakeFormation.Internal
[3 of 4] Compiling Test.Amazonka.Gen.LakeFormation
[4 of 4] Compiling Main
[5 of 5] Linking /tmp/workdir-amazonka-lakeformation/amazonka-lakeformation-2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/amazonka-lakeformation-2.0/t/amazonka-lakeformation-test/build/amazonka-lakeformation-test/amazonka-lakeformation-test
