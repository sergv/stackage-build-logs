Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - amazonka-cognito-identity-2.0 (lib) (first run)
 - amazonka-cognito-identity-2.0 (test:amazonka-cognito-identity-test) (first run)
Configuring library for amazonka-cognito-identity-2.0...
Preprocessing library for amazonka-cognito-identity-2.0...
Building library for amazonka-cognito-identity-2.0...
[ 1 of 40] Compiling Amazonka.CognitoIdentity.Types.AmbiguousRoleResolutionType
[ 2 of 40] Compiling Amazonka.CognitoIdentity.Types.CognitoErrorCode
[ 3 of 40] Compiling Amazonka.CognitoIdentity.Types.CognitoIdentityProvider
[ 4 of 40] Compiling Amazonka.CognitoIdentity.Types.Credentials
[ 5 of 40] Compiling Amazonka.CognitoIdentity.Types.IdentityDescription
[ 6 of 40] Compiling Amazonka.CognitoIdentity.Types.IdentityPool
[ 7 of 40] Compiling Amazonka.CognitoIdentity.Types.IdentityPoolShortDescription
[ 8 of 40] Compiling Amazonka.CognitoIdentity.Types.MappingRuleMatchType
[ 9 of 40] Compiling Amazonka.CognitoIdentity.Types.MappingRule
[10 of 40] Compiling Amazonka.CognitoIdentity.Types.RoleMappingType
[11 of 40] Compiling Amazonka.CognitoIdentity.Types.RulesConfigurationType
[12 of 40] Compiling Amazonka.CognitoIdentity.Types.RoleMapping
[13 of 40] Compiling Amazonka.CognitoIdentity.Types.UnprocessedIdentityId
[14 of 40] Compiling Amazonka.CognitoIdentity.Types
[15 of 40] Compiling Amazonka.CognitoIdentity.TagResource
[16 of 40] Compiling Amazonka.CognitoIdentity.SetPrincipalTagAttributeMap

gen/Amazonka/CognitoIdentity/SetPrincipalTagAttributeMap.hs:106:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {principalTags = a} with type SetPrincipalTagAttributeMap is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | setPrincipalTagAttributeMap_principalTags = Lens.lens (\SetPrincipalTagAttributeMap' {principalTags} -> principalTags) (\s@SetPrincipalTagAttributeMap' {} a -> s {principalTags = a} :: SetPrincipalTagAttributeMap) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/SetPrincipalTagAttributeMap.hs:111:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {useDefaults = a} with type SetPrincipalTagAttributeMap is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
111 | setPrincipalTagAttributeMap_useDefaults = Lens.lens (\SetPrincipalTagAttributeMap' {useDefaults} -> useDefaults) (\s@SetPrincipalTagAttributeMap' {} a -> s {useDefaults = a} :: SetPrincipalTagAttributeMap)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/SetPrincipalTagAttributeMap.hs:115:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type SetPrincipalTagAttributeMap is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | setPrincipalTagAttributeMap_identityPoolId = Lens.lens (\SetPrincipalTagAttributeMap' {identityPoolId} -> identityPoolId) (\s@SetPrincipalTagAttributeMap' {} a -> s {identityPoolId = a} :: SetPrincipalTagAttributeMap)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/SetPrincipalTagAttributeMap.hs:119:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityProviderName = a} with type SetPrincipalTagAttributeMap is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | setPrincipalTagAttributeMap_identityProviderName = Lens.lens (\SetPrincipalTagAttributeMap' {identityProviderName} -> identityProviderName) (\s@SetPrincipalTagAttributeMap' {} a -> s {identityProviderName = a} :: SetPrincipalTagAttributeMap)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/SetPrincipalTagAttributeMap.hs:243:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type SetPrincipalTagAttributeMapResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
243 | setPrincipalTagAttributeMapResponse_identityPoolId = Lens.lens (\SetPrincipalTagAttributeMapResponse' {identityPoolId} -> identityPoolId) (\s@SetPrincipalTagAttributeMapResponse' {} a -> s {identityPoolId = a} :: SetPrincipalTagAttributeMapResponse)
    |                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/SetPrincipalTagAttributeMap.hs:247:209: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityProviderName = a} with type SetPrincipalTagAttributeMapResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
247 | setPrincipalTagAttributeMapResponse_identityProviderName = Lens.lens (\SetPrincipalTagAttributeMapResponse' {identityProviderName} -> identityProviderName) (\s@SetPrincipalTagAttributeMapResponse' {} a -> s {identityProviderName = a} :: SetPrincipalTagAttributeMapResponse)
    |                                                                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/SetPrincipalTagAttributeMap.hs:253:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {principalTags = a} with type SetPrincipalTagAttributeMapResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
253 | setPrincipalTagAttributeMapResponse_principalTags = Lens.lens (\SetPrincipalTagAttributeMapResponse' {principalTags} -> principalTags) (\s@SetPrincipalTagAttributeMapResponse' {} a -> s {principalTags = a} :: SetPrincipalTagAttributeMapResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/SetPrincipalTagAttributeMap.hs:258:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {useDefaults = a} with type SetPrincipalTagAttributeMapResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
258 | setPrincipalTagAttributeMapResponse_useDefaults = Lens.lens (\SetPrincipalTagAttributeMapResponse' {useDefaults} -> useDefaults) (\s@SetPrincipalTagAttributeMapResponse' {} a -> s {useDefaults = a} :: SetPrincipalTagAttributeMapResponse)
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^
[17 of 40] Compiling Amazonka.CognitoIdentity.SetIdentityPoolRoles

gen/Amazonka/CognitoIdentity/SetIdentityPoolRoles.hs:114:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type SetIdentityPoolRoles is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | setIdentityPoolRoles_identityPoolId = Lens.lens (\SetIdentityPoolRoles' {identityPoolId} -> identityPoolId) (\s@SetIdentityPoolRoles' {} a -> s {identityPoolId = a} :: SetIdentityPoolRoles)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^
[18 of 40] Compiling Amazonka.CognitoIdentity.MergeDeveloperIdentities

gen/Amazonka/CognitoIdentity/MergeDeveloperIdentities.hs:152:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {developerProviderName = a} with type MergeDeveloperIdentities is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
152 | mergeDeveloperIdentities_developerProviderName = Lens.lens (\MergeDeveloperIdentities' {developerProviderName} -> developerProviderName) (\s@MergeDeveloperIdentities' {} a -> s {developerProviderName = a} :: MergeDeveloperIdentities)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/MergeDeveloperIdentities.hs:156:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type MergeDeveloperIdentities is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
156 | mergeDeveloperIdentities_identityPoolId = Lens.lens (\MergeDeveloperIdentities' {identityPoolId} -> identityPoolId) (\s@MergeDeveloperIdentities' {} a -> s {identityPoolId = a} :: MergeDeveloperIdentities)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/MergeDeveloperIdentities.hs:264:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type MergeDeveloperIdentitiesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
264 | mergeDeveloperIdentitiesResponse_identityId = Lens.lens (\MergeDeveloperIdentitiesResponse' {identityId} -> identityId) (\s@MergeDeveloperIdentitiesResponse' {} a -> s {identityId = a} :: MergeDeveloperIdentitiesResponse)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^
[19 of 40] Compiling Amazonka.CognitoIdentity.LookupDeveloperIdentity

gen/Amazonka/CognitoIdentity/LookupDeveloperIdentity.hs:144:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type LookupDeveloperIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
144 | lookupDeveloperIdentity_identityId = Lens.lens (\LookupDeveloperIdentity' {identityId} -> identityId) (\s@LookupDeveloperIdentity' {} a -> s {identityId = a} :: LookupDeveloperIdentity)
    |                                                                                                                                               ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/LookupDeveloperIdentity.hs:157:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type LookupDeveloperIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
157 | lookupDeveloperIdentity_nextToken = Lens.lens (\LookupDeveloperIdentity' {nextToken} -> nextToken) (\s@LookupDeveloperIdentity' {} a -> s {nextToken = a} :: LookupDeveloperIdentity)
    |                                                                                                                                            ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/LookupDeveloperIdentity.hs:161:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type LookupDeveloperIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
161 | lookupDeveloperIdentity_identityPoolId = Lens.lens (\LookupDeveloperIdentity' {identityPoolId} -> identityPoolId) (\s@LookupDeveloperIdentity' {} a -> s {identityPoolId = a} :: LookupDeveloperIdentity)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/LookupDeveloperIdentity.hs:299:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type LookupDeveloperIdentityResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
299 | lookupDeveloperIdentityResponse_identityId = Lens.lens (\LookupDeveloperIdentityResponse' {identityId} -> identityId) (\s@LookupDeveloperIdentityResponse' {} a -> s {identityId = a} :: LookupDeveloperIdentityResponse)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/LookupDeveloperIdentity.hs:308:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type LookupDeveloperIdentityResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
308 | lookupDeveloperIdentityResponse_nextToken = Lens.lens (\LookupDeveloperIdentityResponse' {nextToken} -> nextToken) (\s@LookupDeveloperIdentityResponse' {} a -> s {nextToken = a} :: LookupDeveloperIdentityResponse)
    |                                                                                                                                                                    ^^^^^^^^^^^^^
[20 of 40] Compiling Amazonka.CognitoIdentity.ListTagsForResource
[21 of 40] Compiling Amazonka.CognitoIdentity.ListIdentityPools

gen/Amazonka/CognitoIdentity/ListIdentityPools.hs:90:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListIdentityPools is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | listIdentityPools_nextToken = Lens.lens (\ListIdentityPools' {nextToken} -> nextToken) (\s@ListIdentityPools' {} a -> s {nextToken = a} :: ListIdentityPools)
   |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/ListIdentityPools.hs:218:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListIdentityPoolsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
218 | listIdentityPoolsResponse_nextToken = Lens.lens (\ListIdentityPoolsResponse' {nextToken} -> nextToken) (\s@ListIdentityPoolsResponse' {} a -> s {nextToken = a} :: ListIdentityPoolsResponse)
    |                                                                                                                                                  ^^^^^^^^^^^^^
[22 of 40] Compiling Amazonka.CognitoIdentity.ListIdentities

gen/Amazonka/CognitoIdentity/ListIdentities.hs:113:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListIdentities is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | listIdentities_nextToken = Lens.lens (\ListIdentities' {nextToken} -> nextToken) (\s@ListIdentities' {} a -> s {nextToken = a} :: ListIdentities)
    |                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/ListIdentities.hs:117:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type ListIdentities is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
117 | listIdentities_identityPoolId = Lens.lens (\ListIdentities' {identityPoolId} -> identityPoolId) (\s@ListIdentities' {} a -> s {identityPoolId = a} :: ListIdentities)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/ListIdentities.hs:236:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type ListIdentitiesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
236 | listIdentitiesResponse_identityPoolId = Lens.lens (\ListIdentitiesResponse' {identityPoolId} -> identityPoolId) (\s@ListIdentitiesResponse' {} a -> s {identityPoolId = a} :: ListIdentitiesResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/ListIdentities.hs:240:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListIdentitiesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
240 | listIdentitiesResponse_nextToken = Lens.lens (\ListIdentitiesResponse' {nextToken} -> nextToken) (\s@ListIdentitiesResponse' {} a -> s {nextToken = a} :: ListIdentitiesResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^
[23 of 40] Compiling Amazonka.CognitoIdentity.GetPrincipalTagAttributeMap

gen/Amazonka/CognitoIdentity/GetPrincipalTagAttributeMap.hs:95:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type GetPrincipalTagAttributeMap is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
95 | getPrincipalTagAttributeMap_identityPoolId = Lens.lens (\GetPrincipalTagAttributeMap' {identityPoolId} -> identityPoolId) (\s@GetPrincipalTagAttributeMap' {} a -> s {identityPoolId = a} :: GetPrincipalTagAttributeMap)
   |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetPrincipalTagAttributeMap.hs:99:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityProviderName = a} with type GetPrincipalTagAttributeMap is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | getPrincipalTagAttributeMap_identityProviderName = Lens.lens (\GetPrincipalTagAttributeMap' {identityProviderName} -> identityProviderName) (\s@GetPrincipalTagAttributeMap' {} a -> s {identityProviderName = a} :: GetPrincipalTagAttributeMap)
   |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetPrincipalTagAttributeMap.hs:218:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type GetPrincipalTagAttributeMapResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
218 | getPrincipalTagAttributeMapResponse_identityPoolId = Lens.lens (\GetPrincipalTagAttributeMapResponse' {identityPoolId} -> identityPoolId) (\s@GetPrincipalTagAttributeMapResponse' {} a -> s {identityPoolId = a} :: GetPrincipalTagAttributeMapResponse)
    |                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetPrincipalTagAttributeMap.hs:222:209: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityProviderName = a} with type GetPrincipalTagAttributeMapResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
222 | getPrincipalTagAttributeMapResponse_identityProviderName = Lens.lens (\GetPrincipalTagAttributeMapResponse' {identityProviderName} -> identityProviderName) (\s@GetPrincipalTagAttributeMapResponse' {} a -> s {identityProviderName = a} :: GetPrincipalTagAttributeMapResponse)
    |                                                                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^
[24 of 40] Compiling Amazonka.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity

gen/Amazonka/CognitoIdentity/GetOpenIdTokenForDeveloperIdentity.hs:162:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type GetOpenIdTokenForDeveloperIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
162 | getOpenIdTokenForDeveloperIdentity_identityId = Lens.lens (\GetOpenIdTokenForDeveloperIdentity' {identityId} -> identityId) (\s@GetOpenIdTokenForDeveloperIdentity' {} a -> s {identityId = a} :: GetOpenIdTokenForDeveloperIdentity)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetOpenIdTokenForDeveloperIdentity.hs:185:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type GetOpenIdTokenForDeveloperIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
185 | getOpenIdTokenForDeveloperIdentity_identityPoolId = Lens.lens (\GetOpenIdTokenForDeveloperIdentity' {identityPoolId} -> identityPoolId) (\s@GetOpenIdTokenForDeveloperIdentity' {} a -> s {identityPoolId = a} :: GetOpenIdTokenForDeveloperIdentity)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetOpenIdTokenForDeveloperIdentity.hs:198:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {logins = a} with type GetOpenIdTokenForDeveloperIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
198 | getOpenIdTokenForDeveloperIdentity_logins = Lens.lens (\GetOpenIdTokenForDeveloperIdentity' {logins} -> logins) (\s@GetOpenIdTokenForDeveloperIdentity' {} a -> s {logins = a} :: GetOpenIdTokenForDeveloperIdentity) Prelude.. Lens.coerced
    |                                                                                                                                                                    ^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetOpenIdTokenForDeveloperIdentity.hs:331:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type GetOpenIdTokenForDeveloperIdentityResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
331 | getOpenIdTokenForDeveloperIdentityResponse_identityId = Lens.lens (\GetOpenIdTokenForDeveloperIdentityResponse' {identityId} -> identityId) (\s@GetOpenIdTokenForDeveloperIdentityResponse' {} a -> s {identityId = a} :: GetOpenIdTokenForDeveloperIdentityResponse)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^
[25 of 40] Compiling Amazonka.CognitoIdentity.GetOpenIdToken

gen/Amazonka/CognitoIdentity/GetOpenIdToken.hs:104:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {logins = a} with type GetOpenIdToken is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | getOpenIdToken_logins = Lens.lens (\GetOpenIdToken' {logins} -> logins) (\s@GetOpenIdToken' {} a -> s {logins = a} :: GetOpenIdToken) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                        ^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetOpenIdToken.hs:108:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type GetOpenIdToken is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | getOpenIdToken_identityId = Lens.lens (\GetOpenIdToken' {identityId} -> identityId) (\s@GetOpenIdToken' {} a -> s {identityId = a} :: GetOpenIdToken)
    |                                                                                                                    ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetOpenIdToken.hs:209:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type GetOpenIdTokenResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
209 | getOpenIdTokenResponse_identityId = Lens.lens (\GetOpenIdTokenResponse' {identityId} -> identityId) (\s@GetOpenIdTokenResponse' {} a -> s {identityId = a} :: GetOpenIdTokenResponse)
    |                                                                                                                                            ^^^^^^^^^^^^^^
[26 of 40] Compiling Amazonka.CognitoIdentity.GetIdentityPoolRoles

gen/Amazonka/CognitoIdentity/GetIdentityPoolRoles.hs:84:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type GetIdentityPoolRoles is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
84 | getIdentityPoolRoles_identityPoolId = Lens.lens (\GetIdentityPoolRoles' {identityPoolId} -> identityPoolId) (\s@GetIdentityPoolRoles' {} a -> s {identityPoolId = a} :: GetIdentityPoolRoles)
   |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetIdentityPoolRoles.hs:193:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type GetIdentityPoolRolesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
193 | getIdentityPoolRolesResponse_identityPoolId = Lens.lens (\GetIdentityPoolRolesResponse' {identityPoolId} -> identityPoolId) (\s@GetIdentityPoolRolesResponse' {} a -> s {identityPoolId = a} :: GetIdentityPoolRolesResponse)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^
[27 of 40] Compiling Amazonka.CognitoIdentity.GetId

gen/Amazonka/CognitoIdentity/GetId.hs:143:77: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {logins = a} with type GetId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
143 | getId_logins = Lens.lens (\GetId' {logins} -> logins) (\s@GetId' {} a -> s {logins = a} :: GetId) Prelude.. Lens.mapping Lens.coerced
    |                                                                             ^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetId.hs:147:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type GetId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
147 | getId_identityPoolId = Lens.lens (\GetId' {identityPoolId} -> identityPoolId) (\s@GetId' {} a -> s {identityPoolId = a} :: GetId)
    |                                                                                                     ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetId.hs:240:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type GetIdResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
240 | getIdResponse_identityId = Lens.lens (\GetIdResponse' {identityId} -> identityId) (\s@GetIdResponse' {} a -> s {identityId = a} :: GetIdResponse)
    |                                                                                                                 ^^^^^^^^^^^^^^
[28 of 40] Compiling Amazonka.CognitoIdentity.GetCredentialsForIdentity

gen/Amazonka/CognitoIdentity/GetCredentialsForIdentity.hs:144:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {logins = a} with type GetCredentialsForIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
144 | getCredentialsForIdentity_logins = Lens.lens (\GetCredentialsForIdentity' {logins} -> logins) (\s@GetCredentialsForIdentity' {} a -> s {logins = a} :: GetCredentialsForIdentity) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                         ^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetCredentialsForIdentity.hs:148:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type GetCredentialsForIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
148 | getCredentialsForIdentity_identityId = Lens.lens (\GetCredentialsForIdentity' {identityId} -> identityId) (\s@GetCredentialsForIdentity' {} a -> s {identityId = a} :: GetCredentialsForIdentity)
    |                                                                                                                                                     ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/GetCredentialsForIdentity.hs:254:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type GetCredentialsForIdentityResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
254 | getCredentialsForIdentityResponse_identityId = Lens.lens (\GetCredentialsForIdentityResponse' {identityId} -> identityId) (\s@GetCredentialsForIdentityResponse' {} a -> s {identityId = a} :: GetCredentialsForIdentityResponse)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^
[29 of 40] Compiling Amazonka.CognitoIdentity.DescribeIdentityPool

gen/Amazonka/CognitoIdentity/DescribeIdentityPool.hs:91:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type DescribeIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
91 | describeIdentityPool_identityPoolId = Lens.lens (\DescribeIdentityPool' {identityPoolId} -> identityPoolId) (\s@DescribeIdentityPool' {} a -> s {identityPoolId = a} :: DescribeIdentityPool)
   |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^
[30 of 40] Compiling Amazonka.CognitoIdentity.DescribeIdentity

gen/Amazonka/CognitoIdentity/DescribeIdentity.hs:82:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type DescribeIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
82 | describeIdentity_identityId = Lens.lens (\DescribeIdentity' {identityId} -> identityId) (\s@DescribeIdentity' {} a -> s {identityId = a} :: DescribeIdentity)
   |                                                                                                                          ^^^^^^^^^^^^^^
[31 of 40] Compiling Amazonka.CognitoIdentity.DeleteIdentityPool

gen/Amazonka/CognitoIdentity/DeleteIdentityPool.hs:79:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type DeleteIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
79 | deleteIdentityPool_identityPoolId = Lens.lens (\DeleteIdentityPool' {identityPoolId} -> identityPoolId) (\s@DeleteIdentityPool' {} a -> s {identityPoolId = a} :: DeleteIdentityPool)
   |                                                                                                                                            ^^^^^^^^^^^^^^^^^^
[32 of 40] Compiling Amazonka.CognitoIdentity.DeleteIdentities
[33 of 40] Compiling Amazonka.CognitoIdentity.CreateIdentityPool

gen/Amazonka/CognitoIdentity/CreateIdentityPool.hs:184:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {allowClassicFlow = a} with type CreateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
184 | createIdentityPool_allowClassicFlow = Lens.lens (\CreateIdentityPool' {allowClassicFlow} -> allowClassicFlow) (\s@CreateIdentityPool' {} a -> s {allowClassicFlow = a} :: CreateIdentityPool)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/CreateIdentityPool.hs:188:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cognitoIdentityProviders = a} with type CreateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
188 | createIdentityPool_cognitoIdentityProviders = Lens.lens (\CreateIdentityPool' {cognitoIdentityProviders} -> cognitoIdentityProviders) (\s@CreateIdentityPool' {} a -> s {cognitoIdentityProviders = a} :: CreateIdentityPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/CreateIdentityPool.hs:199:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {developerProviderName = a} with type CreateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
199 | createIdentityPool_developerProviderName = Lens.lens (\CreateIdentityPool' {developerProviderName} -> developerProviderName) (\s@CreateIdentityPool' {} a -> s {developerProviderName = a} :: CreateIdentityPool)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/CreateIdentityPool.hs:205:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolTags = a} with type CreateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
205 | createIdentityPool_identityPoolTags = Lens.lens (\CreateIdentityPool' {identityPoolTags} -> identityPoolTags) (\s@CreateIdentityPool' {} a -> s {identityPoolTags = a} :: CreateIdentityPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/CreateIdentityPool.hs:209:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {openIdConnectProviderARNs = a} with type CreateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
209 | createIdentityPool_openIdConnectProviderARNs = Lens.lens (\CreateIdentityPool' {openIdConnectProviderARNs} -> openIdConnectProviderARNs) (\s@CreateIdentityPool' {} a -> s {openIdConnectProviderARNs = a} :: CreateIdentityPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/CreateIdentityPool.hs:214:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {samlProviderARNs = a} with type CreateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
214 | createIdentityPool_samlProviderARNs = Lens.lens (\CreateIdentityPool' {samlProviderARNs} -> samlProviderARNs) (\s@CreateIdentityPool' {} a -> s {samlProviderARNs = a} :: CreateIdentityPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/CreateIdentityPool.hs:218:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {supportedLoginProviders = a} with type CreateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
218 | createIdentityPool_supportedLoginProviders = Lens.lens (\CreateIdentityPool' {supportedLoginProviders} -> supportedLoginProviders) (\s@CreateIdentityPool' {} a -> s {supportedLoginProviders = a} :: CreateIdentityPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/CreateIdentityPool.hs:222:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolName = a} with type CreateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
222 | createIdentityPool_identityPoolName = Lens.lens (\CreateIdentityPool' {identityPoolName} -> identityPoolName) (\s@CreateIdentityPool' {} a -> s {identityPoolName = a} :: CreateIdentityPool)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/CreateIdentityPool.hs:226:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {allowUnauthenticatedIdentities = a} with type CreateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
226 | createIdentityPool_allowUnauthenticatedIdentities = Lens.lens (\CreateIdentityPool' {allowUnauthenticatedIdentities} -> allowUnauthenticatedIdentities) (\s@CreateIdentityPool' {} a -> s {allowUnauthenticatedIdentities = a} :: CreateIdentityPool)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[34 of 40] Compiling Amazonka.CognitoIdentity.UnlinkDeveloperIdentity

gen/Amazonka/CognitoIdentity/UnlinkDeveloperIdentity.hs:112:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type UnlinkDeveloperIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | unlinkDeveloperIdentity_identityId = Lens.lens (\UnlinkDeveloperIdentity' {identityId} -> identityId) (\s@UnlinkDeveloperIdentity' {} a -> s {identityId = a} :: UnlinkDeveloperIdentity)
    |                                                                                                                                               ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/UnlinkDeveloperIdentity.hs:116:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type UnlinkDeveloperIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | unlinkDeveloperIdentity_identityPoolId = Lens.lens (\UnlinkDeveloperIdentity' {identityPoolId} -> identityPoolId) (\s@UnlinkDeveloperIdentity' {} a -> s {identityPoolId = a} :: UnlinkDeveloperIdentity)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/UnlinkDeveloperIdentity.hs:120:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {developerProviderName = a} with type UnlinkDeveloperIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | unlinkDeveloperIdentity_developerProviderName = Lens.lens (\UnlinkDeveloperIdentity' {developerProviderName} -> developerProviderName) (\s@UnlinkDeveloperIdentity' {} a -> s {developerProviderName = a} :: UnlinkDeveloperIdentity)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
[35 of 40] Compiling Amazonka.CognitoIdentity.UnlinkIdentity

gen/Amazonka/CognitoIdentity/UnlinkIdentity.hs:93:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityId = a} with type UnlinkIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | unlinkIdentity_identityId = Lens.lens (\UnlinkIdentity' {identityId} -> identityId) (\s@UnlinkIdentity' {} a -> s {identityId = a} :: UnlinkIdentity)
   |                                                                                                                    ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/UnlinkIdentity.hs:98:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {logins = a} with type UnlinkIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | unlinkIdentity_logins = Lens.lens (\UnlinkIdentity' {logins} -> logins) (\s@UnlinkIdentity' {} a -> s {logins = a} :: UnlinkIdentity) Prelude.. Lens.coerced
   |                                                                                                        ^^^^^^^^^^
[36 of 40] Compiling Amazonka.CognitoIdentity.UntagResource
[37 of 40] Compiling Amazonka.CognitoIdentity.UpdateIdentityPool

gen/Amazonka/CognitoIdentity/UpdateIdentityPool.hs:169:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {allowClassicFlow = a} with type UpdateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
169 | updateIdentityPool_allowClassicFlow = Lens.lens (\UpdateIdentityPool' {allowClassicFlow} -> allowClassicFlow) (\s@UpdateIdentityPool' {} a -> s {allowClassicFlow = a} :: UpdateIdentityPool)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/UpdateIdentityPool.hs:173:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cognitoIdentityProviders = a} with type UpdateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
173 | updateIdentityPool_cognitoIdentityProviders = Lens.lens (\UpdateIdentityPool' {cognitoIdentityProviders} -> cognitoIdentityProviders) (\s@UpdateIdentityPool' {} a -> s {cognitoIdentityProviders = a} :: UpdateIdentityPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/UpdateIdentityPool.hs:177:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {developerProviderName = a} with type UpdateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
177 | updateIdentityPool_developerProviderName = Lens.lens (\UpdateIdentityPool' {developerProviderName} -> developerProviderName) (\s@UpdateIdentityPool' {} a -> s {developerProviderName = a} :: UpdateIdentityPool)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/UpdateIdentityPool.hs:184:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolTags = a} with type UpdateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
184 | updateIdentityPool_identityPoolTags = Lens.lens (\UpdateIdentityPool' {identityPoolTags} -> identityPoolTags) (\s@UpdateIdentityPool' {} a -> s {identityPoolTags = a} :: UpdateIdentityPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/UpdateIdentityPool.hs:188:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {openIdConnectProviderARNs = a} with type UpdateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
188 | updateIdentityPool_openIdConnectProviderARNs = Lens.lens (\UpdateIdentityPool' {openIdConnectProviderARNs} -> openIdConnectProviderARNs) (\s@UpdateIdentityPool' {} a -> s {openIdConnectProviderARNs = a} :: UpdateIdentityPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/UpdateIdentityPool.hs:193:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {samlProviderARNs = a} with type UpdateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
193 | updateIdentityPool_samlProviderARNs = Lens.lens (\UpdateIdentityPool' {samlProviderARNs} -> samlProviderARNs) (\s@UpdateIdentityPool' {} a -> s {samlProviderARNs = a} :: UpdateIdentityPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/UpdateIdentityPool.hs:197:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {supportedLoginProviders = a} with type UpdateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
197 | updateIdentityPool_supportedLoginProviders = Lens.lens (\UpdateIdentityPool' {supportedLoginProviders} -> supportedLoginProviders) (\s@UpdateIdentityPool' {} a -> s {supportedLoginProviders = a} :: UpdateIdentityPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/UpdateIdentityPool.hs:201:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolId = a} with type UpdateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
201 | updateIdentityPool_identityPoolId = Lens.lens (\UpdateIdentityPool' {identityPoolId} -> identityPoolId) (\s@UpdateIdentityPool' {} a -> s {identityPoolId = a} :: UpdateIdentityPool)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/UpdateIdentityPool.hs:205:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identityPoolName = a} with type UpdateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
205 | updateIdentityPool_identityPoolName = Lens.lens (\UpdateIdentityPool' {identityPoolName} -> identityPoolName) (\s@UpdateIdentityPool' {} a -> s {identityPoolName = a} :: UpdateIdentityPool)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentity/UpdateIdentityPool.hs:209:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {allowUnauthenticatedIdentities = a} with type UpdateIdentityPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
209 | updateIdentityPool_allowUnauthenticatedIdentities = Lens.lens (\UpdateIdentityPool' {allowUnauthenticatedIdentities} -> allowUnauthenticatedIdentities) (\s@UpdateIdentityPool' {} a -> s {allowUnauthenticatedIdentities = a} :: UpdateIdentityPool)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[38 of 40] Compiling Amazonka.CognitoIdentity.Lens
[39 of 40] Compiling Amazonka.CognitoIdentity.Waiters
[40 of 40] Compiling Amazonka.CognitoIdentity
Configuring test suite 'amazonka-cognito-identity-test' for amazonka-cognito-identity-2.0...
Preprocessing test suite 'amazonka-cognito-identity-test' for amazonka-cognito-identity-2.0...
Building test suite 'amazonka-cognito-identity-test' for amazonka-cognito-identity-2.0...
[1 of 4] Compiling Test.Amazonka.CognitoIdentity
[2 of 4] Compiling Test.Amazonka.CognitoIdentity.Internal
[3 of 4] Compiling Main
[4 of 4] Compiling Test.Amazonka.Gen.CognitoIdentity
[5 of 5] Linking /tmp/workdir-amazonka-cognito-identity/amazonka-cognito-identity-2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/amazonka-cognito-identity-2.0/t/amazonka-cognito-identity-test/build/amazonka-cognito-identity-test/amazonka-cognito-identity-test
