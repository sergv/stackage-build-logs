Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - set-monad-0.3.0.0 (lib) (first run)
Configuring library for set-monad-0.3.0.0...
Preprocessing library for set-monad-0.3.0.0...
Building library for set-monad-0.3.0.0...
[1 of 1] Compiling Data.Set.Monad

Data/Set/Monad.hs:161:1: warning: [-Wunused-imports]
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()
    |
161 | import Data.Foldable (Foldable)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Data/Set/Monad.hs:195:3: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘pure = return’ definition detected
    in the instance declaration for ‘Applicative Set’.
    Move definition from ‘return’ to ‘pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
    |
195 |   pure  = return
    |   ^^^^^^^^^^^^^^

Data/Set/Monad.hs:203:3: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad Set’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
    |
203 |   return = Return
    |   ^^^^^^^^^^^^^^^

Data/Set/Monad.hs:215:3: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (Set a)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
    |
215 |   mappend = union
    |   ^^^^^^^^^^^^^^^
