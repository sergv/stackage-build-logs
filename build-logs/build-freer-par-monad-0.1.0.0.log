Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - freer-par-monad-0.1.0.0 (lib) (first run)
 - freer-par-monad-0.1.0.0 (test:freer-par-monad-test) (first run)
Configuring library for freer-par-monad-0.1.0.0...
Preprocessing library for freer-par-monad-0.1.0.0...
Building library for freer-par-monad-0.1.0.0...
[1 of 7] Compiling Control.Monad.Freer.Par.Internal.Id
[2 of 7] Compiling Control.Monad.Freer.Par.Funable

src/Control/Monad/Freer/Par/Funable.hs:18:23: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
18 | class Taggable (t :: (* -> *) -> * -> * -> *) where
   |                       ^

src/Control/Monad/Freer/Par/Funable.hs:18:28: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
18 | class Taggable (t :: (* -> *) -> * -> * -> *) where
   |                            ^

src/Control/Monad/Freer/Par/Funable.hs:18:34: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
18 | class Taggable (t :: (* -> *) -> * -> * -> *) where
   |                                  ^

src/Control/Monad/Freer/Par/Funable.hs:18:39: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
18 | class Taggable (t :: (* -> *) -> * -> * -> *) where
   |                                       ^

src/Control/Monad/Freer/Par/Funable.hs:18:44: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
18 | class Taggable (t :: (* -> *) -> * -> * -> *) where
   |                                            ^
[3 of 7] Compiling Control.Monad.Freer.Par.Sequence
[4 of 7] Compiling Control.Monad.Freer.Par.FTCQueue
[5 of 7] Compiling Control.Monad.Freer.Par

src/Control/Monad/Freer/Par.hs:44:24: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
44 | data Freer s sq (f :: (* -> *) -> * -> * -> *) t a =
   |                        ^

src/Control/Monad/Freer/Par.hs:44:29: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
44 | data Freer s sq (f :: (* -> *) -> * -> * -> *) t a =
   |                             ^

src/Control/Monad/Freer/Par.hs:44:35: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
44 | data Freer s sq (f :: (* -> *) -> * -> * -> *) t a =
   |                                   ^

src/Control/Monad/Freer/Par.hs:44:40: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
44 | data Freer s sq (f :: (* -> *) -> * -> * -> *) t a =
   |                                        ^

src/Control/Monad/Freer/Par.hs:44:45: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
44 | data Freer s sq (f :: (* -> *) -> * -> * -> *) t a =
   |                                             ^

src/Control/Monad/Freer/Par.hs:143:8: warning: [GHC-30606] [-Wredundant-constraints]
    Redundant constraint: Funable f
    In the type signature for:
         tag :: forall (sq :: (* -> * -> *) -> * -> * -> *)
                       (f :: (* -> *) -> * -> * -> *) s (t :: * -> *) a.
                (Sequence sq, Funable f, Taggable f) =>
                Freer s sq f t a -> Tagged s (Freer s sq f t a)
    |
143 | tag :: (Sequence sq, Funable f, Taggable f) =>
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[6 of 7] Compiling Control.Monad.Freer.Par.TaggableFunction
[7 of 7] Compiling Paths_freer_par_monad
Configuring test suite 'freer-par-monad-test' for freer-par-monad-0.1.0.0...
Preprocessing test suite 'freer-par-monad-test' for freer-par-monad-0.1.0.0...
Building test suite 'freer-par-monad-test' for freer-par-monad-0.1.0.0...
[1 of 2] Compiling Main
[2 of 2] Compiling Paths_freer_par_monad
[3 of 3] Linking /tmp/workdir-freer-par-monad/freer-par-monad-0.1.0.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/freer-par-monad-0.1.0.0/t/freer-par-monad-test/build/freer-par-monad-test/freer-par-monad-test
