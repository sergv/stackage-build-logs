Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - amazonka-qldb-session-2.0 (lib) (first run)
 - amazonka-qldb-session-2.0 (test:amazonka-qldb-session-test) (first run)
Configuring library for amazonka-qldb-session-2.0...
Preprocessing library for amazonka-qldb-session-2.0...
Building library for amazonka-qldb-session-2.0...
[ 1 of 23] Compiling Amazonka.QLDBSession.Types.AbortTransactionRequest
[ 2 of 23] Compiling Amazonka.QLDBSession.Types.CommitTransactionRequest
[ 3 of 23] Compiling Amazonka.QLDBSession.Types.EndSessionRequest
[ 4 of 23] Compiling Amazonka.QLDBSession.Types.FetchPageRequest
[ 5 of 23] Compiling Amazonka.QLDBSession.Types.IOUsage
[ 6 of 23] Compiling Amazonka.QLDBSession.Types.StartSessionRequest
[ 7 of 23] Compiling Amazonka.QLDBSession.Types.StartTransactionRequest
[ 8 of 23] Compiling Amazonka.QLDBSession.Types.TimingInformation
[ 9 of 23] Compiling Amazonka.QLDBSession.Types.StartTransactionResult
[10 of 23] Compiling Amazonka.QLDBSession.Types.StartSessionResult
[11 of 23] Compiling Amazonka.QLDBSession.Types.EndSessionResult
[12 of 23] Compiling Amazonka.QLDBSession.Types.CommitTransactionResult
[13 of 23] Compiling Amazonka.QLDBSession.Types.AbortTransactionResult
[14 of 23] Compiling Amazonka.QLDBSession.Types.ValueHolder
[15 of 23] Compiling Amazonka.QLDBSession.Types.Page
[16 of 23] Compiling Amazonka.QLDBSession.Types.FetchPageResult
[17 of 23] Compiling Amazonka.QLDBSession.Types.ExecuteStatementResult
[18 of 23] Compiling Amazonka.QLDBSession.Types.ExecuteStatementRequest
[19 of 23] Compiling Amazonka.QLDBSession.Types
[20 of 23] Compiling Amazonka.QLDBSession.SendCommand

gen/Amazonka/QLDBSession/SendCommand.hs:150:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {abortTransaction = a} with type SendCommand is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
150 | sendCommand_abortTransaction = Lens.lens (\SendCommand' {abortTransaction} -> abortTransaction) (\s@SendCommand' {} a -> s {abortTransaction = a} :: SendCommand)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:154:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {commitTransaction = a} with type SendCommand is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
154 | sendCommand_commitTransaction = Lens.lens (\SendCommand' {commitTransaction} -> commitTransaction) (\s@SendCommand' {} a -> s {commitTransaction = a} :: SendCommand)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:158:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {endSession = a} with type SendCommand is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
158 | sendCommand_endSession = Lens.lens (\SendCommand' {endSession} -> endSession) (\s@SendCommand' {} a -> s {endSession = a} :: SendCommand)
    |                                                                                                           ^^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:162:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {executeStatement = a} with type SendCommand is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
162 | sendCommand_executeStatement = Lens.lens (\SendCommand' {executeStatement} -> executeStatement) (\s@SendCommand' {} a -> s {executeStatement = a} :: SendCommand)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:166:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {fetchPage = a} with type SendCommand is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
166 | sendCommand_fetchPage = Lens.lens (\SendCommand' {fetchPage} -> fetchPage) (\s@SendCommand' {} a -> s {fetchPage = a} :: SendCommand)
    |                                                                                                        ^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:175:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sessionToken = a} with type SendCommand is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
175 | sendCommand_sessionToken = Lens.lens (\SendCommand' {sessionToken} -> sessionToken) (\s@SendCommand' {} a -> s {sessionToken = a} :: SendCommand)
    |                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:180:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {startSession = a} with type SendCommand is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
180 | sendCommand_startSession = Lens.lens (\SendCommand' {startSession} -> startSession) (\s@SendCommand' {} a -> s {startSession = a} :: SendCommand)
    |                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:184:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {startTransaction = a} with type SendCommand is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
184 | sendCommand_startTransaction = Lens.lens (\SendCommand' {startTransaction} -> startTransaction) (\s@SendCommand' {} a -> s {startTransaction = a} :: SendCommand)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:332:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {abortTransaction = a} with type SendCommandResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
332 | sendCommandResponse_abortTransaction = Lens.lens (\SendCommandResponse' {abortTransaction} -> abortTransaction) (\s@SendCommandResponse' {} a -> s {abortTransaction = a} :: SendCommandResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:336:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {commitTransaction = a} with type SendCommandResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
336 | sendCommandResponse_commitTransaction = Lens.lens (\SendCommandResponse' {commitTransaction} -> commitTransaction) (\s@SendCommandResponse' {} a -> s {commitTransaction = a} :: SendCommandResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:340:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {endSession = a} with type SendCommandResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
340 | sendCommandResponse_endSession = Lens.lens (\SendCommandResponse' {endSession} -> endSession) (\s@SendCommandResponse' {} a -> s {endSession = a} :: SendCommandResponse)
    |                                                                                                                                   ^^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:344:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {executeStatement = a} with type SendCommandResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
344 | sendCommandResponse_executeStatement = Lens.lens (\SendCommandResponse' {executeStatement} -> executeStatement) (\s@SendCommandResponse' {} a -> s {executeStatement = a} :: SendCommandResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:348:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {fetchPage = a} with type SendCommandResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
348 | sendCommandResponse_fetchPage = Lens.lens (\SendCommandResponse' {fetchPage} -> fetchPage) (\s@SendCommandResponse' {} a -> s {fetchPage = a} :: SendCommandResponse)
    |                                                                                                                                ^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:354:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {startSession = a} with type SendCommandResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
354 | sendCommandResponse_startSession = Lens.lens (\SendCommandResponse' {startSession} -> startSession) (\s@SendCommandResponse' {} a -> s {startSession = a} :: SendCommandResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^

gen/Amazonka/QLDBSession/SendCommand.hs:358:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {startTransaction = a} with type SendCommandResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
358 | sendCommandResponse_startTransaction = Lens.lens (\SendCommandResponse' {startTransaction} -> startTransaction) (\s@SendCommandResponse' {} a -> s {startTransaction = a} :: SendCommandResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^
[21 of 23] Compiling Amazonka.QLDBSession.Lens
[22 of 23] Compiling Amazonka.QLDBSession.Waiters
[23 of 23] Compiling Amazonka.QLDBSession
Configuring test suite 'amazonka-qldb-session-test' for amazonka-qldb-session-2.0...
Preprocessing test suite 'amazonka-qldb-session-test' for amazonka-qldb-session-2.0...
Building test suite 'amazonka-qldb-session-test' for amazonka-qldb-session-2.0...
[1 of 4] Compiling Test.Amazonka.QLDBSession
[2 of 4] Compiling Test.Amazonka.QLDBSession.Internal
[3 of 4] Compiling Test.Amazonka.Gen.QLDBSession
[4 of 4] Compiling Main
[5 of 5] Linking /tmp/workdir-amazonka-qldb-session/amazonka-qldb-session-2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/amazonka-qldb-session-2.0/t/amazonka-qldb-session-test/build/amazonka-qldb-session-test/amazonka-qldb-session-test
