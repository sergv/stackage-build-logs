Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - dynamic-state-0.3.1 (lib) (first run)
Configuring library for dynamic-state-0.3.1...
Preprocessing library for dynamic-state-0.3.1...
Building library for dynamic-state-0.3.1...
[1 of 3] Compiling Data.ConcreteTypeRep
[2 of 3] Compiling Data.DynamicState

src/Data/DynamicState.hs:32:3-16: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘(<>) = mappend’ definition detected
    in the instance declaration for ‘Semigroup DynamicState’.
    Move definition from ‘mappend’ to ‘(<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
32 |   (<>) = mappend
   |   ^^^^^^^^^^^^^^

src/Data/DynamicState.hs:36:3-72: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid DynamicState’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
36 |   mappend (DynamicState a) (DynamicState b) = DynamicState (mappend a b)
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[3 of 3] Compiling Data.DynamicState.Serializable

src/Data/DynamicState/Serializable.hs:59:3-16: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘(<>) = mappend’ definition detected
    in the instance declaration for ‘Semigroup DynamicState’.
    Move definition from ‘mappend’ to ‘(<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
59 |   (<>) = mappend
   |   ^^^^^^^^^^^^^^

src/Data/DynamicState/Serializable.hs:63:3-72: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid DynamicState’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
63 |   mappend (DynamicState a) (DynamicState b) = DynamicState (mappend a b)
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
