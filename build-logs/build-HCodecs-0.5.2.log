Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - HCodecs-0.5.2 (lib) (first run)
 - HCodecs-0.5.2 (test:tests) (first run)
Configuring library for HCodecs-0.5.2...
Preprocessing library for HCodecs-0.5.2...
Building library for HCodecs-0.5.2...
[1 of 7] Compiling Codec.ByteString.Builder

src/Codec/ByteString/Builder.hs:79:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
79 | import Data.Semigroup
   | ^^^^^^^^^^^^^^^^^^^^^
[2 of 7] Compiling Codec.ByteString.Parser

src/Codec/ByteString/Parser.hs:142:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad Parser’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
    |
142 |     return a  = Parser (\s -> Right (a, s))
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Codec/ByteString/Parser.hs:159:3: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘pure = return’ definition detected
    in the instance declaration for ‘Applicative Parser’.
    Move definition from ‘return’ to ‘pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
    |
159 |   pure  = return
    |   ^^^^^^^^^^^^^^
[3 of 7] Compiling Codec.Internal.Arbitrary

src/Codec/Internal/Arbitrary.hs:30:1: warning: [-Wunused-imports]
    The import of ‘Data.Word’ is redundant
      except perhaps to import instances from ‘Data.Word’
    To import instances alone, use: import Data.Word()
   |
30 | import Data.Word
   | ^^^^^^^^^^^^^^^^

src/Codec/Internal/Arbitrary.hs:39:10: warning: [-Wsimplifiable-class-constraints]
    • The constraint ‘IArray Array e’ matches
        instance IArray Array e -- Defined in ‘Data.Array.Base’
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    • In the instance declaration for ‘Arbitrary (Array i e)’
   |
39 | instance (Arbitrary e, Num i, IArray Array e, Ix i) =>  Arbitrary (Array i e) where
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[4 of 7] Compiling Codec.Midi

src/Codec/Midi.hs:77:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
77 | import Data.Monoid (mempty, mconcat, mappend)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Codec/Midi.hs:676:7: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[Int]’ not matched:
            []
            [_]
            [_, _]
            [_, _, _]
            ...
    |
676 |   let [n1,n2,n3,n4,n5] = map fromIntegral (L.unpack bs)
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Codec/Midi.hs:684:7: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[Int]’ not matched:
            []
            [_]
            [_, _]
            [_, _, _]
            ...
    |
684 |   let [n1,n2,n3,n4] = map fromIntegral (L.unpack bs)
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[5 of 7] Compiling Data.Audio

src/Data/Audio.hs:45:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
45 | import Data.Monoid (mconcat)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[6 of 7] Compiling Codec.Wav

src/Codec/Wav.hs:32:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
32 | import Data.Monoid (mconcat)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[7 of 7] Compiling Codec.SoundFont

src/Codec/SoundFont.hs:53:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
53 | import Data.Monoid (mconcat)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Configuring test suite 'tests' for HCodecs-0.5.2...
Preprocessing test suite 'tests' for HCodecs-0.5.2...
Building test suite 'tests' for HCodecs-0.5.2...

<no location info>: warning: [GHC-32850] [-Wmissing-home-modules]
    These modules are needed for compilation but not listed in your .cabal file's other-modules for ‘HCodecs-0.5.2-inplace-tests’ :
        Codec.ByteString.Builder
        Codec.ByteString.Parser
        Codec.Internal.Arbitrary
        Codec.Midi
        Codec.SoundFont
        Codec.Wav
        Data.Audio
[1 of 8] Compiling Codec.ByteString.Builder

src/Codec/ByteString/Builder.hs:79:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
79 | import Data.Semigroup
   | ^^^^^^^^^^^^^^^^^^^^^
[2 of 8] Compiling Codec.ByteString.Parser

src/Codec/ByteString/Parser.hs:142:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad Parser’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
    |
142 |     return a  = Parser (\s -> Right (a, s))
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Codec/ByteString/Parser.hs:159:3: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘pure = return’ definition detected
    in the instance declaration for ‘Applicative Parser’.
    Move definition from ‘return’ to ‘pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
    |
159 |   pure  = return
    |   ^^^^^^^^^^^^^^
[3 of 8] Compiling Codec.Internal.Arbitrary

src/Codec/Internal/Arbitrary.hs:30:1: warning: [-Wunused-imports]
    The import of ‘Data.Word’ is redundant
      except perhaps to import instances from ‘Data.Word’
    To import instances alone, use: import Data.Word()
   |
30 | import Data.Word
   | ^^^^^^^^^^^^^^^^

src/Codec/Internal/Arbitrary.hs:39:10: warning: [-Wsimplifiable-class-constraints]
    • The constraint ‘IArray Array e’ matches
        instance IArray Array e -- Defined in ‘Data.Array.Base’
      This makes type inference for inner bindings fragile;
        either use MonoLocalBinds, or simplify it using the instance
    • In the instance declaration for ‘Arbitrary (Array i e)’
   |
39 | instance (Arbitrary e, Num i, IArray Array e, Ix i) =>  Arbitrary (Array i e) where
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[4 of 8] Compiling Codec.Midi

src/Codec/Midi.hs:77:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
77 | import Data.Monoid (mempty, mconcat, mappend)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Codec/Midi.hs:676:7: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[Int]’ not matched:
            []
            [_]
            [_, _]
            [_, _, _]
            ...
    |
676 |   let [n1,n2,n3,n4,n5] = map fromIntegral (L.unpack bs)
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Codec/Midi.hs:684:7: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘[Int]’ not matched:
            []
            [_]
            [_, _]
            [_, _, _]
            ...
    |
684 |   let [n1,n2,n3,n4] = map fromIntegral (L.unpack bs)
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[5 of 8] Compiling Data.Audio

src/Data/Audio.hs:45:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
45 | import Data.Monoid (mconcat)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[6 of 8] Compiling Codec.Wav

src/Codec/Wav.hs:32:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
32 | import Data.Monoid (mconcat)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[7 of 8] Compiling Codec.SoundFont

src/Codec/SoundFont.hs:53:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
53 | import Data.Monoid (mconcat)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[8 of 8] Compiling Main

src/Codec/Internal/TestSuite.hs:18:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
18 | import Data.Monoid
   | ^^^^^^^^^^^^^^^^^^

src/Codec/Internal/TestSuite.hs:58:28: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘Midi’ not matched:
            Midi MultiTrack _ _
            Midi MultiPattern _ _
   |
58 |                        let (Midi SingleTrack _ trks) = toSingleTrack m
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

<no location info>: warning: [GHC-32850] [-Wmissing-home-modules]
    These modules are needed for compilation but not listed in your .cabal file's other-modules for ‘HCodecs-0.5.2-inplace-tests’ :
        Codec.ByteString.Builder
        Codec.ByteString.Parser
        Codec.Internal.Arbitrary
        Codec.Midi
        Codec.SoundFont
        Codec.Wav
        Data.Audio
[9 of 9] Linking /tmp/workdir-HCodecs/HCodecs-0.5.2/dist-newstyle/build/x86_64-linux/ghc-9.6.6/HCodecs-0.5.2/t/tests/build/tests/tests
