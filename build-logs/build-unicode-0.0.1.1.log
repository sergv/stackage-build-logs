Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - unicode-0.0.1.1 (lib) (first run)
 - unicode-0.0.1.1 (test:test) (first run)
Configuring library for unicode-0.0.1.1...
Preprocessing library for unicode-0.0.1.1...
Building library for unicode-0.0.1.1...
[1 of 4] Compiling Data.Char.Block

src/Data/Char/Block.hs:3:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
  |
3 | import Control.Applicative (Applicative, pure, (<*>), liftA2, )
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Char/Block.hs:4:1: warning: [-Wunused-imports]
    The import of ‘Traversable, traverse’
    from module ‘Data.Traversable’ is redundant
  |
4 | import Data.Traversable (Traversable, traverse, foldMapDefault, )
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Char/Block.hs:5:1: warning: [-Wunused-imports]
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()
  |
5 | import Data.Foldable (Foldable, foldMap, )
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2 of 4] Compiling Data.Char.Frame

src/Data/Char/Frame.hs:3:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
  |
3 | import Control.Applicative (Applicative, pure, (<*>), liftA2, )
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Char/Frame.hs:4:1: warning: [-Wunused-imports]
    The import of ‘Traversable, traverse’
    from module ‘Data.Traversable’ is redundant
  |
4 | import Data.Traversable (Traversable, traverse, foldMapDefault, )
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Char/Frame.hs:5:1: warning: [-Wunused-imports]
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()
  |
5 | import Data.Foldable (Foldable, foldMap, )
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Char/Frame.hs:6:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
  |
6 | import Data.Monoid (Monoid, mempty, mappend, )
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Char/Frame.hs:7:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
  |
7 | import Data.Semigroup (Semigroup((<>)), )
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Char/Frame.hs:20:4: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (Horizontal a)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
20 |    mappend (Horizontal xl xr) (Horizontal yl yr) =
   |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

src/Data/Char/Frame.hs:29:4: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (Vertical a)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
29 |    mappend (Vertical xl xr) (Vertical yl yr) =
   |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

src/Data/Char/Frame.hs:38:4: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (Parts a)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
38 |    mappend (Parts xl xr) (Parts yl yr) =
   |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...
[3 of 4] Compiling Data.Char.Number
[4 of 4] Compiling Data.Char.Small
Configuring test suite 'test' for unicode-0.0.1.1...
Preprocessing test suite 'test' for unicode-0.0.1.1...
Building test suite 'test' for unicode-0.0.1.1...
[1 of 4] Compiling Test.Utility
[2 of 4] Compiling Test.Data.Char.Frame

test/Test/Data/Char/Frame.hs:13:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
13 | import Control.Applicative (pure, )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/Test/Data/Char/Frame.hs:14:1: warning: [-Wunused-imports]
    The import of ‘Data.Traversable’ is redundant
      except perhaps to import instances from ‘Data.Traversable’
    To import instances alone, use: import Data.Traversable()
   |
14 | import Data.Traversable (sequenceA, )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[3 of 4] Compiling Test.Data.Char.Block

test/Test/Data/Char/Block.hs:7:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
  |
7 | import Control.Applicative (pure, )
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/Test/Data/Char/Block.hs:8:1: warning: [-Wunused-imports]
    The import of ‘Data.Traversable’ is redundant
      except perhaps to import instances from ‘Data.Traversable’
    To import instances alone, use: import Data.Traversable()
  |
8 | import Data.Traversable (sequenceA, )
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[4 of 4] Compiling Main
[5 of 5] Linking /tmp/workdir-unicode/unicode-0.0.1.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/unicode-0.0.1.1/t/test/build/test/test
