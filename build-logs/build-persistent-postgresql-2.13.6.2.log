Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - persistent-postgresql-2.13.6.2 (lib) (first run)
 - persistent-postgresql-2.13.6.2 (test:test) (first run)
Configuring library for persistent-postgresql-2.13.6.2...
Preprocessing library for persistent-postgresql-2.13.6.2...
Building library for persistent-postgresql-2.13.6.2...
[1 of 3] Compiling Database.Persist.Postgresql.Internal

Database/Persist/Postgresql/Internal.hs:32:1: warning: [-Wunused-imports]
    The qualified import of ‘Data.Text.Encoding’ is redundant
      except perhaps to import instances from ‘Data.Text.Encoding’
    To import instances alone, use: import Data.Text.Encoding()
   |
32 | import qualified Data.Text.Encoding as T
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2 of 3] Compiling Database.Persist.Postgresql

Database/Persist/Postgresql.hs:112:1: warning: [-Wunused-imports]
    The qualified import of ‘Data.List’ is redundant
      except perhaps to import instances from ‘Data.List’
    To import instances alone, use: import Data.List()
    |
112 | import qualified Data.List as List
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Database/Persist/Postgresql.hs:116:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
    |
116 | import Data.Monoid ((<>))
    | ^^^^^^^^^^^^^^^^^^^^^^^^^

Database/Persist/Postgresql.hs:134:1: warning: [-Wunused-imports]
    The import of ‘Database.Persist.SqlBackend.StatementCache’ is redundant
      except perhaps to import instances from ‘Database.Persist.SqlBackend.StatementCache’
    To import instances alone, use: import Database.Persist.SqlBackend.StatementCache()
    |
134 | import Database.Persist.SqlBackend.StatementCache
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

Database/Persist/Postgresql.hs:867:19: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a lambda abstraction:
        Patterns of type ‘[PersistValue]’ not matched:
            []
            ((PersistByteString _):_)
            ((PersistInt64 _):_)
            ((PersistDouble _):_)
            ...
    |
867 |         CL.mapM $ \x'@((PersistText cname) : _) -> do
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

Database/Persist/Postgresql.hs:1844:23: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a lambda abstraction:
        Patterns of type ‘Update record’ not matched: BackendUpdate _
     |
1844 |     updsValues = map (\(Update _ val _) -> toPersistValue val) updates
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Database/Persist/Postgresql.hs:1997:61: warning: [-Wunused-top-binds]
    Defined but not used: ‘unRawPostgresqlKey’
     |
1997 |   newtype BackendKey (RawPostgresql b) = RawPostgresqlKey { unRawPostgresqlKey :: BackendKey (Compatible b (RawPostgresql b)) }
     |                                                             ^^^^^^^^^^^^^^^^^^
[3 of 3] Compiling Database.Persist.Postgresql.JSON
Configuring test suite 'test' for persistent-postgresql-2.13.6.2...
Preprocessing test suite 'test' for persistent-postgresql-2.13.6.2...
Building test suite 'test' for persistent-postgresql-2.13.6.2...
[ 1 of 10] Compiling PgInit

test/PgInit.hs:43:7: warning: [GHC-47854] [-Wduplicate-exports]
    ‘sqlSettingsUuid’ is exported by ‘sqlSettingsUuid’ and ‘module Init’
   |
43 |     , sqlSettingsUuid
   |       ^^^^^^^^^^^^^^^

test/PgInit.hs:69:1: warning: [-Wunused-imports]
    The import of ‘Control.Exception’ is redundant
      except perhaps to import instances from ‘Control.Exception’
    To import instances alone, use: import Control.Exception()
   |
69 | import Control.Exception (SomeException)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/PgInit.hs:72:1: warning: [-Wunused-imports]
    The import of ‘FromJSON, ToJSON’
    from module ‘Data.Aeson’ is redundant
   |
72 | import Data.Aeson (FromJSON, ToJSON, Value(..), object)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/PgInit.hs:73:1: warning: [-Wunused-imports]
    The qualified import of ‘Data.Text.Encoding’ is redundant
      except perhaps to import instances from ‘Data.Text.Encoding’
    To import instances alone, use: import Data.Text.Encoding()
   |
73 | import qualified Data.Text.Encoding as TE
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/PgInit.hs:112:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.IO.Unlift’ is redundant
      except perhaps to import instances from ‘Control.Monad.IO.Unlift’
    To import instances alone, use: import Control.Monad.IO.Unlift()
    |
112 | import Control.Monad.IO.Unlift (MonadUnliftIO)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/PgInit.hs:116:1: warning: [-Wunused-imports]
    The qualified import of ‘Data.HashMap.Strict’ is redundant
      except perhaps to import instances from ‘Data.HashMap.Strict’
    To import instances alone, use: import Data.HashMap.Strict()
    |
116 | import qualified Data.HashMap.Strict as HM
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/PgInit.hs:119:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
    |
119 | import Data.Monoid ((<>))
    | ^^^^^^^^^^^^^^^^^^^^^^^^^

test/PgInit.hs:121:1: warning: [-Wunused-imports]
    The import of ‘Data.Vector’ is redundant
      except perhaps to import instances from ‘Data.Vector’
    To import instances alone, use: import Data.Vector()
    |
121 | import Data.Vector (Vector)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/PgInit.hs:123:1: warning: [-Wunused-imports]
    The import of ‘System.Log.FastLogger’ is redundant
      except perhaps to import instances from ‘System.Log.FastLogger’
    To import instances alone, use: import System.Log.FastLogger()
    |
123 | import System.Log.FastLogger (fromLogStr)
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/PgInit.hs:141:33: warning: [GHC-68441] [-Wdeprecations]
    In the use of ‘mpsGeneric’ (imported from Database.Persist.TH):
    Deprecated: "The mpsGeneric function adds a considerable amount of overhead and complexity to the library without bringing significant benefit. We would like to remove it. If you require this feature, please comment on the linked GitHub issue, and we'll either keep it around, or we can figure out a nicer way to solve your problem.

 Github: https://github.com/yesodweb/persistent/issues/1204"
    |
141 | persistSettings = sqlSettings { mpsGeneric = True }
    |                                 ^^^^^^^^^^
[ 2 of 10] Compiling MigrationReferenceSpec

test/MigrationReferenceSpec.hs:18:19: warning: [-Wunused-imports]
    The import of ‘Text’ from module ‘Data.Text’ is redundant
   |
18 | import Data.Text (Text, isInfixOf)
   |                   ^^^^

test/MigrationReferenceSpec.hs:20:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
20 | share [mkPersist sqlSettings, mkMigrate "referenceMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/MigrationReferenceSpec.hs:20:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
20 | share [mkPersist sqlSettings, mkMigrate "referenceMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/MigrationReferenceSpec.hs:20:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
20 | share [mkPersist sqlSettings, mkMigrate "referenceMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/MigrationReferenceSpec.hs:20:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
20 | share [mkPersist sqlSettings, mkMigrate "referenceMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/MigrationReferenceSpec.hs:20:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
20 | share [mkPersist sqlSettings, mkMigrate "referenceMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/MigrationReferenceSpec.hs:20:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
20 | share [mkPersist sqlSettings, mkMigrate "referenceMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/MigrationReferenceSpec.hs:20:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
20 | share [mkPersist sqlSettings, mkMigrate "referenceMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/MigrationReferenceSpec.hs:20:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
20 | share [mkPersist sqlSettings, mkMigrate "referenceMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...
[ 3 of 10] Compiling JSONTest

test/JSONTest.hs:18:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.IO.Class’ is redundant
      except perhaps to import instances from ‘Control.Monad.IO.Class’
    To import instances alone, use: import Control.Monad.IO.Class()
   |
18 | import Control.Monad.IO.Class (MonadIO)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/JSONTest.hs:21:1: warning: [-Wunused-imports]
    The import of ‘Test.HUnit’ is redundant
      except perhaps to import instances from ‘Test.HUnit’
    To import instances alone, use: import Test.HUnit()
   |
21 | import Test.HUnit (assertBool)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/JSONTest.hs:30:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
30 | share [mkPersist persistSettings,  mkMigrate "jsonTestMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/JSONTest.hs:30:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
30 | share [mkPersist persistSettings,  mkMigrate "jsonTestMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/JSONTest.hs:36:33: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
36 | cleanDB :: (BaseBackend backend ~ SqlBackend, PersistQueryWrite backend, MonadIO m)
   |                                 ^

test/JSONTest.hs:43:71: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
43 | insert' :: (MonadIO m, PersistStoreWrite backend, BaseBackend backend ~ SqlBackend)
   |                                                                       ^

test/JSONTest.hs:182:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
182 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:194:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
194 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:218:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
218 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:237:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
237 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:261:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
261 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:281:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
281 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:293:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
293 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:312:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
312 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:326:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
326 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:332:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
332 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:338:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
338 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:359:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
359 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:365:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
365 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:371:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
371 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:377:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
377 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:398:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
398 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:411:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
411 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:457:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
457 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:477:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
477 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:520:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
520 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:526:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
526 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:559:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
559 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:565:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
565 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:573:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
573 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:636:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
636 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:644:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
644 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:661:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
661 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^

test/JSONTest.hs:668:22: warning: [-Wunused-record-wildcards]
    No variables bound in the record wildcard match are used
      Possible fix: omit the ‘..’
    |
668 |           \TestKeys {..} -> runConnAssert $ do
    |                      ^^
[ 4 of 10] Compiling ImplicitUuidSpec

test/ImplicitUuidSpec.hs:21:1: warning: [-Wunused-imports]
    The import of ‘Database.Persist.Postgresql’ is redundant
      except perhaps to import instances from ‘Database.Persist.Postgresql’
    To import instances alone, use: import Database.Persist.Postgresql()
   |
21 | import Database.Persist.Postgresql
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/ImplicitUuidSpec.hs:23:1: warning: [-Wunused-imports]
    The import of ‘Database.Persist.ImplicitIdDef’ is redundant
      except perhaps to import instances from ‘Database.Persist.ImplicitIdDef’
    To import instances alone, use: import Database.Persist.ImplicitIdDef()
   |
23 | import Database.Persist.ImplicitIdDef
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/ImplicitUuidSpec.hs:24:1: warning: [-Wunused-imports]
    The import of ‘Database.Persist.ImplicitIdDef.Internal’ is redundant
      except perhaps to import instances from ‘Database.Persist.ImplicitIdDef.Internal’
    To import instances alone, use: import Database.Persist.ImplicitIdDef.Internal()
   |
24 | import Database.Persist.ImplicitIdDef.Internal (fieldTypeFromTypeable)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/ImplicitUuidSpec.hs:59:17: warning: [-Wunused-local-binds]
    Defined but not used: ‘withDefUuidKey’
   |
59 |             let withDefUuidKey = WithDefUuidKey (UUID "Hello")
   |                 ^^^^^^^^^^^^^^

test/ImplicitUuidSpec.hs:62:13: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘Maybe FieldDef’ not matched: Nothing
   |
62 |         let Just idField = getEntityIdField (entityDef (Proxy @WithDefUuid))
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 5 of 10] Compiling EquivalentTypeTestPostgres
[ 6 of 10] Compiling CustomConstraintTest

test/CustomConstraintTest.hs:18:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
18 | share [mkPersist sqlSettings, mkMigrate "customConstraintMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/CustomConstraintTest.hs:18:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
18 | share [mkPersist sqlSettings, mkMigrate "customConstraintMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/CustomConstraintTest.hs:18:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
18 | share [mkPersist sqlSettings, mkMigrate "customConstraintMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/CustomConstraintTest.hs:18:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
18 | share [mkPersist sqlSettings, mkMigrate "customConstraintMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/CustomConstraintTest.hs:18:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
18 | share [mkPersist sqlSettings, mkMigrate "customConstraintMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/CustomConstraintTest.hs:18:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
18 | share [mkPersist sqlSettings, mkMigrate "customConstraintMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

test/CustomConstraintTest.hs:18:1: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
18 | share [mkPersist sqlSettings, mkMigrate "customConstraintMigrate"] [persistLowerCase|
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...
[ 7 of 10] Compiling ArrayAggTest

test/ArrayAggTest.hs:17:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.IO.Class’ is redundant
      except perhaps to import instances from ‘Control.Monad.IO.Class’
    To import instances alone, use: import Control.Monad.IO.Class()
   |
17 | import Control.Monad.IO.Class (MonadIO)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 8 of 10] Compiling PgIntervalTest

test/PgIntervalTest.hs:34:16: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘a0’ to type ‘Integer’ in the following constraint
        Integral a0 arising from a use of ‘fromIntegral’
    • In the first argument of ‘(/)’, namely
        ‘(fromIntegral (round (x * 10 ^ 6)))’
      In the expression: (fromIntegral (round (x * 10 ^ 6))) / 10 ^ 6
      In an equation for ‘truncate'’:
          truncate' x = (fromIntegral (round (x * 10 ^ 6))) / 10 ^ 6
   |
34 | truncate' x = (fromIntegral (round (x * 10^6))) / 10^6
   |                ^^^^^^^^^^^^

test/PgIntervalTest.hs:34:43: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘b0’ to type ‘Integer’ in the following constraints
        (Integral b0)
          arising from a use of ‘^’ at test/PgIntervalTest.hs:34:43
        (Num b0)
          arising from the literal ‘6’ at test/PgIntervalTest.hs:34:44
    • In the second argument of ‘(*)’, namely ‘10 ^ 6’
      In the first argument of ‘round’, namely ‘(x * 10 ^ 6)’
      In the first argument of ‘fromIntegral’, namely
        ‘(round (x * 10 ^ 6))’
   |
34 | truncate' x = (fromIntegral (round (x * 10^6))) / 10^6
   |                                           ^

test/PgIntervalTest.hs:34:53: warning: [GHC-18042] [-Wtype-defaults]
    • Defaulting the type variable ‘b0’ to type ‘Integer’ in the following constraints
        (Integral b0)
          arising from a use of ‘^’ at test/PgIntervalTest.hs:34:53
        (Num b0)
          arising from the literal ‘6’ at test/PgIntervalTest.hs:34:54
    • In the second argument of ‘(/)’, namely ‘10 ^ 6’
      In the expression: (fromIntegral (round (x * 10 ^ 6))) / 10 ^ 6
      In an equation for ‘truncate'’:
          truncate' x = (fromIntegral (round (x * 10 ^ 6))) / 10 ^ 6
   |
34 | truncate' x = (fromIntegral (round (x * 10^6))) / 10^6
   |                                                     ^
[ 9 of 10] Compiling UpsertWhere
[10 of 10] Compiling Main
[11 of 11] Linking /tmp/workdir-persistent-postgresql/persistent-postgresql-2.13.6.2/dist-newstyle/build/x86_64-linux/ghc-9.6.6/persistent-postgresql-2.13.6.2/t/test/build/test/test
