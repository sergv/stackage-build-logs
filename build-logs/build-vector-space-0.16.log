Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - vector-space-0.16 (lib) (first run)
Configuring library for vector-space-0.16...
Preprocessing library for vector-space-0.16...
Building library for vector-space-0.16...
[1 of 9] Compiling Data.VectorSpace.Generic
[2 of 9] Compiling Data.AdditiveGroup

src/Data/AdditiveGroup.hs:26:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
26 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
[3 of 9] Compiling Data.VectorSpace

src/Data/VectorSpace.hs:36:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
36 | import Control.Applicative (liftA2)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/VectorSpace.hs:52:20: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
52 |   type Scalar v :: *
   |                    ^
[4 of 9] Compiling Data.Basis

src/Data/Basis.hs:39:19: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
39 |   type Basis v :: *
   |                   ^
[5 of 9] Compiling Data.AffineSpace

src/Data/AffineSpace.hs:25:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
25 | import Control.Applicative (liftA2)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/AffineSpace.hs:152:10: warning: [GHC-36038] [-Wloopy-superclass-solve]
    I am solving the constraint ‘AdditiveGroup
                                   (Scalar (Diff (Gnrx.Rep p GHC.Base.Void)))’,
      arising from the superclasses of an instance declaration,
    in a way that might turn out to loop at runtime.
    Starting from GHC 9.10, this warning will turn into an error.
    See the user manual, § Undecidable instances and loopy superclasses.
    Suggested fix:
      Add the constraint ‘AdditiveGroup
                            (Scalar
                               (Diff (Gnrx.Rep p GHC.Base.Void)))’ to the instance context,
      even though it seems logically implied by other constraints in the context.
    |
152 | instance InnerSpace (Diff (VRep p)) => InnerSpace (GenericDiff p)
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/AffineSpace.hs:163:10: warning: [GHC-36038] [-Wloopy-superclass-solve]
    I am solving the constraint ‘AdditiveGroup (Scalar (Diff (g p)))’,
      arising from the superclasses of an instance declaration,
    in a way that might turn out to loop at runtime.
    Starting from GHC 9.10, this warning will turn into an error.
    See the user manual, § Undecidable instances and loopy superclasses.
    Suggested fix:
      Add the constraint ‘AdditiveGroup
                            (Scalar (Diff (g p)))’ to the instance context,
      even though it seems logically implied by other constraints in the context.
    |
163 | instance ( AffineSpace (f p), AffineSpace (g p)
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...
[6 of 9] Compiling Data.LinearMap

src/Data/LinearMap.hs:30:29: warning: [-Wunused-imports]
    The import of ‘liftA2’
    from module ‘Control.Applicative’ is redundant
   |
30 | import Control.Applicative (liftA2, liftA3)
   |                             ^^^^^^
[7 of 9] Compiling Data.Maclaurin
[8 of 9] Compiling Data.Derivative
[9 of 9] Compiling Data.Cross
