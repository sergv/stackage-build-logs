Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - persistable-record-0.6.0.6 (lib) (first run)
 - persistable-record-0.6.0.6 (test:nested) (first run)
Configuring library for persistable-record-0.6.0.6...
Preprocessing library for persistable-record-0.6.0.6...
Building library for persistable-record-0.6.0.6...
[1 of 9] Compiling Database.Record.KeyConstraint
[2 of 9] Compiling Database.Record.Persistable

src/Database/Record/Persistable.hs:38:1: warning: [-Wunused-imports]
    The import of ‘<$>, pure’
    from module ‘Control.Applicative’ is redundant
   |
38 | import Control.Applicative ((<$>), pure, Const (..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Database/Record/Persistable.hs:39:21: warning: [-Wunused-imports]
    The import of ‘Monoid’ from module ‘Data.Monoid’ is redundant
   |
39 | import Data.Monoid (Monoid, Sum (..))
   |                     ^^^^^^
[3 of 9] Compiling Database.Record.FromSql

src/Database/Record/FromSql.hs:35:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
35 | import Control.Applicative ((<$>), Applicative (pure, (<*>)))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Database/Record/FromSql.hs:96:3: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad (RecordFromSql q)’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
   |
96 |   return a = createRecordFromSql ((,) a)
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Database/Record/FromSql.hs:108:3: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘pure = return’ definition detected
    in the instance declaration for ‘Applicative (RecordFromSql q)’.
    Move definition from ‘return’ to ‘pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
    |
108 |   pure  = return
    |   ^^^^^^^^^^^^^^
[4 of 9] Compiling Database.Record.ToSql
[5 of 9] Compiling Database.Record.InternalTH

src/Database/Record/InternalTH.hs:11:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
11 | import Control.Applicative ((<$>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[6 of 9] Compiling Database.Record.TupleInstances

src/Database/Record/TupleInstances.hs:7:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
  |
7 | import Control.Applicative ((<$>))
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[7 of 9] Compiling Database.Record
[8 of 9] Compiling Database.Record.TH
[9 of 9] Compiling Database.Record.Instances
Configuring test suite 'nested' for persistable-record-0.6.0.6...
Preprocessing test suite 'nested' for persistable-record-0.6.0.6...
Building test suite 'nested' for persistable-record-0.6.0.6...
[1 of 2] Compiling Model
[2 of 2] Compiling Main
[3 of 3] Linking /tmp/workdir-persistable-record/persistable-record-0.6.0.6/dist-newstyle/build/x86_64-linux/ghc-9.6.6/persistable-record-0.6.0.6/t/nested/build/nested/nested
