Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - xlsx-1.1.2.2 (lib) (first run)
 - xlsx-1.1.2.2 (test:data-test) (first run)
Configuring library for xlsx-1.1.2.2...
Preprocessing library for xlsx-1.1.2.2...
Building library for xlsx-1.1.2.2...
[ 1 of 44] Compiling Codec.Xlsx.Parser.Internal.Memoize

src/Codec/Xlsx/Parser/Internal/Memoize.hs:15:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad’ is redundant
      except perhaps to import instances from ‘Control.Monad’
    To import instances alone, use: import Control.Monad()
   |
15 | import Control.Monad (join)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 2 of 44] Compiling Codec.Xlsx.Parser.Internal.Util

src/Codec/Xlsx/Parser/Internal/Util.hs:11:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Fail’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fail’
    To import instances alone, use: import Control.Monad.Fail()
   |
11 | import Control.Monad.Fail (MonadFail)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 3 of 44] Compiling Codec.Xlsx.Parser.Internal.Fast

src/Codec/Xlsx/Parser/Internal/Fast.hs:45:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
45 | import Data.Monoid ((<>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

src/Codec/Xlsx/Parser/Internal/Fast.hs:156:3: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad AttrParser’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
    |
156 |   return a = AttrParser $ \as -> Right (as, a)
    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Codec/Xlsx/Parser/Internal/Fast.hs:161:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘pure = return’ definition detected
    in the instance declaration for ‘Applicative AttrParser’.
    Move definition from ‘return’ to ‘pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
    |
161 |     pure = return
    |     ^^^^^^^^^^^^^
[ 4 of 44] Compiling Codec.Xlsx.Parser.Internal
[ 5 of 44] Compiling Codec.Xlsx.Parser.Stream.HexpatInternal

src/Codec/Xlsx/Parser/Stream/HexpatInternal.hs:39:51: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘offset’ shadows the existing binding
      bound at src/Codec/Xlsx/Parser/Stream/HexpatInternal.hs:31:13
   |
39 |                 (atts, offset') <- foldM (\(atts, offset) _ -> do
   |                                                   ^^^^^^
[ 6 of 44] Compiling Codec.Xlsx.Types.Internal.ContentTypes
[ 7 of 44] Compiling Codec.Xlsx.Writer.Internal
[ 8 of 44] Compiling Codec.Xlsx.Types.Variant

src/Codec/Xlsx/Types/Variant.hs:6:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Fail’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fail’
    To import instances alone, use: import Control.Monad.Fail()
  |
6 | import Control.Monad.Fail (MonadFail)
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 9 of 44] Compiling Codec.Xlsx.Types.StyleSheet

src/Codec/Xlsx/Types/StyleSheet.hs:143:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
    |
143 | import Data.Monoid ((<>))
    | ^^^^^^^^^^^^^^^^^^^^^^^^^
[10 of 44] Compiling Codec.Xlsx.Types.RichText

src/Codec/Xlsx/Types/RichText.hs:349:3: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid RunProperties’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
    |
349 |   a `mappend` b = RunProperties {
    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...
[11 of 44] Compiling Codec.Xlsx.Types.Protection
[12 of 44] Compiling Codec.Xlsx.Types.PageSetup
[13 of 44] Compiling Codec.Xlsx.Types.Internal.CustomProperties
[14 of 44] Compiling Codec.Xlsx.Types.Internal

src/Codec/Xlsx/Types/Internal.hs:6:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
  |
6 | import Data.Monoid ((<>))
  | ^^^^^^^^^^^^^^^^^^^^^^^^^
[15 of 44] Compiling Codec.Xlsx.Types.Internal.Relationships

src/Codec/Xlsx/Types/Internal/Relationships.hs:9:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
  |
9 | import Data.Monoid ((<>))
  | ^^^^^^^^^^^^^^^^^^^^^^^^^
[16 of 44] Compiling Codec.Xlsx.Types.Drawing.Common

src/Codec/Xlsx/Types/Drawing/Common.hs:17:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Fail’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fail’
    To import instances alone, use: import Control.Monad.Fail()
   |
17 | import Control.Monad.Fail (MonadFail)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Codec/Xlsx/Types/Drawing/Common.hs:21:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
21 | import Data.Monoid ((<>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
[17 of 44] Compiling Codec.Xlsx.Types.Common

src/Codec/Xlsx/Types/Common.hs:64:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
64 | import Control.Applicative (liftA2)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[18 of 44] Compiling Codec.Xlsx.Types.SheetViews
[19 of 44] Compiling Codec.Xlsx.Types.PivotTable
[20 of 44] Compiling Codec.Xlsx.Types.PivotTable.Internal
[21 of 44] Compiling Codec.Xlsx.Types.Drawing.Chart
[22 of 44] Compiling Codec.Xlsx.Types.Drawing

src/Codec/Xlsx/Types/Drawing.hs:359:22: warning: [GHC-53633] [-Woverlapping-patterns]
    Pattern match is redundant
    In an equation for ‘fillModeFromNode’:
        fillModeFromNode n | n `nodeElNameIs` a_ "stretch" = ...
    |
359 |                    | n `nodeElNameIs` a_ "stretch" = return FillTile
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[23 of 44] Compiling Codec.Xlsx.Types.DataValidation

src/Codec/Xlsx/Types/DataValidation.hs:47:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
47 | import Data.Monoid ((<>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
[24 of 44] Compiling Codec.Xlsx.Types.Internal.DvPair
[25 of 44] Compiling Codec.Xlsx.Types.ConditionalFormatting

src/Codec/Xlsx/Types/ConditionalFormatting.hs:57:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
57 | import Data.Monoid ((<>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
[26 of 44] Compiling Codec.Xlsx.Types.Internal.CfPair
[27 of 44] Compiling Codec.Xlsx.Types.Comment
[28 of 44] Compiling Codec.Xlsx.Types.Internal.CommentTable
[29 of 44] Compiling Codec.Xlsx.Parser.Internal.PivotTable

src/Codec/Xlsx/Parser/Internal/PivotTable.hs:10:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
10 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
[30 of 44] Compiling Codec.Xlsx.Types.Cell

src/Codec/Xlsx/Types/Cell.hs:34:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
34 | import Data.Monoid ((<>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
[31 of 44] Compiling Codec.Xlsx.Types.Internal.FormulaData

src/Codec/Xlsx/Types/Internal/FormulaData.hs:6:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
  |
6 | import Data.Monoid ((<>))
  | ^^^^^^^^^^^^^^^^^^^^^^^^^
[32 of 44] Compiling Codec.Xlsx.Parser.Stream
[33 of 44] Compiling Codec.Xlsx.Types.AutoFilter

src/Codec/Xlsx/Types/AutoFilter.hs:24:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
24 | import Data.Monoid ((<>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
[34 of 44] Compiling Codec.Xlsx.Types.Table
[35 of 44] Compiling Codec.Xlsx.Types
[36 of 44] Compiling Codec.Xlsx.Types.Internal.SharedStringTable
[37 of 44] Compiling Codec.Xlsx.Parser
[38 of 44] Compiling Codec.Xlsx.Lens
[39 of 44] Compiling Codec.Xlsx.Formatted

src/Codec/Xlsx/Formatted.hs:47:1: warning: [-Wdodgy-imports]
    Module ‘Control.Monad.State’ does not export ‘mapM’
   |
47 | import Control.Monad.State hiding (forM_, mapM)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Codec/Xlsx/Formatted.hs:47:1: warning: [-Wdodgy-imports]
    Module ‘Control.Monad.State’ does not export ‘forM_’
   |
47 | import Control.Monad.State hiding (forM_, mapM)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[40 of 44] Compiling Codec.Xlsx.Writer.Internal.PivotTable
[41 of 44] Compiling Codec.Xlsx.Writer

src/Codec/Xlsx/Writer.hs:29:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
29 | import Data.Monoid ((<>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
[42 of 44] Compiling Codec.Xlsx
[43 of 44] Compiling Codec.Xlsx.Writer.Internal.Stream
[44 of 44] Compiling Codec.Xlsx.Writer.Stream
Configuring test suite 'data-test' for xlsx-1.1.2.2...
Preprocessing test suite 'data-test' for xlsx-1.1.2.2...
Building test suite 'data-test' for xlsx-1.1.2.2...
[ 1 of 12] Compiling Common
[ 2 of 12] Compiling CommonTests.CellRefTests
[ 3 of 12] Compiling CommonTests
[ 4 of 12] Compiling Diff
[ 5 of 12] Compiling DrawingTests
[ 6 of 12] Compiling PivotTableTests
[ 7 of 12] Compiling Test.SmallCheck.Series.Instances
[ 8 of 12] Compiling CondFmtTests
[ 9 of 12] Compiling AutoFilterTests
[10 of 12] Compiling TestXlsx
[11 of 12] Compiling StreamTests
[12 of 12] Compiling Main
[13 of 13] Linking /tmp/workdir-xlsx/xlsx-1.1.2.2/dist-newstyle/build/x86_64-linux/ghc-9.6.6/xlsx-1.1.2.2/t/data-test/build/data-test/data-test
