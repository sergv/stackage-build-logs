Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - backprop-0.2.6.5 (lib) (first run)
Configuring library for backprop-0.2.6.5...
Preprocessing library for backprop-0.2.6.5...
Building library for backprop-0.2.6.5...

src/Numeric/Backprop/Internal.hs:16:14: warning: [-Wdeprecated-flags]
    -XTypeInType is deprecated: use -XDataKinds and -XPolyKinds instead
   |
16 | {-# LANGUAGE TypeInType            #-}
   |              ^^^^^^^^^^

src/Data/Type/Util.hs:11:14: warning: [-Wdeprecated-flags]
    -XTypeInType is deprecated: use -XDataKinds and -XPolyKinds instead
   |
11 | {-# LANGUAGE TypeInType             #-}
   |              ^^^^^^^^^^
[ 1 of 10] Compiling Data.Type.Util
[ 2 of 10] Compiling Numeric.Backprop.Class

src/Numeric/Backprop/Class.hs:57:1: warning: [-Wunused-imports]
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()
   |
57 | import           Data.Foldable hiding  (toList)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Numeric/Backprop/Class.hs:356:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad NumBP’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
    |
356 |     return = NumBP
    |     ^^^^^^^^^^^^^^
[ 3 of 10] Compiling Numeric.Backprop.Op

src/Numeric/Backprop/Op.hs:84:18: warning: [-Wcompat-unqualified-imports]
    To ensure compatibility with future core libraries changes
    imports to Data.List should be
    either qualified or have an explicit import list.
   |
84 | import           Data.List
   |                  ^^^^^^^^^
[ 4 of 10] Compiling Numeric.Backprop.Internal
[ 5 of 10] Compiling Numeric.Backprop.Explicit
[ 6 of 10] Compiling Numeric.Backprop.Num
[ 7 of 10] Compiling Numeric.Backprop
[ 8 of 10] Compiling Prelude.Backprop.Explicit
[ 9 of 10] Compiling Prelude.Backprop
[10 of 10] Compiling Prelude.Backprop.Num
