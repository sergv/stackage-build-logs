Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - amazonka-cloudfront-2.0 (lib) (first run)
 - amazonka-cloudfront-2.0 (test:amazonka-cloudfront-test) (first run)
Configuring library for amazonka-cloudfront-2.0...
Preprocessing library for amazonka-cloudfront-2.0...
Building library for amazonka-cloudfront-2.0...
[  1 of 299] Compiling Amazonka.CloudFront.Types.Aliases
[  2 of 299] Compiling Amazonka.CloudFront.Types.CachePolicyCookieBehavior
[  3 of 299] Compiling Amazonka.CloudFront.Types.CachePolicyHeaderBehavior
[  4 of 299] Compiling Amazonka.CloudFront.Types.CachePolicyQueryStringBehavior
[  5 of 299] Compiling Amazonka.CloudFront.Types.CachePolicyType
[  6 of 299] Compiling Amazonka.CloudFront.Types.CertificateSource
[  7 of 299] Compiling Amazonka.CloudFront.Types.CloudFrontOriginAccessIdentityConfig
[  8 of 299] Compiling Amazonka.CloudFront.Types.CloudFrontOriginAccessIdentity
[  9 of 299] Compiling Amazonka.CloudFront.Types.CloudFrontOriginAccessIdentitySummary
[ 10 of 299] Compiling Amazonka.CloudFront.Types.CloudFrontOriginAccessIdentityList
[ 11 of 299] Compiling Amazonka.CloudFront.Types.ConflictingAlias
[ 12 of 299] Compiling Amazonka.CloudFront.Types.ConflictingAliasesList
[ 13 of 299] Compiling Amazonka.CloudFront.Types.ContinuousDeploymentPolicyType
[ 14 of 299] Compiling Amazonka.CloudFront.Types.ContinuousDeploymentSingleHeaderConfig
[ 15 of 299] Compiling Amazonka.CloudFront.Types.CookieNames
[ 16 of 299] Compiling Amazonka.CloudFront.Types.CachePolicyCookiesConfig
[ 17 of 299] Compiling Amazonka.CloudFront.Types.CustomErrorResponse
[ 18 of 299] Compiling Amazonka.CloudFront.Types.CustomErrorResponses
[ 19 of 299] Compiling Amazonka.CloudFront.Types.DistributionIdList
[ 20 of 299] Compiling Amazonka.CloudFront.Types.EventType
[ 21 of 299] Compiling Amazonka.CloudFront.Types.FieldPatterns
[ 22 of 299] Compiling Amazonka.CloudFront.Types.EncryptionEntity
[ 23 of 299] Compiling Amazonka.CloudFront.Types.EncryptionEntities
[ 24 of 299] Compiling Amazonka.CloudFront.Types.FieldLevelEncryptionProfileSummary
[ 25 of 299] Compiling Amazonka.CloudFront.Types.FieldLevelEncryptionProfileList
[ 26 of 299] Compiling Amazonka.CloudFront.Types.FieldLevelEncryptionProfileConfig
[ 27 of 299] Compiling Amazonka.CloudFront.Types.FieldLevelEncryptionProfile
[ 28 of 299] Compiling Amazonka.CloudFront.Types.Format
[ 29 of 299] Compiling Amazonka.CloudFront.Types.ContentTypeProfile
[ 30 of 299] Compiling Amazonka.CloudFront.Types.ContentTypeProfiles
[ 31 of 299] Compiling Amazonka.CloudFront.Types.ContentTypeProfileConfig
[ 32 of 299] Compiling Amazonka.CloudFront.Types.FrameOptionsList
[ 33 of 299] Compiling Amazonka.CloudFront.Types.FunctionAssociation
[ 34 of 299] Compiling Amazonka.CloudFront.Types.FunctionAssociations
[ 35 of 299] Compiling Amazonka.CloudFront.Types.FunctionRuntime
[ 36 of 299] Compiling Amazonka.CloudFront.Types.FunctionConfig
[ 37 of 299] Compiling Amazonka.CloudFront.Types.FunctionStage
[ 38 of 299] Compiling Amazonka.CloudFront.Types.FunctionMetadata
[ 39 of 299] Compiling Amazonka.CloudFront.Types.FunctionSummary
[ 40 of 299] Compiling Amazonka.CloudFront.Types.FunctionList
[ 41 of 299] Compiling Amazonka.CloudFront.Types.GeoRestrictionType
[ 42 of 299] Compiling Amazonka.CloudFront.Types.GeoRestriction
[ 43 of 299] Compiling Amazonka.CloudFront.Types.Headers
[ 44 of 299] Compiling Amazonka.CloudFront.Types.CachePolicyHeadersConfig
[ 45 of 299] Compiling Amazonka.CloudFront.Types.HttpVersion
[ 46 of 299] Compiling Amazonka.CloudFront.Types.ICPRecordalStatus
[ 47 of 299] Compiling Amazonka.CloudFront.Types.AliasICPRecordal
[ 48 of 299] Compiling Amazonka.CloudFront.Types.InvalidationSummary
[ 49 of 299] Compiling Amazonka.CloudFront.Types.InvalidationList
[ 50 of 299] Compiling Amazonka.CloudFront.Types.ItemSelection
[ 51 of 299] Compiling Amazonka.CloudFront.Types.CookiePreference
[ 52 of 299] Compiling Amazonka.CloudFront.Types.KeyGroupConfig
[ 53 of 299] Compiling Amazonka.CloudFront.Types.KeyGroup
[ 54 of 299] Compiling Amazonka.CloudFront.Types.KeyGroupSummary
[ 55 of 299] Compiling Amazonka.CloudFront.Types.KeyGroupList
[ 56 of 299] Compiling Amazonka.CloudFront.Types.KeyPairIds
[ 57 of 299] Compiling Amazonka.CloudFront.Types.KGKeyPairIds
[ 58 of 299] Compiling Amazonka.CloudFront.Types.ActiveTrustedKeyGroups
[ 59 of 299] Compiling Amazonka.CloudFront.Types.KinesisStreamConfig
[ 60 of 299] Compiling Amazonka.CloudFront.Types.EndPoint
[ 61 of 299] Compiling Amazonka.CloudFront.Types.LambdaFunctionAssociation
[ 62 of 299] Compiling Amazonka.CloudFront.Types.LambdaFunctionAssociations
[ 63 of 299] Compiling Amazonka.CloudFront.Types.LoggingConfig
[ 64 of 299] Compiling Amazonka.CloudFront.Types.Method
[ 65 of 299] Compiling Amazonka.CloudFront.Types.CachedMethods
[ 66 of 299] Compiling Amazonka.CloudFront.Types.AllowedMethods

gen/Amazonka/CloudFront/Types/AllowedMethods.hs:96:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {quantity = a} with type AllowedMethods is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
96 | allowedMethods_quantity = Lens.lens (\AllowedMethods' {quantity} -> quantity) (\s@AllowedMethods' {} a -> s {quantity = a} :: AllowedMethods)
   |                                                                                                              ^^^^^^^^^^^^

gen/Amazonka/CloudFront/Types/AllowedMethods.hs:101:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {items = a} with type AllowedMethods is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | allowedMethods_items = Lens.lens (\AllowedMethods' {items} -> items) (\s@AllowedMethods' {} a -> s {items = a} :: AllowedMethods) Prelude.. Lens.coerced
    |                                                                                                     ^^^^^^^^^
[ 67 of 299] Compiling Amazonka.CloudFront.Types.MinimumProtocolVersion
[ 68 of 299] Compiling Amazonka.CloudFront.Types.OriginAccessControlOriginTypes
[ 69 of 299] Compiling Amazonka.CloudFront.Types.OriginAccessControlSigningBehaviors
[ 70 of 299] Compiling Amazonka.CloudFront.Types.OriginAccessControlSigningProtocols
[ 71 of 299] Compiling Amazonka.CloudFront.Types.OriginAccessControlConfig
[ 72 of 299] Compiling Amazonka.CloudFront.Types.OriginAccessControl
[ 73 of 299] Compiling Amazonka.CloudFront.Types.OriginAccessControlSummary
[ 74 of 299] Compiling Amazonka.CloudFront.Types.OriginAccessControlList
[ 75 of 299] Compiling Amazonka.CloudFront.Types.OriginCustomHeader
[ 76 of 299] Compiling Amazonka.CloudFront.Types.CustomHeaders
[ 77 of 299] Compiling Amazonka.CloudFront.Types.OriginGroupMember
[ 78 of 299] Compiling Amazonka.CloudFront.Types.OriginGroupMembers
[ 79 of 299] Compiling Amazonka.CloudFront.Types.OriginProtocolPolicy
[ 80 of 299] Compiling Amazonka.CloudFront.Types.OriginRequestPolicyCookieBehavior
[ 81 of 299] Compiling Amazonka.CloudFront.Types.OriginRequestPolicyCookiesConfig
[ 82 of 299] Compiling Amazonka.CloudFront.Types.OriginRequestPolicyHeaderBehavior
[ 83 of 299] Compiling Amazonka.CloudFront.Types.OriginRequestPolicyHeadersConfig
[ 84 of 299] Compiling Amazonka.CloudFront.Types.OriginRequestPolicyQueryStringBehavior
[ 85 of 299] Compiling Amazonka.CloudFront.Types.OriginRequestPolicyType
[ 86 of 299] Compiling Amazonka.CloudFront.Types.OriginShield
[ 87 of 299] Compiling Amazonka.CloudFront.Types.Paths
[ 88 of 299] Compiling Amazonka.CloudFront.Types.InvalidationBatch
[ 89 of 299] Compiling Amazonka.CloudFront.Types.Invalidation
[ 90 of 299] Compiling Amazonka.CloudFront.Types.PriceClass
[ 91 of 299] Compiling Amazonka.CloudFront.Types.PublicKeyConfig
[ 92 of 299] Compiling Amazonka.CloudFront.Types.PublicKey
[ 93 of 299] Compiling Amazonka.CloudFront.Types.PublicKeySummary
[ 94 of 299] Compiling Amazonka.CloudFront.Types.PublicKeyList
[ 95 of 299] Compiling Amazonka.CloudFront.Types.QueryArgProfile
[ 96 of 299] Compiling Amazonka.CloudFront.Types.QueryArgProfiles
[ 97 of 299] Compiling Amazonka.CloudFront.Types.QueryArgProfileConfig
[ 98 of 299] Compiling Amazonka.CloudFront.Types.FieldLevelEncryptionSummary
[ 99 of 299] Compiling Amazonka.CloudFront.Types.FieldLevelEncryptionList
[100 of 299] Compiling Amazonka.CloudFront.Types.FieldLevelEncryptionConfig
[101 of 299] Compiling Amazonka.CloudFront.Types.FieldLevelEncryption
[102 of 299] Compiling Amazonka.CloudFront.Types.QueryStringCacheKeys
[103 of 299] Compiling Amazonka.CloudFront.Types.ForwardedValues
[104 of 299] Compiling Amazonka.CloudFront.Types.QueryStringNames
[105 of 299] Compiling Amazonka.CloudFront.Types.OriginRequestPolicyQueryStringsConfig
[106 of 299] Compiling Amazonka.CloudFront.Types.OriginRequestPolicyConfig
[107 of 299] Compiling Amazonka.CloudFront.Types.OriginRequestPolicy
[108 of 299] Compiling Amazonka.CloudFront.Types.OriginRequestPolicySummary
[109 of 299] Compiling Amazonka.CloudFront.Types.OriginRequestPolicyList
[110 of 299] Compiling Amazonka.CloudFront.Types.CachePolicyQueryStringsConfig
[111 of 299] Compiling Amazonka.CloudFront.Types.ParametersInCacheKeyAndForwardedToOrigin
[112 of 299] Compiling Amazonka.CloudFront.Types.CachePolicyConfig
[113 of 299] Compiling Amazonka.CloudFront.Types.CachePolicy
[114 of 299] Compiling Amazonka.CloudFront.Types.CachePolicySummary
[115 of 299] Compiling Amazonka.CloudFront.Types.CachePolicyList
[116 of 299] Compiling Amazonka.CloudFront.Types.RealtimeLogConfig
[117 of 299] Compiling Amazonka.CloudFront.Types.RealtimeLogConfigs
[118 of 299] Compiling Amazonka.CloudFront.Types.RealtimeMetricsSubscriptionStatus
[119 of 299] Compiling Amazonka.CloudFront.Types.RealtimeMetricsSubscriptionConfig
[120 of 299] Compiling Amazonka.CloudFront.Types.MonitoringSubscription
[121 of 299] Compiling Amazonka.CloudFront.Types.ReferrerPolicyList
[122 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyAccessControlAllowHeaders
[123 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyAccessControlAllowMethodsValues
[124 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyAccessControlAllowMethods
[125 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyAccessControlAllowOrigins
[126 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyAccessControlExposeHeaders
[127 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyContentSecurityPolicy
[128 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyContentTypeOptions
[129 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyCorsConfig
[130 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyCustomHeader
[131 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyCustomHeadersConfig
[132 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyFrameOptions
[133 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyReferrerPolicy
[134 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyRemoveHeader
[135 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyRemoveHeadersConfig
[136 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyServerTimingHeadersConfig
[137 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyStrictTransportSecurity
[138 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyType
[139 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyXSSProtection
[140 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicySecurityHeadersConfig

gen/Amazonka/CloudFront/Types/ResponseHeadersPolicySecurityHeadersConfig.hs:170:233: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {contentSecurityPolicy = a} with type ResponseHeadersPolicySecurityHeadersConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
170 | responseHeadersPolicySecurityHeadersConfig_contentSecurityPolicy = Lens.lens (\ResponseHeadersPolicySecurityHeadersConfig' {contentSecurityPolicy} -> contentSecurityPolicy) (\s@ResponseHeadersPolicySecurityHeadersConfig' {} a -> s {contentSecurityPolicy = a} :: ResponseHeadersPolicySecurityHeadersConfig)
    |                                                                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/Types/ResponseHeadersPolicySecurityHeadersConfig.hs:200:212: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {referrerPolicy = a} with type ResponseHeadersPolicySecurityHeadersConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
200 | responseHeadersPolicySecurityHeadersConfig_referrerPolicy = Lens.lens (\ResponseHeadersPolicySecurityHeadersConfig' {referrerPolicy} -> referrerPolicy) (\s@ResponseHeadersPolicySecurityHeadersConfig' {} a -> s {referrerPolicy = a} :: ResponseHeadersPolicySecurityHeadersConfig)
    |                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^
[141 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyConfig
[142 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicy
[143 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicySummary
[144 of 299] Compiling Amazonka.CloudFront.Types.ResponseHeadersPolicyList
[145 of 299] Compiling Amazonka.CloudFront.Types.Restrictions
[146 of 299] Compiling Amazonka.CloudFront.Types.S3Origin
[147 of 299] Compiling Amazonka.CloudFront.Types.S3OriginConfig
[148 of 299] Compiling Amazonka.CloudFront.Types.SSLSupportMethod
[149 of 299] Compiling Amazonka.CloudFront.Types.SessionStickinessConfig
[150 of 299] Compiling Amazonka.CloudFront.Types.ContinuousDeploymentSingleWeightConfig
[151 of 299] Compiling Amazonka.CloudFront.Types.Signer
[152 of 299] Compiling Amazonka.CloudFront.Types.ActiveTrustedSigners
[153 of 299] Compiling Amazonka.CloudFront.Types.SslProtocol
[154 of 299] Compiling Amazonka.CloudFront.Types.OriginSslProtocols
[155 of 299] Compiling Amazonka.CloudFront.Types.CustomOriginConfig
[156 of 299] Compiling Amazonka.CloudFront.Types.Origin
[157 of 299] Compiling Amazonka.CloudFront.Types.Origins
[158 of 299] Compiling Amazonka.CloudFront.Types.StagingDistributionDnsNames
[159 of 299] Compiling Amazonka.CloudFront.Types.StatusCodes
[160 of 299] Compiling Amazonka.CloudFront.Types.OriginGroupFailoverCriteria
[161 of 299] Compiling Amazonka.CloudFront.Types.OriginGroup
[162 of 299] Compiling Amazonka.CloudFront.Types.OriginGroups
[163 of 299] Compiling Amazonka.CloudFront.Types.StreamingLoggingConfig
[164 of 299] Compiling Amazonka.CloudFront.Types.Tag
[165 of 299] Compiling Amazonka.CloudFront.Types.TagKeys
[166 of 299] Compiling Amazonka.CloudFront.Types.Tags
[167 of 299] Compiling Amazonka.CloudFront.Types.TestResult
[168 of 299] Compiling Amazonka.CloudFront.Types.TrafficConfig
[169 of 299] Compiling Amazonka.CloudFront.Types.ContinuousDeploymentPolicyConfig
[170 of 299] Compiling Amazonka.CloudFront.Types.ContinuousDeploymentPolicy
[171 of 299] Compiling Amazonka.CloudFront.Types.ContinuousDeploymentPolicySummary
[172 of 299] Compiling Amazonka.CloudFront.Types.ContinuousDeploymentPolicyList
[173 of 299] Compiling Amazonka.CloudFront.Types.TrustedKeyGroups
[174 of 299] Compiling Amazonka.CloudFront.Types.TrustedSigners
[175 of 299] Compiling Amazonka.CloudFront.Types.StreamingDistributionSummary

gen/Amazonka/CloudFront/Types/StreamingDistributionSummary.hs:212:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type StreamingDistributionSummary is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
212 | streamingDistributionSummary_domainName = Lens.lens (\StreamingDistributionSummary' {domainName} -> domainName) (\s@StreamingDistributionSummary' {} a -> s {domainName = a} :: StreamingDistributionSummary)
    |                                                                                                                                                              ^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/Types/StreamingDistributionSummary.hs:254:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {enabled = a} with type StreamingDistributionSummary is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
254 | streamingDistributionSummary_enabled = Lens.lens (\StreamingDistributionSummary' {enabled} -> enabled) (\s@StreamingDistributionSummary' {} a -> s {enabled = a} :: StreamingDistributionSummary)
    |                                                                                                                                                     ^^^^^^^^^^^
[176 of 299] Compiling Amazonka.CloudFront.Types.StreamingDistributionList
[177 of 299] Compiling Amazonka.CloudFront.Types.StreamingDistributionConfig

gen/Amazonka/CloudFront/Types/StreamingDistributionConfig.hs:198:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {enabled = a} with type StreamingDistributionConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
198 | streamingDistributionConfig_enabled = Lens.lens (\StreamingDistributionConfig' {enabled} -> enabled) (\s@StreamingDistributionConfig' {} a -> s {enabled = a} :: StreamingDistributionConfig)
    |                                                                                                                                                  ^^^^^^^^^^^
[178 of 299] Compiling Amazonka.CloudFront.Types.StreamingDistributionConfigWithTags
[179 of 299] Compiling Amazonka.CloudFront.Types.StreamingDistribution
[180 of 299] Compiling Amazonka.CloudFront.Types.ViewerCertificate
[181 of 299] Compiling Amazonka.CloudFront.Types.ViewerProtocolPolicy
[182 of 299] Compiling Amazonka.CloudFront.Types.DefaultCacheBehavior
[183 of 299] Compiling Amazonka.CloudFront.Types.CacheBehavior
[184 of 299] Compiling Amazonka.CloudFront.Types.CacheBehaviors
[185 of 299] Compiling Amazonka.CloudFront.Types.DistributionSummary
[186 of 299] Compiling Amazonka.CloudFront.Types.DistributionList
[187 of 299] Compiling Amazonka.CloudFront.Types.DistributionConfig

gen/Amazonka/CloudFront/Types/DistributionConfig.hs:650:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {enabled = a} with type DistributionConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
650 | distributionConfig_enabled = Lens.lens (\DistributionConfig' {enabled} -> enabled) (\s@DistributionConfig' {} a -> s {enabled = a} :: DistributionConfig)
    |                                                                                                                       ^^^^^^^^^^^
[188 of 299] Compiling Amazonka.CloudFront.Types.DistributionConfigWithTags
[189 of 299] Compiling Amazonka.CloudFront.Types.Distribution
[190 of 299] Compiling Amazonka.CloudFront.Types
[191 of 299] Compiling Amazonka.CloudFront.TestFunction

gen/Amazonka/CloudFront/TestFunction.hs:131:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {stage = a} with type TestFunction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | testFunction_stage = Lens.lens (\TestFunction' {stage} -> stage) (\s@TestFunction' {} a -> s {stage = a} :: TestFunction)
    |                                                                                               ^^^^^^^^^

gen/Amazonka/CloudFront/TestFunction.hs:135:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type TestFunction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
135 | testFunction_name = Lens.lens (\TestFunction' {name} -> name) (\s@TestFunction' {} a -> s {name = a} :: TestFunction)
    |                                                                                            ^^^^^^^^
[192 of 299] Compiling Amazonka.CloudFront.TagResource

gen/Amazonka/CloudFront/TagResource.hs:84:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type TagResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
84 | tagResource_tags = Lens.lens (\TagResource' {tags} -> tags) (\s@TagResource' {} a -> s {tags = a} :: TagResource)
   |                                                                                         ^^^^^^^^
[193 of 299] Compiling Amazonka.CloudFront.PublishFunction

gen/Amazonka/CloudFront/PublishFunction.hs:98:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type PublishFunction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | publishFunction_name = Lens.lens (\PublishFunction' {name} -> name) (\s@PublishFunction' {} a -> s {name = a} :: PublishFunction)
   |                                                                                                     ^^^^^^^^

gen/Amazonka/CloudFront/PublishFunction.hs:177:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {functionSummary = a} with type PublishFunctionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
177 | publishFunctionResponse_functionSummary = Lens.lens (\PublishFunctionResponse' {functionSummary} -> functionSummary) (\s@PublishFunctionResponse' {} a -> s {functionSummary = a} :: PublishFunctionResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^
[194 of 299] Compiling Amazonka.CloudFront.ListTagsForResource

gen/Amazonka/CloudFront/ListTagsForResource.hs:151:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type ListTagsForResourceResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
151 | listTagsForResourceResponse_tags = Lens.lens (\ListTagsForResourceResponse' {tags} -> tags) (\s@ListTagsForResourceResponse' {} a -> s {tags = a} :: ListTagsForResourceResponse)
    |                                                                                                                                         ^^^^^^^^
[195 of 299] Compiling Amazonka.CloudFront.ListStreamingDistributions

gen/Amazonka/CloudFront/ListStreamingDistributions.hs:86:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListStreamingDistributions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
86 | listStreamingDistributions_marker = Lens.lens (\ListStreamingDistributions' {marker} -> marker) (\s@ListStreamingDistributions' {} a -> s {marker = a} :: ListStreamingDistributions)
   |                                                                                                                                            ^^^^^^^^^^

gen/Amazonka/CloudFront/ListStreamingDistributions.hs:90:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListStreamingDistributions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | listStreamingDistributions_maxItems = Lens.lens (\ListStreamingDistributions' {maxItems} -> maxItems) (\s@ListStreamingDistributions' {} a -> s {maxItems = a} :: ListStreamingDistributions)
   |                                                                                                                                                  ^^^^^^^^^^^^
[196 of 299] Compiling Amazonka.CloudFront.ListResponseHeadersPolicies

gen/Amazonka/CloudFront/ListResponseHeadersPolicies.hs:127:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListResponseHeadersPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | listResponseHeadersPolicies_marker = Lens.lens (\ListResponseHeadersPolicies' {marker} -> marker) (\s@ListResponseHeadersPolicies' {} a -> s {marker = a} :: ListResponseHeadersPolicies)
    |                                                                                                                                               ^^^^^^^^^^

gen/Amazonka/CloudFront/ListResponseHeadersPolicies.hs:132:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListResponseHeadersPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | listResponseHeadersPolicies_maxItems = Lens.lens (\ListResponseHeadersPolicies' {maxItems} -> maxItems) (\s@ListResponseHeadersPolicies' {} a -> s {maxItems = a} :: ListResponseHeadersPolicies)
    |                                                                                                                                                     ^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListResponseHeadersPolicies.hs:143:139: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {type' = a} with type ListResponseHeadersPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
143 | listResponseHeadersPolicies_type = Lens.lens (\ListResponseHeadersPolicies' {type'} -> type') (\s@ListResponseHeadersPolicies' {} a -> s {type' = a} :: ListResponseHeadersPolicies)
    |                                                                                                                                           ^^^^^^^^^
[197 of 299] Compiling Amazonka.CloudFront.ListRealtimeLogConfigs

gen/Amazonka/CloudFront/ListRealtimeLogConfigs.hs:102:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListRealtimeLogConfigs is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | listRealtimeLogConfigs_marker = Lens.lens (\ListRealtimeLogConfigs' {marker} -> marker) (\s@ListRealtimeLogConfigs' {} a -> s {marker = a} :: ListRealtimeLogConfigs)
    |                                                                                                                                ^^^^^^^^^^

gen/Amazonka/CloudFront/ListRealtimeLogConfigs.hs:107:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListRealtimeLogConfigs is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
107 | listRealtimeLogConfigs_maxItems = Lens.lens (\ListRealtimeLogConfigs' {maxItems} -> maxItems) (\s@ListRealtimeLogConfigs' {} a -> s {maxItems = a} :: ListRealtimeLogConfigs)
    |                                                                                                                                      ^^^^^^^^^^^^
[198 of 299] Compiling Amazonka.CloudFront.ListPublicKeys

gen/Amazonka/CloudFront/ListPublicKeys.hs:94:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListPublicKeys is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | listPublicKeys_marker = Lens.lens (\ListPublicKeys' {marker} -> marker) (\s@ListPublicKeys' {} a -> s {marker = a} :: ListPublicKeys)
   |                                                                                                        ^^^^^^^^^^

gen/Amazonka/CloudFront/ListPublicKeys.hs:98:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListPublicKeys is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | listPublicKeys_maxItems = Lens.lens (\ListPublicKeys' {maxItems} -> maxItems) (\s@ListPublicKeys' {} a -> s {maxItems = a} :: ListPublicKeys)
   |                                                                                                              ^^^^^^^^^^^^
[199 of 299] Compiling Amazonka.CloudFront.ListOriginRequestPolicies

gen/Amazonka/CloudFront/ListOriginRequestPolicies.hs:127:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListOriginRequestPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | listOriginRequestPolicies_marker = Lens.lens (\ListOriginRequestPolicies' {marker} -> marker) (\s@ListOriginRequestPolicies' {} a -> s {marker = a} :: ListOriginRequestPolicies)
    |                                                                                                                                         ^^^^^^^^^^

gen/Amazonka/CloudFront/ListOriginRequestPolicies.hs:132:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListOriginRequestPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | listOriginRequestPolicies_maxItems = Lens.lens (\ListOriginRequestPolicies' {maxItems} -> maxItems) (\s@ListOriginRequestPolicies' {} a -> s {maxItems = a} :: ListOriginRequestPolicies)
    |                                                                                                                                               ^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListOriginRequestPolicies.hs:143:133: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {type' = a} with type ListOriginRequestPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
143 | listOriginRequestPolicies_type = Lens.lens (\ListOriginRequestPolicies' {type'} -> type') (\s@ListOriginRequestPolicies' {} a -> s {type' = a} :: ListOriginRequestPolicies)
    |                                                                                                                                     ^^^^^^^^^
[200 of 299] Compiling Amazonka.CloudFront.ListOriginAccessControls

gen/Amazonka/CloudFront/ListOriginAccessControls.hs:103:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListOriginAccessControls is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | listOriginAccessControls_marker = Lens.lens (\ListOriginAccessControls' {marker} -> marker) (\s@ListOriginAccessControls' {} a -> s {marker = a} :: ListOriginAccessControls)
    |                                                                                                                                      ^^^^^^^^^^

gen/Amazonka/CloudFront/ListOriginAccessControls.hs:108:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListOriginAccessControls is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | listOriginAccessControls_maxItems = Lens.lens (\ListOriginAccessControls' {maxItems} -> maxItems) (\s@ListOriginAccessControls' {} a -> s {maxItems = a} :: ListOriginAccessControls)
    |                                                                                                                                            ^^^^^^^^^^^^
[201 of 299] Compiling Amazonka.CloudFront.ListKeyGroups

gen/Amazonka/CloudFront/ListKeyGroups.hs:100:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListKeyGroups is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | listKeyGroups_marker = Lens.lens (\ListKeyGroups' {marker} -> marker) (\s@ListKeyGroups' {} a -> s {marker = a} :: ListKeyGroups)
    |                                                                                                     ^^^^^^^^^^

gen/Amazonka/CloudFront/ListKeyGroups.hs:104:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListKeyGroups is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | listKeyGroups_maxItems = Lens.lens (\ListKeyGroups' {maxItems} -> maxItems) (\s@ListKeyGroups' {} a -> s {maxItems = a} :: ListKeyGroups)
    |                                                                                                           ^^^^^^^^^^^^
[202 of 299] Compiling Amazonka.CloudFront.ListInvalidations

gen/Amazonka/CloudFront/ListInvalidations.hs:113:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListInvalidations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | listInvalidations_marker = Lens.lens (\ListInvalidations' {marker} -> marker) (\s@ListInvalidations' {} a -> s {marker = a} :: ListInvalidations)
    |                                                                                                                 ^^^^^^^^^^

gen/Amazonka/CloudFront/ListInvalidations.hs:118:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListInvalidations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
118 | listInvalidations_maxItems = Lens.lens (\ListInvalidations' {maxItems} -> maxItems) (\s@ListInvalidations' {} a -> s {maxItems = a} :: ListInvalidations)
    |                                                                                                                       ^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListInvalidations.hs:122:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {distributionId = a} with type ListInvalidations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
122 | listInvalidations_distributionId = Lens.lens (\ListInvalidations' {distributionId} -> distributionId) (\s@ListInvalidations' {} a -> s {distributionId = a} :: ListInvalidations)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^^
[203 of 299] Compiling Amazonka.CloudFront.ListFunctions

gen/Amazonka/CloudFront/ListFunctions.hs:112:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListFunctions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | listFunctions_marker = Lens.lens (\ListFunctions' {marker} -> marker) (\s@ListFunctions' {} a -> s {marker = a} :: ListFunctions)
    |                                                                                                     ^^^^^^^^^^

gen/Amazonka/CloudFront/ListFunctions.hs:116:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListFunctions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | listFunctions_maxItems = Lens.lens (\ListFunctions' {maxItems} -> maxItems) (\s@ListFunctions' {} a -> s {maxItems = a} :: ListFunctions)
    |                                                                                                           ^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListFunctions.hs:121:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {stage = a} with type ListFunctions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
121 | listFunctions_stage = Lens.lens (\ListFunctions' {stage} -> stage) (\s@ListFunctions' {} a -> s {stage = a} :: ListFunctions)
    |                                                                                                  ^^^^^^^^^
[204 of 299] Compiling Amazonka.CloudFront.ListFieldLevelEncryptionProfiles

gen/Amazonka/CloudFront/ListFieldLevelEncryptionProfiles.hs:97:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListFieldLevelEncryptionProfiles is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
97 | listFieldLevelEncryptionProfiles_marker = Lens.lens (\ListFieldLevelEncryptionProfiles' {marker} -> marker) (\s@ListFieldLevelEncryptionProfiles' {} a -> s {marker = a} :: ListFieldLevelEncryptionProfiles)
   |                                                                                                                                                              ^^^^^^^^^^

gen/Amazonka/CloudFront/ListFieldLevelEncryptionProfiles.hs:102:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListFieldLevelEncryptionProfiles is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | listFieldLevelEncryptionProfiles_maxItems = Lens.lens (\ListFieldLevelEncryptionProfiles' {maxItems} -> maxItems) (\s@ListFieldLevelEncryptionProfiles' {} a -> s {maxItems = a} :: ListFieldLevelEncryptionProfiles)
    |                                                                                                                                                                    ^^^^^^^^^^^^
[205 of 299] Compiling Amazonka.CloudFront.ListFieldLevelEncryptionConfigs

gen/Amazonka/CloudFront/ListFieldLevelEncryptionConfigs.hs:97:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListFieldLevelEncryptionConfigs is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
97 | listFieldLevelEncryptionConfigs_marker = Lens.lens (\ListFieldLevelEncryptionConfigs' {marker} -> marker) (\s@ListFieldLevelEncryptionConfigs' {} a -> s {marker = a} :: ListFieldLevelEncryptionConfigs)
   |                                                                                                                                                           ^^^^^^^^^^

gen/Amazonka/CloudFront/ListFieldLevelEncryptionConfigs.hs:102:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListFieldLevelEncryptionConfigs is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | listFieldLevelEncryptionConfigs_maxItems = Lens.lens (\ListFieldLevelEncryptionConfigs' {maxItems} -> maxItems) (\s@ListFieldLevelEncryptionConfigs' {} a -> s {maxItems = a} :: ListFieldLevelEncryptionConfigs)
    |                                                                                                                                                                 ^^^^^^^^^^^^
[206 of 299] Compiling Amazonka.CloudFront.ListDistributionsByWebACLId

gen/Amazonka/CloudFront/ListDistributionsByWebACLId.hs:114:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListDistributionsByWebACLId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | listDistributionsByWebACLId_marker = Lens.lens (\ListDistributionsByWebACLId' {marker} -> marker) (\s@ListDistributionsByWebACLId' {} a -> s {marker = a} :: ListDistributionsByWebACLId)
    |                                                                                                                                               ^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributionsByWebACLId.hs:119:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListDistributionsByWebACLId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | listDistributionsByWebACLId_maxItems = Lens.lens (\ListDistributionsByWebACLId' {maxItems} -> maxItems) (\s@ListDistributionsByWebACLId' {} a -> s {maxItems = a} :: ListDistributionsByWebACLId)
    |                                                                                                                                                     ^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributionsByWebACLId.hs:125:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {webACLId = a} with type ListDistributionsByWebACLId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
125 | listDistributionsByWebACLId_webACLId = Lens.lens (\ListDistributionsByWebACLId' {webACLId} -> webACLId) (\s@ListDistributionsByWebACLId' {} a -> s {webACLId = a} :: ListDistributionsByWebACLId)
    |                                                                                                                                                     ^^^^^^^^^^^^
[207 of 299] Compiling Amazonka.CloudFront.ListDistributionsByResponseHeadersPolicyId

gen/Amazonka/CloudFront/ListDistributionsByResponseHeadersPolicyId.hs:116:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListDistributionsByResponseHeadersPolicyId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | listDistributionsByResponseHeadersPolicyId_marker = Lens.lens (\ListDistributionsByResponseHeadersPolicyId' {marker} -> marker) (\s@ListDistributionsByResponseHeadersPolicyId' {} a -> s {marker = a} :: ListDistributionsByResponseHeadersPolicyId)
    |                                                                                                                                                                                            ^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributionsByResponseHeadersPolicyId.hs:121:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListDistributionsByResponseHeadersPolicyId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
121 | listDistributionsByResponseHeadersPolicyId_maxItems = Lens.lens (\ListDistributionsByResponseHeadersPolicyId' {maxItems} -> maxItems) (\s@ListDistributionsByResponseHeadersPolicyId' {} a -> s {maxItems = a} :: ListDistributionsByResponseHeadersPolicyId)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributionsByResponseHeadersPolicyId.hs:126:239: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {responseHeadersPolicyId = a} with type ListDistributionsByResponseHeadersPolicyId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
126 | listDistributionsByResponseHeadersPolicyId_responseHeadersPolicyId = Lens.lens (\ListDistributionsByResponseHeadersPolicyId' {responseHeadersPolicyId} -> responseHeadersPolicyId) (\s@ListDistributionsByResponseHeadersPolicyId' {} a -> s {responseHeadersPolicyId = a} :: ListDistributionsByResponseHeadersPolicyId)
    |                                                                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
[208 of 299] Compiling Amazonka.CloudFront.ListDistributionsByRealtimeLogConfig

gen/Amazonka/CloudFront/ListDistributionsByRealtimeLogConfig.hs:125:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListDistributionsByRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
125 | listDistributionsByRealtimeLogConfig_marker = Lens.lens (\ListDistributionsByRealtimeLogConfig' {marker} -> marker) (\s@ListDistributionsByRealtimeLogConfig' {} a -> s {marker = a} :: ListDistributionsByRealtimeLogConfig)
    |                                                                                                                                                                          ^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributionsByRealtimeLogConfig.hs:129:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListDistributionsByRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | listDistributionsByRealtimeLogConfig_maxItems = Lens.lens (\ListDistributionsByRealtimeLogConfig' {maxItems} -> maxItems) (\s@ListDistributionsByRealtimeLogConfig' {} a -> s {maxItems = a} :: ListDistributionsByRealtimeLogConfig)
    |                                                                                                                                                                                ^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributionsByRealtimeLogConfig.hs:134:212: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {realtimeLogConfigArn = a} with type ListDistributionsByRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
134 | listDistributionsByRealtimeLogConfig_realtimeLogConfigArn = Lens.lens (\ListDistributionsByRealtimeLogConfig' {realtimeLogConfigArn} -> realtimeLogConfigArn) (\s@ListDistributionsByRealtimeLogConfig' {} a -> s {realtimeLogConfigArn = a} :: ListDistributionsByRealtimeLogConfig)
    |                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
[209 of 299] Compiling Amazonka.CloudFront.ListDistributionsByOriginRequestPolicyId

gen/Amazonka/CloudFront/ListDistributionsByOriginRequestPolicyId.hs:114:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListDistributionsByOriginRequestPolicyId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | listDistributionsByOriginRequestPolicyId_marker = Lens.lens (\ListDistributionsByOriginRequestPolicyId' {marker} -> marker) (\s@ListDistributionsByOriginRequestPolicyId' {} a -> s {marker = a} :: ListDistributionsByOriginRequestPolicyId)
    |                                                                                                                                                                                      ^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributionsByOriginRequestPolicyId.hs:118:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListDistributionsByOriginRequestPolicyId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
118 | listDistributionsByOriginRequestPolicyId_maxItems = Lens.lens (\ListDistributionsByOriginRequestPolicyId' {maxItems} -> maxItems) (\s@ListDistributionsByOriginRequestPolicyId' {} a -> s {maxItems = a} :: ListDistributionsByOriginRequestPolicyId)
    |                                                                                                                                                                                            ^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributionsByOriginRequestPolicyId.hs:123:227: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {originRequestPolicyId = a} with type ListDistributionsByOriginRequestPolicyId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | listDistributionsByOriginRequestPolicyId_originRequestPolicyId = Lens.lens (\ListDistributionsByOriginRequestPolicyId' {originRequestPolicyId} -> originRequestPolicyId) (\s@ListDistributionsByOriginRequestPolicyId' {} a -> s {originRequestPolicyId = a} :: ListDistributionsByOriginRequestPolicyId)
    |                                                                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
[210 of 299] Compiling Amazonka.CloudFront.ListDistributionsByKeyGroup

gen/Amazonka/CloudFront/ListDistributionsByKeyGroup.hs:112:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListDistributionsByKeyGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | listDistributionsByKeyGroup_marker = Lens.lens (\ListDistributionsByKeyGroup' {marker} -> marker) (\s@ListDistributionsByKeyGroup' {} a -> s {marker = a} :: ListDistributionsByKeyGroup)
    |                                                                                                                                               ^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributionsByKeyGroup.hs:116:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListDistributionsByKeyGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | listDistributionsByKeyGroup_maxItems = Lens.lens (\ListDistributionsByKeyGroup' {maxItems} -> maxItems) (\s@ListDistributionsByKeyGroup' {} a -> s {maxItems = a} :: ListDistributionsByKeyGroup)
    |                                                                                                                                                     ^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributionsByKeyGroup.hs:121:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyGroupId = a} with type ListDistributionsByKeyGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
121 | listDistributionsByKeyGroup_keyGroupId = Lens.lens (\ListDistributionsByKeyGroup' {keyGroupId} -> keyGroupId) (\s@ListDistributionsByKeyGroup' {} a -> s {keyGroupId = a} :: ListDistributionsByKeyGroup)
    |                                                                                                                                                           ^^^^^^^^^^^^^^
[211 of 299] Compiling Amazonka.CloudFront.ListDistributionsByCachePolicyId

gen/Amazonka/CloudFront/ListDistributionsByCachePolicyId.hs:112:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListDistributionsByCachePolicyId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | listDistributionsByCachePolicyId_marker = Lens.lens (\ListDistributionsByCachePolicyId' {marker} -> marker) (\s@ListDistributionsByCachePolicyId' {} a -> s {marker = a} :: ListDistributionsByCachePolicyId)
    |                                                                                                                                                              ^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributionsByCachePolicyId.hs:116:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListDistributionsByCachePolicyId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | listDistributionsByCachePolicyId_maxItems = Lens.lens (\ListDistributionsByCachePolicyId' {maxItems} -> maxItems) (\s@ListDistributionsByCachePolicyId' {} a -> s {maxItems = a} :: ListDistributionsByCachePolicyId)
    |                                                                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributionsByCachePolicyId.hs:121:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cachePolicyId = a} with type ListDistributionsByCachePolicyId is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
121 | listDistributionsByCachePolicyId_cachePolicyId = Lens.lens (\ListDistributionsByCachePolicyId' {cachePolicyId} -> cachePolicyId) (\s@ListDistributionsByCachePolicyId' {} a -> s {cachePolicyId = a} :: ListDistributionsByCachePolicyId)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^
[212 of 299] Compiling Amazonka.CloudFront.ListDistributions

gen/Amazonka/CloudFront/ListDistributions.hs:97:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListDistributions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
97 | listDistributions_marker = Lens.lens (\ListDistributions' {marker} -> marker) (\s@ListDistributions' {} a -> s {marker = a} :: ListDistributions)
   |                                                                                                                 ^^^^^^^^^^

gen/Amazonka/CloudFront/ListDistributions.hs:101:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListDistributions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | listDistributions_maxItems = Lens.lens (\ListDistributions' {maxItems} -> maxItems) (\s@ListDistributions' {} a -> s {maxItems = a} :: ListDistributions)
    |                                                                                                                       ^^^^^^^^^^^^
[213 of 299] Compiling Amazonka.CloudFront.ListContinuousDeploymentPolicies

gen/Amazonka/CloudFront/ListContinuousDeploymentPolicies.hs:104:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListContinuousDeploymentPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | listContinuousDeploymentPolicies_marker = Lens.lens (\ListContinuousDeploymentPolicies' {marker} -> marker) (\s@ListContinuousDeploymentPolicies' {} a -> s {marker = a} :: ListContinuousDeploymentPolicies)
    |                                                                                                                                                              ^^^^^^^^^^

gen/Amazonka/CloudFront/ListContinuousDeploymentPolicies.hs:109:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListContinuousDeploymentPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | listContinuousDeploymentPolicies_maxItems = Lens.lens (\ListContinuousDeploymentPolicies' {maxItems} -> maxItems) (\s@ListContinuousDeploymentPolicies' {} a -> s {maxItems = a} :: ListContinuousDeploymentPolicies)
    |                                                                                                                                                                    ^^^^^^^^^^^^
[214 of 299] Compiling Amazonka.CloudFront.ListConflictingAliases

gen/Amazonka/CloudFront/ListConflictingAliases.hs:140:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListConflictingAliases is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
140 | listConflictingAliases_marker = Lens.lens (\ListConflictingAliases' {marker} -> marker) (\s@ListConflictingAliases' {} a -> s {marker = a} :: ListConflictingAliases)
    |                                                                                                                                ^^^^^^^^^^

gen/Amazonka/CloudFront/ListConflictingAliases.hs:144:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListConflictingAliases is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
144 | listConflictingAliases_maxItems = Lens.lens (\ListConflictingAliases' {maxItems} -> maxItems) (\s@ListConflictingAliases' {} a -> s {maxItems = a} :: ListConflictingAliases)
    |                                                                                                                                      ^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListConflictingAliases.hs:149:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {distributionId = a} with type ListConflictingAliases is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
149 | listConflictingAliases_distributionId = Lens.lens (\ListConflictingAliases' {distributionId} -> distributionId) (\s@ListConflictingAliases' {} a -> s {distributionId = a} :: ListConflictingAliases)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListConflictingAliases.hs:153:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {alias = a} with type ListConflictingAliases is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
153 | listConflictingAliases_alias = Lens.lens (\ListConflictingAliases' {alias} -> alias) (\s@ListConflictingAliases' {} a -> s {alias = a} :: ListConflictingAliases)
    |                                                                                                                             ^^^^^^^^^
[215 of 299] Compiling Amazonka.CloudFront.ListCloudFrontOriginAccessIdentities

gen/Amazonka/CloudFront/ListCloudFrontOriginAccessIdentities.hs:100:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListCloudFrontOriginAccessIdentities is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | listCloudFrontOriginAccessIdentities_marker = Lens.lens (\ListCloudFrontOriginAccessIdentities' {marker} -> marker) (\s@ListCloudFrontOriginAccessIdentities' {} a -> s {marker = a} :: ListCloudFrontOriginAccessIdentities)
    |                                                                                                                                                                          ^^^^^^^^^^

gen/Amazonka/CloudFront/ListCloudFrontOriginAccessIdentities.hs:105:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListCloudFrontOriginAccessIdentities is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
105 | listCloudFrontOriginAccessIdentities_maxItems = Lens.lens (\ListCloudFrontOriginAccessIdentities' {maxItems} -> maxItems) (\s@ListCloudFrontOriginAccessIdentities' {} a -> s {maxItems = a} :: ListCloudFrontOriginAccessIdentities)
    |                                                                                                                                                                                ^^^^^^^^^^^^
[216 of 299] Compiling Amazonka.CloudFront.ListCachePolicies

gen/Amazonka/CloudFront/ListCachePolicies.hs:124:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListCachePolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
124 | listCachePolicies_marker = Lens.lens (\ListCachePolicies' {marker} -> marker) (\s@ListCachePolicies' {} a -> s {marker = a} :: ListCachePolicies)
    |                                                                                                                 ^^^^^^^^^^

gen/Amazonka/CloudFront/ListCachePolicies.hs:128:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListCachePolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
128 | listCachePolicies_maxItems = Lens.lens (\ListCachePolicies' {maxItems} -> maxItems) (\s@ListCachePolicies' {} a -> s {maxItems = a} :: ListCachePolicies)
    |                                                                                                                       ^^^^^^^^^^^^

gen/Amazonka/CloudFront/ListCachePolicies.hs:139:109: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {type' = a} with type ListCachePolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | listCachePolicies_type = Lens.lens (\ListCachePolicies' {type'} -> type') (\s@ListCachePolicies' {} a -> s {type' = a} :: ListCachePolicies)
    |                                                                                                             ^^^^^^^^^
[217 of 299] Compiling Amazonka.CloudFront.GetStreamingDistributionConfig

gen/Amazonka/CloudFront/GetStreamingDistributionConfig.hs:78:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetStreamingDistributionConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
78 | getStreamingDistributionConfig_id = Lens.lens (\GetStreamingDistributionConfig' {id} -> id) (\s@GetStreamingDistributionConfig' {} a -> s {id = a} :: GetStreamingDistributionConfig)
   |                                                                                                                                            ^^^^^^

gen/Amazonka/CloudFront/GetStreamingDistributionConfig.hs:177:239: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {streamingDistributionConfig = a} with type GetStreamingDistributionConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
177 | getStreamingDistributionConfigResponse_streamingDistributionConfig = Lens.lens (\GetStreamingDistributionConfigResponse' {streamingDistributionConfig} -> streamingDistributionConfig) (\s@GetStreamingDistributionConfigResponse' {} a -> s {streamingDistributionConfig = a} :: GetStreamingDistributionConfigResponse)
    |                                                                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[218 of 299] Compiling Amazonka.CloudFront.GetStreamingDistribution

gen/Amazonka/CloudFront/GetStreamingDistribution.hs:79:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetStreamingDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
79 | getStreamingDistribution_id = Lens.lens (\GetStreamingDistribution' {id} -> id) (\s@GetStreamingDistribution' {} a -> s {id = a} :: GetStreamingDistribution)
   |                                                                                                                          ^^^^^^
[219 of 299] Compiling Amazonka.CloudFront.GetResponseHeadersPolicyConfig

gen/Amazonka/CloudFront/GetResponseHeadersPolicyConfig.hs:101:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetResponseHeadersPolicyConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | getResponseHeadersPolicyConfig_id = Lens.lens (\GetResponseHeadersPolicyConfig' {id} -> id) (\s@GetResponseHeadersPolicyConfig' {} a -> s {id = a} :: GetResponseHeadersPolicyConfig)
    |                                                                                                                                            ^^^^^^

gen/Amazonka/CloudFront/GetResponseHeadersPolicyConfig.hs:201:239: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {responseHeadersPolicyConfig = a} with type GetResponseHeadersPolicyConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
201 | getResponseHeadersPolicyConfigResponse_responseHeadersPolicyConfig = Lens.lens (\GetResponseHeadersPolicyConfigResponse' {responseHeadersPolicyConfig} -> responseHeadersPolicyConfig) (\s@GetResponseHeadersPolicyConfigResponse' {} a -> s {responseHeadersPolicyConfig = a} :: GetResponseHeadersPolicyConfigResponse)
    |                                                                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[220 of 299] Compiling Amazonka.CloudFront.GetResponseHeadersPolicy

gen/Amazonka/CloudFront/GetResponseHeadersPolicy.hs:102:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetResponseHeadersPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | getResponseHeadersPolicy_id = Lens.lens (\GetResponseHeadersPolicy' {id} -> id) (\s@GetResponseHeadersPolicy' {} a -> s {id = a} :: GetResponseHeadersPolicy)
    |                                                                                                                          ^^^^^^

gen/Amazonka/CloudFront/GetResponseHeadersPolicy.hs:184:203: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {responseHeadersPolicy = a} with type GetResponseHeadersPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
184 | getResponseHeadersPolicyResponse_responseHeadersPolicy = Lens.lens (\GetResponseHeadersPolicyResponse' {responseHeadersPolicy} -> responseHeadersPolicy) (\s@GetResponseHeadersPolicyResponse' {} a -> s {responseHeadersPolicy = a} :: GetResponseHeadersPolicyResponse)
    |                                                                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^
[221 of 299] Compiling Amazonka.CloudFront.GetRealtimeLogConfig

gen/Amazonka/CloudFront/GetRealtimeLogConfig.hs:89:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {arn = a} with type GetRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
89 | getRealtimeLogConfig_arn = Lens.lens (\GetRealtimeLogConfig' {arn} -> arn) (\s@GetRealtimeLogConfig' {} a -> s {arn = a} :: GetRealtimeLogConfig)
   |                                                                                                                 ^^^^^^^

gen/Amazonka/CloudFront/GetRealtimeLogConfig.hs:93:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type GetRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | getRealtimeLogConfig_name = Lens.lens (\GetRealtimeLogConfig' {name} -> name) (\s@GetRealtimeLogConfig' {} a -> s {name = a} :: GetRealtimeLogConfig)
   |                                                                                                                    ^^^^^^^^
[222 of 299] Compiling Amazonka.CloudFront.GetPublicKeyConfig

gen/Amazonka/CloudFront/GetPublicKeyConfig.hs:76:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetPublicKeyConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
76 | getPublicKeyConfig_id = Lens.lens (\GetPublicKeyConfig' {id} -> id) (\s@GetPublicKeyConfig' {} a -> s {id = a} :: GetPublicKeyConfig)
   |                                                                                                        ^^^^^^

gen/Amazonka/CloudFront/GetPublicKeyConfig.hs:152:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {publicKeyConfig = a} with type GetPublicKeyConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
152 | getPublicKeyConfigResponse_publicKeyConfig = Lens.lens (\GetPublicKeyConfigResponse' {publicKeyConfig} -> publicKeyConfig) (\s@GetPublicKeyConfigResponse' {} a -> s {publicKeyConfig = a} :: GetPublicKeyConfigResponse)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^
[223 of 299] Compiling Amazonka.CloudFront.GetPublicKey

gen/Amazonka/CloudFront/GetPublicKey.hs:75:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetPublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
75 | getPublicKey_id = Lens.lens (\GetPublicKey' {id} -> id) (\s@GetPublicKey' {} a -> s {id = a} :: GetPublicKey)
   |                                                                                      ^^^^^^
[224 of 299] Compiling Amazonka.CloudFront.GetOriginRequestPolicyConfig

gen/Amazonka/CloudFront/GetOriginRequestPolicyConfig.hs:98:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetOriginRequestPolicyConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | getOriginRequestPolicyConfig_id = Lens.lens (\GetOriginRequestPolicyConfig' {id} -> id) (\s@GetOriginRequestPolicyConfig' {} a -> s {id = a} :: GetOriginRequestPolicyConfig)
   |                                                                                                                                      ^^^^^^

gen/Amazonka/CloudFront/GetOriginRequestPolicyConfig.hs:183:227: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {originRequestPolicyConfig = a} with type GetOriginRequestPolicyConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
183 | getOriginRequestPolicyConfigResponse_originRequestPolicyConfig = Lens.lens (\GetOriginRequestPolicyConfigResponse' {originRequestPolicyConfig} -> originRequestPolicyConfig) (\s@GetOriginRequestPolicyConfigResponse' {} a -> s {originRequestPolicyConfig = a} :: GetOriginRequestPolicyConfigResponse)
    |                                                                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[225 of 299] Compiling Amazonka.CloudFront.GetOriginRequestPolicy

gen/Amazonka/CloudFront/GetOriginRequestPolicy.hs:102:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetOriginRequestPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | getOriginRequestPolicy_id = Lens.lens (\GetOriginRequestPolicy' {id} -> id) (\s@GetOriginRequestPolicy' {} a -> s {id = a} :: GetOriginRequestPolicy)
    |                                                                                                                    ^^^^^^

gen/Amazonka/CloudFront/GetOriginRequestPolicy.hs:179:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {originRequestPolicy = a} with type GetOriginRequestPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
179 | getOriginRequestPolicyResponse_originRequestPolicy = Lens.lens (\GetOriginRequestPolicyResponse' {originRequestPolicy} -> originRequestPolicy) (\s@GetOriginRequestPolicyResponse' {} a -> s {originRequestPolicy = a} :: GetOriginRequestPolicyResponse)
    |                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^
[226 of 299] Compiling Amazonka.CloudFront.GetOriginAccessControlConfig

gen/Amazonka/CloudFront/GetOriginAccessControlConfig.hs:76:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetOriginAccessControlConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
76 | getOriginAccessControlConfig_id = Lens.lens (\GetOriginAccessControlConfig' {id} -> id) (\s@GetOriginAccessControlConfig' {} a -> s {id = a} :: GetOriginAccessControlConfig)
   |                                                                                                                                      ^^^^^^

gen/Amazonka/CloudFront/GetOriginAccessControlConfig.hs:164:227: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {originAccessControlConfig = a} with type GetOriginAccessControlConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
164 | getOriginAccessControlConfigResponse_originAccessControlConfig = Lens.lens (\GetOriginAccessControlConfigResponse' {originAccessControlConfig} -> originAccessControlConfig) (\s@GetOriginAccessControlConfigResponse' {} a -> s {originAccessControlConfig = a} :: GetOriginAccessControlConfigResponse)
    |                                                                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[227 of 299] Compiling Amazonka.CloudFront.GetOriginAccessControl

gen/Amazonka/CloudFront/GetOriginAccessControl.hs:77:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetOriginAccessControl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
77 | getOriginAccessControl_id = Lens.lens (\GetOriginAccessControl' {id} -> id) (\s@GetOriginAccessControl' {} a -> s {id = a} :: GetOriginAccessControl)
   |                                                                                                                    ^^^^^^
[228 of 299] Compiling Amazonka.CloudFront.GetMonitoringSubscription

gen/Amazonka/CloudFront/GetMonitoringSubscription.hs:79:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {distributionId = a} with type GetMonitoringSubscription is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
79 | getMonitoringSubscription_distributionId = Lens.lens (\GetMonitoringSubscription' {distributionId} -> distributionId) (\s@GetMonitoringSubscription' {} a -> s {distributionId = a} :: GetMonitoringSubscription)
   |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^
[229 of 299] Compiling Amazonka.CloudFront.GetKeyGroupConfig

gen/Amazonka/CloudFront/GetKeyGroupConfig.hs:86:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetKeyGroupConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
86 | getKeyGroupConfig_id = Lens.lens (\GetKeyGroupConfig' {id} -> id) (\s@GetKeyGroupConfig' {} a -> s {id = a} :: GetKeyGroupConfig)
   |                                                                                                     ^^^^^^

gen/Amazonka/CloudFront/GetKeyGroupConfig.hs:162:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyGroupConfig = a} with type GetKeyGroupConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
162 | getKeyGroupConfigResponse_keyGroupConfig = Lens.lens (\GetKeyGroupConfigResponse' {keyGroupConfig} -> keyGroupConfig) (\s@GetKeyGroupConfigResponse' {} a -> s {keyGroupConfig = a} :: GetKeyGroupConfigResponse)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^
[230 of 299] Compiling Amazonka.CloudFront.GetKeyGroup

gen/Amazonka/CloudFront/GetKeyGroup.hs:85:83: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetKeyGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
85 | getKeyGroup_id = Lens.lens (\GetKeyGroup' {id} -> id) (\s@GetKeyGroup' {} a -> s {id = a} :: GetKeyGroup)
   |                                                                                   ^^^^^^

gen/Amazonka/CloudFront/GetKeyGroup.hs:159:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyGroup = a} with type GetKeyGroupResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
159 | getKeyGroupResponse_keyGroup = Lens.lens (\GetKeyGroupResponse' {keyGroup} -> keyGroup) (\s@GetKeyGroupResponse' {} a -> s {keyGroup = a} :: GetKeyGroupResponse)
    |                                                                                                                             ^^^^^^^^^^^^
[231 of 299] Compiling Amazonka.CloudFront.GetInvalidation

gen/Amazonka/CloudFront/GetInvalidation.hs:89:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {distributionId = a} with type GetInvalidation is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
89 | getInvalidation_distributionId = Lens.lens (\GetInvalidation' {distributionId} -> distributionId) (\s@GetInvalidation' {} a -> s {distributionId = a} :: GetInvalidation)
   |                                                                                                                                   ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/GetInvalidation.hs:94:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetInvalidation is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | getInvalidation_id = Lens.lens (\GetInvalidation' {id} -> id) (\s@GetInvalidation' {} a -> s {id = a} :: GetInvalidation)
   |                                                                                               ^^^^^^
[232 of 299] Compiling Amazonka.CloudFront.GetFunction

gen/Amazonka/CloudFront/GetFunction.hs:89:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {stage = a} with type GetFunction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
89 | getFunction_stage = Lens.lens (\GetFunction' {stage} -> stage) (\s@GetFunction' {} a -> s {stage = a} :: GetFunction)
   |                                                                                            ^^^^^^^^^

gen/Amazonka/CloudFront/GetFunction.hs:93:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type GetFunction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | getFunction_name = Lens.lens (\GetFunction' {name} -> name) (\s@GetFunction' {} a -> s {name = a} :: GetFunction)
   |                                                                                         ^^^^^^^^

gen/Amazonka/CloudFront/GetFunction.hs:175:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {contentType = a} with type GetFunctionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
175 | getFunctionResponse_contentType = Lens.lens (\GetFunctionResponse' {contentType} -> contentType) (\s@GetFunctionResponse' {} a -> s {contentType = a} :: GetFunctionResponse)
    |                                                                                                                                      ^^^^^^^^^^^^^^^
[233 of 299] Compiling Amazonka.CloudFront.GetFieldLevelEncryptionProfileConfig

gen/Amazonka/CloudFront/GetFieldLevelEncryptionProfileConfig.hs:79:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetFieldLevelEncryptionProfileConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
79 | getFieldLevelEncryptionProfileConfig_id = Lens.lens (\GetFieldLevelEncryptionProfileConfig' {id} -> id) (\s@GetFieldLevelEncryptionProfileConfig' {} a -> s {id = a} :: GetFieldLevelEncryptionProfileConfig)
   |                                                                                                                                                              ^^^^^^

gen/Amazonka/CloudFront/GetFieldLevelEncryptionProfileConfig.hs:185:275: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {fieldLevelEncryptionProfileConfig = a} with type GetFieldLevelEncryptionProfileConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
185 | getFieldLevelEncryptionProfileConfigResponse_fieldLevelEncryptionProfileConfig = Lens.lens (\GetFieldLevelEncryptionProfileConfigResponse' {fieldLevelEncryptionProfileConfig} -> fieldLevelEncryptionProfileConfig) (\s@GetFieldLevelEncryptionProfileConfigResponse' {} a -> s {fieldLevelEncryptionProfileConfig = a} :: GetFieldLevelEncryptionProfileConfigResponse)
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[234 of 299] Compiling Amazonka.CloudFront.GetFieldLevelEncryptionProfile

gen/Amazonka/CloudFront/GetFieldLevelEncryptionProfile.hs:76:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetFieldLevelEncryptionProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
76 | getFieldLevelEncryptionProfile_id = Lens.lens (\GetFieldLevelEncryptionProfile' {id} -> id) (\s@GetFieldLevelEncryptionProfile' {} a -> s {id = a} :: GetFieldLevelEncryptionProfile)
   |                                                                                                                                            ^^^^^^
[235 of 299] Compiling Amazonka.CloudFront.GetFieldLevelEncryptionConfig

gen/Amazonka/CloudFront/GetFieldLevelEncryptionConfig.hs:76:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetFieldLevelEncryptionConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
76 | getFieldLevelEncryptionConfig_id = Lens.lens (\GetFieldLevelEncryptionConfig' {id} -> id) (\s@GetFieldLevelEncryptionConfig' {} a -> s {id = a} :: GetFieldLevelEncryptionConfig)
   |                                                                                                                                         ^^^^^^

gen/Amazonka/CloudFront/GetFieldLevelEncryptionConfig.hs:167:233: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {fieldLevelEncryptionConfig = a} with type GetFieldLevelEncryptionConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
167 | getFieldLevelEncryptionConfigResponse_fieldLevelEncryptionConfig = Lens.lens (\GetFieldLevelEncryptionConfigResponse' {fieldLevelEncryptionConfig} -> fieldLevelEncryptionConfig) (\s@GetFieldLevelEncryptionConfigResponse' {} a -> s {fieldLevelEncryptionConfig = a} :: GetFieldLevelEncryptionConfigResponse)
    |                                                                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[236 of 299] Compiling Amazonka.CloudFront.GetFieldLevelEncryption

gen/Amazonka/CloudFront/GetFieldLevelEncryption.hs:76:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetFieldLevelEncryption is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
76 | getFieldLevelEncryption_id = Lens.lens (\GetFieldLevelEncryption' {id} -> id) (\s@GetFieldLevelEncryption' {} a -> s {id = a} :: GetFieldLevelEncryption)
   |                                                                                                                       ^^^^^^
[237 of 299] Compiling Amazonka.CloudFront.GetDistributionConfig

gen/Amazonka/CloudFront/GetDistributionConfig.hs:81:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetDistributionConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
81 | getDistributionConfig_id = Lens.lens (\GetDistributionConfig' {id} -> id) (\s@GetDistributionConfig' {} a -> s {id = a} :: GetDistributionConfig)
   |                                                                                                                 ^^^^^^

gen/Amazonka/CloudFront/GetDistributionConfig.hs:159:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {distributionConfig = a} with type GetDistributionConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
159 | getDistributionConfigResponse_distributionConfig = Lens.lens (\GetDistributionConfigResponse' {distributionConfig} -> distributionConfig) (\s@GetDistributionConfigResponse' {} a -> s {distributionConfig = a} :: GetDistributionConfigResponse)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^
[238 of 299] Compiling Amazonka.CloudFront.GetDistribution

gen/Amazonka/CloudFront/GetDistribution.hs:80:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
80 | getDistribution_id = Lens.lens (\GetDistribution' {id} -> id) (\s@GetDistribution' {} a -> s {id = a} :: GetDistribution)
   |                                                                                               ^^^^^^
[239 of 299] Compiling Amazonka.CloudFront.GetContinuousDeploymentPolicyConfig

gen/Amazonka/CloudFront/GetContinuousDeploymentPolicyConfig.hs:79:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetContinuousDeploymentPolicyConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
79 | getContinuousDeploymentPolicyConfig_id = Lens.lens (\GetContinuousDeploymentPolicyConfig' {id} -> id) (\s@GetContinuousDeploymentPolicyConfig' {} a -> s {id = a} :: GetContinuousDeploymentPolicyConfig)
   |                                                                                                                                                           ^^^^^^

gen/Amazonka/CloudFront/GetContinuousDeploymentPolicyConfig.hs:178:269: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuousDeploymentPolicyConfig = a} with type GetContinuousDeploymentPolicyConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
178 | getContinuousDeploymentPolicyConfigResponse_continuousDeploymentPolicyConfig = Lens.lens (\GetContinuousDeploymentPolicyConfigResponse' {continuousDeploymentPolicyConfig} -> continuousDeploymentPolicyConfig) (\s@GetContinuousDeploymentPolicyConfigResponse' {} a -> s {continuousDeploymentPolicyConfig = a} :: GetContinuousDeploymentPolicyConfigResponse)
    |                                                                                                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[240 of 299] Compiling Amazonka.CloudFront.GetContinuousDeploymentPolicy

gen/Amazonka/CloudFront/GetContinuousDeploymentPolicy.hs:77:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetContinuousDeploymentPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
77 | getContinuousDeploymentPolicy_id = Lens.lens (\GetContinuousDeploymentPolicy' {id} -> id) (\s@GetContinuousDeploymentPolicy' {} a -> s {id = a} :: GetContinuousDeploymentPolicy)
   |                                                                                                                                         ^^^^^^

gen/Amazonka/CloudFront/GetContinuousDeploymentPolicy.hs:161:233: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuousDeploymentPolicy = a} with type GetContinuousDeploymentPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
161 | getContinuousDeploymentPolicyResponse_continuousDeploymentPolicy = Lens.lens (\GetContinuousDeploymentPolicyResponse' {continuousDeploymentPolicy} -> continuousDeploymentPolicy) (\s@GetContinuousDeploymentPolicyResponse' {} a -> s {continuousDeploymentPolicy = a} :: GetContinuousDeploymentPolicyResponse)
    |                                                                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[241 of 299] Compiling Amazonka.CloudFront.GetCloudFrontOriginAccessIdentityConfig

gen/Amazonka/CloudFront/GetCloudFrontOriginAccessIdentityConfig.hs:80:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetCloudFrontOriginAccessIdentityConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
80 | getCloudFrontOriginAccessIdentityConfig_id = Lens.lens (\GetCloudFrontOriginAccessIdentityConfig' {id} -> id) (\s@GetCloudFrontOriginAccessIdentityConfig' {} a -> s {id = a} :: GetCloudFrontOriginAccessIdentityConfig)
   |                                                                                                                                                                       ^^^^^^

gen/Amazonka/CloudFront/GetCloudFrontOriginAccessIdentityConfig.hs:181:293: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cloudFrontOriginAccessIdentityConfig = a} with type GetCloudFrontOriginAccessIdentityConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
181 | getCloudFrontOriginAccessIdentityConfigResponse_cloudFrontOriginAccessIdentityConfig = Lens.lens (\GetCloudFrontOriginAccessIdentityConfigResponse' {cloudFrontOriginAccessIdentityConfig} -> cloudFrontOriginAccessIdentityConfig) (\s@GetCloudFrontOriginAccessIdentityConfigResponse' {} a -> s {cloudFrontOriginAccessIdentityConfig = a} :: GetCloudFrontOriginAccessIdentityConfigResponse)
    |                                                                                                                                                                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[242 of 299] Compiling Amazonka.CloudFront.GetCloudFrontOriginAccessIdentity

gen/Amazonka/CloudFront/GetCloudFrontOriginAccessIdentity.hs:78:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetCloudFrontOriginAccessIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
78 | getCloudFrontOriginAccessIdentity_id = Lens.lens (\GetCloudFrontOriginAccessIdentity' {id} -> id) (\s@GetCloudFrontOriginAccessIdentity' {} a -> s {id = a} :: GetCloudFrontOriginAccessIdentity)
   |                                                                                                                                                     ^^^^^^
[243 of 299] Compiling Amazonka.CloudFront.GetCachePolicyConfig

gen/Amazonka/CloudFront/GetCachePolicyConfig.hs:94:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetCachePolicyConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | getCachePolicyConfig_id = Lens.lens (\GetCachePolicyConfig' {id} -> id) (\s@GetCachePolicyConfig' {} a -> s {id = a} :: GetCachePolicyConfig)
   |                                                                                                              ^^^^^^

gen/Amazonka/CloudFront/GetCachePolicyConfig.hs:170:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cachePolicyConfig = a} with type GetCachePolicyConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
170 | getCachePolicyConfigResponse_cachePolicyConfig = Lens.lens (\GetCachePolicyConfigResponse' {cachePolicyConfig} -> cachePolicyConfig) (\s@GetCachePolicyConfigResponse' {} a -> s {cachePolicyConfig = a} :: GetCachePolicyConfigResponse)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^
[244 of 299] Compiling Amazonka.CloudFront.GetCachePolicy

gen/Amazonka/CloudFront/GetCachePolicy.hs:97:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetCachePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
97 | getCachePolicy_id = Lens.lens (\GetCachePolicy' {id} -> id) (\s@GetCachePolicy' {} a -> s {id = a} :: GetCachePolicy)
   |                                                                                            ^^^^^^

gen/Amazonka/CloudFront/GetCachePolicy.hs:170:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cachePolicy = a} with type GetCachePolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
170 | getCachePolicyResponse_cachePolicy = Lens.lens (\GetCachePolicyResponse' {cachePolicy} -> cachePolicy) (\s@GetCachePolicyResponse' {} a -> s {cachePolicy = a} :: GetCachePolicyResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^^^
[245 of 299] Compiling Amazonka.CloudFront.DescribeFunction

gen/Amazonka/CloudFront/DescribeFunction.hs:90:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {stage = a} with type DescribeFunction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | describeFunction_stage = Lens.lens (\DescribeFunction' {stage} -> stage) (\s@DescribeFunction' {} a -> s {stage = a} :: DescribeFunction)
   |                                                                                                           ^^^^^^^^^

gen/Amazonka/CloudFront/DescribeFunction.hs:94:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type DescribeFunction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | describeFunction_name = Lens.lens (\DescribeFunction' {name} -> name) (\s@DescribeFunction' {} a -> s {name = a} :: DescribeFunction)
   |                                                                                                        ^^^^^^^^

gen/Amazonka/CloudFront/DescribeFunction.hs:183:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {functionSummary = a} with type DescribeFunctionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
183 | describeFunctionResponse_functionSummary = Lens.lens (\DescribeFunctionResponse' {functionSummary} -> functionSummary) (\s@DescribeFunctionResponse' {} a -> s {functionSummary = a} :: DescribeFunctionResponse)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^
[246 of 299] Compiling Amazonka.CloudFront.DeleteStreamingDistribution

gen/Amazonka/CloudFront/DeleteStreamingDistribution.hs:128:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteStreamingDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
128 | deleteStreamingDistribution_id = Lens.lens (\DeleteStreamingDistribution' {id} -> id) (\s@DeleteStreamingDistribution' {} a -> s {id = a} :: DeleteStreamingDistribution)
    |                                                                                                                                   ^^^^^^
[247 of 299] Compiling Amazonka.CloudFront.DeleteResponseHeadersPolicy

gen/Amazonka/CloudFront/DeleteResponseHeadersPolicy.hs:111:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteResponseHeadersPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
111 | deleteResponseHeadersPolicy_id = Lens.lens (\DeleteResponseHeadersPolicy' {id} -> id) (\s@DeleteResponseHeadersPolicy' {} a -> s {id = a} :: DeleteResponseHeadersPolicy)
    |                                                                                                                                   ^^^^^^
[248 of 299] Compiling Amazonka.CloudFront.DeleteRealtimeLogConfig

gen/Amazonka/CloudFront/DeleteRealtimeLogConfig.hs:90:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {arn = a} with type DeleteRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | deleteRealtimeLogConfig_arn = Lens.lens (\DeleteRealtimeLogConfig' {arn} -> arn) (\s@DeleteRealtimeLogConfig' {} a -> s {arn = a} :: DeleteRealtimeLogConfig)
   |                                                                                                                          ^^^^^^^

gen/Amazonka/CloudFront/DeleteRealtimeLogConfig.hs:94:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type DeleteRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | deleteRealtimeLogConfig_name = Lens.lens (\DeleteRealtimeLogConfig' {name} -> name) (\s@DeleteRealtimeLogConfig' {} a -> s {name = a} :: DeleteRealtimeLogConfig)
   |                                                                                                                             ^^^^^^^^
[249 of 299] Compiling Amazonka.CloudFront.DeletePublicKey

gen/Amazonka/CloudFront/DeletePublicKey.hs:86:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeletePublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
86 | deletePublicKey_id = Lens.lens (\DeletePublicKey' {id} -> id) (\s@DeletePublicKey' {} a -> s {id = a} :: DeletePublicKey)
   |                                                                                               ^^^^^^
[250 of 299] Compiling Amazonka.CloudFront.DeleteOriginRequestPolicy

gen/Amazonka/CloudFront/DeleteOriginRequestPolicy.hs:108:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteOriginRequestPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | deleteOriginRequestPolicy_id = Lens.lens (\DeleteOriginRequestPolicy' {id} -> id) (\s@DeleteOriginRequestPolicy' {} a -> s {id = a} :: DeleteOriginRequestPolicy)
    |                                                                                                                             ^^^^^^
[251 of 299] Compiling Amazonka.CloudFront.DeleteOriginAccessControl

gen/Amazonka/CloudFront/DeleteOriginAccessControl.hs:94:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteOriginAccessControl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | deleteOriginAccessControl_id = Lens.lens (\DeleteOriginAccessControl' {id} -> id) (\s@DeleteOriginAccessControl' {} a -> s {id = a} :: DeleteOriginAccessControl)
   |                                                                                                                             ^^^^^^
[252 of 299] Compiling Amazonka.CloudFront.DeleteMonitoringSubscription

gen/Amazonka/CloudFront/DeleteMonitoringSubscription.hs:78:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {distributionId = a} with type DeleteMonitoringSubscription is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
78 | deleteMonitoringSubscription_distributionId = Lens.lens (\DeleteMonitoringSubscription' {distributionId} -> distributionId) (\s@DeleteMonitoringSubscription' {} a -> s {distributionId = a} :: DeleteMonitoringSubscription)
   |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^
[253 of 299] Compiling Amazonka.CloudFront.DeleteKeyGroup

gen/Amazonka/CloudFront/DeleteKeyGroup.hs:100:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteKeyGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | deleteKeyGroup_id = Lens.lens (\DeleteKeyGroup' {id} -> id) (\s@DeleteKeyGroup' {} a -> s {id = a} :: DeleteKeyGroup)
    |                                                                                            ^^^^^^
[254 of 299] Compiling Amazonka.CloudFront.DeleteFunction

gen/Amazonka/CloudFront/DeleteFunction.hs:93:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type DeleteFunction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | deleteFunction_name = Lens.lens (\DeleteFunction' {name} -> name) (\s@DeleteFunction' {} a -> s {name = a} :: DeleteFunction)
   |                                                                                                  ^^^^^^^^
[255 of 299] Compiling Amazonka.CloudFront.DeleteFieldLevelEncryptionProfile

gen/Amazonka/CloudFront/DeleteFieldLevelEncryptionProfile.hs:87:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteFieldLevelEncryptionProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | deleteFieldLevelEncryptionProfile_id = Lens.lens (\DeleteFieldLevelEncryptionProfile' {id} -> id) (\s@DeleteFieldLevelEncryptionProfile' {} a -> s {id = a} :: DeleteFieldLevelEncryptionProfile)
   |                                                                                                                                                     ^^^^^^
[256 of 299] Compiling Amazonka.CloudFront.DeleteFieldLevelEncryptionConfig

gen/Amazonka/CloudFront/DeleteFieldLevelEncryptionConfig.hs:87:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteFieldLevelEncryptionConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | deleteFieldLevelEncryptionConfig_id = Lens.lens (\DeleteFieldLevelEncryptionConfig' {id} -> id) (\s@DeleteFieldLevelEncryptionConfig' {} a -> s {id = a} :: DeleteFieldLevelEncryptionConfig)
   |                                                                                                                                                  ^^^^^^
[257 of 299] Compiling Amazonka.CloudFront.DeleteDistribution

gen/Amazonka/CloudFront/DeleteDistribution.hs:127:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | deleteDistribution_id = Lens.lens (\DeleteDistribution' {id} -> id) (\s@DeleteDistribution' {} a -> s {id = a} :: DeleteDistribution)
    |                                                                                                        ^^^^^^
[258 of 299] Compiling Amazonka.CloudFront.DeleteContinuousDeploymentPolicy

gen/Amazonka/CloudFront/DeleteContinuousDeploymentPolicy.hs:94:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteContinuousDeploymentPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | deleteContinuousDeploymentPolicy_id = Lens.lens (\DeleteContinuousDeploymentPolicy' {id} -> id) (\s@DeleteContinuousDeploymentPolicy' {} a -> s {id = a} :: DeleteContinuousDeploymentPolicy)
   |                                                                                                                                                  ^^^^^^
[259 of 299] Compiling Amazonka.CloudFront.DeleteCloudFrontOriginAccessIdentity

gen/Amazonka/CloudFront/DeleteCloudFrontOriginAccessIdentity.hs:89:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteCloudFrontOriginAccessIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
89 | deleteCloudFrontOriginAccessIdentity_id = Lens.lens (\DeleteCloudFrontOriginAccessIdentity' {id} -> id) (\s@DeleteCloudFrontOriginAccessIdentity' {} a -> s {id = a} :: DeleteCloudFrontOriginAccessIdentity)
   |                                                                                                                                                              ^^^^^^
[260 of 299] Compiling Amazonka.CloudFront.DeleteCachePolicy

gen/Amazonka/CloudFront/DeleteCachePolicy.hs:100:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteCachePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | deleteCachePolicy_id = Lens.lens (\DeleteCachePolicy' {id} -> id) (\s@DeleteCachePolicy' {} a -> s {id = a} :: DeleteCachePolicy)
    |                                                                                                     ^^^^^^
[261 of 299] Compiling Amazonka.CloudFront.CreateStreamingDistributionWithTags
[262 of 299] Compiling Amazonka.CloudFront.CreateStreamingDistribution

gen/Amazonka/CloudFront/CreateStreamingDistribution.hs:87:206: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {streamingDistributionConfig = a} with type CreateStreamingDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | createStreamingDistribution_streamingDistributionConfig = Lens.lens (\CreateStreamingDistribution' {streamingDistributionConfig} -> streamingDistributionConfig) (\s@CreateStreamingDistribution' {} a -> s {streamingDistributionConfig = a} :: CreateStreamingDistribution)
   |                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[263 of 299] Compiling Amazonka.CloudFront.CreateResponseHeadersPolicy

gen/Amazonka/CloudFront/CreateResponseHeadersPolicy.hs:99:206: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {responseHeadersPolicyConfig = a} with type CreateResponseHeadersPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | createResponseHeadersPolicy_responseHeadersPolicyConfig = Lens.lens (\CreateResponseHeadersPolicy' {responseHeadersPolicyConfig} -> responseHeadersPolicyConfig) (\s@CreateResponseHeadersPolicy' {} a -> s {responseHeadersPolicyConfig = a} :: CreateResponseHeadersPolicy)
   |                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/CreateResponseHeadersPolicy.hs:197:212: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {responseHeadersPolicy = a} with type CreateResponseHeadersPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
197 | createResponseHeadersPolicyResponse_responseHeadersPolicy = Lens.lens (\CreateResponseHeadersPolicyResponse' {responseHeadersPolicy} -> responseHeadersPolicy) (\s@CreateResponseHeadersPolicyResponse' {} a -> s {responseHeadersPolicy = a} :: CreateResponseHeadersPolicyResponse)
    |                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
[264 of 299] Compiling Amazonka.CloudFront.CreateRealtimeLogConfig

gen/Amazonka/CloudFront/CreateRealtimeLogConfig.hs:123:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {endPoints = a} with type CreateRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | createRealtimeLogConfig_endPoints = Lens.lens (\CreateRealtimeLogConfig' {endPoints} -> endPoints) (\s@CreateRealtimeLogConfig' {} a -> s {endPoints = a} :: CreateRealtimeLogConfig) Prelude.. Lens.coerced
    |                                                                                                                                            ^^^^^^^^^^^^^

gen/Amazonka/CloudFront/CreateRealtimeLogConfig.hs:131:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {fields = a} with type CreateRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | createRealtimeLogConfig_fields = Lens.lens (\CreateRealtimeLogConfig' {fields} -> fields) (\s@CreateRealtimeLogConfig' {} a -> s {fields = a} :: CreateRealtimeLogConfig) Prelude.. Lens.coerced
    |                                                                                                                                   ^^^^^^^^^^

gen/Amazonka/CloudFront/CreateRealtimeLogConfig.hs:135:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type CreateRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
135 | createRealtimeLogConfig_name = Lens.lens (\CreateRealtimeLogConfig' {name} -> name) (\s@CreateRealtimeLogConfig' {} a -> s {name = a} :: CreateRealtimeLogConfig)
    |                                                                                                                             ^^^^^^^^

gen/Amazonka/CloudFront/CreateRealtimeLogConfig.hs:142:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {samplingRate = a} with type CreateRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
142 | createRealtimeLogConfig_samplingRate = Lens.lens (\CreateRealtimeLogConfig' {samplingRate} -> samplingRate) (\s@CreateRealtimeLogConfig' {} a -> s {samplingRate = a} :: CreateRealtimeLogConfig)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^
[265 of 299] Compiling Amazonka.CloudFront.CreatePublicKey

gen/Amazonka/CloudFront/CreatePublicKey.hs:83:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {publicKeyConfig = a} with type CreatePublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
83 | createPublicKey_publicKeyConfig = Lens.lens (\CreatePublicKey' {publicKeyConfig} -> publicKeyConfig) (\s@CreatePublicKey' {} a -> s {publicKeyConfig = a} :: CreatePublicKey)
   |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^
[266 of 299] Compiling Amazonka.CloudFront.CreateOriginRequestPolicy

gen/Amazonka/CloudFront/CreateOriginRequestPolicy.hs:106:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {originRequestPolicyConfig = a} with type CreateOriginRequestPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | createOriginRequestPolicy_originRequestPolicyConfig = Lens.lens (\CreateOriginRequestPolicy' {originRequestPolicyConfig} -> originRequestPolicyConfig) (\s@CreateOriginRequestPolicy' {} a -> s {originRequestPolicyConfig = a} :: CreateOriginRequestPolicy)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/CreateOriginRequestPolicy.hs:200:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {originRequestPolicy = a} with type CreateOriginRequestPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
200 | createOriginRequestPolicyResponse_originRequestPolicy = Lens.lens (\CreateOriginRequestPolicyResponse' {originRequestPolicy} -> originRequestPolicy) (\s@CreateOriginRequestPolicyResponse' {} a -> s {originRequestPolicy = a} :: CreateOriginRequestPolicyResponse)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^
[267 of 299] Compiling Amazonka.CloudFront.CreateOriginAccessControl

gen/Amazonka/CloudFront/CreateOriginAccessControl.hs:92:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {originAccessControlConfig = a} with type CreateOriginAccessControl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | createOriginAccessControl_originAccessControlConfig = Lens.lens (\CreateOriginAccessControl' {originAccessControlConfig} -> originAccessControlConfig) (\s@CreateOriginAccessControl' {} a -> s {originAccessControlConfig = a} :: CreateOriginAccessControl)
   |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[268 of 299] Compiling Amazonka.CloudFront.CreateMonitoringSubscription

gen/Amazonka/CloudFront/CreateMonitoringSubscription.hs:99:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {monitoringSubscription = a} with type CreateMonitoringSubscription is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | createMonitoringSubscription_monitoringSubscription = Lens.lens (\CreateMonitoringSubscription' {monitoringSubscription} -> monitoringSubscription) (\s@CreateMonitoringSubscription' {} a -> s {monitoringSubscription = a} :: CreateMonitoringSubscription)
   |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/CreateMonitoringSubscription.hs:103:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {distributionId = a} with type CreateMonitoringSubscription is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | createMonitoringSubscription_distributionId = Lens.lens (\CreateMonitoringSubscription' {distributionId} -> distributionId) (\s@CreateMonitoringSubscription' {} a -> s {distributionId = a} :: CreateMonitoringSubscription)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/CreateMonitoringSubscription.hs:192:218: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {monitoringSubscription = a} with type CreateMonitoringSubscriptionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
192 | createMonitoringSubscriptionResponse_monitoringSubscription = Lens.lens (\CreateMonitoringSubscriptionResponse' {monitoringSubscription} -> monitoringSubscription) (\s@CreateMonitoringSubscriptionResponse' {} a -> s {monitoringSubscription = a} :: CreateMonitoringSubscriptionResponse)
    |                                                                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
[269 of 299] Compiling Amazonka.CloudFront.CreateKeyGroup

gen/Amazonka/CloudFront/CreateKeyGroup.hs:90:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyGroupConfig = a} with type CreateKeyGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | createKeyGroup_keyGroupConfig = Lens.lens (\CreateKeyGroup' {keyGroupConfig} -> keyGroupConfig) (\s@CreateKeyGroup' {} a -> s {keyGroupConfig = a} :: CreateKeyGroup)
   |                                                                                                                                ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/CreateKeyGroup.hs:176:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyGroup = a} with type CreateKeyGroupResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
176 | createKeyGroupResponse_keyGroup = Lens.lens (\CreateKeyGroupResponse' {keyGroup} -> keyGroup) (\s@CreateKeyGroupResponse' {} a -> s {keyGroup = a} :: CreateKeyGroupResponse)
    |                                                                                                                                      ^^^^^^^^^^^^
[270 of 299] Compiling Amazonka.CloudFront.CreateInvalidation

gen/Amazonka/CloudFront/CreateInvalidation.hs:91:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {distributionId = a} with type CreateInvalidation is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
91 | createInvalidation_distributionId = Lens.lens (\CreateInvalidation' {distributionId} -> distributionId) (\s@CreateInvalidation' {} a -> s {distributionId = a} :: CreateInvalidation)
   |                                                                                                                                            ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/CreateInvalidation.hs:95:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {invalidationBatch = a} with type CreateInvalidation is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
95 | createInvalidation_invalidationBatch = Lens.lens (\CreateInvalidation' {invalidationBatch} -> invalidationBatch) (\s@CreateInvalidation' {} a -> s {invalidationBatch = a} :: CreateInvalidation)
   |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^
[271 of 299] Compiling Amazonka.CloudFront.CreateFunction

gen/Amazonka/CloudFront/CreateFunction.hs:126:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type CreateFunction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
126 | createFunction_name = Lens.lens (\CreateFunction' {name} -> name) (\s@CreateFunction' {} a -> s {name = a} :: CreateFunction)
    |                                                                                                  ^^^^^^^^

gen/Amazonka/CloudFront/CreateFunction.hs:131:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {functionConfig = a} with type CreateFunction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | createFunction_functionConfig = Lens.lens (\CreateFunction' {functionConfig} -> functionConfig) (\s@CreateFunction' {} a -> s {functionConfig = a} :: CreateFunction)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/CreateFunction.hs:249:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {functionSummary = a} with type CreateFunctionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
249 | createFunctionResponse_functionSummary = Lens.lens (\CreateFunctionResponse' {functionSummary} -> functionSummary) (\s@CreateFunctionResponse' {} a -> s {functionSummary = a} :: CreateFunctionResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^
[272 of 299] Compiling Amazonka.CloudFront.CreateFieldLevelEncryptionProfile

gen/Amazonka/CloudFront/CreateFieldLevelEncryptionProfile.hs:81:242: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {fieldLevelEncryptionProfileConfig = a} with type CreateFieldLevelEncryptionProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
81 | createFieldLevelEncryptionProfile_fieldLevelEncryptionProfileConfig = Lens.lens (\CreateFieldLevelEncryptionProfile' {fieldLevelEncryptionProfileConfig} -> fieldLevelEncryptionProfileConfig) (\s@CreateFieldLevelEncryptionProfile' {} a -> s {fieldLevelEncryptionProfileConfig = a} :: CreateFieldLevelEncryptionProfile)
   |                                                                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[273 of 299] Compiling Amazonka.CloudFront.CreateFieldLevelEncryptionConfig

gen/Amazonka/CloudFront/CreateFieldLevelEncryptionConfig.hs:81:218: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {fieldLevelEncryptionConfig = a} with type CreateFieldLevelEncryptionConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
81 | createFieldLevelEncryptionConfig_fieldLevelEncryptionConfig = Lens.lens (\CreateFieldLevelEncryptionConfig' {fieldLevelEncryptionConfig} -> fieldLevelEncryptionConfig) (\s@CreateFieldLevelEncryptionConfig' {} a -> s {fieldLevelEncryptionConfig = a} :: CreateFieldLevelEncryptionConfig)
   |                                                                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[274 of 299] Compiling Amazonka.CloudFront.CreateDistributionWithTags
[275 of 299] Compiling Amazonka.CloudFront.CreateDistribution

gen/Amazonka/CloudFront/CreateDistribution.hs:82:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {distributionConfig = a} with type CreateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
82 | createDistribution_distributionConfig = Lens.lens (\CreateDistribution' {distributionConfig} -> distributionConfig) (\s@CreateDistribution' {} a -> s {distributionConfig = a} :: CreateDistribution)
   |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^
[276 of 299] Compiling Amazonka.CloudFront.CreateContinuousDeploymentPolicy

gen/Amazonka/CloudFront/CreateContinuousDeploymentPolicy.hs:92:236: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuousDeploymentPolicyConfig = a} with type CreateContinuousDeploymentPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | createContinuousDeploymentPolicy_continuousDeploymentPolicyConfig = Lens.lens (\CreateContinuousDeploymentPolicy' {continuousDeploymentPolicyConfig} -> continuousDeploymentPolicyConfig) (\s@CreateContinuousDeploymentPolicy' {} a -> s {continuousDeploymentPolicyConfig = a} :: CreateContinuousDeploymentPolicy)
   |                                                                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/CreateContinuousDeploymentPolicy.hs:202:242: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuousDeploymentPolicy = a} with type CreateContinuousDeploymentPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
202 | createContinuousDeploymentPolicyResponse_continuousDeploymentPolicy = Lens.lens (\CreateContinuousDeploymentPolicyResponse' {continuousDeploymentPolicy} -> continuousDeploymentPolicy) (\s@CreateContinuousDeploymentPolicyResponse' {} a -> s {continuousDeploymentPolicy = a} :: CreateContinuousDeploymentPolicyResponse)
    |                                                                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[277 of 299] Compiling Amazonka.CloudFront.CreateCloudFrontOriginAccessIdentity

gen/Amazonka/CloudFront/CreateCloudFrontOriginAccessIdentity.hs:93:260: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cloudFrontOriginAccessIdentityConfig = a} with type CreateCloudFrontOriginAccessIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | createCloudFrontOriginAccessIdentity_cloudFrontOriginAccessIdentityConfig = Lens.lens (\CreateCloudFrontOriginAccessIdentity' {cloudFrontOriginAccessIdentityConfig} -> cloudFrontOriginAccessIdentityConfig) (\s@CreateCloudFrontOriginAccessIdentity' {} a -> s {cloudFrontOriginAccessIdentityConfig = a} :: CreateCloudFrontOriginAccessIdentity)
   |                                                                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[278 of 299] Compiling Amazonka.CloudFront.CreateCachePolicy

gen/Amazonka/CloudFront/CreateCachePolicy.hs:103:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cachePolicyConfig = a} with type CreateCachePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | createCachePolicy_cachePolicyConfig = Lens.lens (\CreateCachePolicy' {cachePolicyConfig} -> cachePolicyConfig) (\s@CreateCachePolicy' {} a -> s {cachePolicyConfig = a} :: CreateCachePolicy)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/CreateCachePolicy.hs:187:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cachePolicy = a} with type CreateCachePolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
187 | createCachePolicyResponse_cachePolicy = Lens.lens (\CreateCachePolicyResponse' {cachePolicy} -> cachePolicy) (\s@CreateCachePolicyResponse' {} a -> s {cachePolicy = a} :: CreateCachePolicyResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^
[279 of 299] Compiling Amazonka.CloudFront.CopyDistribution

gen/Amazonka/CloudFront/CopyDistribution.hs:131:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {staging = a} with type CopyDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | copyDistribution_staging = Lens.lens (\CopyDistribution' {staging} -> staging) (\s@CopyDistribution' {} a -> s {staging = a} :: CopyDistribution)
    |                                                                                                                 ^^^^^^^^^^^

gen/Amazonka/CloudFront/CopyDistribution.hs:142:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {callerReference = a} with type CopyDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
142 | copyDistribution_callerReference = Lens.lens (\CopyDistribution' {callerReference} -> callerReference) (\s@CopyDistribution' {} a -> s {callerReference = a} :: CopyDistribution)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^^^
[280 of 299] Compiling Amazonka.CloudFront.AssociateAlias

gen/Amazonka/CloudFront/AssociateAlias.hs:100:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {alias = a} with type AssociateAlias is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | associateAlias_alias = Lens.lens (\AssociateAlias' {alias} -> alias) (\s@AssociateAlias' {} a -> s {alias = a} :: AssociateAlias)
    |                                                                                                     ^^^^^^^^^
[281 of 299] Compiling Amazonka.CloudFront.UntagResource
[282 of 299] Compiling Amazonka.CloudFront.UpdateCachePolicy

gen/Amazonka/CloudFront/UpdateCachePolicy.hs:119:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cachePolicyConfig = a} with type UpdateCachePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | updateCachePolicy_cachePolicyConfig = Lens.lens (\UpdateCachePolicy' {cachePolicyConfig} -> cachePolicyConfig) (\s@UpdateCachePolicy' {} a -> s {cachePolicyConfig = a} :: UpdateCachePolicy)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateCachePolicy.hs:125:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateCachePolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
125 | updateCachePolicy_id = Lens.lens (\UpdateCachePolicy' {id} -> id) (\s@UpdateCachePolicy' {} a -> s {id = a} :: UpdateCachePolicy)
    |                                                                                                     ^^^^^^

gen/Amazonka/CloudFront/UpdateCachePolicy.hs:211:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cachePolicy = a} with type UpdateCachePolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
211 | updateCachePolicyResponse_cachePolicy = Lens.lens (\UpdateCachePolicyResponse' {cachePolicy} -> cachePolicy) (\s@UpdateCachePolicyResponse' {} a -> s {cachePolicy = a} :: UpdateCachePolicyResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^
[283 of 299] Compiling Amazonka.CloudFront.UpdateCloudFrontOriginAccessIdentity

gen/Amazonka/CloudFront/UpdateCloudFrontOriginAccessIdentity.hs:105:260: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cloudFrontOriginAccessIdentityConfig = a} with type UpdateCloudFrontOriginAccessIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
105 | updateCloudFrontOriginAccessIdentity_cloudFrontOriginAccessIdentityConfig = Lens.lens (\UpdateCloudFrontOriginAccessIdentity' {cloudFrontOriginAccessIdentityConfig} -> cloudFrontOriginAccessIdentityConfig) (\s@UpdateCloudFrontOriginAccessIdentity' {} a -> s {cloudFrontOriginAccessIdentityConfig = a} :: UpdateCloudFrontOriginAccessIdentity)
    |                                                                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateCloudFrontOriginAccessIdentity.hs:109:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateCloudFrontOriginAccessIdentity is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | updateCloudFrontOriginAccessIdentity_id = Lens.lens (\UpdateCloudFrontOriginAccessIdentity' {id} -> id) (\s@UpdateCloudFrontOriginAccessIdentity' {} a -> s {id = a} :: UpdateCloudFrontOriginAccessIdentity)
    |                                                                                                                                                              ^^^^^^
[284 of 299] Compiling Amazonka.CloudFront.UpdateContinuousDeploymentPolicy

gen/Amazonka/CloudFront/UpdateContinuousDeploymentPolicy.hs:123:236: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuousDeploymentPolicyConfig = a} with type UpdateContinuousDeploymentPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | updateContinuousDeploymentPolicy_continuousDeploymentPolicyConfig = Lens.lens (\UpdateContinuousDeploymentPolicy' {continuousDeploymentPolicyConfig} -> continuousDeploymentPolicyConfig) (\s@UpdateContinuousDeploymentPolicy' {} a -> s {continuousDeploymentPolicyConfig = a} :: UpdateContinuousDeploymentPolicy)
    |                                                                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateContinuousDeploymentPolicy.hs:128:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateContinuousDeploymentPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
128 | updateContinuousDeploymentPolicy_id = Lens.lens (\UpdateContinuousDeploymentPolicy' {id} -> id) (\s@UpdateContinuousDeploymentPolicy' {} a -> s {id = a} :: UpdateContinuousDeploymentPolicy)
    |                                                                                                                                                  ^^^^^^

gen/Amazonka/CloudFront/UpdateContinuousDeploymentPolicy.hs:239:242: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continuousDeploymentPolicy = a} with type UpdateContinuousDeploymentPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
239 | updateContinuousDeploymentPolicyResponse_continuousDeploymentPolicy = Lens.lens (\UpdateContinuousDeploymentPolicyResponse' {continuousDeploymentPolicy} -> continuousDeploymentPolicy) (\s@UpdateContinuousDeploymentPolicyResponse' {} a -> s {continuousDeploymentPolicy = a} :: UpdateContinuousDeploymentPolicyResponse)
    |                                                                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[285 of 299] Compiling Amazonka.CloudFront.UpdateDistribution

gen/Amazonka/CloudFront/UpdateDistribution.hs:127:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {distributionConfig = a} with type UpdateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | updateDistribution_distributionConfig = Lens.lens (\UpdateDistribution' {distributionConfig} -> distributionConfig) (\s@UpdateDistribution' {} a -> s {distributionConfig = a} :: UpdateDistribution)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateDistribution.hs:131:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | updateDistribution_id = Lens.lens (\UpdateDistribution' {id} -> id) (\s@UpdateDistribution' {} a -> s {id = a} :: UpdateDistribution)
    |                                                                                                        ^^^^^^
[286 of 299] Compiling Amazonka.CloudFront.UpdateDistributionWithStagingConfig

gen/Amazonka/CloudFront/UpdateDistributionWithStagingConfig.hs:128:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateDistributionWithStagingConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
128 | updateDistributionWithStagingConfig_id = Lens.lens (\UpdateDistributionWithStagingConfig' {id} -> id) (\s@UpdateDistributionWithStagingConfig' {} a -> s {id = a} :: UpdateDistributionWithStagingConfig)
    |                                                                                                                                                           ^^^^^^
[287 of 299] Compiling Amazonka.CloudFront.UpdateFieldLevelEncryptionConfig

gen/Amazonka/CloudFront/UpdateFieldLevelEncryptionConfig.hs:103:218: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {fieldLevelEncryptionConfig = a} with type UpdateFieldLevelEncryptionConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | updateFieldLevelEncryptionConfig_fieldLevelEncryptionConfig = Lens.lens (\UpdateFieldLevelEncryptionConfig' {fieldLevelEncryptionConfig} -> fieldLevelEncryptionConfig) (\s@UpdateFieldLevelEncryptionConfig' {} a -> s {fieldLevelEncryptionConfig = a} :: UpdateFieldLevelEncryptionConfig)
    |                                                                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateFieldLevelEncryptionConfig.hs:107:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateFieldLevelEncryptionConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
107 | updateFieldLevelEncryptionConfig_id = Lens.lens (\UpdateFieldLevelEncryptionConfig' {id} -> id) (\s@UpdateFieldLevelEncryptionConfig' {} a -> s {id = a} :: UpdateFieldLevelEncryptionConfig)
    |                                                                                                                                                  ^^^^^^
[288 of 299] Compiling Amazonka.CloudFront.UpdateFieldLevelEncryptionProfile

gen/Amazonka/CloudFront/UpdateFieldLevelEncryptionProfile.hs:103:242: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {fieldLevelEncryptionProfileConfig = a} with type UpdateFieldLevelEncryptionProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | updateFieldLevelEncryptionProfile_fieldLevelEncryptionProfileConfig = Lens.lens (\UpdateFieldLevelEncryptionProfile' {fieldLevelEncryptionProfileConfig} -> fieldLevelEncryptionProfileConfig) (\s@UpdateFieldLevelEncryptionProfile' {} a -> s {fieldLevelEncryptionProfileConfig = a} :: UpdateFieldLevelEncryptionProfile)
    |                                                                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateFieldLevelEncryptionProfile.hs:107:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateFieldLevelEncryptionProfile is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
107 | updateFieldLevelEncryptionProfile_id = Lens.lens (\UpdateFieldLevelEncryptionProfile' {id} -> id) (\s@UpdateFieldLevelEncryptionProfile' {} a -> s {id = a} :: UpdateFieldLevelEncryptionProfile)
    |                                                                                                                                                     ^^^^^^
[289 of 299] Compiling Amazonka.CloudFront.UpdateFunction

gen/Amazonka/CloudFront/UpdateFunction.hs:133:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {functionConfig = a} with type UpdateFunction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
133 | updateFunction_functionConfig = Lens.lens (\UpdateFunction' {functionConfig} -> functionConfig) (\s@UpdateFunction' {} a -> s {functionConfig = a} :: UpdateFunction)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateFunction.hs:148:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type UpdateFunction is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
148 | updateFunction_name = Lens.lens (\UpdateFunction' {name} -> name) (\s@UpdateFunction' {} a -> s {name = a} :: UpdateFunction)
    |                                                                                                  ^^^^^^^^

gen/Amazonka/CloudFront/UpdateFunction.hs:251:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {functionSummary = a} with type UpdateFunctionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
251 | updateFunctionResponse_functionSummary = Lens.lens (\UpdateFunctionResponse' {functionSummary} -> functionSummary) (\s@UpdateFunctionResponse' {} a -> s {functionSummary = a} :: UpdateFunctionResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^
[290 of 299] Compiling Amazonka.CloudFront.UpdateKeyGroup

gen/Amazonka/CloudFront/UpdateKeyGroup.hs:111:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyGroupConfig = a} with type UpdateKeyGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
111 | updateKeyGroup_keyGroupConfig = Lens.lens (\UpdateKeyGroup' {keyGroupConfig} -> keyGroupConfig) (\s@UpdateKeyGroup' {} a -> s {keyGroupConfig = a} :: UpdateKeyGroup)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateKeyGroup.hs:115:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateKeyGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | updateKeyGroup_id = Lens.lens (\UpdateKeyGroup' {id} -> id) (\s@UpdateKeyGroup' {} a -> s {id = a} :: UpdateKeyGroup)
    |                                                                                            ^^^^^^

gen/Amazonka/CloudFront/UpdateKeyGroup.hs:204:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyGroup = a} with type UpdateKeyGroupResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
204 | updateKeyGroupResponse_keyGroup = Lens.lens (\UpdateKeyGroupResponse' {keyGroup} -> keyGroup) (\s@UpdateKeyGroupResponse' {} a -> s {keyGroup = a} :: UpdateKeyGroupResponse)
    |                                                                                                                                      ^^^^^^^^^^^^
[291 of 299] Compiling Amazonka.CloudFront.UpdateOriginAccessControl

gen/Amazonka/CloudFront/UpdateOriginAccessControl.hs:105:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {originAccessControlConfig = a} with type UpdateOriginAccessControl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
105 | updateOriginAccessControl_originAccessControlConfig = Lens.lens (\UpdateOriginAccessControl' {originAccessControlConfig} -> originAccessControlConfig) (\s@UpdateOriginAccessControl' {} a -> s {originAccessControlConfig = a} :: UpdateOriginAccessControl)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateOriginAccessControl.hs:110:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateOriginAccessControl is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | updateOriginAccessControl_id = Lens.lens (\UpdateOriginAccessControl' {id} -> id) (\s@UpdateOriginAccessControl' {} a -> s {id = a} :: UpdateOriginAccessControl)
    |                                                                                                                             ^^^^^^
[292 of 299] Compiling Amazonka.CloudFront.UpdateOriginRequestPolicy

gen/Amazonka/CloudFront/UpdateOriginRequestPolicy.hs:126:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {originRequestPolicyConfig = a} with type UpdateOriginRequestPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
126 | updateOriginRequestPolicy_originRequestPolicyConfig = Lens.lens (\UpdateOriginRequestPolicy' {originRequestPolicyConfig} -> originRequestPolicyConfig) (\s@UpdateOriginRequestPolicy' {} a -> s {originRequestPolicyConfig = a} :: UpdateOriginRequestPolicy)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateOriginRequestPolicy.hs:133:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateOriginRequestPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
133 | updateOriginRequestPolicy_id = Lens.lens (\UpdateOriginRequestPolicy' {id} -> id) (\s@UpdateOriginRequestPolicy' {} a -> s {id = a} :: UpdateOriginRequestPolicy)
    |                                                                                                                             ^^^^^^

gen/Amazonka/CloudFront/UpdateOriginRequestPolicy.hs:223:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {originRequestPolicy = a} with type UpdateOriginRequestPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
223 | updateOriginRequestPolicyResponse_originRequestPolicy = Lens.lens (\UpdateOriginRequestPolicyResponse' {originRequestPolicy} -> originRequestPolicy) (\s@UpdateOriginRequestPolicyResponse' {} a -> s {originRequestPolicy = a} :: UpdateOriginRequestPolicyResponse)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^
[293 of 299] Compiling Amazonka.CloudFront.UpdatePublicKey

gen/Amazonka/CloudFront/UpdatePublicKey.hs:100:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {publicKeyConfig = a} with type UpdatePublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | updatePublicKey_publicKeyConfig = Lens.lens (\UpdatePublicKey' {publicKeyConfig} -> publicKeyConfig) (\s@UpdatePublicKey' {} a -> s {publicKeyConfig = a} :: UpdatePublicKey)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdatePublicKey.hs:104:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdatePublicKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | updatePublicKey_id = Lens.lens (\UpdatePublicKey' {id} -> id) (\s@UpdatePublicKey' {} a -> s {id = a} :: UpdatePublicKey)
    |                                                                                               ^^^^^^
[294 of 299] Compiling Amazonka.CloudFront.UpdateRealtimeLogConfig

gen/Amazonka/CloudFront/UpdateRealtimeLogConfig.hs:132:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {arn = a} with type UpdateRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | updateRealtimeLogConfig_arn = Lens.lens (\UpdateRealtimeLogConfig' {arn} -> arn) (\s@UpdateRealtimeLogConfig' {} a -> s {arn = a} :: UpdateRealtimeLogConfig)
    |                                                                                                                          ^^^^^^^

gen/Amazonka/CloudFront/UpdateRealtimeLogConfig.hs:137:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {endPoints = a} with type UpdateRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | updateRealtimeLogConfig_endPoints = Lens.lens (\UpdateRealtimeLogConfig' {endPoints} -> endPoints) (\s@UpdateRealtimeLogConfig' {} a -> s {endPoints = a} :: UpdateRealtimeLogConfig) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                            ^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateRealtimeLogConfig.hs:145:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {fields = a} with type UpdateRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
145 | updateRealtimeLogConfig_fields = Lens.lens (\UpdateRealtimeLogConfig' {fields} -> fields) (\s@UpdateRealtimeLogConfig' {} a -> s {fields = a} :: UpdateRealtimeLogConfig) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                   ^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateRealtimeLogConfig.hs:149:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type UpdateRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
149 | updateRealtimeLogConfig_name = Lens.lens (\UpdateRealtimeLogConfig' {name} -> name) (\s@UpdateRealtimeLogConfig' {} a -> s {name = a} :: UpdateRealtimeLogConfig)
    |                                                                                                                             ^^^^^^^^

gen/Amazonka/CloudFront/UpdateRealtimeLogConfig.hs:156:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {samplingRate = a} with type UpdateRealtimeLogConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
156 | updateRealtimeLogConfig_samplingRate = Lens.lens (\UpdateRealtimeLogConfig' {samplingRate} -> samplingRate) (\s@UpdateRealtimeLogConfig' {} a -> s {samplingRate = a} :: UpdateRealtimeLogConfig)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^
[295 of 299] Compiling Amazonka.CloudFront.UpdateResponseHeadersPolicy

gen/Amazonka/CloudFront/UpdateResponseHeadersPolicy.hs:123:206: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {responseHeadersPolicyConfig = a} with type UpdateResponseHeadersPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | updateResponseHeadersPolicy_responseHeadersPolicyConfig = Lens.lens (\UpdateResponseHeadersPolicy' {responseHeadersPolicyConfig} -> responseHeadersPolicyConfig) (\s@UpdateResponseHeadersPolicy' {} a -> s {responseHeadersPolicyConfig = a} :: UpdateResponseHeadersPolicy)
    |                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateResponseHeadersPolicy.hs:127:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateResponseHeadersPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | updateResponseHeadersPolicy_id = Lens.lens (\UpdateResponseHeadersPolicy' {id} -> id) (\s@UpdateResponseHeadersPolicy' {} a -> s {id = a} :: UpdateResponseHeadersPolicy)
    |                                                                                                                                   ^^^^^^

gen/Amazonka/CloudFront/UpdateResponseHeadersPolicy.hs:220:212: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {responseHeadersPolicy = a} with type UpdateResponseHeadersPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
220 | updateResponseHeadersPolicyResponse_responseHeadersPolicy = Lens.lens (\UpdateResponseHeadersPolicyResponse' {responseHeadersPolicy} -> responseHeadersPolicy) (\s@UpdateResponseHeadersPolicyResponse' {} a -> s {responseHeadersPolicy = a} :: UpdateResponseHeadersPolicyResponse)
    |                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
[296 of 299] Compiling Amazonka.CloudFront.UpdateStreamingDistribution

gen/Amazonka/CloudFront/UpdateStreamingDistribution.hs:105:206: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {streamingDistributionConfig = a} with type UpdateStreamingDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
105 | updateStreamingDistribution_streamingDistributionConfig = Lens.lens (\UpdateStreamingDistribution' {streamingDistributionConfig} -> streamingDistributionConfig) (\s@UpdateStreamingDistribution' {} a -> s {streamingDistributionConfig = a} :: UpdateStreamingDistribution)
    |                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CloudFront/UpdateStreamingDistribution.hs:109:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateStreamingDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | updateStreamingDistribution_id = Lens.lens (\UpdateStreamingDistribution' {id} -> id) (\s@UpdateStreamingDistribution' {} a -> s {id = a} :: UpdateStreamingDistribution)
    |                                                                                                                                   ^^^^^^
[297 of 299] Compiling Amazonka.CloudFront.Lens
[298 of 299] Compiling Amazonka.CloudFront.Waiters
[299 of 299] Compiling Amazonka.CloudFront
Configuring test suite 'amazonka-cloudfront-test' for amazonka-cloudfront-2.0...
Preprocessing test suite 'amazonka-cloudfront-test' for amazonka-cloudfront-2.0...
Building test suite 'amazonka-cloudfront-test' for amazonka-cloudfront-2.0...
[1 of 4] Compiling Test.Amazonka.CloudFront
[2 of 4] Compiling Test.Amazonka.CloudFront.Internal
[3 of 4] Compiling Main
[4 of 4] Compiling Test.Amazonka.Gen.CloudFront
[5 of 5] Linking /tmp/workdir-amazonka-cloudfront/amazonka-cloudfront-2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/amazonka-cloudfront-2.0/t/amazonka-cloudfront-test/build/amazonka-cloudfront-test/amazonka-cloudfront-test
