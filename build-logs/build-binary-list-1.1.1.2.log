Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - binary-list-1.1.1.2 (lib) (first run)
Configuring library for binary-list-1.1.1.2...
Preprocessing library for binary-list-1.1.1.2...
Building library for binary-list-1.1.1.2...
[1 of 3] Compiling Data.BinaryList.Internal
[2 of 3] Compiling Data.BinaryList

Data/BinaryList.hs:140:8: warning: [GHC-87502] [-Winline-rule-shadowing]
    Rule "Data.BinaryList: length equality" may never fire
      because rule "Class op length" for ‘length’ might fire first
    Suggested fix: Add phase [n] or [~n] to the competing rule
    |
140 |        "Data.BinaryList: length equality"
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

Data/BinaryList.hs:211:7: warning: [GHC-95396] [-Winline-rule-shadowing]
    Rule "Data.BinaryList: map reverse/replicateA" may never fire
      because ‘replicateA’ might inline first
    Suggested fix:
      Add an INLINE[n] or NOINLINE[n] pragma for ‘replicateA’
    |
211 |       "Data.BinaryList: map reverse/replicateA"
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

Data/BinaryList.hs:216:7: warning: [GHC-95396] [-Winline-rule-shadowing]
    Rule "Data.BinaryList: map reverse/replicateAR" may never fire
      because ‘replicateAR’ might inline first
    Suggested fix:
      Add an INLINE[n] or NOINLINE[n] pragma for ‘replicateAR’
    |
216 |       "Data.BinaryList: map reverse/replicateAR"
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

Data/BinaryList.hs:226:7: warning: [GHC-95396] [-Winline-rule-shadowing]
    Rule "Data.BinaryList: map/replicate" may never fire
      because ‘replicate’ might inline first
    Suggested fix:
      Add an INLINE[n] or NOINLINE[n] pragma for ‘replicate’
    |
226 |       "Data.BinaryList: map/replicate"
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

Data/BinaryList.hs:414:52: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a lambda abstraction: Patterns of type ‘[a]’ not matched: []
    |
414 |     builder l = evalState (replicateA l $ StateT $ \(h:t) -> pure (h,t)) xs
    |                                                    ^^^^^^^^^^^^^^^^^^^^
[3 of 3] Compiling Data.BinaryList.Serialize
