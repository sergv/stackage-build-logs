Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - optional-args-1.0.2 (lib) (first run)
Configuring library for optional-args-1.0.2...
Preprocessing library for optional-args-1.0.2...
Building library for optional-args-1.0.2...
[1 of 1] Compiling Data.Optional

src/Data/Optional.hs:96:1: warning: [-Wunused-imports]
    The import of ‘Applicative, liftA2’
    from module ‘Control.Applicative’ is redundant
   |
96 | import Control.Applicative (Applicative(..), Alternative(..), liftA2)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Optional.hs:98:1: warning: [-Wunused-imports]
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()
   |
98 | import Data.Foldable (Foldable)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Optional.hs:99:1: warning: [-Wunused-imports]
    The import of ‘Data.Traversable’ is redundant
      except perhaps to import instances from ‘Data.Traversable’
    To import instances alone, use: import Data.Traversable()
   |
99 | import Data.Traversable (Traversable)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Optional.hs:100:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
    |
100 | import Data.Monoid (Monoid(..))
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Optional.hs:101:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
    |
101 | import Data.Semigroup (Semigroup(..))
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Optional.hs:115:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad Optional’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
    |
115 |     return = Specific
    |     ^^^^^^^^^^^^^^^^^
