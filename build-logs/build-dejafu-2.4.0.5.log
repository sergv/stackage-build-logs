Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - dejafu-2.4.0.5 (lib) (first run)
Configuring library for dejafu-2.4.0.5...
Preprocessing library for dejafu-2.4.0.5...
Building library for dejafu-2.4.0.5...
[ 1 of 18] Compiling Test.DejaFu.Types

Test/DejaFu/Types.hs:37:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
37 | import           Data.Semigroup                       (Semigroup(..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 2 of 18] Compiling Test.DejaFu.Internal
[ 3 of 18] Compiling Test.DejaFu.Settings
[ 4 of 18] Compiling Test.DejaFu.Schedule
[ 5 of 18] Compiling Test.DejaFu.SCT.Internal.Weighted
[ 6 of 18] Compiling Test.DejaFu.Conc.Internal.STM
[ 7 of 18] Compiling Test.DejaFu.Conc.Internal.Common

Test/DejaFu/Conc/Internal/Common.hs:88:15: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
88 | instance (pty ~ Basic) => Functor (Program pty n) where
   |               ^

Test/DejaFu/Conc/Internal/Common.hs:91:15: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
91 | instance (pty ~ Basic) => Applicative (Program pty n) where
   |               ^

Test/DejaFu/Conc/Internal/Common.hs:97:15: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
97 | instance (pty ~ Basic) => Monad (Program pty n) where
   |               ^

Test/DejaFu/Conc/Internal/Common.hs:106:15: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
    |
106 | instance (pty ~ Basic) => Fail.MonadFail (Program pty n) where
    |               ^
[ 8 of 18] Compiling Test.DejaFu.Conc.Internal.Threading
[ 9 of 18] Compiling Test.DejaFu.Conc.Internal.Memory

Test/DejaFu/Conc/Internal/Memory.hs:31:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
31 | import           Data.Monoid                         ((<>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[10 of 18] Compiling Test.DejaFu.Conc.Internal

Test/DejaFu/Conc/Internal.hs:29:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
29 | import           Data.Monoid                         ((<>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[11 of 18] Compiling Test.DejaFu.Conc.Internal.Program

Test/DejaFu/Conc/Internal/Program.hs:30:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
30 | import           Control.Applicative                 (Applicative(..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Test/DejaFu/Conc/Internal/Program.hs:53:15: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
53 | instance (pty ~ Basic, IO.MonadIO n) => IO.MonadIO (Program pty n) where
   |               ^

Test/DejaFu/Conc/Internal/Program.hs:56:15: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
56 | instance (pty ~ Basic) => MonadTrans (Program pty) where
   |               ^

Test/DejaFu/Conc/Internal/Program.hs:59:15: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
59 | instance (pty ~ Basic) =>  Ca.MonadCatch (Program pty n) where
   |               ^

Test/DejaFu/Conc/Internal/Program.hs:62:15: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
62 | instance (pty ~ Basic) => Ca.MonadThrow (Program pty n) where
   |               ^

Test/DejaFu/Conc/Internal/Program.hs:65:15: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
65 | instance (pty ~ Basic) => Ca.MonadMask (Program pty n) where
   |               ^

Test/DejaFu/Conc/Internal/Program.hs:84:15: warning: [GHC-58520] [-Wtype-equality-requires-operators]
    The use of ‘~’ without TypeOperators
    will become an error in a future GHC release.
    Suggested fix: Perhaps you intended to use TypeOperators
   |
84 | instance (pty ~ Basic, Monad n) => C.MonadConc (Program pty n) where
   |               ^
[12 of 18] Compiling Test.DejaFu.Utils
[13 of 18] Compiling Test.DejaFu.SCT.Internal.DPOR

Test/DejaFu/SCT/Internal/DPOR.hs:146:38: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a lambda abstraction:
        Patterns of type ‘([ThreadId], Bool,
                           Map ThreadId ThreadAction)’ not matched:
            ([], _, _)
            ((_:_:_), _, _)
    |
146 |           (best, worst) = partition (\([t],_,_) -> t >= initialThread) todos
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[14 of 18] Compiling Test.DejaFu.Conc
[15 of 18] Compiling Test.DejaFu.SCT.Internal

Test/DejaFu/SCT/Internal.hs:29:1: warning: [-Wunused-imports]
    The import of ‘Test.DejaFu.Schedule’ is redundant
      except perhaps to import instances from ‘Test.DejaFu.Schedule’
    To import instances alone, use: import Test.DejaFu.Schedule()
   |
29 | import           Test.DejaFu.Schedule              (Scheduler(..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[16 of 18] Compiling Test.DejaFu.SCT
[17 of 18] Compiling Test.DejaFu.Refinement

Test/DejaFu/Refinement.hs:426:28: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a lambda abstraction:
        Patterns of type ‘(Either Condition (Maybe Condition, o),
                           Test.DejaFu.Types.Trace)’ not matched:
            ((Left _), _)
    |
426 |   pure . S.fromList $ map (\(Right a, _) -> a) results
    |                            ^^^^^^^^^^^^^^^^^^
[18 of 18] Compiling Test.DejaFu
