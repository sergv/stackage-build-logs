Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - amazonka-route53-2.0 (lib) (first run)
 - amazonka-route53-2.0 (test:amazonka-route53-test) (first run)
Configuring library for amazonka-route53-2.0...
Preprocessing library for amazonka-route53-2.0...
Building library for amazonka-route53-2.0...
[  1 of 131] Compiling Amazonka.Route53.Internal
[  2 of 131] Compiling Amazonka.Route53.Types.AccountLimitType
[  3 of 131] Compiling Amazonka.Route53.Types.AccountLimit
[  4 of 131] Compiling Amazonka.Route53.Types.AliasTarget
[  5 of 131] Compiling Amazonka.Route53.Types.ChangeAction
[  6 of 131] Compiling Amazonka.Route53.Types.ChangeStatus
[  7 of 131] Compiling Amazonka.Route53.Types.ChangeInfo
[  8 of 131] Compiling Amazonka.Route53.Types.CidrBlockSummary
[  9 of 131] Compiling Amazonka.Route53.Types.CidrCollection
[ 10 of 131] Compiling Amazonka.Route53.Types.CidrCollectionChangeAction
[ 11 of 131] Compiling Amazonka.Route53.Types.CidrCollectionChange
[ 12 of 131] Compiling Amazonka.Route53.Types.CidrRoutingConfig
[ 13 of 131] Compiling Amazonka.Route53.Types.CloudWatchRegion
[ 14 of 131] Compiling Amazonka.Route53.Types.AlarmIdentifier
[ 15 of 131] Compiling Amazonka.Route53.Types.CollectionSummary
[ 16 of 131] Compiling Amazonka.Route53.Types.ComparisonOperator
[ 17 of 131] Compiling Amazonka.Route53.Types.DNSSECStatus
[ 18 of 131] Compiling Amazonka.Route53.Types.DelegationSet
[ 19 of 131] Compiling Amazonka.Route53.Types.Dimension
[ 20 of 131] Compiling Amazonka.Route53.Types.GeoLocation
[ 21 of 131] Compiling Amazonka.Route53.Types.GeoLocationDetails
[ 22 of 131] Compiling Amazonka.Route53.Types.HealthCheckRegion
[ 23 of 131] Compiling Amazonka.Route53.Types.HealthCheckType
[ 24 of 131] Compiling Amazonka.Route53.Types.HostedZoneConfig
[ 25 of 131] Compiling Amazonka.Route53.Types.HostedZoneLimitType
[ 26 of 131] Compiling Amazonka.Route53.Types.HostedZoneLimit
[ 27 of 131] Compiling Amazonka.Route53.Types.HostedZoneOwner
[ 28 of 131] Compiling Amazonka.Route53.Types.HostedZoneSummary
[ 29 of 131] Compiling Amazonka.Route53.Types.InsufficientDataHealthStatus
[ 30 of 131] Compiling Amazonka.Route53.Types.HealthCheckConfig
[ 31 of 131] Compiling Amazonka.Route53.Types.KeySigningKey
[ 32 of 131] Compiling Amazonka.Route53.Types.LinkedService
[ 33 of 131] Compiling Amazonka.Route53.Types.HostedZone
[ 34 of 131] Compiling Amazonka.Route53.Types.LocationSummary
[ 35 of 131] Compiling Amazonka.Route53.Types.QueryLoggingConfig
[ 36 of 131] Compiling Amazonka.Route53.Types.RRType
[ 37 of 131] Compiling Amazonka.Route53.Types.ResettableElementName
[ 38 of 131] Compiling Amazonka.Route53.Types.ResourceRecord
[ 39 of 131] Compiling Amazonka.Route53.Types.ResourceRecordSetFailover
[ 40 of 131] Compiling Amazonka.Route53.Types.ResourceRecordSet
[ 41 of 131] Compiling Amazonka.Route53.Types.Change
[ 42 of 131] Compiling Amazonka.Route53.Types.ChangeBatch
[ 43 of 131] Compiling Amazonka.Route53.Types.ReusableDelegationSetLimitType
[ 44 of 131] Compiling Amazonka.Route53.Types.ReusableDelegationSetLimit
[ 45 of 131] Compiling Amazonka.Route53.Types.Statistic
[ 46 of 131] Compiling Amazonka.Route53.Types.CloudWatchAlarmConfiguration
[ 47 of 131] Compiling Amazonka.Route53.Types.HealthCheck
[ 48 of 131] Compiling Amazonka.Route53.Types.StatusReport
[ 49 of 131] Compiling Amazonka.Route53.Types.HealthCheckObservation
[ 50 of 131] Compiling Amazonka.Route53.Types.Tag
[ 51 of 131] Compiling Amazonka.Route53.Types.TagResourceType
[ 52 of 131] Compiling Amazonka.Route53.Types.ResourceTagSet
[ 53 of 131] Compiling Amazonka.Route53.Types.TrafficPolicy
[ 54 of 131] Compiling Amazonka.Route53.Types.TrafficPolicyInstance
[ 55 of 131] Compiling Amazonka.Route53.Types.TrafficPolicySummary
[ 56 of 131] Compiling Amazonka.Route53.Types.VPCRegion
[ 57 of 131] Compiling Amazonka.Route53.Types.VPC
[ 58 of 131] Compiling Amazonka.Route53.Types

gen/Amazonka/Route53/Types.hs:588:9: warning: [GHC-53633] [-Woverlapping-patterns]
    Pattern match is redundant
    In an equation for ‘check’:
        check e | Lens.has
                    (Core.hasCode "Throttling" Prelude.. Core.hasStatus 400) e = ...
    |
588 |       | Lens.has
    |         ^^^^^^^^...
[ 59 of 131] Compiling Amazonka.Route53.TestDNSAnswer

gen/Amazonka/Route53/TestDNSAnswer.hs:201:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type TestDNSAnswer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
201 | testDNSAnswer_hostedZoneId = Lens.lens (\TestDNSAnswer' {hostedZoneId} -> hostedZoneId) (\s@TestDNSAnswer' {} a -> s {hostedZoneId = a} :: TestDNSAnswer)
    |                                                                                                                       ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/TestDNSAnswer.hs:206:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {recordName = a} with type TestDNSAnswer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
206 | testDNSAnswer_recordName = Lens.lens (\TestDNSAnswer' {recordName} -> recordName) (\s@TestDNSAnswer' {} a -> s {recordName = a} :: TestDNSAnswer)
    |                                                                                                                 ^^^^^^^^^^^^^^

gen/Amazonka/Route53/TestDNSAnswer.hs:210:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {recordType = a} with type TestDNSAnswer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
210 | testDNSAnswer_recordType = Lens.lens (\TestDNSAnswer' {recordType} -> recordType) (\s@TestDNSAnswer' {} a -> s {recordType = a} :: TestDNSAnswer)
    |                                                                                                                 ^^^^^^^^^^^^^^

gen/Amazonka/Route53/TestDNSAnswer.hs:369:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {recordName = a} with type TestDNSAnswerResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
369 | testDNSAnswerResponse_recordName = Lens.lens (\TestDNSAnswerResponse' {recordName} -> recordName) (\s@TestDNSAnswerResponse' {} a -> s {recordName = a} :: TestDNSAnswerResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^^

gen/Amazonka/Route53/TestDNSAnswer.hs:373:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {recordType = a} with type TestDNSAnswerResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
373 | testDNSAnswerResponse_recordType = Lens.lens (\TestDNSAnswerResponse' {recordType} -> recordType) (\s@TestDNSAnswerResponse' {} a -> s {recordType = a} :: TestDNSAnswerResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^^
[ 60 of 131] Compiling Amazonka.Route53.ListVPCAssociationAuthorizations

gen/Amazonka/Route53/ListVPCAssociationAuthorizations.hs:126:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListVPCAssociationAuthorizations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
126 | listVPCAssociationAuthorizations_nextToken = Lens.lens (\ListVPCAssociationAuthorizations' {nextToken} -> nextToken) (\s@ListVPCAssociationAuthorizations' {} a -> s {nextToken = a} :: ListVPCAssociationAuthorizations)
    |                                                                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/Route53/ListVPCAssociationAuthorizations.hs:131:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type ListVPCAssociationAuthorizations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | listVPCAssociationAuthorizations_hostedZoneId = Lens.lens (\ListVPCAssociationAuthorizations' {hostedZoneId} -> hostedZoneId) (\s@ListVPCAssociationAuthorizations' {} a -> s {hostedZoneId = a} :: ListVPCAssociationAuthorizations)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListVPCAssociationAuthorizations.hs:292:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListVPCAssociationAuthorizationsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
292 | listVPCAssociationAuthorizationsResponse_nextToken = Lens.lens (\ListVPCAssociationAuthorizationsResponse' {nextToken} -> nextToken) (\s@ListVPCAssociationAuthorizationsResponse' {} a -> s {nextToken = a} :: ListVPCAssociationAuthorizationsResponse)
    |                                                                                                                                                                                               ^^^^^^^^^^^^^

gen/Amazonka/Route53/ListVPCAssociationAuthorizations.hs:300:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type ListVPCAssociationAuthorizationsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
300 | listVPCAssociationAuthorizationsResponse_hostedZoneId = Lens.lens (\ListVPCAssociationAuthorizationsResponse' {hostedZoneId} -> hostedZoneId) (\s@ListVPCAssociationAuthorizationsResponse' {} a -> s {hostedZoneId = a} :: ListVPCAssociationAuthorizationsResponse)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^
[ 61 of 131] Compiling Amazonka.Route53.ListTrafficPolicyVersions

gen/Amazonka/Route53/ListTrafficPolicyVersions.hs:133:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListTrafficPolicyVersions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
133 | listTrafficPolicyVersions_maxItems = Lens.lens (\ListTrafficPolicyVersions' {maxItems} -> maxItems) (\s@ListTrafficPolicyVersions' {} a -> s {maxItems = a} :: ListTrafficPolicyVersions)
    |                                                                                                                                               ^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyVersions.hs:145:197: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyVersionMarker = a} with type ListTrafficPolicyVersions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
145 | listTrafficPolicyVersions_trafficPolicyVersionMarker = Lens.lens (\ListTrafficPolicyVersions' {trafficPolicyVersionMarker} -> trafficPolicyVersionMarker) (\s@ListTrafficPolicyVersions' {} a -> s {trafficPolicyVersionMarker = a} :: ListTrafficPolicyVersions)
    |                                                                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyVersions.hs:150:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type ListTrafficPolicyVersions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
150 | listTrafficPolicyVersions_id = Lens.lens (\ListTrafficPolicyVersions' {id} -> id) (\s@ListTrafficPolicyVersions' {} a -> s {id = a} :: ListTrafficPolicyVersions)
    |                                                                                                                             ^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyVersions.hs:313:221: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyVersionMarker = a} with type ListTrafficPolicyVersionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
313 | listTrafficPolicyVersionsResponse_trafficPolicyVersionMarker = Lens.lens (\ListTrafficPolicyVersionsResponse' {trafficPolicyVersionMarker} -> trafficPolicyVersionMarker) (\s@ListTrafficPolicyVersionsResponse' {} a -> s {trafficPolicyVersionMarker = a} :: ListTrafficPolicyVersionsResponse)
    |                                                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyVersions.hs:318:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListTrafficPolicyVersionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
318 | listTrafficPolicyVersionsResponse_maxItems = Lens.lens (\ListTrafficPolicyVersionsResponse' {maxItems} -> maxItems) (\s@ListTrafficPolicyVersionsResponse' {} a -> s {maxItems = a} :: ListTrafficPolicyVersionsResponse)
    |                                                                                                                                                                       ^^^^^^^^^^^^
[ 62 of 131] Compiling Amazonka.Route53.ListTrafficPolicyInstancesByPolicy

gen/Amazonka/Route53/ListTrafficPolicyInstancesByPolicy.hs:222:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneIdMarker = a} with type ListTrafficPolicyInstancesByPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
222 | listTrafficPolicyInstancesByPolicy_hostedZoneIdMarker = Lens.lens (\ListTrafficPolicyInstancesByPolicy' {hostedZoneIdMarker} -> hostedZoneIdMarker) (\s@ListTrafficPolicyInstancesByPolicy' {} a -> s {hostedZoneIdMarker = a} :: ListTrafficPolicyInstancesByPolicy)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByPolicy.hs:232:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListTrafficPolicyInstancesByPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
232 | listTrafficPolicyInstancesByPolicy_maxItems = Lens.lens (\ListTrafficPolicyInstancesByPolicy' {maxItems} -> maxItems) (\s@ListTrafficPolicyInstancesByPolicy' {} a -> s {maxItems = a} :: ListTrafficPolicyInstancesByPolicy)
    |                                                                                                                                                                          ^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByPolicy.hs:246:239: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyInstanceNameMarker = a} with type ListTrafficPolicyInstancesByPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
246 | listTrafficPolicyInstancesByPolicy_trafficPolicyInstanceNameMarker = Lens.lens (\ListTrafficPolicyInstancesByPolicy' {trafficPolicyInstanceNameMarker} -> trafficPolicyInstanceNameMarker) (\s@ListTrafficPolicyInstancesByPolicy' {} a -> s {trafficPolicyInstanceNameMarker = a} :: ListTrafficPolicyInstancesByPolicy)
    |                                                                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByPolicy.hs:260:239: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyInstanceTypeMarker = a} with type ListTrafficPolicyInstancesByPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
260 | listTrafficPolicyInstancesByPolicy_trafficPolicyInstanceTypeMarker = Lens.lens (\ListTrafficPolicyInstancesByPolicy' {trafficPolicyInstanceTypeMarker} -> trafficPolicyInstanceTypeMarker) (\s@ListTrafficPolicyInstancesByPolicy' {} a -> s {trafficPolicyInstanceTypeMarker = a} :: ListTrafficPolicyInstancesByPolicy)
    |                                                                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByPolicy.hs:265:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyId = a} with type ListTrafficPolicyInstancesByPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
265 | listTrafficPolicyInstancesByPolicy_trafficPolicyId = Lens.lens (\ListTrafficPolicyInstancesByPolicy' {trafficPolicyId} -> trafficPolicyId) (\s@ListTrafficPolicyInstancesByPolicy' {} a -> s {trafficPolicyId = a} :: ListTrafficPolicyInstancesByPolicy)
    |                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByPolicy.hs:271:206: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyVersion = a} with type ListTrafficPolicyInstancesByPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
271 | listTrafficPolicyInstancesByPolicy_trafficPolicyVersion = Lens.lens (\ListTrafficPolicyInstancesByPolicy' {trafficPolicyVersion} -> trafficPolicyVersion) (\s@ListTrafficPolicyInstancesByPolicy' {} a -> s {trafficPolicyVersion = a} :: ListTrafficPolicyInstancesByPolicy)
    |                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByPolicy.hs:456:224: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneIdMarker = a} with type ListTrafficPolicyInstancesByPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
456 | listTrafficPolicyInstancesByPolicyResponse_hostedZoneIdMarker = Lens.lens (\ListTrafficPolicyInstancesByPolicyResponse' {hostedZoneIdMarker} -> hostedZoneIdMarker) (\s@ListTrafficPolicyInstancesByPolicyResponse' {} a -> s {hostedZoneIdMarker = a} :: ListTrafficPolicyInstancesByPolicyResponse)
    |                                                                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByPolicy.hs:462:263: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyInstanceNameMarker = a} with type ListTrafficPolicyInstancesByPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
462 | listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstanceNameMarker = Lens.lens (\ListTrafficPolicyInstancesByPolicyResponse' {trafficPolicyInstanceNameMarker} -> trafficPolicyInstanceNameMarker) (\s@ListTrafficPolicyInstancesByPolicyResponse' {} a -> s {trafficPolicyInstanceNameMarker = a} :: ListTrafficPolicyInstancesByPolicyResponse)
    |                                                                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByPolicy.hs:469:263: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyInstanceTypeMarker = a} with type ListTrafficPolicyInstancesByPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
469 | listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstanceTypeMarker = Lens.lens (\ListTrafficPolicyInstancesByPolicyResponse' {trafficPolicyInstanceTypeMarker} -> trafficPolicyInstanceTypeMarker) (\s@ListTrafficPolicyInstancesByPolicyResponse' {} a -> s {trafficPolicyInstanceTypeMarker = a} :: ListTrafficPolicyInstancesByPolicyResponse)
    |                                                                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByPolicy.hs:492:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListTrafficPolicyInstancesByPolicyResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
492 | listTrafficPolicyInstancesByPolicyResponse_maxItems = Lens.lens (\ListTrafficPolicyInstancesByPolicyResponse' {maxItems} -> maxItems) (\s@ListTrafficPolicyInstancesByPolicyResponse' {} a -> s {maxItems = a} :: ListTrafficPolicyInstancesByPolicyResponse)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^
[ 63 of 131] Compiling Amazonka.Route53.ListTrafficPolicyInstancesByHostedZone

gen/Amazonka/Route53/ListTrafficPolicyInstancesByHostedZone.hs:173:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListTrafficPolicyInstancesByHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
173 | listTrafficPolicyInstancesByHostedZone_maxItems = Lens.lens (\ListTrafficPolicyInstancesByHostedZone' {maxItems} -> maxItems) (\s@ListTrafficPolicyInstancesByHostedZone' {} a -> s {maxItems = a} :: ListTrafficPolicyInstancesByHostedZone)
    |                                                                                                                                                                                      ^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByHostedZone.hs:186:251: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyInstanceNameMarker = a} with type ListTrafficPolicyInstancesByHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
186 | listTrafficPolicyInstancesByHostedZone_trafficPolicyInstanceNameMarker = Lens.lens (\ListTrafficPolicyInstancesByHostedZone' {trafficPolicyInstanceNameMarker} -> trafficPolicyInstanceNameMarker) (\s@ListTrafficPolicyInstancesByHostedZone' {} a -> s {trafficPolicyInstanceNameMarker = a} :: ListTrafficPolicyInstancesByHostedZone)
    |                                                                                                                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByHostedZone.hs:199:251: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyInstanceTypeMarker = a} with type ListTrafficPolicyInstancesByHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
199 | listTrafficPolicyInstancesByHostedZone_trafficPolicyInstanceTypeMarker = Lens.lens (\ListTrafficPolicyInstancesByHostedZone' {trafficPolicyInstanceTypeMarker} -> trafficPolicyInstanceTypeMarker) (\s@ListTrafficPolicyInstancesByHostedZone' {} a -> s {trafficPolicyInstanceTypeMarker = a} :: ListTrafficPolicyInstancesByHostedZone)
    |                                                                                                                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByHostedZone.hs:204:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type ListTrafficPolicyInstancesByHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
204 | listTrafficPolicyInstancesByHostedZone_hostedZoneId = Lens.lens (\ListTrafficPolicyInstancesByHostedZone' {hostedZoneId} -> hostedZoneId) (\s@ListTrafficPolicyInstancesByHostedZone' {} a -> s {hostedZoneId = a} :: ListTrafficPolicyInstancesByHostedZone)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByHostedZone.hs:375:275: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyInstanceNameMarker = a} with type ListTrafficPolicyInstancesByHostedZoneResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
375 | listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstanceNameMarker = Lens.lens (\ListTrafficPolicyInstancesByHostedZoneResponse' {trafficPolicyInstanceNameMarker} -> trafficPolicyInstanceNameMarker) (\s@ListTrafficPolicyInstancesByHostedZoneResponse' {} a -> s {trafficPolicyInstanceNameMarker = a} :: ListTrafficPolicyInstancesByHostedZoneResponse)
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByHostedZone.hs:381:275: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyInstanceTypeMarker = a} with type ListTrafficPolicyInstancesByHostedZoneResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
381 | listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstanceTypeMarker = Lens.lens (\ListTrafficPolicyInstancesByHostedZoneResponse' {trafficPolicyInstanceTypeMarker} -> trafficPolicyInstanceTypeMarker) (\s@ListTrafficPolicyInstancesByHostedZoneResponse' {} a -> s {trafficPolicyInstanceTypeMarker = a} :: ListTrafficPolicyInstancesByHostedZoneResponse)
    |                                                                                                                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstancesByHostedZone.hs:406:206: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListTrafficPolicyInstancesByHostedZoneResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
406 | listTrafficPolicyInstancesByHostedZoneResponse_maxItems = Lens.lens (\ListTrafficPolicyInstancesByHostedZoneResponse' {maxItems} -> maxItems) (\s@ListTrafficPolicyInstancesByHostedZoneResponse' {} a -> s {maxItems = a} :: ListTrafficPolicyInstancesByHostedZoneResponse)
    |                                                                                                                                                                                                              ^^^^^^^^^^^^
[ 64 of 131] Compiling Amazonka.Route53.ListTrafficPolicyInstances

gen/Amazonka/Route53/ListTrafficPolicyInstances.hs:186:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneIdMarker = a} with type ListTrafficPolicyInstances is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
186 | listTrafficPolicyInstances_hostedZoneIdMarker = Lens.lens (\ListTrafficPolicyInstances' {hostedZoneIdMarker} -> hostedZoneIdMarker) (\s@ListTrafficPolicyInstances' {} a -> s {hostedZoneIdMarker = a} :: ListTrafficPolicyInstances)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstances.hs:196:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListTrafficPolicyInstances is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
196 | listTrafficPolicyInstances_maxItems = Lens.lens (\ListTrafficPolicyInstances' {maxItems} -> maxItems) (\s@ListTrafficPolicyInstances' {} a -> s {maxItems = a} :: ListTrafficPolicyInstances)
    |                                                                                                                                                  ^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstances.hs:209:215: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyInstanceNameMarker = a} with type ListTrafficPolicyInstances is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
209 | listTrafficPolicyInstances_trafficPolicyInstanceNameMarker = Lens.lens (\ListTrafficPolicyInstances' {trafficPolicyInstanceNameMarker} -> trafficPolicyInstanceNameMarker) (\s@ListTrafficPolicyInstances' {} a -> s {trafficPolicyInstanceNameMarker = a} :: ListTrafficPolicyInstances)
    |                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstances.hs:222:215: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyInstanceTypeMarker = a} with type ListTrafficPolicyInstances is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
222 | listTrafficPolicyInstances_trafficPolicyInstanceTypeMarker = Lens.lens (\ListTrafficPolicyInstances' {trafficPolicyInstanceTypeMarker} -> trafficPolicyInstanceTypeMarker) (\s@ListTrafficPolicyInstances' {} a -> s {trafficPolicyInstanceTypeMarker = a} :: ListTrafficPolicyInstances)
    |                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstances.hs:379:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneIdMarker = a} with type ListTrafficPolicyInstancesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
379 | listTrafficPolicyInstancesResponse_hostedZoneIdMarker = Lens.lens (\ListTrafficPolicyInstancesResponse' {hostedZoneIdMarker} -> hostedZoneIdMarker) (\s@ListTrafficPolicyInstancesResponse' {} a -> s {hostedZoneIdMarker = a} :: ListTrafficPolicyInstancesResponse)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstances.hs:385:239: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyInstanceNameMarker = a} with type ListTrafficPolicyInstancesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
385 | listTrafficPolicyInstancesResponse_trafficPolicyInstanceNameMarker = Lens.lens (\ListTrafficPolicyInstancesResponse' {trafficPolicyInstanceNameMarker} -> trafficPolicyInstanceNameMarker) (\s@ListTrafficPolicyInstancesResponse' {} a -> s {trafficPolicyInstanceNameMarker = a} :: ListTrafficPolicyInstancesResponse)
    |                                                                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstances.hs:392:239: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyInstanceTypeMarker = a} with type ListTrafficPolicyInstancesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
392 | listTrafficPolicyInstancesResponse_trafficPolicyInstanceTypeMarker = Lens.lens (\ListTrafficPolicyInstancesResponse' {trafficPolicyInstanceTypeMarker} -> trafficPolicyInstanceTypeMarker) (\s@ListTrafficPolicyInstancesResponse' {} a -> s {trafficPolicyInstanceTypeMarker = a} :: ListTrafficPolicyInstancesResponse)
    |                                                                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicyInstances.hs:415:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListTrafficPolicyInstancesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
415 | listTrafficPolicyInstancesResponse_maxItems = Lens.lens (\ListTrafficPolicyInstancesResponse' {maxItems} -> maxItems) (\s@ListTrafficPolicyInstancesResponse' {} a -> s {maxItems = a} :: ListTrafficPolicyInstancesResponse)
    |                                                                                                                                                                          ^^^^^^^^^^^^
[ 65 of 131] Compiling Amazonka.Route53.ListTrafficPolicies

gen/Amazonka/Route53/ListTrafficPolicies.hs:125:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListTrafficPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
125 | listTrafficPolicies_maxItems = Lens.lens (\ListTrafficPolicies' {maxItems} -> maxItems) (\s@ListTrafficPolicies' {} a -> s {maxItems = a} :: ListTrafficPolicies)
    |                                                                                                                             ^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicies.hs:137:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyIdMarker = a} with type ListTrafficPolicies is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | listTrafficPolicies_trafficPolicyIdMarker = Lens.lens (\ListTrafficPolicies' {trafficPolicyIdMarker} -> trafficPolicyIdMarker) (\s@ListTrafficPolicies' {} a -> s {trafficPolicyIdMarker = a} :: ListTrafficPolicies)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicies.hs:280:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyIdMarker = a} with type ListTrafficPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
280 | listTrafficPoliciesResponse_trafficPolicyIdMarker = Lens.lens (\ListTrafficPoliciesResponse' {trafficPolicyIdMarker} -> trafficPolicyIdMarker) (\s@ListTrafficPoliciesResponse' {} a -> s {trafficPolicyIdMarker = a} :: ListTrafficPoliciesResponse)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTrafficPolicies.hs:285:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListTrafficPoliciesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
285 | listTrafficPoliciesResponse_maxItems = Lens.lens (\ListTrafficPoliciesResponse' {maxItems} -> maxItems) (\s@ListTrafficPoliciesResponse' {} a -> s {maxItems = a} :: ListTrafficPoliciesResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^
[ 66 of 131] Compiling Amazonka.Route53.ListTagsForResources

gen/Amazonka/Route53/ListTagsForResources.hs:107:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceType = a} with type ListTagsForResources is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
107 | listTagsForResources_resourceType = Lens.lens (\ListTagsForResources' {resourceType} -> resourceType) (\s@ListTagsForResources' {} a -> s {resourceType = a} :: ListTagsForResources)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^
[ 67 of 131] Compiling Amazonka.Route53.ListTagsForResource

gen/Amazonka/Route53/ListTagsForResource.hs:104:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceType = a} with type ListTagsForResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | listTagsForResource_resourceType = Lens.lens (\ListTagsForResource' {resourceType} -> resourceType) (\s@ListTagsForResource' {} a -> s {resourceType = a} :: ListTagsForResource)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListTagsForResource.hs:108:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceId = a} with type ListTagsForResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | listTagsForResource_resourceId = Lens.lens (\ListTagsForResource' {resourceId} -> resourceId) (\s@ListTagsForResource' {} a -> s {resourceId = a} :: ListTagsForResource)
    |                                                                                                                                   ^^^^^^^^^^^^^^
[ 68 of 131] Compiling Amazonka.Route53.ListReusableDelegationSets

gen/Amazonka/Route53/ListReusableDelegationSets.hs:121:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListReusableDelegationSets is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
121 | listReusableDelegationSets_marker = Lens.lens (\ListReusableDelegationSets' {marker} -> marker) (\s@ListReusableDelegationSets' {} a -> s {marker = a} :: ListReusableDelegationSets)
    |                                                                                                                                            ^^^^^^^^^^

gen/Amazonka/Route53/ListReusableDelegationSets.hs:127:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListReusableDelegationSets is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | listReusableDelegationSets_maxItems = Lens.lens (\ListReusableDelegationSets' {maxItems} -> maxItems) (\s@ListReusableDelegationSets' {} a -> s {maxItems = a} :: ListReusableDelegationSets)
    |                                                                                                                                                  ^^^^^^^^^^^^

gen/Amazonka/Route53/ListReusableDelegationSets.hs:278:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListReusableDelegationSetsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
278 | listReusableDelegationSetsResponse_marker = Lens.lens (\ListReusableDelegationSetsResponse' {marker} -> marker) (\s@ListReusableDelegationSetsResponse' {} a -> s {marker = a} :: ListReusableDelegationSetsResponse)
    |                                                                                                                                                                    ^^^^^^^^^^

gen/Amazonka/Route53/ListReusableDelegationSets.hs:288:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListReusableDelegationSetsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
288 | listReusableDelegationSetsResponse_maxItems = Lens.lens (\ListReusableDelegationSetsResponse' {maxItems} -> maxItems) (\s@ListReusableDelegationSetsResponse' {} a -> s {maxItems = a} :: ListReusableDelegationSetsResponse)
    |                                                                                                                                                                          ^^^^^^^^^^^^
[ 69 of 131] Compiling Amazonka.Route53.ListResourceRecordSets

gen/Amazonka/Route53/ListResourceRecordSets.hs:260:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListResourceRecordSets is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
260 | listResourceRecordSets_maxItems = Lens.lens (\ListResourceRecordSets' {maxItems} -> maxItems) (\s@ListResourceRecordSets' {} a -> s {maxItems = a} :: ListResourceRecordSets)
    |                                                                                                                                      ^^^^^^^^^^^^

gen/Amazonka/Route53/ListResourceRecordSets.hs:311:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type ListResourceRecordSets is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
311 | listResourceRecordSets_hostedZoneId = Lens.lens (\ListResourceRecordSets' {hostedZoneId} -> hostedZoneId) (\s@ListResourceRecordSets' {} a -> s {hostedZoneId = a} :: ListResourceRecordSets)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListResourceRecordSets.hs:543:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListResourceRecordSetsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
543 | listResourceRecordSetsResponse_maxItems = Lens.lens (\ListResourceRecordSetsResponse' {maxItems} -> maxItems) (\s@ListResourceRecordSetsResponse' {} a -> s {maxItems = a} :: ListResourceRecordSetsResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^
[ 70 of 131] Compiling Amazonka.Route53.ListQueryLoggingConfigs

gen/Amazonka/Route53/ListQueryLoggingConfigs.hs:147:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type ListQueryLoggingConfigs is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
147 | listQueryLoggingConfigs_hostedZoneId = Lens.lens (\ListQueryLoggingConfigs' {hostedZoneId} -> hostedZoneId) (\s@ListQueryLoggingConfigs' {} a -> s {hostedZoneId = a} :: ListQueryLoggingConfigs)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListQueryLoggingConfigs.hs:171:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListQueryLoggingConfigs is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
171 | listQueryLoggingConfigs_nextToken = Lens.lens (\ListQueryLoggingConfigs' {nextToken} -> nextToken) (\s@ListQueryLoggingConfigs' {} a -> s {nextToken = a} :: ListQueryLoggingConfigs)
    |                                                                                                                                            ^^^^^^^^^^^^^

gen/Amazonka/Route53/ListQueryLoggingConfigs.hs:309:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListQueryLoggingConfigsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
309 | listQueryLoggingConfigsResponse_nextToken = Lens.lens (\ListQueryLoggingConfigsResponse' {nextToken} -> nextToken) (\s@ListQueryLoggingConfigsResponse' {} a -> s {nextToken = a} :: ListQueryLoggingConfigsResponse)
    |                                                                                                                                                                    ^^^^^^^^^^^^^
[ 71 of 131] Compiling Amazonka.Route53.ListHostedZonesByVPC

gen/Amazonka/Route53/ListHostedZonesByVPC.hs:163:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListHostedZonesByVPC is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
163 | listHostedZonesByVPC_maxItems = Lens.lens (\ListHostedZonesByVPC' {maxItems} -> maxItems) (\s@ListHostedZonesByVPC' {} a -> s {maxItems = a} :: ListHostedZonesByVPC)
    |                                                                                                                                ^^^^^^^^^^^^

gen/Amazonka/Route53/ListHostedZonesByVPC.hs:175:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListHostedZonesByVPC is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
175 | listHostedZonesByVPC_nextToken = Lens.lens (\ListHostedZonesByVPC' {nextToken} -> nextToken) (\s@ListHostedZonesByVPC' {} a -> s {nextToken = a} :: ListHostedZonesByVPC)
    |                                                                                                                                   ^^^^^^^^^^^^^

gen/Amazonka/Route53/ListHostedZonesByVPC.hs:179:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {vPCId = a} with type ListHostedZonesByVPC is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
179 | listHostedZonesByVPC_vPCId = Lens.lens (\ListHostedZonesByVPC' {vPCId} -> vPCId) (\s@ListHostedZonesByVPC' {} a -> s {vPCId = a} :: ListHostedZonesByVPC)
    |                                                                                                                       ^^^^^^^^^

gen/Amazonka/Route53/ListHostedZonesByVPC.hs:184:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {vPCRegion = a} with type ListHostedZonesByVPC is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
184 | listHostedZonesByVPC_vPCRegion = Lens.lens (\ListHostedZonesByVPC' {vPCRegion} -> vPCRegion) (\s@ListHostedZonesByVPC' {} a -> s {vPCRegion = a} :: ListHostedZonesByVPC)
    |                                                                                                                                   ^^^^^^^^^^^^^

gen/Amazonka/Route53/ListHostedZonesByVPC.hs:294:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListHostedZonesByVPCResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
294 | listHostedZonesByVPCResponse_nextToken = Lens.lens (\ListHostedZonesByVPCResponse' {nextToken} -> nextToken) (\s@ListHostedZonesByVPCResponse' {} a -> s {nextToken = a} :: ListHostedZonesByVPCResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^

gen/Amazonka/Route53/ListHostedZonesByVPC.hs:310:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListHostedZonesByVPCResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
310 | listHostedZonesByVPCResponse_maxItems = Lens.lens (\ListHostedZonesByVPCResponse' {maxItems} -> maxItems) (\s@ListHostedZonesByVPCResponse' {} a -> s {maxItems = a} :: ListHostedZonesByVPCResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^
[ 72 of 131] Compiling Amazonka.Route53.ListHostedZonesByName

gen/Amazonka/Route53/ListHostedZonesByName.hs:197:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {dNSName = a} with type ListHostedZonesByName is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
197 | listHostedZonesByName_dNSName = Lens.lens (\ListHostedZonesByName' {dNSName} -> dNSName) (\s@ListHostedZonesByName' {} a -> s {dNSName = a} :: ListHostedZonesByName)
    |                                                                                                                                ^^^^^^^^^^^

gen/Amazonka/Route53/ListHostedZonesByName.hs:209:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type ListHostedZonesByName is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
209 | listHostedZonesByName_hostedZoneId = Lens.lens (\ListHostedZonesByName' {hostedZoneId} -> hostedZoneId) (\s@ListHostedZonesByName' {} a -> s {hostedZoneId = a} :: ListHostedZonesByName)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListHostedZonesByName.hs:217:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListHostedZonesByName is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
217 | listHostedZonesByName_maxItems = Lens.lens (\ListHostedZonesByName' {maxItems} -> maxItems) (\s@ListHostedZonesByName' {} a -> s {maxItems = a} :: ListHostedZonesByName)
    |                                                                                                                                   ^^^^^^^^^^^^

gen/Amazonka/Route53/ListHostedZonesByName.hs:385:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {dNSName = a} with type ListHostedZonesByNameResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
385 | listHostedZonesByNameResponse_dNSName = Lens.lens (\ListHostedZonesByNameResponse' {dNSName} -> dNSName) (\s@ListHostedZonesByNameResponse' {} a -> s {dNSName = a} :: ListHostedZonesByNameResponse)
    |                                                                                                                                                        ^^^^^^^^^^^

gen/Amazonka/Route53/ListHostedZonesByName.hs:390:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type ListHostedZonesByNameResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
390 | listHostedZonesByNameResponse_hostedZoneId = Lens.lens (\ListHostedZonesByNameResponse' {hostedZoneId} -> hostedZoneId) (\s@ListHostedZonesByNameResponse' {} a -> s {hostedZoneId = a} :: ListHostedZonesByNameResponse)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListHostedZonesByName.hs:431:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListHostedZonesByNameResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
431 | listHostedZonesByNameResponse_maxItems = Lens.lens (\ListHostedZonesByNameResponse' {maxItems} -> maxItems) (\s@ListHostedZonesByNameResponse' {} a -> s {maxItems = a} :: ListHostedZonesByNameResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^
[ 73 of 131] Compiling Amazonka.Route53.ListHostedZones

gen/Amazonka/Route53/ListHostedZones.hs:147:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListHostedZones is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
147 | listHostedZones_marker = Lens.lens (\ListHostedZones' {marker} -> marker) (\s@ListHostedZones' {} a -> s {marker = a} :: ListHostedZones)
    |                                                                                                           ^^^^^^^^^^

gen/Amazonka/Route53/ListHostedZones.hs:155:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListHostedZones is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
155 | listHostedZones_maxItems = Lens.lens (\ListHostedZones' {maxItems} -> maxItems) (\s@ListHostedZones' {} a -> s {maxItems = a} :: ListHostedZones)
    |                                                                                                                 ^^^^^^^^^^^^

gen/Amazonka/Route53/ListHostedZones.hs:308:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListHostedZonesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
308 | listHostedZonesResponse_marker = Lens.lens (\ListHostedZonesResponse' {marker} -> marker) (\s@ListHostedZonesResponse' {} a -> s {marker = a} :: ListHostedZonesResponse)
    |                                                                                                                                   ^^^^^^^^^^

gen/Amazonka/Route53/ListHostedZones.hs:337:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListHostedZonesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
337 | listHostedZonesResponse_maxItems = Lens.lens (\ListHostedZonesResponse' {maxItems} -> maxItems) (\s@ListHostedZonesResponse' {} a -> s {maxItems = a} :: ListHostedZonesResponse)
    |                                                                                                                                         ^^^^^^^^^^^^
[ 74 of 131] Compiling Amazonka.Route53.ListHealthChecks

gen/Amazonka/Route53/ListHealthChecks.hs:124:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListHealthChecks is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
124 | listHealthChecks_marker = Lens.lens (\ListHealthChecks' {marker} -> marker) (\s@ListHealthChecks' {} a -> s {marker = a} :: ListHealthChecks)
    |                                                                                                              ^^^^^^^^^^

gen/Amazonka/Route53/ListHealthChecks.hs:131:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListHealthChecks is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | listHealthChecks_maxItems = Lens.lens (\ListHealthChecks' {maxItems} -> maxItems) (\s@ListHealthChecks' {} a -> s {maxItems = a} :: ListHealthChecks)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/Route53/ListHealthChecks.hs:302:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {marker = a} with type ListHealthChecksResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
302 | listHealthChecksResponse_marker = Lens.lens (\ListHealthChecksResponse' {marker} -> marker) (\s@ListHealthChecksResponse' {} a -> s {marker = a} :: ListHealthChecksResponse)
    |                                                                                                                                      ^^^^^^^^^^

gen/Amazonka/Route53/ListHealthChecks.hs:314:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListHealthChecksResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
314 | listHealthChecksResponse_maxItems = Lens.lens (\ListHealthChecksResponse' {maxItems} -> maxItems) (\s@ListHealthChecksResponse' {} a -> s {maxItems = a} :: ListHealthChecksResponse)
    |                                                                                                                                            ^^^^^^^^^^^^
[ 75 of 131] Compiling Amazonka.Route53.ListGeoLocations

gen/Amazonka/Route53/ListGeoLocations.hs:162:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListGeoLocations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
162 | listGeoLocations_maxItems = Lens.lens (\ListGeoLocations' {maxItems} -> maxItems) (\s@ListGeoLocations' {} a -> s {maxItems = a} :: ListGeoLocations)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/Route53/ListGeoLocations.hs:376:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {maxItems = a} with type ListGeoLocationsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
376 | listGeoLocationsResponse_maxItems = Lens.lens (\ListGeoLocationsResponse' {maxItems} -> maxItems) (\s@ListGeoLocationsResponse' {} a -> s {maxItems = a} :: ListGeoLocationsResponse)
    |                                                                                                                                            ^^^^^^^^^^^^
[ 76 of 131] Compiling Amazonka.Route53.ListCidrLocations

gen/Amazonka/Route53/ListCidrLocations.hs:112:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListCidrLocations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | listCidrLocations_nextToken = Lens.lens (\ListCidrLocations' {nextToken} -> nextToken) (\s@ListCidrLocations' {} a -> s {nextToken = a} :: ListCidrLocations)
    |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/Route53/ListCidrLocations.hs:116:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {collectionId = a} with type ListCidrLocations is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | listCidrLocations_collectionId = Lens.lens (\ListCidrLocations' {collectionId} -> collectionId) (\s@ListCidrLocations' {} a -> s {collectionId = a} :: ListCidrLocations)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListCidrLocations.hs:246:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListCidrLocationsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
246 | listCidrLocationsResponse_nextToken = Lens.lens (\ListCidrLocationsResponse' {nextToken} -> nextToken) (\s@ListCidrLocationsResponse' {} a -> s {nextToken = a} :: ListCidrLocationsResponse)
    |                                                                                                                                                  ^^^^^^^^^^^^^
[ 77 of 131] Compiling Amazonka.Route53.ListCidrCollections

gen/Amazonka/Route53/ListCidrCollections.hs:101:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListCidrCollections is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | listCidrCollections_nextToken = Lens.lens (\ListCidrCollections' {nextToken} -> nextToken) (\s@ListCidrCollections' {} a -> s {nextToken = a} :: ListCidrCollections)
    |                                                                                                                                ^^^^^^^^^^^^^

gen/Amazonka/Route53/ListCidrCollections.hs:222:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListCidrCollectionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
222 | listCidrCollectionsResponse_nextToken = Lens.lens (\ListCidrCollectionsResponse' {nextToken} -> nextToken) (\s@ListCidrCollectionsResponse' {} a -> s {nextToken = a} :: ListCidrCollectionsResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^
[ 78 of 131] Compiling Amazonka.Route53.ListCidrBlocks

gen/Amazonka/Route53/ListCidrBlocks.hs:100:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {locationName = a} with type ListCidrBlocks is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | listCidrBlocks_locationName = Lens.lens (\ListCidrBlocks' {locationName} -> locationName) (\s@ListCidrBlocks' {} a -> s {locationName = a} :: ListCidrBlocks)
    |                                                                                                                          ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListCidrBlocks.hs:109:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListCidrBlocks is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | listCidrBlocks_nextToken = Lens.lens (\ListCidrBlocks' {nextToken} -> nextToken) (\s@ListCidrBlocks' {} a -> s {nextToken = a} :: ListCidrBlocks)
    |                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/Route53/ListCidrBlocks.hs:113:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {collectionId = a} with type ListCidrBlocks is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | listCidrBlocks_collectionId = Lens.lens (\ListCidrBlocks' {collectionId} -> collectionId) (\s@ListCidrBlocks' {} a -> s {collectionId = a} :: ListCidrBlocks)
    |                                                                                                                          ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ListCidrBlocks.hs:244:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListCidrBlocksResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
244 | listCidrBlocksResponse_nextToken = Lens.lens (\ListCidrBlocksResponse' {nextToken} -> nextToken) (\s@ListCidrBlocksResponse' {} a -> s {nextToken = a} :: ListCidrBlocksResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^
[ 79 of 131] Compiling Amazonka.Route53.GetTrafficPolicyInstanceCount
[ 80 of 131] Compiling Amazonka.Route53.GetTrafficPolicyInstance

gen/Amazonka/Route53/GetTrafficPolicyInstance.hs:89:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetTrafficPolicyInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
89 | getTrafficPolicyInstance_id = Lens.lens (\GetTrafficPolicyInstance' {id} -> id) (\s@GetTrafficPolicyInstance' {} a -> s {id = a} :: GetTrafficPolicyInstance)
   |                                                                                                                          ^^^^^^
[ 81 of 131] Compiling Amazonka.Route53.GetTrafficPolicy

gen/Amazonka/Route53/GetTrafficPolicy.hs:90:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetTrafficPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | getTrafficPolicy_id = Lens.lens (\GetTrafficPolicy' {id} -> id) (\s@GetTrafficPolicy' {} a -> s {id = a} :: GetTrafficPolicy)
   |                                                                                                  ^^^^^^

gen/Amazonka/Route53/GetTrafficPolicy.hs:95:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {version = a} with type GetTrafficPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
95 | getTrafficPolicy_version = Lens.lens (\GetTrafficPolicy' {version} -> version) (\s@GetTrafficPolicy' {} a -> s {version = a} :: GetTrafficPolicy)
   |                                                                                                                 ^^^^^^^^^^^
[ 82 of 131] Compiling Amazonka.Route53.GetReusableDelegationSetLimit

gen/Amazonka/Route53/GetReusableDelegationSetLimit.hs:103:145: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {type' = a} with type GetReusableDelegationSetLimit is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | getReusableDelegationSetLimit_type = Lens.lens (\GetReusableDelegationSetLimit' {type'} -> type') (\s@GetReusableDelegationSetLimit' {} a -> s {type' = a} :: GetReusableDelegationSetLimit)
    |                                                                                                                                                 ^^^^^^^^^
[ 83 of 131] Compiling Amazonka.Route53.GetReusableDelegationSet

gen/Amazonka/Route53/GetReusableDelegationSet.hs:81:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetReusableDelegationSet is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
81 | getReusableDelegationSet_id = Lens.lens (\GetReusableDelegationSet' {id} -> id) (\s@GetReusableDelegationSet' {} a -> s {id = a} :: GetReusableDelegationSet)
   |                                                                                                                          ^^^^^^
[ 84 of 131] Compiling Amazonka.Route53.GetQueryLoggingConfig

gen/Amazonka/Route53/GetQueryLoggingConfig.hs:83:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetQueryLoggingConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
83 | getQueryLoggingConfig_id = Lens.lens (\GetQueryLoggingConfig' {id} -> id) (\s@GetQueryLoggingConfig' {} a -> s {id = a} :: GetQueryLoggingConfig)
   |                                                                                                                 ^^^^^^
[ 85 of 131] Compiling Amazonka.Route53.GetHostedZoneLimit

gen/Amazonka/Route53/GetHostedZoneLimit.hs:113:112: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {type' = a} with type GetHostedZoneLimit is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | getHostedZoneLimit_type = Lens.lens (\GetHostedZoneLimit' {type'} -> type') (\s@GetHostedZoneLimit' {} a -> s {type' = a} :: GetHostedZoneLimit)
    |                                                                                                                ^^^^^^^^^

gen/Amazonka/Route53/GetHostedZoneLimit.hs:117:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type GetHostedZoneLimit is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
117 | getHostedZoneLimit_hostedZoneId = Lens.lens (\GetHostedZoneLimit' {hostedZoneId} -> hostedZoneId) (\s@GetHostedZoneLimit' {} a -> s {hostedZoneId = a} :: GetHostedZoneLimit)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^
[ 86 of 131] Compiling Amazonka.Route53.GetHostedZoneCount
[ 87 of 131] Compiling Amazonka.Route53.GetHostedZone

gen/Amazonka/Route53/GetHostedZone.hs:79:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
79 | getHostedZone_id = Lens.lens (\GetHostedZone' {id} -> id) (\s@GetHostedZone' {} a -> s {id = a} :: GetHostedZone)
   |                                                                                         ^^^^^^
[ 88 of 131] Compiling Amazonka.Route53.GetHealthCheckStatus

gen/Amazonka/Route53/GetHealthCheckStatus.hs:105:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {healthCheckId = a} with type GetHealthCheckStatus is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
105 | getHealthCheckStatus_healthCheckId = Lens.lens (\GetHealthCheckStatus' {healthCheckId} -> healthCheckId) (\s@GetHealthCheckStatus' {} a -> s {healthCheckId = a} :: GetHealthCheckStatus)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^
[ 89 of 131] Compiling Amazonka.Route53.GetHealthCheckLastFailureReason

gen/Amazonka/Route53/GetHealthCheckLastFailureReason.hs:101:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {healthCheckId = a} with type GetHealthCheckLastFailureReason is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | getHealthCheckLastFailureReason_healthCheckId = Lens.lens (\GetHealthCheckLastFailureReason' {healthCheckId} -> healthCheckId) (\s@GetHealthCheckLastFailureReason' {} a -> s {healthCheckId = a} :: GetHealthCheckLastFailureReason)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^^^
[ 90 of 131] Compiling Amazonka.Route53.GetHealthCheckCount
[ 91 of 131] Compiling Amazonka.Route53.GetHealthCheck

gen/Amazonka/Route53/GetHealthCheck.hs:86:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {healthCheckId = a} with type GetHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
86 | getHealthCheck_healthCheckId = Lens.lens (\GetHealthCheck' {healthCheckId} -> healthCheckId) (\s@GetHealthCheck' {} a -> s {healthCheckId = a} :: GetHealthCheck)
   |                                                                                                                             ^^^^^^^^^^^^^^^^^
[ 92 of 131] Compiling Amazonka.Route53.GetGeoLocation

gen/Amazonka/Route53/GetGeoLocation.hs:171:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {continentCode = a} with type GetGeoLocation is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
171 | getGeoLocation_continentCode = Lens.lens (\GetGeoLocation' {continentCode} -> continentCode) (\s@GetGeoLocation' {} a -> s {continentCode = a} :: GetGeoLocation)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/GetGeoLocation.hs:176:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {countryCode = a} with type GetGeoLocation is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
176 | getGeoLocation_countryCode = Lens.lens (\GetGeoLocation' {countryCode} -> countryCode) (\s@GetGeoLocation' {} a -> s {countryCode = a} :: GetGeoLocation)
    |                                                                                                                       ^^^^^^^^^^^^^^^

gen/Amazonka/Route53/GetGeoLocation.hs:186:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subdivisionCode = a} with type GetGeoLocation is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
186 | getGeoLocation_subdivisionCode = Lens.lens (\GetGeoLocation' {subdivisionCode} -> subdivisionCode) (\s@GetGeoLocation' {} a -> s {subdivisionCode = a} :: GetGeoLocation)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^^^^
[ 93 of 131] Compiling Amazonka.Route53.GetDNSSEC

gen/Amazonka/Route53/GetDNSSEC.hs:77:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type GetDNSSEC is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
77 | getDNSSEC_hostedZoneId = Lens.lens (\GetDNSSEC' {hostedZoneId} -> hostedZoneId) (\s@GetDNSSEC' {} a -> s {hostedZoneId = a} :: GetDNSSEC)
   |                                                                                                           ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/GetDNSSEC.hs:160:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type GetDNSSECResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
160 | getDNSSECResponse_status = Lens.lens (\GetDNSSECResponse' {status} -> status) (\s@GetDNSSECResponse' {} a -> s {status = a} :: GetDNSSECResponse)
    |                                                                                                                 ^^^^^^^^^^
[ 94 of 131] Compiling Amazonka.Route53.GetCheckerIpRanges
[ 95 of 131] Compiling Amazonka.Route53.GetChange

gen/Amazonka/Route53/GetChange.hs:90:77: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type GetChange is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | getChange_id = Lens.lens (\GetChange' {id} -> id) (\s@GetChange' {} a -> s {id = a} :: GetChange)
   |                                                                             ^^^^^^
[ 96 of 131] Compiling Amazonka.Route53.GetAccountLimit

gen/Amazonka/Route53/GetAccountLimit.hs:145:103: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {type' = a} with type GetAccountLimit is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
145 | getAccountLimit_type = Lens.lens (\GetAccountLimit' {type'} -> type') (\s@GetAccountLimit' {} a -> s {type' = a} :: GetAccountLimit)
    |                                                                                                       ^^^^^^^^^
[ 97 of 131] Compiling Amazonka.Route53.EnableHostedZoneDNSSEC

gen/Amazonka/Route53/EnableHostedZoneDNSSEC.hs:78:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type EnableHostedZoneDNSSEC is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
78 | enableHostedZoneDNSSEC_hostedZoneId = Lens.lens (\EnableHostedZoneDNSSEC' {hostedZoneId} -> hostedZoneId) (\s@EnableHostedZoneDNSSEC' {} a -> s {hostedZoneId = a} :: EnableHostedZoneDNSSEC)
   |                                                                                                                                                  ^^^^^^^^^^^^^^^^
[ 98 of 131] Compiling Amazonka.Route53.DisassociateVPCFromHostedZone

gen/Amazonka/Route53/DisassociateVPCFromHostedZone.hs:138:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {comment = a} with type DisassociateVPCFromHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | disassociateVPCFromHostedZone_comment = Lens.lens (\DisassociateVPCFromHostedZone' {comment} -> comment) (\s@DisassociateVPCFromHostedZone' {} a -> s {comment = a} :: DisassociateVPCFromHostedZone)
    |                                                                                                                                                        ^^^^^^^^^^^

gen/Amazonka/Route53/DisassociateVPCFromHostedZone.hs:143:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type DisassociateVPCFromHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
143 | disassociateVPCFromHostedZone_hostedZoneId = Lens.lens (\DisassociateVPCFromHostedZone' {hostedZoneId} -> hostedZoneId) (\s@DisassociateVPCFromHostedZone' {} a -> s {hostedZoneId = a} :: DisassociateVPCFromHostedZone)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^
[ 99 of 131] Compiling Amazonka.Route53.DisableHostedZoneDNSSEC

gen/Amazonka/Route53/DisableHostedZoneDNSSEC.hs:80:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type DisableHostedZoneDNSSEC is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
80 | disableHostedZoneDNSSEC_hostedZoneId = Lens.lens (\DisableHostedZoneDNSSEC' {hostedZoneId} -> hostedZoneId) (\s@DisableHostedZoneDNSSEC' {} a -> s {hostedZoneId = a} :: DisableHostedZoneDNSSEC)
   |                                                                                                                                                     ^^^^^^^^^^^^^^^^
[100 of 131] Compiling Amazonka.Route53.DeleteVPCAssociationAuthorization

gen/Amazonka/Route53/DeleteVPCAssociationAuthorization.hs:114:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type DeleteVPCAssociationAuthorization is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | deleteVPCAssociationAuthorization_hostedZoneId = Lens.lens (\DeleteVPCAssociationAuthorization' {hostedZoneId} -> hostedZoneId) (\s@DeleteVPCAssociationAuthorization' {} a -> s {hostedZoneId = a} :: DeleteVPCAssociationAuthorization)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^
[101 of 131] Compiling Amazonka.Route53.DeleteTrafficPolicyInstance

gen/Amazonka/Route53/DeleteTrafficPolicyInstance.hs:92:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteTrafficPolicyInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | deleteTrafficPolicyInstance_id = Lens.lens (\DeleteTrafficPolicyInstance' {id} -> id) (\s@DeleteTrafficPolicyInstance' {} a -> s {id = a} :: DeleteTrafficPolicyInstance)
   |                                                                                                                                   ^^^^^^
[102 of 131] Compiling Amazonka.Route53.DeleteTrafficPolicy

gen/Amazonka/Route53/DeleteTrafficPolicy.hs:99:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteTrafficPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | deleteTrafficPolicy_id = Lens.lens (\DeleteTrafficPolicy' {id} -> id) (\s@DeleteTrafficPolicy' {} a -> s {id = a} :: DeleteTrafficPolicy)
   |                                                                                                           ^^^^^^

gen/Amazonka/Route53/DeleteTrafficPolicy.hs:103:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {version = a} with type DeleteTrafficPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | deleteTrafficPolicy_version = Lens.lens (\DeleteTrafficPolicy' {version} -> version) (\s@DeleteTrafficPolicy' {} a -> s {version = a} :: DeleteTrafficPolicy)
    |                                                                                                                          ^^^^^^^^^^^
[103 of 131] Compiling Amazonka.Route53.DeleteReusableDelegationSet

gen/Amazonka/Route53/DeleteReusableDelegationSet.hs:85:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteReusableDelegationSet is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
85 | deleteReusableDelegationSet_id = Lens.lens (\DeleteReusableDelegationSet' {id} -> id) (\s@DeleteReusableDelegationSet' {} a -> s {id = a} :: DeleteReusableDelegationSet)
   |                                                                                                                                   ^^^^^^
[104 of 131] Compiling Amazonka.Route53.DeleteQueryLoggingConfig

gen/Amazonka/Route53/DeleteQueryLoggingConfig.hs:80:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteQueryLoggingConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
80 | deleteQueryLoggingConfig_id = Lens.lens (\DeleteQueryLoggingConfig' {id} -> id) (\s@DeleteQueryLoggingConfig' {} a -> s {id = a} :: DeleteQueryLoggingConfig)
   |                                                                                                                          ^^^^^^
[105 of 131] Compiling Amazonka.Route53.DeleteKeySigningKey

gen/Amazonka/Route53/DeleteKeySigningKey.hs:95:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type DeleteKeySigningKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
95 | deleteKeySigningKey_hostedZoneId = Lens.lens (\DeleteKeySigningKey' {hostedZoneId} -> hostedZoneId) (\s@DeleteKeySigningKey' {} a -> s {hostedZoneId = a} :: DeleteKeySigningKey)
   |                                                                                                                                         ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/DeleteKeySigningKey.hs:99:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type DeleteKeySigningKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | deleteKeySigningKey_name = Lens.lens (\DeleteKeySigningKey' {name} -> name) (\s@DeleteKeySigningKey' {} a -> s {name = a} :: DeleteKeySigningKey)
   |                                                                                                                 ^^^^^^^^
[106 of 131] Compiling Amazonka.Route53.DeleteHostedZone

gen/Amazonka/Route53/DeleteHostedZone.hs:127:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | deleteHostedZone_id = Lens.lens (\DeleteHostedZone' {id} -> id) (\s@DeleteHostedZone' {} a -> s {id = a} :: DeleteHostedZone)
    |                                                                                                  ^^^^^^
[107 of 131] Compiling Amazonka.Route53.DeleteHealthCheck

gen/Amazonka/Route53/DeleteHealthCheck.hs:92:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {healthCheckId = a} with type DeleteHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | deleteHealthCheck_healthCheckId = Lens.lens (\DeleteHealthCheck' {healthCheckId} -> healthCheckId) (\s@DeleteHealthCheck' {} a -> s {healthCheckId = a} :: DeleteHealthCheck)
   |                                                                                                                                      ^^^^^^^^^^^^^^^^^
[108 of 131] Compiling Amazonka.Route53.DeleteCidrCollection

gen/Amazonka/Route53/DeleteCidrCollection.hs:75:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type DeleteCidrCollection is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
75 | deleteCidrCollection_id = Lens.lens (\DeleteCidrCollection' {id} -> id) (\s@DeleteCidrCollection' {} a -> s {id = a} :: DeleteCidrCollection)
   |                                                                                                              ^^^^^^
[109 of 131] Compiling Amazonka.Route53.DeactivateKeySigningKey

gen/Amazonka/Route53/DeactivateKeySigningKey.hs:87:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type DeactivateKeySigningKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | deactivateKeySigningKey_hostedZoneId = Lens.lens (\DeactivateKeySigningKey' {hostedZoneId} -> hostedZoneId) (\s@DeactivateKeySigningKey' {} a -> s {hostedZoneId = a} :: DeactivateKeySigningKey)
   |                                                                                                                                                     ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/DeactivateKeySigningKey.hs:91:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type DeactivateKeySigningKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
91 | deactivateKeySigningKey_name = Lens.lens (\DeactivateKeySigningKey' {name} -> name) (\s@DeactivateKeySigningKey' {} a -> s {name = a} :: DeactivateKeySigningKey)
   |                                                                                                                             ^^^^^^^^
[110 of 131] Compiling Amazonka.Route53.CreateVPCAssociationAuthorization

gen/Amazonka/Route53/CreateVPCAssociationAuthorization.hs:109:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type CreateVPCAssociationAuthorization is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | createVPCAssociationAuthorization_hostedZoneId = Lens.lens (\CreateVPCAssociationAuthorization' {hostedZoneId} -> hostedZoneId) (\s@CreateVPCAssociationAuthorization' {} a -> s {hostedZoneId = a} :: CreateVPCAssociationAuthorization)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/CreateVPCAssociationAuthorization.hs:114:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {vpc = a} with type CreateVPCAssociationAuthorization is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | createVPCAssociationAuthorization_vpc = Lens.lens (\CreateVPCAssociationAuthorization' {vpc} -> vpc) (\s@CreateVPCAssociationAuthorization' {} a -> s {vpc = a} :: CreateVPCAssociationAuthorization)
    |                                                                                                                                                        ^^^^^^^

gen/Amazonka/Route53/CreateVPCAssociationAuthorization.hs:240:203: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type CreateVPCAssociationAuthorizationResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
240 | createVPCAssociationAuthorizationResponse_hostedZoneId = Lens.lens (\CreateVPCAssociationAuthorizationResponse' {hostedZoneId} -> hostedZoneId) (\s@CreateVPCAssociationAuthorizationResponse' {} a -> s {hostedZoneId = a} :: CreateVPCAssociationAuthorizationResponse)
    |                                                                                                                                                                                                           ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/CreateVPCAssociationAuthorization.hs:244:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {vpc = a} with type CreateVPCAssociationAuthorizationResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
244 | createVPCAssociationAuthorizationResponse_vpc = Lens.lens (\CreateVPCAssociationAuthorizationResponse' {vpc} -> vpc) (\s@CreateVPCAssociationAuthorizationResponse' {} a -> s {vpc = a} :: CreateVPCAssociationAuthorizationResponse)
    |                                                                                                                                                                                ^^^^^^^
[111 of 131] Compiling Amazonka.Route53.CreateTrafficPolicyVersion

gen/Amazonka/Route53/CreateTrafficPolicyVersion.hs:112:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {comment = a} with type CreateTrafficPolicyVersion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | createTrafficPolicyVersion_comment = Lens.lens (\CreateTrafficPolicyVersion' {comment} -> comment) (\s@CreateTrafficPolicyVersion' {} a -> s {comment = a} :: CreateTrafficPolicyVersion)
    |                                                                                                                                               ^^^^^^^^^^^

gen/Amazonka/Route53/CreateTrafficPolicyVersion.hs:116:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type CreateTrafficPolicyVersion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | createTrafficPolicyVersion_id = Lens.lens (\CreateTrafficPolicyVersion' {id} -> id) (\s@CreateTrafficPolicyVersion' {} a -> s {id = a} :: CreateTrafficPolicyVersion)
    |                                                                                                                                ^^^^^^

gen/Amazonka/Route53/CreateTrafficPolicyVersion.hs:123:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {document = a} with type CreateTrafficPolicyVersion is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | createTrafficPolicyVersion_document = Lens.lens (\CreateTrafficPolicyVersion' {document} -> document) (\s@CreateTrafficPolicyVersion' {} a -> s {document = a} :: CreateTrafficPolicyVersion)
    |                                                                                                                                                  ^^^^^^^^^^^^
[112 of 131] Compiling Amazonka.Route53.CreateTrafficPolicyInstance

gen/Amazonka/Route53/CreateTrafficPolicyInstance.hs:140:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type CreateTrafficPolicyInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
140 | createTrafficPolicyInstance_hostedZoneId = Lens.lens (\CreateTrafficPolicyInstance' {hostedZoneId} -> hostedZoneId) (\s@CreateTrafficPolicyInstance' {} a -> s {hostedZoneId = a} :: CreateTrafficPolicyInstance)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/CreateTrafficPolicyInstance.hs:147:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type CreateTrafficPolicyInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
147 | createTrafficPolicyInstance_name = Lens.lens (\CreateTrafficPolicyInstance' {name} -> name) (\s@CreateTrafficPolicyInstance' {} a -> s {name = a} :: CreateTrafficPolicyInstance)
    |                                                                                                                                         ^^^^^^^^

gen/Amazonka/Route53/CreateTrafficPolicyInstance.hs:152:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {ttl = a} with type CreateTrafficPolicyInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
152 | createTrafficPolicyInstance_ttl = Lens.lens (\CreateTrafficPolicyInstance' {ttl} -> ttl) (\s@CreateTrafficPolicyInstance' {} a -> s {ttl = a} :: CreateTrafficPolicyInstance)
    |                                                                                                                                      ^^^^^^^

gen/Amazonka/Route53/CreateTrafficPolicyInstance.hs:157:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyId = a} with type CreateTrafficPolicyInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
157 | createTrafficPolicyInstance_trafficPolicyId = Lens.lens (\CreateTrafficPolicyInstance' {trafficPolicyId} -> trafficPolicyId) (\s@CreateTrafficPolicyInstance' {} a -> s {trafficPolicyId = a} :: CreateTrafficPolicyInstance)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/CreateTrafficPolicyInstance.hs:162:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyVersion = a} with type CreateTrafficPolicyInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
162 | createTrafficPolicyInstance_trafficPolicyVersion = Lens.lens (\CreateTrafficPolicyInstance' {trafficPolicyVersion} -> trafficPolicyVersion) (\s@CreateTrafficPolicyInstance' {} a -> s {trafficPolicyVersion = a} :: CreateTrafficPolicyInstance)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^
[113 of 131] Compiling Amazonka.Route53.CreateTrafficPolicy

gen/Amazonka/Route53/CreateTrafficPolicy.hs:104:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {comment = a} with type CreateTrafficPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | createTrafficPolicy_comment = Lens.lens (\CreateTrafficPolicy' {comment} -> comment) (\s@CreateTrafficPolicy' {} a -> s {comment = a} :: CreateTrafficPolicy)
    |                                                                                                                          ^^^^^^^^^^^

gen/Amazonka/Route53/CreateTrafficPolicy.hs:108:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type CreateTrafficPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | createTrafficPolicy_name = Lens.lens (\CreateTrafficPolicy' {name} -> name) (\s@CreateTrafficPolicy' {} a -> s {name = a} :: CreateTrafficPolicy)
    |                                                                                                                 ^^^^^^^^

gen/Amazonka/Route53/CreateTrafficPolicy.hs:114:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {document = a} with type CreateTrafficPolicy is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | createTrafficPolicy_document = Lens.lens (\CreateTrafficPolicy' {document} -> document) (\s@CreateTrafficPolicy' {} a -> s {document = a} :: CreateTrafficPolicy)
    |                                                                                                                             ^^^^^^^^^^^^
[114 of 131] Compiling Amazonka.Route53.CreateReusableDelegationSet

gen/Amazonka/Route53/CreateReusableDelegationSet.hs:147:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type CreateReusableDelegationSet is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
147 | createReusableDelegationSet_hostedZoneId = Lens.lens (\CreateReusableDelegationSet' {hostedZoneId} -> hostedZoneId) (\s@CreateReusableDelegationSet' {} a -> s {hostedZoneId = a} :: CreateReusableDelegationSet)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/CreateReusableDelegationSet.hs:156:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {callerReference = a} with type CreateReusableDelegationSet is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
156 | createReusableDelegationSet_callerReference = Lens.lens (\CreateReusableDelegationSet' {callerReference} -> callerReference) (\s@CreateReusableDelegationSet' {} a -> s {callerReference = a} :: CreateReusableDelegationSet)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^
[115 of 131] Compiling Amazonka.Route53.CreateQueryLoggingConfig

gen/Amazonka/Route53/CreateQueryLoggingConfig.hs:243:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type CreateQueryLoggingConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
243 | createQueryLoggingConfig_hostedZoneId = Lens.lens (\CreateQueryLoggingConfig' {hostedZoneId} -> hostedZoneId) (\s@CreateQueryLoggingConfig' {} a -> s {hostedZoneId = a} :: CreateQueryLoggingConfig)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/CreateQueryLoggingConfig.hs:257:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cloudWatchLogsLogGroupArn = a} with type CreateQueryLoggingConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
257 | createQueryLoggingConfig_cloudWatchLogsLogGroupArn = Lens.lens (\CreateQueryLoggingConfig' {cloudWatchLogsLogGroupArn} -> cloudWatchLogsLogGroupArn) (\s@CreateQueryLoggingConfig' {} a -> s {cloudWatchLogsLogGroupArn = a} :: CreateQueryLoggingConfig)
    |                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[116 of 131] Compiling Amazonka.Route53.CreateKeySigningKey

gen/Amazonka/Route53/CreateKeySigningKey.hs:190:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {callerReference = a} with type CreateKeySigningKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
190 | createKeySigningKey_callerReference = Lens.lens (\CreateKeySigningKey' {callerReference} -> callerReference) (\s@CreateKeySigningKey' {} a -> s {callerReference = a} :: CreateKeySigningKey)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/CreateKeySigningKey.hs:194:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type CreateKeySigningKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
194 | createKeySigningKey_hostedZoneId = Lens.lens (\CreateKeySigningKey' {hostedZoneId} -> hostedZoneId) (\s@CreateKeySigningKey' {} a -> s {hostedZoneId = a} :: CreateKeySigningKey)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/CreateKeySigningKey.hs:237:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type CreateKeySigningKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
237 | createKeySigningKey_name = Lens.lens (\CreateKeySigningKey' {name} -> name) (\s@CreateKeySigningKey' {} a -> s {name = a} :: CreateKeySigningKey)
    |                                                                                                                 ^^^^^^^^

gen/Amazonka/Route53/CreateKeySigningKey.hs:242:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type CreateKeySigningKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
242 | createKeySigningKey_status = Lens.lens (\CreateKeySigningKey' {status} -> status) (\s@CreateKeySigningKey' {} a -> s {status = a} :: CreateKeySigningKey)
    |                                                                                                                       ^^^^^^^^^^
[117 of 131] Compiling Amazonka.Route53.CreateHostedZone

gen/Amazonka/Route53/CreateHostedZone.hs:267:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {vpc = a} with type CreateHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
267 | createHostedZone_vpc = Lens.lens (\CreateHostedZone' {vpc} -> vpc) (\s@CreateHostedZone' {} a -> s {vpc = a} :: CreateHostedZone)
    |                                                                                                     ^^^^^^^

gen/Amazonka/Route53/CreateHostedZone.hs:281:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type CreateHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
281 | createHostedZone_name = Lens.lens (\CreateHostedZone' {name} -> name) (\s@CreateHostedZone' {} a -> s {name = a} :: CreateHostedZone)
    |                                                                                                        ^^^^^^^^

gen/Amazonka/Route53/CreateHostedZone.hs:289:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {callerReference = a} with type CreateHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
289 | createHostedZone_callerReference = Lens.lens (\CreateHostedZone' {callerReference} -> callerReference) (\s@CreateHostedZone' {} a -> s {callerReference = a} :: CreateHostedZone)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/CreateHostedZone.hs:422:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {vpc = a} with type CreateHostedZoneResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
422 | createHostedZoneResponse_vpc = Lens.lens (\CreateHostedZoneResponse' {vpc} -> vpc) (\s@CreateHostedZoneResponse' {} a -> s {vpc = a} :: CreateHostedZoneResponse)
    |                                                                                                                             ^^^^^^^
[118 of 131] Compiling Amazonka.Route53.CreateHealthCheck

gen/Amazonka/Route53/CreateHealthCheck.hs:186:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {callerReference = a} with type CreateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
186 | createHealthCheck_callerReference = Lens.lens (\CreateHealthCheck' {callerReference} -> callerReference) (\s@CreateHealthCheck' {} a -> s {callerReference = a} :: CreateHealthCheck)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/CreateHealthCheck.hs:190:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {healthCheckConfig = a} with type CreateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
190 | createHealthCheck_healthCheckConfig = Lens.lens (\CreateHealthCheck' {healthCheckConfig} -> healthCheckConfig) (\s@CreateHealthCheck' {} a -> s {healthCheckConfig = a} :: CreateHealthCheck)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^
[119 of 131] Compiling Amazonka.Route53.CreateCidrCollection

gen/Amazonka/Route53/CreateCidrCollection.hs:93:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type CreateCidrCollection is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | createCidrCollection_name = Lens.lens (\CreateCidrCollection' {name} -> name) (\s@CreateCidrCollection' {} a -> s {name = a} :: CreateCidrCollection)
   |                                                                                                                    ^^^^^^^^

gen/Amazonka/Route53/CreateCidrCollection.hs:99:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {callerReference = a} with type CreateCidrCollection is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | createCidrCollection_callerReference = Lens.lens (\CreateCidrCollection' {callerReference} -> callerReference) (\s@CreateCidrCollection' {} a -> s {callerReference = a} :: CreateCidrCollection)
   |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^
[120 of 131] Compiling Amazonka.Route53.ChangeTagsForResource

gen/Amazonka/Route53/ChangeTagsForResource.hs:143:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceType = a} with type ChangeTagsForResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
143 | changeTagsForResource_resourceType = Lens.lens (\ChangeTagsForResource' {resourceType} -> resourceType) (\s@ChangeTagsForResource' {} a -> s {resourceType = a} :: ChangeTagsForResource)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ChangeTagsForResource.hs:148:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceId = a} with type ChangeTagsForResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
148 | changeTagsForResource_resourceId = Lens.lens (\ChangeTagsForResource' {resourceId} -> resourceId) (\s@ChangeTagsForResource' {} a -> s {resourceId = a} :: ChangeTagsForResource)
    |                                                                                                                                         ^^^^^^^^^^^^^^
[121 of 131] Compiling Amazonka.Route53.ChangeResourceRecordSets

gen/Amazonka/Route53/ChangeResourceRecordSets.hs:183:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type ChangeResourceRecordSets is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
183 | changeResourceRecordSets_hostedZoneId = Lens.lens (\ChangeResourceRecordSets' {hostedZoneId} -> hostedZoneId) (\s@ChangeResourceRecordSets' {} a -> s {hostedZoneId = a} :: ChangeResourceRecordSets)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^
[122 of 131] Compiling Amazonka.Route53.ChangeCidrCollection

gen/Amazonka/Route53/ChangeCidrCollection.hs:158:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type ChangeCidrCollection is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
158 | changeCidrCollection_id = Lens.lens (\ChangeCidrCollection' {id} -> id) (\s@ChangeCidrCollection' {} a -> s {id = a} :: ChangeCidrCollection)
    |                                                                                                              ^^^^^^

gen/Amazonka/Route53/ChangeCidrCollection.hs:162:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {changes = a} with type ChangeCidrCollection is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
162 | changeCidrCollection_changes = Lens.lens (\ChangeCidrCollection' {changes} -> changes) (\s@ChangeCidrCollection' {} a -> s {changes = a} :: ChangeCidrCollection) Prelude.. Lens.coerced
    |                                                                                                                             ^^^^^^^^^^^

gen/Amazonka/Route53/ChangeCidrCollection.hs:259:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type ChangeCidrCollectionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
259 | changeCidrCollectionResponse_id = Lens.lens (\ChangeCidrCollectionResponse' {id} -> id) (\s@ChangeCidrCollectionResponse' {} a -> s {id = a} :: ChangeCidrCollectionResponse)
    |                                                                                                                                      ^^^^^^
[123 of 131] Compiling Amazonka.Route53.AssociateVPCWithHostedZone

gen/Amazonka/Route53/AssociateVPCWithHostedZone.hs:132:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {comment = a} with type AssociateVPCWithHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | associateVPCWithHostedZone_comment = Lens.lens (\AssociateVPCWithHostedZone' {comment} -> comment) (\s@AssociateVPCWithHostedZone' {} a -> s {comment = a} :: AssociateVPCWithHostedZone)
    |                                                                                                                                               ^^^^^^^^^^^

gen/Amazonka/Route53/AssociateVPCWithHostedZone.hs:140:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type AssociateVPCWithHostedZone is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
140 | associateVPCWithHostedZone_hostedZoneId = Lens.lens (\AssociateVPCWithHostedZone' {hostedZoneId} -> hostedZoneId) (\s@AssociateVPCWithHostedZone' {} a -> s {hostedZoneId = a} :: AssociateVPCWithHostedZone)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^
[124 of 131] Compiling Amazonka.Route53.ActivateKeySigningKey

gen/Amazonka/Route53/ActivateKeySigningKey.hs:91:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {hostedZoneId = a} with type ActivateKeySigningKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
91 | activateKeySigningKey_hostedZoneId = Lens.lens (\ActivateKeySigningKey' {hostedZoneId} -> hostedZoneId) (\s@ActivateKeySigningKey' {} a -> s {hostedZoneId = a} :: ActivateKeySigningKey)
   |                                                                                                                                               ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/ActivateKeySigningKey.hs:97:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type ActivateKeySigningKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
97 | activateKeySigningKey_name = Lens.lens (\ActivateKeySigningKey' {name} -> name) (\s@ActivateKeySigningKey' {} a -> s {name = a} :: ActivateKeySigningKey)
   |                                                                                                                       ^^^^^^^^
[125 of 131] Compiling Amazonka.Route53.UpdateHealthCheck

gen/Amazonka/Route53/UpdateHealthCheck.hs:672:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {alarmIdentifier = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
672 | updateHealthCheck_alarmIdentifier = Lens.lens (\UpdateHealthCheck' {alarmIdentifier} -> alarmIdentifier) (\s@UpdateHealthCheck' {} a -> s {alarmIdentifier = a} :: UpdateHealthCheck)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:678:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {childHealthChecks = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
678 | updateHealthCheck_childHealthChecks = Lens.lens (\UpdateHealthCheck' {childHealthChecks} -> childHealthChecks) (\s@UpdateHealthCheck' {} a -> s {childHealthChecks = a} :: UpdateHealthCheck) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:702:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {disabled = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
702 | updateHealthCheck_disabled = Lens.lens (\UpdateHealthCheck' {disabled} -> disabled) (\s@UpdateHealthCheck' {} a -> s {disabled = a} :: UpdateHealthCheck)
    |                                                                                                                       ^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:727:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {enableSNI = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
727 | updateHealthCheck_enableSNI = Lens.lens (\UpdateHealthCheck' {enableSNI} -> enableSNI) (\s@UpdateHealthCheck' {} a -> s {enableSNI = a} :: UpdateHealthCheck)
    |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:738:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {failureThreshold = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
738 | updateHealthCheck_failureThreshold = Lens.lens (\UpdateHealthCheck' {failureThreshold} -> failureThreshold) (\s@UpdateHealthCheck' {} a -> s {failureThreshold = a} :: UpdateHealthCheck)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:808:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {fullyQualifiedDomainName = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
808 | updateHealthCheck_fullyQualifiedDomainName = Lens.lens (\UpdateHealthCheck' {fullyQualifiedDomainName} -> fullyQualifiedDomainName) (\s@UpdateHealthCheck' {} a -> s {fullyQualifiedDomainName = a} :: UpdateHealthCheck)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:829:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {healthCheckVersion = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
829 | updateHealthCheck_healthCheckVersion = Lens.lens (\UpdateHealthCheck' {healthCheckVersion} -> healthCheckVersion) (\s@UpdateHealthCheck' {} a -> s {healthCheckVersion = a} :: UpdateHealthCheck)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:845:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {healthThreshold = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
845 | updateHealthCheck_healthThreshold = Lens.lens (\UpdateHealthCheck' {healthThreshold} -> healthThreshold) (\s@UpdateHealthCheck' {} a -> s {healthThreshold = a} :: UpdateHealthCheck)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:897:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {iPAddress = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
897 | updateHealthCheck_iPAddress = Lens.lens (\UpdateHealthCheck' {iPAddress} -> iPAddress) (\s@UpdateHealthCheck' {} a -> s {iPAddress = a} :: UpdateHealthCheck)
    |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:912:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {insufficientDataHealthStatus = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
912 | updateHealthCheck_insufficientDataHealthStatus = Lens.lens (\UpdateHealthCheck' {insufficientDataHealthStatus} -> insufficientDataHealthStatus) (\s@UpdateHealthCheck' {} a -> s {insufficientDataHealthStatus = a} :: UpdateHealthCheck)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:918:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {inverted = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
918 | updateHealthCheck_inverted = Lens.lens (\UpdateHealthCheck' {inverted} -> inverted) (\s@UpdateHealthCheck' {} a -> s {inverted = a} :: UpdateHealthCheck)
    |                                                                                                                       ^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:926:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {port = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
926 | updateHealthCheck_port = Lens.lens (\UpdateHealthCheck' {port} -> port) (\s@UpdateHealthCheck' {} a -> s {port = a} :: UpdateHealthCheck)
    |                                                                                                           ^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:932:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {regions = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
932 | updateHealthCheck_regions = Lens.lens (\UpdateHealthCheck' {regions} -> regions) (\s@UpdateHealthCheck' {} a -> s {regions = a} :: UpdateHealthCheck) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                    ^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:964:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourcePath = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
964 | updateHealthCheck_resourcePath = Lens.lens (\UpdateHealthCheck' {resourcePath} -> resourcePath) (\s@UpdateHealthCheck' {} a -> s {resourcePath = a} :: UpdateHealthCheck)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:972:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {searchString = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
972 | updateHealthCheck_searchString = Lens.lens (\UpdateHealthCheck' {searchString} -> searchString) (\s@UpdateHealthCheck' {} a -> s {searchString = a} :: UpdateHealthCheck)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHealthCheck.hs:978:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {healthCheckId = a} with type UpdateHealthCheck is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
978 | updateHealthCheck_healthCheckId = Lens.lens (\UpdateHealthCheck' {healthCheckId} -> healthCheckId) (\s@UpdateHealthCheck' {} a -> s {healthCheckId = a} :: UpdateHealthCheck)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^
[126 of 131] Compiling Amazonka.Route53.UpdateHostedZoneComment

gen/Amazonka/Route53/UpdateHostedZoneComment.hs:91:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {comment = a} with type UpdateHostedZoneComment is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
91 | updateHostedZoneComment_comment = Lens.lens (\UpdateHostedZoneComment' {comment} -> comment) (\s@UpdateHostedZoneComment' {} a -> s {comment = a} :: UpdateHostedZoneComment)
   |                                                                                                                                      ^^^^^^^^^^^

gen/Amazonka/Route53/UpdateHostedZoneComment.hs:95:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateHostedZoneComment is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
95 | updateHostedZoneComment_id = Lens.lens (\UpdateHostedZoneComment' {id} -> id) (\s@UpdateHostedZoneComment' {} a -> s {id = a} :: UpdateHostedZoneComment)
   |                                                                                                                       ^^^^^^
[127 of 131] Compiling Amazonka.Route53.UpdateTrafficPolicyComment

gen/Amazonka/Route53/UpdateTrafficPolicyComment.hs:104:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateTrafficPolicyComment is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | updateTrafficPolicyComment_id = Lens.lens (\UpdateTrafficPolicyComment' {id} -> id) (\s@UpdateTrafficPolicyComment' {} a -> s {id = a} :: UpdateTrafficPolicyComment)
    |                                                                                                                                ^^^^^^

gen/Amazonka/Route53/UpdateTrafficPolicyComment.hs:109:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {version = a} with type UpdateTrafficPolicyComment is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | updateTrafficPolicyComment_version = Lens.lens (\UpdateTrafficPolicyComment' {version} -> version) (\s@UpdateTrafficPolicyComment' {} a -> s {version = a} :: UpdateTrafficPolicyComment)
    |                                                                                                                                               ^^^^^^^^^^^

gen/Amazonka/Route53/UpdateTrafficPolicyComment.hs:113:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {comment = a} with type UpdateTrafficPolicyComment is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | updateTrafficPolicyComment_comment = Lens.lens (\UpdateTrafficPolicyComment' {comment} -> comment) (\s@UpdateTrafficPolicyComment' {} a -> s {comment = a} :: UpdateTrafficPolicyComment)
    |                                                                                                                                               ^^^^^^^^^^^
[128 of 131] Compiling Amazonka.Route53.UpdateTrafficPolicyInstance

gen/Amazonka/Route53/UpdateTrafficPolicyInstance.hs:134:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {id = a} with type UpdateTrafficPolicyInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
134 | updateTrafficPolicyInstance_id = Lens.lens (\UpdateTrafficPolicyInstance' {id} -> id) (\s@UpdateTrafficPolicyInstance' {} a -> s {id = a} :: UpdateTrafficPolicyInstance)
    |                                                                                                                                   ^^^^^^

gen/Amazonka/Route53/UpdateTrafficPolicyInstance.hs:139:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {ttl = a} with type UpdateTrafficPolicyInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | updateTrafficPolicyInstance_ttl = Lens.lens (\UpdateTrafficPolicyInstance' {ttl} -> ttl) (\s@UpdateTrafficPolicyInstance' {} a -> s {ttl = a} :: UpdateTrafficPolicyInstance)
    |                                                                                                                                      ^^^^^^^

gen/Amazonka/Route53/UpdateTrafficPolicyInstance.hs:144:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyId = a} with type UpdateTrafficPolicyInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
144 | updateTrafficPolicyInstance_trafficPolicyId = Lens.lens (\UpdateTrafficPolicyInstance' {trafficPolicyId} -> trafficPolicyId) (\s@UpdateTrafficPolicyInstance' {} a -> s {trafficPolicyId = a} :: UpdateTrafficPolicyInstance)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Route53/UpdateTrafficPolicyInstance.hs:150:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {trafficPolicyVersion = a} with type UpdateTrafficPolicyInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
150 | updateTrafficPolicyInstance_trafficPolicyVersion = Lens.lens (\UpdateTrafficPolicyInstance' {trafficPolicyVersion} -> trafficPolicyVersion) (\s@UpdateTrafficPolicyInstance' {} a -> s {trafficPolicyVersion = a} :: UpdateTrafficPolicyInstance)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^
[129 of 131] Compiling Amazonka.Route53.Lens
[130 of 131] Compiling Amazonka.Route53.Waiters
[131 of 131] Compiling Amazonka.Route53
Configuring test suite 'amazonka-route53-test' for amazonka-route53-2.0...
Preprocessing test suite 'amazonka-route53-test' for amazonka-route53-2.0...
Building test suite 'amazonka-route53-test' for amazonka-route53-2.0...
[1 of 4] Compiling Test.Amazonka.Route53
[2 of 4] Compiling Test.Amazonka.Route53.Internal
[3 of 4] Compiling Test.Amazonka.Gen.Route53
[4 of 4] Compiling Main
[5 of 5] Linking /tmp/workdir-amazonka-route53/amazonka-route53-2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/amazonka-route53-2.0/t/amazonka-route53-test/build/amazonka-route53-test/amazonka-route53-test
