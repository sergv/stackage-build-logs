Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - amazonka-cognito-idp-2.0 (lib) (first run)
 - amazonka-cognito-idp-2.0 (test:amazonka-cognito-idp-test) (first run)
Configuring library for amazonka-cognito-idp-2.0...
Preprocessing library for amazonka-cognito-idp-2.0...
Building library for amazonka-cognito-idp-2.0...
[  1 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AccountTakeoverEventActionType
[  2 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AccountTakeoverActionType
[  3 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AccountTakeoverActionsType
[  4 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AdvancedSecurityModeType
[  5 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AliasAttributeType
[  6 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AnalyticsConfigurationType
[  7 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AnalyticsMetadataType
[  8 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AttributeDataType
[  9 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AttributeType
[ 10 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AuthFlowType
[ 11 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.ChallengeName
[ 12 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.ChallengeNameType
[ 13 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.ChallengeResponse
[ 14 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.ChallengeResponseType
[ 15 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.CompromisedCredentialsEventActionType
[ 16 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.CompromisedCredentialsActionsType
[ 17 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.CustomDomainConfigType
[ 18 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.CustomEmailSenderLambdaVersionType
[ 19 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.CustomEmailLambdaVersionConfigType
[ 20 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.CustomSMSSenderLambdaVersionType
[ 21 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.CustomSMSLambdaVersionConfigType
[ 22 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.DefaultEmailOptionType
[ 23 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.DeletionProtectionType
[ 24 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.DeliveryMediumType
[ 25 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.CodeDeliveryDetailsType
[ 26 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.DeviceConfigurationType
[ 27 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.DeviceRememberedStatusType
[ 28 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.DeviceSecretVerifierConfigType
[ 29 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.DeviceType
[ 30 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.DomainStatusType
[ 31 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.DomainDescriptionType
[ 32 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.EmailSendingAccountType
[ 33 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.EmailConfigurationType
[ 34 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.EventContextDataType
[ 35 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.EventFilterType
[ 36 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.CompromisedCredentialsRiskConfigurationType
[ 37 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.EventResponseType
[ 38 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.EventType
[ 39 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.ExplicitAuthFlowsType
[ 40 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.FeedbackValueType
[ 41 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.EventFeedbackType
[ 42 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.GroupType
[ 43 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.HttpHeader
[ 44 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.ContextDataType
[ 45 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.IdentityProviderTypeType
[ 46 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.IdentityProviderType
[ 47 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.LambdaConfigType
[ 48 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.MFAOptionType
[ 49 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.MessageActionType
[ 50 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.MessageTemplateType
[ 51 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AdminCreateUserConfigType
[ 52 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.NewDeviceMetadataType
[ 53 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AuthenticationResultType
[ 54 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.NotifyEmailType
[ 55 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.NotifyConfigurationType
[ 56 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AccountTakeoverRiskConfigurationType
[ 57 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.NumberAttributeConstraintsType
[ 58 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.OAuthFlowType
[ 59 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.PasswordPolicyType
[ 60 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.PreventUserExistenceErrorTypes
[ 61 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.ProviderDescription
[ 62 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.ProviderUserIdentifierType
[ 63 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.RecoveryOptionNameType
[ 64 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.RecoveryOptionType
[ 65 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AccountRecoverySettingType
[ 66 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.ResourceServerScopeType
[ 67 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.ResourceServerType
[ 68 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.RiskDecisionType
[ 69 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.RiskExceptionConfigurationType
[ 70 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.RiskConfigurationType
[ 71 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.RiskLevelType
[ 72 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.EventRiskType
[ 73 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.AuthEventType
[ 74 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.SMSMfaSettingsType
[ 75 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.SmsConfigurationType
[ 76 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.SmsMfaConfigType
[ 77 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.SoftwareTokenMfaConfigType
[ 78 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.SoftwareTokenMfaSettingsType
[ 79 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.StatusType
[ 80 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.StringAttributeConstraintsType
[ 81 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.SchemaAttributeType
[ 82 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.TimeUnitsType
[ 83 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.TokenValidityUnitsType
[ 84 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UICustomizationType
[ 85 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserContextDataType
[ 86 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserImportJobStatusType
[ 87 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserImportJobType
[ 88 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserPoolAddOnsType
[ 89 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserPoolClientDescription
[ 90 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserPoolClientType
[ 91 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserPoolDescriptionType
[ 92 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserPoolMfaType
[ 93 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserPoolPolicyType
[ 94 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserStatusType
[ 95 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserType
[ 96 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UsernameAttributeType
[ 97 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UsernameConfigurationType
[ 98 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.VerificationMessageTemplateType
[ 99 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.VerifiedAttributeType
[100 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserAttributeUpdateSettingsType
[101 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.UserPoolType

gen/Amazonka/CognitoIdentityProvider/Types/UserPoolType.hs:501:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type UserPoolType is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
501 | userPoolType_name = Lens.lens (\UserPoolType' {name} -> name) (\s@UserPoolType' {} a -> s {name = a} :: UserPoolType)
    |                                                                                            ^^^^^^^^
[102 of 207] Compiling Amazonka.CognitoIdentityProvider.Types.VerifySoftwareTokenResponseType
[103 of 207] Compiling Amazonka.CognitoIdentityProvider.Types
[104 of 207] Compiling Amazonka.CognitoIdentityProvider.TagResource
[105 of 207] Compiling Amazonka.CognitoIdentityProvider.StopUserImportJob

gen/Amazonka/CognitoIdentityProvider/StopUserImportJob.hs:90:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type StopUserImportJob is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | stopUserImportJob_userPoolId = Lens.lens (\StopUserImportJob' {userPoolId} -> userPoolId) (\s@StopUserImportJob' {} a -> s {userPoolId = a} :: StopUserImportJob)
   |                                                                                                                             ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/StopUserImportJob.hs:94:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {jobId = a} with type StopUserImportJob is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | stopUserImportJob_jobId = Lens.lens (\StopUserImportJob' {jobId} -> jobId) (\s@StopUserImportJob' {} a -> s {jobId = a} :: StopUserImportJob)
   |                                                                                                              ^^^^^^^^^
[106 of 207] Compiling Amazonka.CognitoIdentityProvider.StartUserImportJob

gen/Amazonka/CognitoIdentityProvider/StartUserImportJob.hs:90:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type StartUserImportJob is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | startUserImportJob_userPoolId = Lens.lens (\StartUserImportJob' {userPoolId} -> userPoolId) (\s@StartUserImportJob' {} a -> s {userPoolId = a} :: StartUserImportJob)
   |                                                                                                                                ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/StartUserImportJob.hs:94:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {jobId = a} with type StartUserImportJob is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | startUserImportJob_jobId = Lens.lens (\StartUserImportJob' {jobId} -> jobId) (\s@StartUserImportJob' {} a -> s {jobId = a} :: StartUserImportJob)
   |                                                                                                                 ^^^^^^^^^
[107 of 207] Compiling Amazonka.CognitoIdentityProvider.SignUp

gen/Amazonka/CognitoIdentityProvider/SignUp.hs:291:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type SignUp is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
291 | signUp_clientId = Lens.lens (\SignUp' {clientId} -> clientId) (\s@SignUp' {} a -> s {clientId = a} :: SignUp) Prelude.. Data._Sensitive
    |                                                                                      ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SignUp.hs:295:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type SignUp is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
295 | signUp_username = Lens.lens (\SignUp' {username} -> username) (\s@SignUp' {} a -> s {username = a} :: SignUp) Prelude.. Data._Sensitive
    |                                                                                      ^^^^^^^^^^^^
[108 of 207] Compiling Amazonka.CognitoIdentityProvider.SetUserSettings

gen/Amazonka/CognitoIdentityProvider/SetUserSettings.hs:94:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type SetUserSettings is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | setUserSettings_accessToken = Lens.lens (\SetUserSettings' {accessToken} -> accessToken) (\s@SetUserSettings' {} a -> s {accessToken = a} :: SetUserSettings) Prelude.. Data._Sensitive
   |                                                                                                                          ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetUserSettings.hs:99:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {mfaOptions = a} with type SetUserSettings is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | setUserSettings_mfaOptions = Lens.lens (\SetUserSettings' {mfaOptions} -> mfaOptions) (\s@SetUserSettings' {} a -> s {mfaOptions = a} :: SetUserSettings) Prelude.. Lens.coerced
   |                                                                                                                       ^^^^^^^^^^^^^^
[109 of 207] Compiling Amazonka.CognitoIdentityProvider.SetUserPoolMfaConfig

gen/Amazonka/CognitoIdentityProvider/SetUserPoolMfaConfig.hs:147:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {mfaConfiguration = a} with type SetUserPoolMfaConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
147 | setUserPoolMfaConfig_mfaConfiguration = Lens.lens (\SetUserPoolMfaConfig' {mfaConfiguration} -> mfaConfiguration) (\s@SetUserPoolMfaConfig' {} a -> s {mfaConfiguration = a} :: SetUserPoolMfaConfig)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetUserPoolMfaConfig.hs:151:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {smsMfaConfiguration = a} with type SetUserPoolMfaConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
151 | setUserPoolMfaConfig_smsMfaConfiguration = Lens.lens (\SetUserPoolMfaConfig' {smsMfaConfiguration} -> smsMfaConfiguration) (\s@SetUserPoolMfaConfig' {} a -> s {smsMfaConfiguration = a} :: SetUserPoolMfaConfig)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetUserPoolMfaConfig.hs:155:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {softwareTokenMfaConfiguration = a} with type SetUserPoolMfaConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
155 | setUserPoolMfaConfig_softwareTokenMfaConfiguration = Lens.lens (\SetUserPoolMfaConfig' {softwareTokenMfaConfiguration} -> softwareTokenMfaConfiguration) (\s@SetUserPoolMfaConfig' {} a -> s {softwareTokenMfaConfiguration = a} :: SetUserPoolMfaConfig)
    |                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetUserPoolMfaConfig.hs:159:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type SetUserPoolMfaConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
159 | setUserPoolMfaConfig_userPoolId = Lens.lens (\SetUserPoolMfaConfig' {userPoolId} -> userPoolId) (\s@SetUserPoolMfaConfig' {} a -> s {userPoolId = a} :: SetUserPoolMfaConfig)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetUserPoolMfaConfig.hs:292:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {mfaConfiguration = a} with type SetUserPoolMfaConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
292 | setUserPoolMfaConfigResponse_mfaConfiguration = Lens.lens (\SetUserPoolMfaConfigResponse' {mfaConfiguration} -> mfaConfiguration) (\s@SetUserPoolMfaConfigResponse' {} a -> s {mfaConfiguration = a} :: SetUserPoolMfaConfigResponse)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetUserPoolMfaConfig.hs:296:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {smsMfaConfiguration = a} with type SetUserPoolMfaConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
296 | setUserPoolMfaConfigResponse_smsMfaConfiguration = Lens.lens (\SetUserPoolMfaConfigResponse' {smsMfaConfiguration} -> smsMfaConfiguration) (\s@SetUserPoolMfaConfigResponse' {} a -> s {smsMfaConfiguration = a} :: SetUserPoolMfaConfigResponse)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetUserPoolMfaConfig.hs:300:215: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {softwareTokenMfaConfiguration = a} with type SetUserPoolMfaConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
300 | setUserPoolMfaConfigResponse_softwareTokenMfaConfiguration = Lens.lens (\SetUserPoolMfaConfigResponse' {softwareTokenMfaConfiguration} -> softwareTokenMfaConfiguration) (\s@SetUserPoolMfaConfigResponse' {} a -> s {softwareTokenMfaConfiguration = a} :: SetUserPoolMfaConfigResponse)
    |                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[110 of 207] Compiling Amazonka.CognitoIdentityProvider.SetUserMFAPreference

gen/Amazonka/CognitoIdentityProvider/SetUserMFAPreference.hs:110:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type SetUserMFAPreference is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | setUserMFAPreference_accessToken = Lens.lens (\SetUserMFAPreference' {accessToken} -> accessToken) (\s@SetUserMFAPreference' {} a -> s {accessToken = a} :: SetUserMFAPreference) Prelude.. Data._Sensitive
    |                                                                                                                                         ^^^^^^^^^^^^^^^
[111 of 207] Compiling Amazonka.CognitoIdentityProvider.SetUICustomization

gen/Amazonka/CognitoIdentityProvider/SetUICustomization.hs:111:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {css = a} with type SetUICustomization is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
111 | setUICustomization_css = Lens.lens (\SetUICustomization' {css} -> css) (\s@SetUICustomization' {} a -> s {css = a} :: SetUICustomization)
    |                                                                                                           ^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetUICustomization.hs:115:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type SetUICustomization is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | setUICustomization_clientId = Lens.lens (\SetUICustomization' {clientId} -> clientId) (\s@SetUICustomization' {} a -> s {clientId = a} :: SetUICustomization) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                                          ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetUICustomization.hs:127:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type SetUICustomization is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | setUICustomization_userPoolId = Lens.lens (\SetUICustomization' {userPoolId} -> userPoolId) (\s@SetUICustomization' {} a -> s {userPoolId = a} :: SetUICustomization)
    |                                                                                                                                ^^^^^^^^^^^^^^
[112 of 207] Compiling Amazonka.CognitoIdentityProvider.SetRiskConfiguration

gen/Amazonka/CognitoIdentityProvider/SetRiskConfiguration.hs:120:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accountTakeoverRiskConfiguration = a} with type SetRiskConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | setRiskConfiguration_accountTakeoverRiskConfiguration = Lens.lens (\SetRiskConfiguration' {accountTakeoverRiskConfiguration} -> accountTakeoverRiskConfiguration) (\s@SetRiskConfiguration' {} a -> s {accountTakeoverRiskConfiguration = a} :: SetRiskConfiguration)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetRiskConfiguration.hs:130:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type SetRiskConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
130 | setRiskConfiguration_clientId = Lens.lens (\SetRiskConfiguration' {clientId} -> clientId) (\s@SetRiskConfiguration' {} a -> s {clientId = a} :: SetRiskConfiguration) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                                                ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetRiskConfiguration.hs:134:221: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {compromisedCredentialsRiskConfiguration = a} with type SetRiskConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
134 | setRiskConfiguration_compromisedCredentialsRiskConfiguration = Lens.lens (\SetRiskConfiguration' {compromisedCredentialsRiskConfiguration} -> compromisedCredentialsRiskConfiguration) (\s@SetRiskConfiguration' {} a -> s {compromisedCredentialsRiskConfiguration = a} :: SetRiskConfiguration)
    |                                                                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetRiskConfiguration.hs:138:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {riskExceptionConfiguration = a} with type SetRiskConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | setRiskConfiguration_riskExceptionConfiguration = Lens.lens (\SetRiskConfiguration' {riskExceptionConfiguration} -> riskExceptionConfiguration) (\s@SetRiskConfiguration' {} a -> s {riskExceptionConfiguration = a} :: SetRiskConfiguration)
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/SetRiskConfiguration.hs:142:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type SetRiskConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
142 | setRiskConfiguration_userPoolId = Lens.lens (\SetRiskConfiguration' {userPoolId} -> userPoolId) (\s@SetRiskConfiguration' {} a -> s {userPoolId = a} :: SetRiskConfiguration)
    |                                                                                                                                      ^^^^^^^^^^^^^^
[113 of 207] Compiling Amazonka.CognitoIdentityProvider.RevokeToken

gen/Amazonka/CognitoIdentityProvider/RevokeToken.hs:96:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientSecret = a} with type RevokeToken is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
96 | revokeToken_clientSecret = Lens.lens (\RevokeToken' {clientSecret} -> clientSecret) (\s@RevokeToken' {} a -> s {clientSecret = a} :: RevokeToken) Prelude.. Lens.mapping Data._Sensitive
   |                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/RevokeToken.hs:104:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type RevokeToken is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | revokeToken_clientId = Lens.lens (\RevokeToken' {clientId} -> clientId) (\s@RevokeToken' {} a -> s {clientId = a} :: RevokeToken) Prelude.. Data._Sensitive
    |                                                                                                     ^^^^^^^^^^^^
[114 of 207] Compiling Amazonka.CognitoIdentityProvider.RespondToAuthChallenge

gen/Amazonka/CognitoIdentityProvider/RespondToAuthChallenge.hs:344:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {challengeResponses = a} with type RespondToAuthChallenge is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
344 | respondToAuthChallenge_challengeResponses = Lens.lens (\RespondToAuthChallenge' {challengeResponses} -> challengeResponses) (\s@RespondToAuthChallenge' {} a -> s {challengeResponses = a} :: RespondToAuthChallenge) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/RespondToAuthChallenge.hs:386:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {session = a} with type RespondToAuthChallenge is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
386 | respondToAuthChallenge_session = Lens.lens (\RespondToAuthChallenge' {session} -> session) (\s@RespondToAuthChallenge' {} a -> s {session = a} :: RespondToAuthChallenge)
    |                                                                                                                                   ^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/RespondToAuthChallenge.hs:397:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type RespondToAuthChallenge is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
397 | respondToAuthChallenge_clientId = Lens.lens (\RespondToAuthChallenge' {clientId} -> clientId) (\s@RespondToAuthChallenge' {} a -> s {clientId = a} :: RespondToAuthChallenge) Prelude.. Data._Sensitive
    |                                                                                                                                      ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/RespondToAuthChallenge.hs:404:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {challengeName = a} with type RespondToAuthChallenge is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
404 | respondToAuthChallenge_challengeName = Lens.lens (\RespondToAuthChallenge' {challengeName} -> challengeName) (\s@RespondToAuthChallenge' {} a -> s {challengeName = a} :: RespondToAuthChallenge)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/RespondToAuthChallenge.hs:555:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {challengeName = a} with type RespondToAuthChallengeResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
555 | respondToAuthChallengeResponse_challengeName = Lens.lens (\RespondToAuthChallengeResponse' {challengeName} -> challengeName) (\s@RespondToAuthChallengeResponse' {} a -> s {challengeName = a} :: RespondToAuthChallengeResponse)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/RespondToAuthChallenge.hs:567:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {session = a} with type RespondToAuthChallengeResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
567 | respondToAuthChallengeResponse_session = Lens.lens (\RespondToAuthChallengeResponse' {session} -> session) (\s@RespondToAuthChallengeResponse' {} a -> s {session = a} :: RespondToAuthChallengeResponse)
    |                                                                                                                                                           ^^^^^^^^^^^
[115 of 207] Compiling Amazonka.CognitoIdentityProvider.ResendConfirmationCode

gen/Amazonka/CognitoIdentityProvider/ResendConfirmationCode.hs:252:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type ResendConfirmationCode is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
252 | resendConfirmationCode_clientId = Lens.lens (\ResendConfirmationCode' {clientId} -> clientId) (\s@ResendConfirmationCode' {} a -> s {clientId = a} :: ResendConfirmationCode) Prelude.. Data._Sensitive
    |                                                                                                                                      ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ResendConfirmationCode.hs:257:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type ResendConfirmationCode is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
257 | resendConfirmationCode_username = Lens.lens (\ResendConfirmationCode' {username} -> username) (\s@ResendConfirmationCode' {} a -> s {username = a} :: ResendConfirmationCode) Prelude.. Data._Sensitive
    |                                                                                                                                      ^^^^^^^^^^^^
[116 of 207] Compiling Amazonka.CognitoIdentityProvider.ListUsersInGroup

gen/Amazonka/CognitoIdentityProvider/ListUsersInGroup.hs:112:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListUsersInGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | listUsersInGroup_nextToken = Lens.lens (\ListUsersInGroup' {nextToken} -> nextToken) (\s@ListUsersInGroup' {} a -> s {nextToken = a} :: ListUsersInGroup)
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListUsersInGroup.hs:116:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type ListUsersInGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | listUsersInGroup_userPoolId = Lens.lens (\ListUsersInGroup' {userPoolId} -> userPoolId) (\s@ListUsersInGroup' {} a -> s {userPoolId = a} :: ListUsersInGroup)
    |                                                                                                                          ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListUsersInGroup.hs:120:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type ListUsersInGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | listUsersInGroup_groupName = Lens.lens (\ListUsersInGroup' {groupName} -> groupName) (\s@ListUsersInGroup' {} a -> s {groupName = a} :: ListUsersInGroup)
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListUsersInGroup.hs:247:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListUsersInGroupResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
247 | listUsersInGroupResponse_nextToken = Lens.lens (\ListUsersInGroupResponse' {nextToken} -> nextToken) (\s@ListUsersInGroupResponse' {} a -> s {nextToken = a} :: ListUsersInGroupResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^
[117 of 207] Compiling Amazonka.CognitoIdentityProvider.ListUsers

gen/Amazonka/CognitoIdentityProvider/ListUsers.hs:315:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {paginationToken = a} with type ListUsers is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
315 | listUsers_paginationToken = Lens.lens (\ListUsers' {paginationToken} -> paginationToken) (\s@ListUsers' {} a -> s {paginationToken = a} :: ListUsers)
    |                                                                                                                    ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListUsers.hs:320:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type ListUsers is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
320 | listUsers_userPoolId = Lens.lens (\ListUsers' {userPoolId} -> userPoolId) (\s@ListUsers' {} a -> s {userPoolId = a} :: ListUsers)
    |                                                                                                     ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListUsers.hs:455:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {paginationToken = a} with type ListUsersResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
455 | listUsersResponse_paginationToken = Lens.lens (\ListUsersResponse' {paginationToken} -> paginationToken) (\s@ListUsersResponse' {} a -> s {paginationToken = a} :: ListUsersResponse)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^
[118 of 207] Compiling Amazonka.CognitoIdentityProvider.ListUserPools

gen/Amazonka/CognitoIdentityProvider/ListUserPools.hs:96:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListUserPools is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
96 | listUserPools_nextToken = Lens.lens (\ListUserPools' {nextToken} -> nextToken) (\s@ListUserPools' {} a -> s {nextToken = a} :: ListUserPools)
   |                                                                                                              ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListUserPools.hs:226:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListUserPoolsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
226 | listUserPoolsResponse_nextToken = Lens.lens (\ListUserPoolsResponse' {nextToken} -> nextToken) (\s@ListUserPoolsResponse' {} a -> s {nextToken = a} :: ListUserPoolsResponse)
    |                                                                                                                                      ^^^^^^^^^^^^^
[119 of 207] Compiling Amazonka.CognitoIdentityProvider.ListUserPoolClients

gen/Amazonka/CognitoIdentityProvider/ListUserPoolClients.hs:109:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListUserPoolClients is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | listUserPoolClients_nextToken = Lens.lens (\ListUserPoolClients' {nextToken} -> nextToken) (\s@ListUserPoolClients' {} a -> s {nextToken = a} :: ListUserPoolClients)
    |                                                                                                                                ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListUserPoolClients.hs:114:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type ListUserPoolClients is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | listUserPoolClients_userPoolId = Lens.lens (\ListUserPoolClients' {userPoolId} -> userPoolId) (\s@ListUserPoolClients' {} a -> s {userPoolId = a} :: ListUserPoolClients)
    |                                                                                                                                   ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListUserPoolClients.hs:246:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListUserPoolClientsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
246 | listUserPoolClientsResponse_nextToken = Lens.lens (\ListUserPoolClientsResponse' {nextToken} -> nextToken) (\s@ListUserPoolClientsResponse' {} a -> s {nextToken = a} :: ListUserPoolClientsResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^
[120 of 207] Compiling Amazonka.CognitoIdentityProvider.ListUserImportJobs

gen/Amazonka/CognitoIdentityProvider/ListUserImportJobs.hs:103:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {paginationToken = a} with type ListUserImportJobs is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | listUserImportJobs_paginationToken = Lens.lens (\ListUserImportJobs' {paginationToken} -> paginationToken) (\s@ListUserImportJobs' {} a -> s {paginationToken = a} :: ListUserImportJobs)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListUserImportJobs.hs:108:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type ListUserImportJobs is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | listUserImportJobs_userPoolId = Lens.lens (\ListUserImportJobs' {userPoolId} -> userPoolId) (\s@ListUserImportJobs' {} a -> s {userPoolId = a} :: ListUserImportJobs)
    |                                                                                                                                ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListUserImportJobs.hs:218:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {paginationToken = a} with type ListUserImportJobsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
218 | listUserImportJobsResponse_paginationToken = Lens.lens (\ListUserImportJobsResponse' {paginationToken} -> paginationToken) (\s@ListUserImportJobsResponse' {} a -> s {paginationToken = a} :: ListUserImportJobsResponse)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^
[121 of 207] Compiling Amazonka.CognitoIdentityProvider.ListTagsForResource
[122 of 207] Compiling Amazonka.CognitoIdentityProvider.ListResourceServers

gen/Amazonka/CognitoIdentityProvider/ListResourceServers.hs:96:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListResourceServers is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
96 | listResourceServers_nextToken = Lens.lens (\ListResourceServers' {nextToken} -> nextToken) (\s@ListResourceServers' {} a -> s {nextToken = a} :: ListResourceServers)
   |                                                                                                                                ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListResourceServers.hs:100:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type ListResourceServers is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | listResourceServers_userPoolId = Lens.lens (\ListResourceServers' {userPoolId} -> userPoolId) (\s@ListResourceServers' {} a -> s {userPoolId = a} :: ListResourceServers)
    |                                                                                                                                   ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListResourceServers.hs:223:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListResourceServersResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
223 | listResourceServersResponse_nextToken = Lens.lens (\ListResourceServersResponse' {nextToken} -> nextToken) (\s@ListResourceServersResponse' {} a -> s {nextToken = a} :: ListResourceServersResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^
[123 of 207] Compiling Amazonka.CognitoIdentityProvider.ListIdentityProviders

gen/Amazonka/CognitoIdentityProvider/ListIdentityProviders.hs:97:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListIdentityProviders is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
97 | listIdentityProviders_nextToken = Lens.lens (\ListIdentityProviders' {nextToken} -> nextToken) (\s@ListIdentityProviders' {} a -> s {nextToken = a} :: ListIdentityProviders)
   |                                                                                                                                      ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListIdentityProviders.hs:101:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type ListIdentityProviders is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | listIdentityProviders_userPoolId = Lens.lens (\ListIdentityProviders' {userPoolId} -> userPoolId) (\s@ListIdentityProviders' {} a -> s {userPoolId = a} :: ListIdentityProviders)
    |                                                                                                                                         ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListIdentityProviders.hs:219:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListIdentityProvidersResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
219 | listIdentityProvidersResponse_nextToken = Lens.lens (\ListIdentityProvidersResponse' {nextToken} -> nextToken) (\s@ListIdentityProvidersResponse' {} a -> s {nextToken = a} :: ListIdentityProvidersResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^^
[124 of 207] Compiling Amazonka.CognitoIdentityProvider.ListGroups

gen/Amazonka/CognitoIdentityProvider/ListGroups.hs:104:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListGroups is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | listGroups_nextToken = Lens.lens (\ListGroups' {nextToken} -> nextToken) (\s@ListGroups' {} a -> s {nextToken = a} :: ListGroups)
    |                                                                                                     ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListGroups.hs:108:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type ListGroups is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | listGroups_userPoolId = Lens.lens (\ListGroups' {userPoolId} -> userPoolId) (\s@ListGroups' {} a -> s {userPoolId = a} :: ListGroups)
    |                                                                                                        ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListGroups.hs:236:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListGroupsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
236 | listGroupsResponse_nextToken = Lens.lens (\ListGroupsResponse' {nextToken} -> nextToken) (\s@ListGroupsResponse' {} a -> s {nextToken = a} :: ListGroupsResponse)
    |                                                                                                                             ^^^^^^^^^^^^^
[125 of 207] Compiling Amazonka.CognitoIdentityProvider.ListDevices

gen/Amazonka/CognitoIdentityProvider/ListDevices.hs:99:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {paginationToken = a} with type ListDevices is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | listDevices_paginationToken = Lens.lens (\ListDevices' {paginationToken} -> paginationToken) (\s@ListDevices' {} a -> s {paginationToken = a} :: ListDevices)
   |                                                                                                                          ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListDevices.hs:104:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type ListDevices is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | listDevices_accessToken = Lens.lens (\ListDevices' {accessToken} -> accessToken) (\s@ListDevices' {} a -> s {accessToken = a} :: ListDevices) Prelude.. Data._Sensitive
    |                                                                                                              ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ListDevices.hs:207:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {paginationToken = a} with type ListDevicesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
207 | listDevicesResponse_paginationToken = Lens.lens (\ListDevicesResponse' {paginationToken} -> paginationToken) (\s@ListDevicesResponse' {} a -> s {paginationToken = a} :: ListDevicesResponse)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^
[126 of 207] Compiling Amazonka.CognitoIdentityProvider.InitiateAuth

gen/Amazonka/CognitoIdentityProvider/InitiateAuth.hs:456:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type InitiateAuth is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
456 | initiateAuth_clientId = Lens.lens (\InitiateAuth' {clientId} -> clientId) (\s@InitiateAuth' {} a -> s {clientId = a} :: InitiateAuth) Prelude.. Data._Sensitive
    |                                                                                                        ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/InitiateAuth.hs:774:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {challengeName = a} with type InitiateAuthResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
774 | initiateAuthResponse_challengeName = Lens.lens (\InitiateAuthResponse' {challengeName} -> challengeName) (\s@InitiateAuthResponse' {} a -> s {challengeName = a} :: InitiateAuthResponse)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^
[127 of 207] Compiling Amazonka.CognitoIdentityProvider.GlobalSignOut

gen/Amazonka/CognitoIdentityProvider/GlobalSignOut.hs:85:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type GlobalSignOut is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
85 | globalSignOut_accessToken = Lens.lens (\GlobalSignOut' {accessToken} -> accessToken) (\s@GlobalSignOut' {} a -> s {accessToken = a} :: GlobalSignOut) Prelude.. Data._Sensitive
   |                                                                                                                    ^^^^^^^^^^^^^^^
[128 of 207] Compiling Amazonka.CognitoIdentityProvider.GetUserPoolMfaConfig

gen/Amazonka/CognitoIdentityProvider/GetUserPoolMfaConfig.hs:77:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type GetUserPoolMfaConfig is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
77 | getUserPoolMfaConfig_userPoolId = Lens.lens (\GetUserPoolMfaConfig' {userPoolId} -> userPoolId) (\s@GetUserPoolMfaConfig' {} a -> s {userPoolId = a} :: GetUserPoolMfaConfig)
   |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/GetUserPoolMfaConfig.hs:199:176: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {mfaConfiguration = a} with type GetUserPoolMfaConfigResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
199 | getUserPoolMfaConfigResponse_mfaConfiguration = Lens.lens (\GetUserPoolMfaConfigResponse' {mfaConfiguration} -> mfaConfiguration) (\s@GetUserPoolMfaConfigResponse' {} a -> s {mfaConfiguration = a} :: GetUserPoolMfaConfigResponse)
    |                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^
[129 of 207] Compiling Amazonka.CognitoIdentityProvider.GetUserAttributeVerificationCode

gen/Amazonka/CognitoIdentityProvider/GetUserAttributeVerificationCode.hs:214:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type GetUserAttributeVerificationCode is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
214 | getUserAttributeVerificationCode_accessToken = Lens.lens (\GetUserAttributeVerificationCode' {accessToken} -> accessToken) (\s@GetUserAttributeVerificationCode' {} a -> s {accessToken = a} :: GetUserAttributeVerificationCode) Prelude.. Data._Sensitive
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/GetUserAttributeVerificationCode.hs:219:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {attributeName = a} with type GetUserAttributeVerificationCode is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
219 | getUserAttributeVerificationCode_attributeName = Lens.lens (\GetUserAttributeVerificationCode' {attributeName} -> attributeName) (\s@GetUserAttributeVerificationCode' {} a -> s {attributeName = a} :: GetUserAttributeVerificationCode)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^
[130 of 207] Compiling Amazonka.CognitoIdentityProvider.GetUser

gen/Amazonka/CognitoIdentityProvider/GetUser.hs:87:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type GetUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | getUser_accessToken = Lens.lens (\GetUser' {accessToken} -> accessToken) (\s@GetUser' {} a -> s {accessToken = a} :: GetUser) Prelude.. Data._Sensitive
   |                                                                                                  ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/GetUser.hs:225:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {mfaOptions = a} with type GetUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
225 | getUserResponse_mfaOptions = Lens.lens (\GetUserResponse' {mfaOptions} -> mfaOptions) (\s@GetUserResponse' {} a -> s {mfaOptions = a} :: GetUserResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                       ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/GetUser.hs:243:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type GetUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
243 | getUserResponse_username = Lens.lens (\GetUserResponse' {username} -> username) (\s@GetUserResponse' {} a -> s {username = a} :: GetUserResponse) Prelude.. Data._Sensitive
    |                                                                                                                 ^^^^^^^^^^^^
[131 of 207] Compiling Amazonka.CognitoIdentityProvider.GetUICustomization

gen/Amazonka/CognitoIdentityProvider/GetUICustomization.hs:87:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type GetUICustomization is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | getUICustomization_clientId = Lens.lens (\GetUICustomization' {clientId} -> clientId) (\s@GetUICustomization' {} a -> s {clientId = a} :: GetUICustomization) Prelude.. Lens.mapping Data._Sensitive
   |                                                                                                                          ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/GetUICustomization.hs:91:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type GetUICustomization is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
91 | getUICustomization_userPoolId = Lens.lens (\GetUICustomization' {userPoolId} -> userPoolId) (\s@GetUICustomization' {} a -> s {userPoolId = a} :: GetUICustomization)
   |                                                                                                                                ^^^^^^^^^^^^^^
[132 of 207] Compiling Amazonka.CognitoIdentityProvider.GetSigningCertificate

gen/Amazonka/CognitoIdentityProvider/GetSigningCertificate.hs:83:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type GetSigningCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
83 | getSigningCertificate_userPoolId = Lens.lens (\GetSigningCertificate' {userPoolId} -> userPoolId) (\s@GetSigningCertificate' {} a -> s {userPoolId = a} :: GetSigningCertificate)
   |                                                                                                                                         ^^^^^^^^^^^^^^
[133 of 207] Compiling Amazonka.CognitoIdentityProvider.GetIdentityProviderByIdentifier

gen/Amazonka/CognitoIdentityProvider/GetIdentityProviderByIdentifier.hs:88:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type GetIdentityProviderByIdentifier is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
88 | getIdentityProviderByIdentifier_userPoolId = Lens.lens (\GetIdentityProviderByIdentifier' {userPoolId} -> userPoolId) (\s@GetIdentityProviderByIdentifier' {} a -> s {userPoolId = a} :: GetIdentityProviderByIdentifier)
   |                                                                                                                                                                       ^^^^^^^^^^^^^^
[134 of 207] Compiling Amazonka.CognitoIdentityProvider.GetGroup

gen/Amazonka/CognitoIdentityProvider/GetGroup.hs:87:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type GetGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | getGroup_groupName = Lens.lens (\GetGroup' {groupName} -> groupName) (\s@GetGroup' {} a -> s {groupName = a} :: GetGroup)
   |                                                                                               ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/GetGroup.hs:91:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type GetGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
91 | getGroup_userPoolId = Lens.lens (\GetGroup' {userPoolId} -> userPoolId) (\s@GetGroup' {} a -> s {userPoolId = a} :: GetGroup)
   |                                                                                                  ^^^^^^^^^^^^^^
[135 of 207] Compiling Amazonka.CognitoIdentityProvider.GetDevice

gen/Amazonka/CognitoIdentityProvider/GetDevice.hs:88:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type GetDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
88 | getDevice_accessToken = Lens.lens (\GetDevice' {accessToken} -> accessToken) (\s@GetDevice' {} a -> s {accessToken = a} :: GetDevice) Prelude.. Lens.mapping Data._Sensitive
   |                                                                                                        ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/GetDevice.hs:92:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deviceKey = a} with type GetDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | getDevice_deviceKey = Lens.lens (\GetDevice' {deviceKey} -> deviceKey) (\s@GetDevice' {} a -> s {deviceKey = a} :: GetDevice)
   |                                                                                                  ^^^^^^^^^^^^^
[136 of 207] Compiling Amazonka.CognitoIdentityProvider.GetCSVHeader

gen/Amazonka/CognitoIdentityProvider/GetCSVHeader.hs:83:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type GetCSVHeader is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
83 | getCSVHeader_userPoolId = Lens.lens (\GetCSVHeader' {userPoolId} -> userPoolId) (\s@GetCSVHeader' {} a -> s {userPoolId = a} :: GetCSVHeader)
   |                                                                                                              ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/GetCSVHeader.hs:180:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type GetCSVHeaderResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
180 | getCSVHeaderResponse_userPoolId = Lens.lens (\GetCSVHeaderResponse' {userPoolId} -> userPoolId) (\s@GetCSVHeaderResponse' {} a -> s {userPoolId = a} :: GetCSVHeaderResponse)
    |                                                                                                                                      ^^^^^^^^^^^^^^
[137 of 207] Compiling Amazonka.CognitoIdentityProvider.ForgotPassword

gen/Amazonka/CognitoIdentityProvider/ForgotPassword.hs:263:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type ForgotPassword is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
263 | forgotPassword_clientId = Lens.lens (\ForgotPassword' {clientId} -> clientId) (\s@ForgotPassword' {} a -> s {clientId = a} :: ForgotPassword) Prelude.. Data._Sensitive
    |                                                                                                              ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ForgotPassword.hs:268:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type ForgotPassword is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
268 | forgotPassword_username = Lens.lens (\ForgotPassword' {username} -> username) (\s@ForgotPassword' {} a -> s {username = a} :: ForgotPassword) Prelude.. Data._Sensitive
    |                                                                                                              ^^^^^^^^^^^^
[138 of 207] Compiling Amazonka.CognitoIdentityProvider.ForgetDevice

gen/Amazonka/CognitoIdentityProvider/ForgetDevice.hs:84:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type ForgetDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
84 | forgetDevice_accessToken = Lens.lens (\ForgetDevice' {accessToken} -> accessToken) (\s@ForgetDevice' {} a -> s {accessToken = a} :: ForgetDevice) Prelude.. Lens.mapping Data._Sensitive
   |                                                                                                                 ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ForgetDevice.hs:88:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deviceKey = a} with type ForgetDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
88 | forgetDevice_deviceKey = Lens.lens (\ForgetDevice' {deviceKey} -> deviceKey) (\s@ForgetDevice' {} a -> s {deviceKey = a} :: ForgetDevice)
   |                                                                                                           ^^^^^^^^^^^^^
[139 of 207] Compiling Amazonka.CognitoIdentityProvider.DescribeUserPoolDomain

gen/Amazonka/CognitoIdentityProvider/DescribeUserPoolDomain.hs:81:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domain = a} with type DescribeUserPoolDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
81 | describeUserPoolDomain_domain = Lens.lens (\DescribeUserPoolDomain' {domain} -> domain) (\s@DescribeUserPoolDomain' {} a -> s {domain = a} :: DescribeUserPoolDomain)
   |                                                                                                                                ^^^^^^^^^^
[140 of 207] Compiling Amazonka.CognitoIdentityProvider.DescribeUserPoolClient

gen/Amazonka/CognitoIdentityProvider/DescribeUserPoolClient.hs:88:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type DescribeUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
88 | describeUserPoolClient_userPoolId = Lens.lens (\DescribeUserPoolClient' {userPoolId} -> userPoolId) (\s@DescribeUserPoolClient' {} a -> s {userPoolId = a} :: DescribeUserPoolClient)
   |                                                                                                                                            ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/DescribeUserPoolClient.hs:92:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type DescribeUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | describeUserPoolClient_clientId = Lens.lens (\DescribeUserPoolClient' {clientId} -> clientId) (\s@DescribeUserPoolClient' {} a -> s {clientId = a} :: DescribeUserPoolClient) Prelude.. Data._Sensitive
   |                                                                                                                                      ^^^^^^^^^^^^
[141 of 207] Compiling Amazonka.CognitoIdentityProvider.DescribeUserPool

gen/Amazonka/CognitoIdentityProvider/DescribeUserPool.hs:78:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type DescribeUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
78 | describeUserPool_userPoolId = Lens.lens (\DescribeUserPool' {userPoolId} -> userPoolId) (\s@DescribeUserPool' {} a -> s {userPoolId = a} :: DescribeUserPool)
   |                                                                                                                          ^^^^^^^^^^^^^^
[142 of 207] Compiling Amazonka.CognitoIdentityProvider.DescribeUserImportJob

gen/Amazonka/CognitoIdentityProvider/DescribeUserImportJob.hs:90:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type DescribeUserImportJob is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | describeUserImportJob_userPoolId = Lens.lens (\DescribeUserImportJob' {userPoolId} -> userPoolId) (\s@DescribeUserImportJob' {} a -> s {userPoolId = a} :: DescribeUserImportJob)
   |                                                                                                                                         ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/DescribeUserImportJob.hs:94:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {jobId = a} with type DescribeUserImportJob is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | describeUserImportJob_jobId = Lens.lens (\DescribeUserImportJob' {jobId} -> jobId) (\s@DescribeUserImportJob' {} a -> s {jobId = a} :: DescribeUserImportJob)
   |                                                                                                                          ^^^^^^^^^
[143 of 207] Compiling Amazonka.CognitoIdentityProvider.DescribeRiskConfiguration

gen/Amazonka/CognitoIdentityProvider/DescribeRiskConfiguration.hs:84:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type DescribeRiskConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
84 | describeRiskConfiguration_clientId = Lens.lens (\DescribeRiskConfiguration' {clientId} -> clientId) (\s@DescribeRiskConfiguration' {} a -> s {clientId = a} :: DescribeRiskConfiguration) Prelude.. Lens.mapping Data._Sensitive
   |                                                                                                                                               ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/DescribeRiskConfiguration.hs:88:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type DescribeRiskConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
88 | describeRiskConfiguration_userPoolId = Lens.lens (\DescribeRiskConfiguration' {userPoolId} -> userPoolId) (\s@DescribeRiskConfiguration' {} a -> s {userPoolId = a} :: DescribeRiskConfiguration)
   |                                                                                                                                                     ^^^^^^^^^^^^^^
[144 of 207] Compiling Amazonka.CognitoIdentityProvider.DescribeResourceServer

gen/Amazonka/CognitoIdentityProvider/DescribeResourceServer.hs:85:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type DescribeResourceServer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
85 | describeResourceServer_userPoolId = Lens.lens (\DescribeResourceServer' {userPoolId} -> userPoolId) (\s@DescribeResourceServer' {} a -> s {userPoolId = a} :: DescribeResourceServer)
   |                                                                                                                                            ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/DescribeResourceServer.hs:89:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identifier = a} with type DescribeResourceServer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
89 | describeResourceServer_identifier = Lens.lens (\DescribeResourceServer' {identifier} -> identifier) (\s@DescribeResourceServer' {} a -> s {identifier = a} :: DescribeResourceServer)
   |                                                                                                                                            ^^^^^^^^^^^^^^
[145 of 207] Compiling Amazonka.CognitoIdentityProvider.DescribeIdentityProvider

gen/Amazonka/CognitoIdentityProvider/DescribeIdentityProvider.hs:88:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type DescribeIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
88 | describeIdentityProvider_userPoolId = Lens.lens (\DescribeIdentityProvider' {userPoolId} -> userPoolId) (\s@DescribeIdentityProvider' {} a -> s {userPoolId = a} :: DescribeIdentityProvider)
   |                                                                                                                                                  ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/DescribeIdentityProvider.hs:92:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {providerName = a} with type DescribeIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | describeIdentityProvider_providerName = Lens.lens (\DescribeIdentityProvider' {providerName} -> providerName) (\s@DescribeIdentityProvider' {} a -> s {providerName = a} :: DescribeIdentityProvider)
   |                                                                                                                                                        ^^^^^^^^^^^^^^^^
[146 of 207] Compiling Amazonka.CognitoIdentityProvider.DeleteUserPoolDomain

gen/Amazonka/CognitoIdentityProvider/DeleteUserPoolDomain.hs:90:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domain = a} with type DeleteUserPoolDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | deleteUserPoolDomain_domain = Lens.lens (\DeleteUserPoolDomain' {domain} -> domain) (\s@DeleteUserPoolDomain' {} a -> s {domain = a} :: DeleteUserPoolDomain)
   |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/DeleteUserPoolDomain.hs:94:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type DeleteUserPoolDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | deleteUserPoolDomain_userPoolId = Lens.lens (\DeleteUserPoolDomain' {userPoolId} -> userPoolId) (\s@DeleteUserPoolDomain' {} a -> s {userPoolId = a} :: DeleteUserPoolDomain)
   |                                                                                                                                      ^^^^^^^^^^^^^^
[147 of 207] Compiling Amazonka.CognitoIdentityProvider.DeleteUserPoolClient

gen/Amazonka/CognitoIdentityProvider/DeleteUserPoolClient.hs:83:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type DeleteUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
83 | deleteUserPoolClient_userPoolId = Lens.lens (\DeleteUserPoolClient' {userPoolId} -> userPoolId) (\s@DeleteUserPoolClient' {} a -> s {userPoolId = a} :: DeleteUserPoolClient)
   |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/DeleteUserPoolClient.hs:87:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type DeleteUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | deleteUserPoolClient_clientId = Lens.lens (\DeleteUserPoolClient' {clientId} -> clientId) (\s@DeleteUserPoolClient' {} a -> s {clientId = a} :: DeleteUserPoolClient) Prelude.. Data._Sensitive
   |                                                                                                                                ^^^^^^^^^^^^
[148 of 207] Compiling Amazonka.CognitoIdentityProvider.DeleteUserPool

gen/Amazonka/CognitoIdentityProvider/DeleteUserPool.hs:73:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type DeleteUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
73 | deleteUserPool_userPoolId = Lens.lens (\DeleteUserPool' {userPoolId} -> userPoolId) (\s@DeleteUserPool' {} a -> s {userPoolId = a} :: DeleteUserPool)
   |                                                                                                                    ^^^^^^^^^^^^^^
[149 of 207] Compiling Amazonka.CognitoIdentityProvider.DeleteUserAttributes

gen/Amazonka/CognitoIdentityProvider/DeleteUserAttributes.hs:104:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type DeleteUserAttributes is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | deleteUserAttributes_accessToken = Lens.lens (\DeleteUserAttributes' {accessToken} -> accessToken) (\s@DeleteUserAttributes' {} a -> s {accessToken = a} :: DeleteUserAttributes) Prelude.. Data._Sensitive
    |                                                                                                                                         ^^^^^^^^^^^^^^^
[150 of 207] Compiling Amazonka.CognitoIdentityProvider.DeleteUser

gen/Amazonka/CognitoIdentityProvider/DeleteUser.hs:79:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type DeleteUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
79 | deleteUser_accessToken = Lens.lens (\DeleteUser' {accessToken} -> accessToken) (\s@DeleteUser' {} a -> s {accessToken = a} :: DeleteUser) Prelude.. Data._Sensitive
   |                                                                                                           ^^^^^^^^^^^^^^^
[151 of 207] Compiling Amazonka.CognitoIdentityProvider.DeleteResourceServer

gen/Amazonka/CognitoIdentityProvider/DeleteResourceServer.hs:81:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type DeleteResourceServer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
81 | deleteResourceServer_userPoolId = Lens.lens (\DeleteResourceServer' {userPoolId} -> userPoolId) (\s@DeleteResourceServer' {} a -> s {userPoolId = a} :: DeleteResourceServer)
   |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/DeleteResourceServer.hs:85:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identifier = a} with type DeleteResourceServer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
85 | deleteResourceServer_identifier = Lens.lens (\DeleteResourceServer' {identifier} -> identifier) (\s@DeleteResourceServer' {} a -> s {identifier = a} :: DeleteResourceServer)
   |                                                                                                                                      ^^^^^^^^^^^^^^
[152 of 207] Compiling Amazonka.CognitoIdentityProvider.DeleteIdentityProvider

gen/Amazonka/CognitoIdentityProvider/DeleteIdentityProvider.hs:81:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type DeleteIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
81 | deleteIdentityProvider_userPoolId = Lens.lens (\DeleteIdentityProvider' {userPoolId} -> userPoolId) (\s@DeleteIdentityProvider' {} a -> s {userPoolId = a} :: DeleteIdentityProvider)
   |                                                                                                                                            ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/DeleteIdentityProvider.hs:85:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {providerName = a} with type DeleteIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
85 | deleteIdentityProvider_providerName = Lens.lens (\DeleteIdentityProvider' {providerName} -> providerName) (\s@DeleteIdentityProvider' {} a -> s {providerName = a} :: DeleteIdentityProvider)
   |                                                                                                                                                  ^^^^^^^^^^^^^^^^
[153 of 207] Compiling Amazonka.CognitoIdentityProvider.DeleteGroup

gen/Amazonka/CognitoIdentityProvider/DeleteGroup.hs:83:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type DeleteGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
83 | deleteGroup_groupName = Lens.lens (\DeleteGroup' {groupName} -> groupName) (\s@DeleteGroup' {} a -> s {groupName = a} :: DeleteGroup)
   |                                                                                                        ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/DeleteGroup.hs:87:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type DeleteGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | deleteGroup_userPoolId = Lens.lens (\DeleteGroup' {userPoolId} -> userPoolId) (\s@DeleteGroup' {} a -> s {userPoolId = a} :: DeleteGroup)
   |                                                                                                           ^^^^^^^^^^^^^^
[154 of 207] Compiling Amazonka.CognitoIdentityProvider.CreateUserPoolDomain

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolDomain.hs:120:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customDomainConfig = a} with type CreateUserPoolDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | createUserPoolDomain_customDomainConfig = Lens.lens (\CreateUserPoolDomain' {customDomainConfig} -> customDomainConfig) (\s@CreateUserPoolDomain' {} a -> s {customDomainConfig = a} :: CreateUserPoolDomain)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolDomain.hs:126:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domain = a} with type CreateUserPoolDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
126 | createUserPoolDomain_domain = Lens.lens (\CreateUserPoolDomain' {domain} -> domain) (\s@CreateUserPoolDomain' {} a -> s {domain = a} :: CreateUserPoolDomain)
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolDomain.hs:130:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type CreateUserPoolDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
130 | createUserPoolDomain_userPoolId = Lens.lens (\CreateUserPoolDomain' {userPoolId} -> userPoolId) (\s@CreateUserPoolDomain' {} a -> s {userPoolId = a} :: CreateUserPoolDomain)
    |                                                                                                                                      ^^^^^^^^^^^^^^
[155 of 207] Compiling Amazonka.CognitoIdentityProvider.CreateUserPoolClient

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:580:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessTokenValidity = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
580 | createUserPoolClient_accessTokenValidity = Lens.lens (\CreateUserPoolClient' {accessTokenValidity} -> accessTokenValidity) (\s@CreateUserPoolClient' {} a -> s {accessTokenValidity = a} :: CreateUserPoolClient)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:598:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {allowedOAuthFlows = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
598 | createUserPoolClient_allowedOAuthFlows = Lens.lens (\CreateUserPoolClient' {allowedOAuthFlows} -> allowedOAuthFlows) (\s@CreateUserPoolClient' {} a -> s {allowedOAuthFlows = a} :: CreateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:603:197: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {allowedOAuthFlowsUserPoolClient = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
603 | createUserPoolClient_allowedOAuthFlowsUserPoolClient = Lens.lens (\CreateUserPoolClient' {allowedOAuthFlowsUserPoolClient} -> allowedOAuthFlowsUserPoolClient) (\s@CreateUserPoolClient' {} a -> s {allowedOAuthFlowsUserPoolClient = a} :: CreateUserPoolClient)
    |                                                                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:610:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {allowedOAuthScopes = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
610 | createUserPoolClient_allowedOAuthScopes = Lens.lens (\CreateUserPoolClient' {allowedOAuthScopes} -> allowedOAuthScopes) (\s@CreateUserPoolClient' {} a -> s {allowedOAuthScopes = a} :: CreateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:621:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {analyticsConfiguration = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
621 | createUserPoolClient_analyticsConfiguration = Lens.lens (\CreateUserPoolClient' {analyticsConfiguration} -> analyticsConfiguration) (\s@CreateUserPoolClient' {} a -> s {analyticsConfiguration = a} :: CreateUserPoolClient)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:628:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {authSessionValidity = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
628 | createUserPoolClient_authSessionValidity = Lens.lens (\CreateUserPoolClient' {authSessionValidity} -> authSessionValidity) (\s@CreateUserPoolClient' {} a -> s {authSessionValidity = a} :: CreateUserPoolClient)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:648:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {callbackURLs = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
648 | createUserPoolClient_callbackURLs = Lens.lens (\CreateUserPoolClient' {callbackURLs} -> callbackURLs) (\s@CreateUserPoolClient' {} a -> s {callbackURLs = a} :: CreateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                            ^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:668:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {defaultRedirectURI = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
668 | createUserPoolClient_defaultRedirectURI = Lens.lens (\CreateUserPoolClient' {defaultRedirectURI} -> defaultRedirectURI) (\s@CreateUserPoolClient' {} a -> s {defaultRedirectURI = a} :: CreateUserPoolClient)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:679:224: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {enablePropagateAdditionalUserContextData = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
679 | createUserPoolClient_enablePropagateAdditionalUserContextData = Lens.lens (\CreateUserPoolClient' {enablePropagateAdditionalUserContextData} -> enablePropagateAdditionalUserContextData) (\s@CreateUserPoolClient' {} a -> s {enablePropagateAdditionalUserContextData = a} :: CreateUserPoolClient)
    |                                                                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:688:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {enableTokenRevocation = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
688 | createUserPoolClient_enableTokenRevocation = Lens.lens (\CreateUserPoolClient' {enableTokenRevocation} -> enableTokenRevocation) (\s@CreateUserPoolClient' {} a -> s {enableTokenRevocation = a} :: CreateUserPoolClient)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:725:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {explicitAuthFlows = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
725 | createUserPoolClient_explicitAuthFlows = Lens.lens (\CreateUserPoolClient' {explicitAuthFlows} -> explicitAuthFlows) (\s@CreateUserPoolClient' {} a -> s {explicitAuthFlows = a} :: CreateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:747:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {idTokenValidity = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
747 | createUserPoolClient_idTokenValidity = Lens.lens (\CreateUserPoolClient' {idTokenValidity} -> idTokenValidity) (\s@CreateUserPoolClient' {} a -> s {idTokenValidity = a} :: CreateUserPoolClient)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:751:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {logoutURLs = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
751 | createUserPoolClient_logoutURLs = Lens.lens (\CreateUserPoolClient' {logoutURLs} -> logoutURLs) (\s@CreateUserPoolClient' {} a -> s {logoutURLs = a} :: CreateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:770:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {preventUserExistenceErrors = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
770 | createUserPoolClient_preventUserExistenceErrors = Lens.lens (\CreateUserPoolClient' {preventUserExistenceErrors} -> preventUserExistenceErrors) (\s@CreateUserPoolClient' {} a -> s {preventUserExistenceErrors = a} :: CreateUserPoolClient)
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:774:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {readAttributes = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
774 | createUserPoolClient_readAttributes = Lens.lens (\CreateUserPoolClient' {readAttributes} -> readAttributes) (\s@CreateUserPoolClient' {} a -> s {readAttributes = a} :: CreateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:793:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {refreshTokenValidity = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
793 | createUserPoolClient_refreshTokenValidity = Lens.lens (\CreateUserPoolClient' {refreshTokenValidity} -> refreshTokenValidity) (\s@CreateUserPoolClient' {} a -> s {refreshTokenValidity = a} :: CreateUserPoolClient)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:801:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {supportedIdentityProviders = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
801 | createUserPoolClient_supportedIdentityProviders = Lens.lens (\CreateUserPoolClient' {supportedIdentityProviders} -> supportedIdentityProviders) (\s@CreateUserPoolClient' {} a -> s {supportedIdentityProviders = a} :: CreateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:807:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tokenValidityUnits = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
807 | createUserPoolClient_tokenValidityUnits = Lens.lens (\CreateUserPoolClient' {tokenValidityUnits} -> tokenValidityUnits) (\s@CreateUserPoolClient' {} a -> s {tokenValidityUnits = a} :: CreateUserPoolClient)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:819:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {writeAttributes = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
819 | createUserPoolClient_writeAttributes = Lens.lens (\CreateUserPoolClient' {writeAttributes} -> writeAttributes) (\s@CreateUserPoolClient' {} a -> s {writeAttributes = a} :: CreateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:824:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
824 | createUserPoolClient_userPoolId = Lens.lens (\CreateUserPoolClient' {userPoolId} -> userPoolId) (\s@CreateUserPoolClient' {} a -> s {userPoolId = a} :: CreateUserPoolClient)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPoolClient.hs:828:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientName = a} with type CreateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
828 | createUserPoolClient_clientName = Lens.lens (\CreateUserPoolClient' {clientName} -> clientName) (\s@CreateUserPoolClient' {} a -> s {clientName = a} :: CreateUserPoolClient)
    |                                                                                                                                      ^^^^^^^^^^^^^^
[156 of 207] Compiling Amazonka.CognitoIdentityProvider.CreateUserPool

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:357:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accountRecoverySetting = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
357 | createUserPool_accountRecoverySetting = Lens.lens (\CreateUserPool' {accountRecoverySetting} -> accountRecoverySetting) (\s@CreateUserPool' {} a -> s {accountRecoverySetting = a} :: CreateUserPool)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:361:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {adminCreateUserConfig = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
361 | createUserPool_adminCreateUserConfig = Lens.lens (\CreateUserPool' {adminCreateUserConfig} -> adminCreateUserConfig) (\s@CreateUserPool' {} a -> s {adminCreateUserConfig = a} :: CreateUserPool)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:366:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {aliasAttributes = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
366 | createUserPool_aliasAttributes = Lens.lens (\CreateUserPool' {aliasAttributes} -> aliasAttributes) (\s@CreateUserPool' {} a -> s {aliasAttributes = a} :: CreateUserPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                   ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:371:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {autoVerifiedAttributes = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
371 | createUserPool_autoVerifiedAttributes = Lens.lens (\CreateUserPool' {autoVerifiedAttributes} -> autoVerifiedAttributes) (\s@CreateUserPool' {} a -> s {autoVerifiedAttributes = a} :: CreateUserPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:382:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deletionProtection = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
382 | createUserPool_deletionProtection = Lens.lens (\CreateUserPool' {deletionProtection} -> deletionProtection) (\s@CreateUserPool' {} a -> s {deletionProtection = a} :: CreateUserPool)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:391:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deviceConfiguration = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
391 | createUserPool_deviceConfiguration = Lens.lens (\CreateUserPool' {deviceConfiguration} -> deviceConfiguration) (\s@CreateUserPool' {} a -> s {deviceConfiguration = a} :: CreateUserPool)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:397:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {emailConfiguration = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
397 | createUserPool_emailConfiguration = Lens.lens (\CreateUserPool' {emailConfiguration} -> emailConfiguration) (\s@CreateUserPool' {} a -> s {emailConfiguration = a} :: CreateUserPool)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:402:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {emailVerificationMessage = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
402 | createUserPool_emailVerificationMessage = Lens.lens (\CreateUserPool' {emailVerificationMessage} -> emailVerificationMessage) (\s@CreateUserPool' {} a -> s {emailVerificationMessage = a} :: CreateUserPool)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:407:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {emailVerificationSubject = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
407 | createUserPool_emailVerificationSubject = Lens.lens (\CreateUserPool' {emailVerificationSubject} -> emailVerificationSubject) (\s@CreateUserPool' {} a -> s {emailVerificationSubject = a} :: CreateUserPool)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:424:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lambdaConfig = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
424 | createUserPool_lambdaConfig = Lens.lens (\CreateUserPool' {lambdaConfig} -> lambdaConfig) (\s@CreateUserPool' {} a -> s {lambdaConfig = a} :: CreateUserPool)
    |                                                                                                                          ^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:428:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {mfaConfiguration = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
428 | createUserPool_mfaConfiguration = Lens.lens (\CreateUserPool' {mfaConfiguration} -> mfaConfiguration) (\s@CreateUserPool' {} a -> s {mfaConfiguration = a} :: CreateUserPool)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:432:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policies = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
432 | createUserPool_policies = Lens.lens (\CreateUserPool' {policies} -> policies) (\s@CreateUserPool' {} a -> s {policies = a} :: CreateUserPool)
    |                                                                                                              ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:441:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {smsAuthenticationMessage = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
441 | createUserPool_smsAuthenticationMessage = Lens.lens (\CreateUserPool' {smsAuthenticationMessage} -> smsAuthenticationMessage) (\s@CreateUserPool' {} a -> s {smsAuthenticationMessage = a} :: CreateUserPool)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:450:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {smsConfiguration = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
450 | createUserPool_smsConfiguration = Lens.lens (\CreateUserPool' {smsConfiguration} -> smsConfiguration) (\s@CreateUserPool' {} a -> s {smsConfiguration = a} :: CreateUserPool)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:455:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {smsVerificationMessage = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
455 | createUserPool_smsVerificationMessage = Lens.lens (\CreateUserPool' {smsVerificationMessage} -> smsVerificationMessage) (\s@CreateUserPool' {} a -> s {smsVerificationMessage = a} :: CreateUserPool)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:464:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userAttributeUpdateSettings = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
464 | createUserPool_userAttributeUpdateSettings = Lens.lens (\CreateUserPool' {userAttributeUpdateSettings} -> userAttributeUpdateSettings) (\s@CreateUserPool' {} a -> s {userAttributeUpdateSettings = a} :: CreateUserPool)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:469:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolAddOns = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
469 | createUserPool_userPoolAddOns = Lens.lens (\CreateUserPool' {userPoolAddOns} -> userPoolAddOns) (\s@CreateUserPool' {} a -> s {userPoolAddOns = a} :: CreateUserPool)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:475:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolTags = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
475 | createUserPool_userPoolTags = Lens.lens (\CreateUserPool' {userPoolTags} -> userPoolTags) (\s@CreateUserPool' {} a -> s {userPoolTags = a} :: CreateUserPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                          ^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:480:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {usernameAttributes = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
480 | createUserPool_usernameAttributes = Lens.lens (\CreateUserPool' {usernameAttributes} -> usernameAttributes) (\s@CreateUserPool' {} a -> s {usernameAttributes = a} :: CreateUserPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:488:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {usernameConfiguration = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
488 | createUserPool_usernameConfiguration = Lens.lens (\CreateUserPool' {usernameConfiguration} -> usernameConfiguration) (\s@CreateUserPool' {} a -> s {usernameConfiguration = a} :: CreateUserPool)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserPool.hs:493:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {verificationMessageTemplate = a} with type CreateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
493 | createUserPool_verificationMessageTemplate = Lens.lens (\CreateUserPool' {verificationMessageTemplate} -> verificationMessageTemplate) (\s@CreateUserPool' {} a -> s {verificationMessageTemplate = a} :: CreateUserPool)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[157 of 207] Compiling Amazonka.CognitoIdentityProvider.CreateUserImportJob

gen/Amazonka/CognitoIdentityProvider/CreateUserImportJob.hs:102:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {jobName = a} with type CreateUserImportJob is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | createUserImportJob_jobName = Lens.lens (\CreateUserImportJob' {jobName} -> jobName) (\s@CreateUserImportJob' {} a -> s {jobName = a} :: CreateUserImportJob)
    |                                                                                                                          ^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserImportJob.hs:107:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type CreateUserImportJob is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
107 | createUserImportJob_userPoolId = Lens.lens (\CreateUserImportJob' {userPoolId} -> userPoolId) (\s@CreateUserImportJob' {} a -> s {userPoolId = a} :: CreateUserImportJob)
    |                                                                                                                                   ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateUserImportJob.hs:112:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cloudWatchLogsRoleArn = a} with type CreateUserImportJob is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | createUserImportJob_cloudWatchLogsRoleArn = Lens.lens (\CreateUserImportJob' {cloudWatchLogsRoleArn} -> cloudWatchLogsRoleArn) (\s@CreateUserImportJob' {} a -> s {cloudWatchLogsRoleArn = a} :: CreateUserImportJob)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
[158 of 207] Compiling Amazonka.CognitoIdentityProvider.CreateResourceServer

gen/Amazonka/CognitoIdentityProvider/CreateResourceServer.hs:110:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {scopes = a} with type CreateResourceServer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | createResourceServer_scopes = Lens.lens (\CreateResourceServer' {scopes} -> scopes) (\s@CreateResourceServer' {} a -> s {scopes = a} :: CreateResourceServer) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateResourceServer.hs:114:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type CreateResourceServer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | createResourceServer_userPoolId = Lens.lens (\CreateResourceServer' {userPoolId} -> userPoolId) (\s@CreateResourceServer' {} a -> s {userPoolId = a} :: CreateResourceServer)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateResourceServer.hs:120:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identifier = a} with type CreateResourceServer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | createResourceServer_identifier = Lens.lens (\CreateResourceServer' {identifier} -> identifier) (\s@CreateResourceServer' {} a -> s {identifier = a} :: CreateResourceServer)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateResourceServer.hs:124:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type CreateResourceServer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
124 | createResourceServer_name = Lens.lens (\CreateResourceServer' {name} -> name) (\s@CreateResourceServer' {} a -> s {name = a} :: CreateResourceServer)
    |                                                                                                                    ^^^^^^^^
[159 of 207] Compiling Amazonka.CognitoIdentityProvider.CreateIdentityProvider

gen/Amazonka/CognitoIdentityProvider/CreateIdentityProvider.hs:245:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {attributeMapping = a} with type CreateIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
245 | createIdentityProvider_attributeMapping = Lens.lens (\CreateIdentityProvider' {attributeMapping} -> attributeMapping) (\s@CreateIdentityProvider' {} a -> s {attributeMapping = a} :: CreateIdentityProvider) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateIdentityProvider.hs:249:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {idpIdentifiers = a} with type CreateIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
249 | createIdentityProvider_idpIdentifiers = Lens.lens (\CreateIdentityProvider' {idpIdentifiers} -> idpIdentifiers) (\s@CreateIdentityProvider' {} a -> s {idpIdentifiers = a} :: CreateIdentityProvider) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateIdentityProvider.hs:253:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type CreateIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
253 | createIdentityProvider_userPoolId = Lens.lens (\CreateIdentityProvider' {userPoolId} -> userPoolId) (\s@CreateIdentityProvider' {} a -> s {userPoolId = a} :: CreateIdentityProvider)
    |                                                                                                                                            ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateIdentityProvider.hs:257:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {providerName = a} with type CreateIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
257 | createIdentityProvider_providerName = Lens.lens (\CreateIdentityProvider' {providerName} -> providerName) (\s@CreateIdentityProvider' {} a -> s {providerName = a} :: CreateIdentityProvider)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateIdentityProvider.hs:261:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {providerType = a} with type CreateIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
261 | createIdentityProvider_providerType = Lens.lens (\CreateIdentityProvider' {providerType} -> providerType) (\s@CreateIdentityProvider' {} a -> s {providerType = a} :: CreateIdentityProvider)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateIdentityProvider.hs:330:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {providerDetails = a} with type CreateIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
330 | createIdentityProvider_providerDetails = Lens.lens (\CreateIdentityProvider' {providerDetails} -> providerDetails) (\s@CreateIdentityProvider' {} a -> s {providerDetails = a} :: CreateIdentityProvider) Prelude.. Lens.coerced
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^
[160 of 207] Compiling Amazonka.CognitoIdentityProvider.CreateGroup

gen/Amazonka/CognitoIdentityProvider/CreateGroup.hs:137:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {description = a} with type CreateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | createGroup_description = Lens.lens (\CreateGroup' {description} -> description) (\s@CreateGroup' {} a -> s {description = a} :: CreateGroup)
    |                                                                                                              ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateGroup.hs:157:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {precedence = a} with type CreateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
157 | createGroup_precedence = Lens.lens (\CreateGroup' {precedence} -> precedence) (\s@CreateGroup' {} a -> s {precedence = a} :: CreateGroup)
    |                                                                                                           ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateGroup.hs:161:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleArn = a} with type CreateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
161 | createGroup_roleArn = Lens.lens (\CreateGroup' {roleArn} -> roleArn) (\s@CreateGroup' {} a -> s {roleArn = a} :: CreateGroup)
    |                                                                                                  ^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateGroup.hs:165:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type CreateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
165 | createGroup_groupName = Lens.lens (\CreateGroup' {groupName} -> groupName) (\s@CreateGroup' {} a -> s {groupName = a} :: CreateGroup)
    |                                                                                                        ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/CreateGroup.hs:169:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type CreateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
169 | createGroup_userPoolId = Lens.lens (\CreateGroup' {userPoolId} -> userPoolId) (\s@CreateGroup' {} a -> s {userPoolId = a} :: CreateGroup)
    |                                                                                                           ^^^^^^^^^^^^^^
[161 of 207] Compiling Amazonka.CognitoIdentityProvider.ConfirmSignUp

gen/Amazonka/CognitoIdentityProvider/ConfirmSignUp.hs:264:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type ConfirmSignUp is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
264 | confirmSignUp_clientId = Lens.lens (\ConfirmSignUp' {clientId} -> clientId) (\s@ConfirmSignUp' {} a -> s {clientId = a} :: ConfirmSignUp) Prelude.. Data._Sensitive
    |                                                                                                           ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ConfirmSignUp.hs:268:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type ConfirmSignUp is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
268 | confirmSignUp_username = Lens.lens (\ConfirmSignUp' {username} -> username) (\s@ConfirmSignUp' {} a -> s {username = a} :: ConfirmSignUp) Prelude.. Data._Sensitive
    |                                                                                                           ^^^^^^^^^^^^
[162 of 207] Compiling Amazonka.CognitoIdentityProvider.ConfirmForgotPassword

gen/Amazonka/CognitoIdentityProvider/ConfirmForgotPassword.hs:256:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type ConfirmForgotPassword is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
256 | confirmForgotPassword_clientId = Lens.lens (\ConfirmForgotPassword' {clientId} -> clientId) (\s@ConfirmForgotPassword' {} a -> s {clientId = a} :: ConfirmForgotPassword) Prelude.. Data._Sensitive
    |                                                                                                                                   ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ConfirmForgotPassword.hs:261:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type ConfirmForgotPassword is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
261 | confirmForgotPassword_username = Lens.lens (\ConfirmForgotPassword' {username} -> username) (\s@ConfirmForgotPassword' {} a -> s {username = a} :: ConfirmForgotPassword) Prelude.. Data._Sensitive
    |                                                                                                                                   ^^^^^^^^^^^^
[163 of 207] Compiling Amazonka.CognitoIdentityProvider.ConfirmDevice

gen/Amazonka/CognitoIdentityProvider/ConfirmDevice.hs:102:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deviceName = a} with type ConfirmDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | confirmDevice_deviceName = Lens.lens (\ConfirmDevice' {deviceName} -> deviceName) (\s@ConfirmDevice' {} a -> s {deviceName = a} :: ConfirmDevice)
    |                                                                                                                 ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ConfirmDevice.hs:111:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type ConfirmDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
111 | confirmDevice_accessToken = Lens.lens (\ConfirmDevice' {accessToken} -> accessToken) (\s@ConfirmDevice' {} a -> s {accessToken = a} :: ConfirmDevice) Prelude.. Data._Sensitive
    |                                                                                                                    ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/ConfirmDevice.hs:115:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deviceKey = a} with type ConfirmDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | confirmDevice_deviceKey = Lens.lens (\ConfirmDevice' {deviceKey} -> deviceKey) (\s@ConfirmDevice' {} a -> s {deviceKey = a} :: ConfirmDevice)
    |                                                                                                              ^^^^^^^^^^^^^
[164 of 207] Compiling Amazonka.CognitoIdentityProvider.ChangePassword

gen/Amazonka/CognitoIdentityProvider/ChangePassword.hs:110:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type ChangePassword is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | changePassword_accessToken = Lens.lens (\ChangePassword' {accessToken} -> accessToken) (\s@ChangePassword' {} a -> s {accessToken = a} :: ChangePassword) Prelude.. Data._Sensitive
    |                                                                                                                       ^^^^^^^^^^^^^^^
[165 of 207] Compiling Amazonka.CognitoIdentityProvider.AssociateSoftwareToken

gen/Amazonka/CognitoIdentityProvider/AssociateSoftwareToken.hs:109:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type AssociateSoftwareToken is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | associateSoftwareToken_accessToken = Lens.lens (\AssociateSoftwareToken' {accessToken} -> accessToken) (\s@AssociateSoftwareToken' {} a -> s {accessToken = a} :: AssociateSoftwareToken) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                                                               ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AssociateSoftwareToken.hs:115:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {session = a} with type AssociateSoftwareToken is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | associateSoftwareToken_session = Lens.lens (\AssociateSoftwareToken' {session} -> session) (\s@AssociateSoftwareToken' {} a -> s {session = a} :: AssociateSoftwareToken)
    |                                                                                                                                   ^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AssociateSoftwareToken.hs:224:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {session = a} with type AssociateSoftwareTokenResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
224 | associateSoftwareTokenResponse_session = Lens.lens (\AssociateSoftwareTokenResponse' {session} -> session) (\s@AssociateSoftwareTokenResponse' {} a -> s {session = a} :: AssociateSoftwareTokenResponse)
    |                                                                                                                                                           ^^^^^^^^^^^
[166 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminUserGlobalSignOut

gen/Amazonka/CognitoIdentityProvider/AdminUserGlobalSignOut.hs:94:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminUserGlobalSignOut is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | adminUserGlobalSignOut_userPoolId = Lens.lens (\AdminUserGlobalSignOut' {userPoolId} -> userPoolId) (\s@AdminUserGlobalSignOut' {} a -> s {userPoolId = a} :: AdminUserGlobalSignOut)
   |                                                                                                                                            ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminUserGlobalSignOut.hs:98:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminUserGlobalSignOut is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | adminUserGlobalSignOut_username = Lens.lens (\AdminUserGlobalSignOut' {username} -> username) (\s@AdminUserGlobalSignOut' {} a -> s {username = a} :: AdminUserGlobalSignOut) Prelude.. Data._Sensitive
   |                                                                                                                                      ^^^^^^^^^^^^
[167 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminUpdateUserAttributes

gen/Amazonka/CognitoIdentityProvider/AdminUpdateUserAttributes.hs:255:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminUpdateUserAttributes is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
255 | adminUpdateUserAttributes_userPoolId = Lens.lens (\AdminUpdateUserAttributes' {userPoolId} -> userPoolId) (\s@AdminUpdateUserAttributes' {} a -> s {userPoolId = a} :: AdminUpdateUserAttributes)
    |                                                                                                                                                     ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminUpdateUserAttributes.hs:259:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminUpdateUserAttributes is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
259 | adminUpdateUserAttributes_username = Lens.lens (\AdminUpdateUserAttributes' {username} -> username) (\s@AdminUpdateUserAttributes' {} a -> s {username = a} :: AdminUpdateUserAttributes) Prelude.. Data._Sensitive
    |                                                                                                                                               ^^^^^^^^^^^^
[168 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminUpdateDeviceStatus

gen/Amazonka/CognitoIdentityProvider/AdminUpdateDeviceStatus.hs:110:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminUpdateDeviceStatus is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | adminUpdateDeviceStatus_userPoolId = Lens.lens (\AdminUpdateDeviceStatus' {userPoolId} -> userPoolId) (\s@AdminUpdateDeviceStatus' {} a -> s {userPoolId = a} :: AdminUpdateDeviceStatus)
    |                                                                                                                                               ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminUpdateDeviceStatus.hs:114:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminUpdateDeviceStatus is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | adminUpdateDeviceStatus_username = Lens.lens (\AdminUpdateDeviceStatus' {username} -> username) (\s@AdminUpdateDeviceStatus' {} a -> s {username = a} :: AdminUpdateDeviceStatus) Prelude.. Data._Sensitive
    |                                                                                                                                         ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminUpdateDeviceStatus.hs:118:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deviceKey = a} with type AdminUpdateDeviceStatus is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
118 | adminUpdateDeviceStatus_deviceKey = Lens.lens (\AdminUpdateDeviceStatus' {deviceKey} -> deviceKey) (\s@AdminUpdateDeviceStatus' {} a -> s {deviceKey = a} :: AdminUpdateDeviceStatus)
    |                                                                                                                                            ^^^^^^^^^^^^^
[169 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminUpdateAuthEventFeedback

gen/Amazonka/CognitoIdentityProvider/AdminUpdateAuthEventFeedback.hs:107:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminUpdateAuthEventFeedback is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
107 | adminUpdateAuthEventFeedback_userPoolId = Lens.lens (\AdminUpdateAuthEventFeedback' {userPoolId} -> userPoolId) (\s@AdminUpdateAuthEventFeedback' {} a -> s {userPoolId = a} :: AdminUpdateAuthEventFeedback)
    |                                                                                                                                                              ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminUpdateAuthEventFeedback.hs:111:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminUpdateAuthEventFeedback is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
111 | adminUpdateAuthEventFeedback_username = Lens.lens (\AdminUpdateAuthEventFeedback' {username} -> username) (\s@AdminUpdateAuthEventFeedback' {} a -> s {username = a} :: AdminUpdateAuthEventFeedback) Prelude.. Data._Sensitive
    |                                                                                                                                                        ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminUpdateAuthEventFeedback.hs:115:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {eventId = a} with type AdminUpdateAuthEventFeedback is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | adminUpdateAuthEventFeedback_eventId = Lens.lens (\AdminUpdateAuthEventFeedback' {eventId} -> eventId) (\s@AdminUpdateAuthEventFeedback' {} a -> s {eventId = a} :: AdminUpdateAuthEventFeedback)
    |                                                                                                                                                     ^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminUpdateAuthEventFeedback.hs:119:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {feedbackValue = a} with type AdminUpdateAuthEventFeedback is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | adminUpdateAuthEventFeedback_feedbackValue = Lens.lens (\AdminUpdateAuthEventFeedback' {feedbackValue} -> feedbackValue) (\s@AdminUpdateAuthEventFeedback' {} a -> s {feedbackValue = a} :: AdminUpdateAuthEventFeedback)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^
[170 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminSetUserSettings

gen/Amazonka/CognitoIdentityProvider/AdminSetUserSettings.hs:102:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminSetUserSettings is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | adminSetUserSettings_userPoolId = Lens.lens (\AdminSetUserSettings' {userPoolId} -> userPoolId) (\s@AdminSetUserSettings' {} a -> s {userPoolId = a} :: AdminSetUserSettings)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminSetUserSettings.hs:106:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminSetUserSettings is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | adminSetUserSettings_username = Lens.lens (\AdminSetUserSettings' {username} -> username) (\s@AdminSetUserSettings' {} a -> s {username = a} :: AdminSetUserSettings) Prelude.. Data._Sensitive
    |                                                                                                                                ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminSetUserSettings.hs:111:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {mfaOptions = a} with type AdminSetUserSettings is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
111 | adminSetUserSettings_mfaOptions = Lens.lens (\AdminSetUserSettings' {mfaOptions} -> mfaOptions) (\s@AdminSetUserSettings' {} a -> s {mfaOptions = a} :: AdminSetUserSettings) Prelude.. Lens.coerced
    |                                                                                                                                      ^^^^^^^^^^^^^^
[171 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminSetUserPassword

gen/Amazonka/CognitoIdentityProvider/AdminSetUserPassword.hs:119:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminSetUserPassword is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | adminSetUserPassword_userPoolId = Lens.lens (\AdminSetUserPassword' {userPoolId} -> userPoolId) (\s@AdminSetUserPassword' {} a -> s {userPoolId = a} :: AdminSetUserPassword)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminSetUserPassword.hs:123:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminSetUserPassword is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | adminSetUserPassword_username = Lens.lens (\AdminSetUserPassword' {username} -> username) (\s@AdminSetUserPassword' {} a -> s {username = a} :: AdminSetUserPassword) Prelude.. Data._Sensitive
    |                                                                                                                                ^^^^^^^^^^^^
[172 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminSetUserMFAPreference

gen/Amazonka/CognitoIdentityProvider/AdminSetUserMFAPreference.hs:110:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminSetUserMFAPreference is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | adminSetUserMFAPreference_username = Lens.lens (\AdminSetUserMFAPreference' {username} -> username) (\s@AdminSetUserMFAPreference' {} a -> s {username = a} :: AdminSetUserMFAPreference) Prelude.. Data._Sensitive
    |                                                                                                                                               ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminSetUserMFAPreference.hs:114:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminSetUserMFAPreference is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | adminSetUserMFAPreference_userPoolId = Lens.lens (\AdminSetUserMFAPreference' {userPoolId} -> userPoolId) (\s@AdminSetUserMFAPreference' {} a -> s {userPoolId = a} :: AdminSetUserMFAPreference)
    |                                                                                                                                                     ^^^^^^^^^^^^^^
[173 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminRespondToAuthChallenge

gen/Amazonka/CognitoIdentityProvider/AdminRespondToAuthChallenge.hs:383:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {challengeResponses = a} with type AdminRespondToAuthChallenge is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
383 | adminRespondToAuthChallenge_challengeResponses = Lens.lens (\AdminRespondToAuthChallenge' {challengeResponses} -> challengeResponses) (\s@AdminRespondToAuthChallenge' {} a -> s {challengeResponses = a} :: AdminRespondToAuthChallenge) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminRespondToAuthChallenge.hs:448:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {session = a} with type AdminRespondToAuthChallenge is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
448 | adminRespondToAuthChallenge_session = Lens.lens (\AdminRespondToAuthChallenge' {session} -> session) (\s@AdminRespondToAuthChallenge' {} a -> s {session = a} :: AdminRespondToAuthChallenge)
    |                                                                                                                                                  ^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminRespondToAuthChallenge.hs:452:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminRespondToAuthChallenge is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
452 | adminRespondToAuthChallenge_userPoolId = Lens.lens (\AdminRespondToAuthChallenge' {userPoolId} -> userPoolId) (\s@AdminRespondToAuthChallenge' {} a -> s {userPoolId = a} :: AdminRespondToAuthChallenge)
    |                                                                                                                                                           ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminRespondToAuthChallenge.hs:456:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type AdminRespondToAuthChallenge is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
456 | adminRespondToAuthChallenge_clientId = Lens.lens (\AdminRespondToAuthChallenge' {clientId} -> clientId) (\s@AdminRespondToAuthChallenge' {} a -> s {clientId = a} :: AdminRespondToAuthChallenge) Prelude.. Data._Sensitive
    |                                                                                                                                                     ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminRespondToAuthChallenge.hs:461:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {challengeName = a} with type AdminRespondToAuthChallenge is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
461 | adminRespondToAuthChallenge_challengeName = Lens.lens (\AdminRespondToAuthChallenge' {challengeName} -> challengeName) (\s@AdminRespondToAuthChallenge' {} a -> s {challengeName = a} :: AdminRespondToAuthChallenge)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminRespondToAuthChallenge.hs:614:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {challengeName = a} with type AdminRespondToAuthChallengeResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
614 | adminRespondToAuthChallengeResponse_challengeName = Lens.lens (\AdminRespondToAuthChallengeResponse' {challengeName} -> challengeName) (\s@AdminRespondToAuthChallengeResponse' {} a -> s {challengeName = a} :: AdminRespondToAuthChallengeResponse)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminRespondToAuthChallenge.hs:626:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {session = a} with type AdminRespondToAuthChallengeResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
626 | adminRespondToAuthChallengeResponse_session = Lens.lens (\AdminRespondToAuthChallengeResponse' {session} -> session) (\s@AdminRespondToAuthChallengeResponse' {} a -> s {session = a} :: AdminRespondToAuthChallengeResponse)
    |                                                                                                                                                                          ^^^^^^^^^^^
[174 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminResetUserPassword

gen/Amazonka/CognitoIdentityProvider/AdminResetUserPassword.hs:216:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminResetUserPassword is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
216 | adminResetUserPassword_userPoolId = Lens.lens (\AdminResetUserPassword' {userPoolId} -> userPoolId) (\s@AdminResetUserPassword' {} a -> s {userPoolId = a} :: AdminResetUserPassword)
    |                                                                                                                                            ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminResetUserPassword.hs:220:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminResetUserPassword is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
220 | adminResetUserPassword_username = Lens.lens (\AdminResetUserPassword' {username} -> username) (\s@AdminResetUserPassword' {} a -> s {username = a} :: AdminResetUserPassword) Prelude.. Data._Sensitive
    |                                                                                                                                      ^^^^^^^^^^^^
[175 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminRemoveUserFromGroup

gen/Amazonka/CognitoIdentityProvider/AdminRemoveUserFromGroup.hs:95:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminRemoveUserFromGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
95 | adminRemoveUserFromGroup_userPoolId = Lens.lens (\AdminRemoveUserFromGroup' {userPoolId} -> userPoolId) (\s@AdminRemoveUserFromGroup' {} a -> s {userPoolId = a} :: AdminRemoveUserFromGroup)
   |                                                                                                                                                  ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminRemoveUserFromGroup.hs:99:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminRemoveUserFromGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | adminRemoveUserFromGroup_username = Lens.lens (\AdminRemoveUserFromGroup' {username} -> username) (\s@AdminRemoveUserFromGroup' {} a -> s {username = a} :: AdminRemoveUserFromGroup) Prelude.. Data._Sensitive
   |                                                                                                                                            ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminRemoveUserFromGroup.hs:103:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type AdminRemoveUserFromGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
103 | adminRemoveUserFromGroup_groupName = Lens.lens (\AdminRemoveUserFromGroup' {groupName} -> groupName) (\s@AdminRemoveUserFromGroup' {} a -> s {groupName = a} :: AdminRemoveUserFromGroup)
    |                                                                                                                                               ^^^^^^^^^^^^^
[176 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminListUserAuthEvents

gen/Amazonka/CognitoIdentityProvider/AdminListUserAuthEvents.hs:112:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type AdminListUserAuthEvents is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | adminListUserAuthEvents_nextToken = Lens.lens (\AdminListUserAuthEvents' {nextToken} -> nextToken) (\s@AdminListUserAuthEvents' {} a -> s {nextToken = a} :: AdminListUserAuthEvents)
    |                                                                                                                                            ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminListUserAuthEvents.hs:116:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminListUserAuthEvents is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | adminListUserAuthEvents_userPoolId = Lens.lens (\AdminListUserAuthEvents' {userPoolId} -> userPoolId) (\s@AdminListUserAuthEvents' {} a -> s {userPoolId = a} :: AdminListUserAuthEvents)
    |                                                                                                                                               ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminListUserAuthEvents.hs:120:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminListUserAuthEvents is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | adminListUserAuthEvents_username = Lens.lens (\AdminListUserAuthEvents' {username} -> username) (\s@AdminListUserAuthEvents' {} a -> s {username = a} :: AdminListUserAuthEvents) Prelude.. Data._Sensitive
    |                                                                                                                                         ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminListUserAuthEvents.hs:251:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type AdminListUserAuthEventsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
251 | adminListUserAuthEventsResponse_nextToken = Lens.lens (\AdminListUserAuthEventsResponse' {nextToken} -> nextToken) (\s@AdminListUserAuthEventsResponse' {} a -> s {nextToken = a} :: AdminListUserAuthEventsResponse)
    |                                                                                                                                                                    ^^^^^^^^^^^^^
[177 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminListGroupsForUser

gen/Amazonka/CognitoIdentityProvider/AdminListGroupsForUser.hs:112:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type AdminListGroupsForUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | adminListGroupsForUser_nextToken = Lens.lens (\AdminListGroupsForUser' {nextToken} -> nextToken) (\s@AdminListGroupsForUser' {} a -> s {nextToken = a} :: AdminListGroupsForUser)
    |                                                                                                                                         ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminListGroupsForUser.hs:116:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminListGroupsForUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | adminListGroupsForUser_username = Lens.lens (\AdminListGroupsForUser' {username} -> username) (\s@AdminListGroupsForUser' {} a -> s {username = a} :: AdminListGroupsForUser) Prelude.. Data._Sensitive
    |                                                                                                                                      ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminListGroupsForUser.hs:120:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminListGroupsForUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | adminListGroupsForUser_userPoolId = Lens.lens (\AdminListGroupsForUser' {userPoolId} -> userPoolId) (\s@AdminListGroupsForUser' {} a -> s {userPoolId = a} :: AdminListGroupsForUser)
    |                                                                                                                                            ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminListGroupsForUser.hs:254:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type AdminListGroupsForUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
254 | adminListGroupsForUserResponse_nextToken = Lens.lens (\AdminListGroupsForUserResponse' {nextToken} -> nextToken) (\s@AdminListGroupsForUserResponse' {} a -> s {nextToken = a} :: AdminListGroupsForUserResponse)
    |                                                                                                                                                                 ^^^^^^^^^^^^^
[178 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminListDevices

gen/Amazonka/CognitoIdentityProvider/AdminListDevices.hs:106:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {paginationToken = a} with type AdminListDevices is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | adminListDevices_paginationToken = Lens.lens (\AdminListDevices' {paginationToken} -> paginationToken) (\s@AdminListDevices' {} a -> s {paginationToken = a} :: AdminListDevices)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminListDevices.hs:110:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminListDevices is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | adminListDevices_userPoolId = Lens.lens (\AdminListDevices' {userPoolId} -> userPoolId) (\s@AdminListDevices' {} a -> s {userPoolId = a} :: AdminListDevices)
    |                                                                                                                          ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminListDevices.hs:114:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminListDevices is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | adminListDevices_username = Lens.lens (\AdminListDevices' {username} -> username) (\s@AdminListDevices' {} a -> s {username = a} :: AdminListDevices) Prelude.. Data._Sensitive
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminListDevices.hs:223:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {paginationToken = a} with type AdminListDevicesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
223 | adminListDevicesResponse_paginationToken = Lens.lens (\AdminListDevicesResponse' {paginationToken} -> paginationToken) (\s@AdminListDevicesResponse' {} a -> s {paginationToken = a} :: AdminListDevicesResponse)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^
[179 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminLinkProviderForUser

gen/Amazonka/CognitoIdentityProvider/AdminLinkProviderForUser.hs:189:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminLinkProviderForUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
189 | adminLinkProviderForUser_userPoolId = Lens.lens (\AdminLinkProviderForUser' {userPoolId} -> userPoolId) (\s@AdminLinkProviderForUser' {} a -> s {userPoolId = a} :: AdminLinkProviderForUser)
    |                                                                                                                                                  ^^^^^^^^^^^^^^
[180 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminInitiateAuth

gen/Amazonka/CognitoIdentityProvider/AdminInitiateAuth.hs:453:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminInitiateAuth is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
453 | adminInitiateAuth_userPoolId = Lens.lens (\AdminInitiateAuth' {userPoolId} -> userPoolId) (\s@AdminInitiateAuth' {} a -> s {userPoolId = a} :: AdminInitiateAuth)
    |                                                                                                                             ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminInitiateAuth.hs:457:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type AdminInitiateAuth is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
457 | adminInitiateAuth_clientId = Lens.lens (\AdminInitiateAuth' {clientId} -> clientId) (\s@AdminInitiateAuth' {} a -> s {clientId = a} :: AdminInitiateAuth) Prelude.. Data._Sensitive
    |                                                                                                                       ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminInitiateAuth.hs:846:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {challengeName = a} with type AdminInitiateAuthResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
846 | adminInitiateAuthResponse_challengeName = Lens.lens (\AdminInitiateAuthResponse' {challengeName} -> challengeName) (\s@AdminInitiateAuthResponse' {} a -> s {challengeName = a} :: AdminInitiateAuthResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^
[181 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminGetUser

gen/Amazonka/CognitoIdentityProvider/AdminGetUser.hs:101:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminGetUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | adminGetUser_userPoolId = Lens.lens (\AdminGetUser' {userPoolId} -> userPoolId) (\s@AdminGetUser' {} a -> s {userPoolId = a} :: AdminGetUser)
    |                                                                                                              ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminGetUser.hs:105:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminGetUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
105 | adminGetUser_username = Lens.lens (\AdminGetUser' {username} -> username) (\s@AdminGetUser' {} a -> s {username = a} :: AdminGetUser) Prelude.. Data._Sensitive
    |                                                                                                        ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminGetUser.hs:288:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {enabled = a} with type AdminGetUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
288 | adminGetUserResponse_enabled = Lens.lens (\AdminGetUserResponse' {enabled} -> enabled) (\s@AdminGetUserResponse' {} a -> s {enabled = a} :: AdminGetUserResponse)
    |                                                                                                                             ^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminGetUser.hs:296:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {mfaOptions = a} with type AdminGetUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
296 | adminGetUserResponse_mfaOptions = Lens.lens (\AdminGetUserResponse' {mfaOptions} -> mfaOptions) (\s@AdminGetUserResponse' {} a -> s {mfaOptions = a} :: AdminGetUserResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminGetUser.hs:308:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userCreateDate = a} with type AdminGetUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
308 | adminGetUserResponse_userCreateDate = Lens.lens (\AdminGetUserResponse' {userCreateDate} -> userCreateDate) (\s@AdminGetUserResponse' {} a -> s {userCreateDate = a} :: AdminGetUserResponse) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminGetUser.hs:312:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userLastModifiedDate = a} with type AdminGetUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
312 | adminGetUserResponse_userLastModifiedDate = Lens.lens (\AdminGetUserResponse' {userLastModifiedDate} -> userLastModifiedDate) (\s@AdminGetUserResponse' {} a -> s {userLastModifiedDate = a} :: AdminGetUserResponse) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminGetUser.hs:336:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userStatus = a} with type AdminGetUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
336 | adminGetUserResponse_userStatus = Lens.lens (\AdminGetUserResponse' {userStatus} -> userStatus) (\s@AdminGetUserResponse' {} a -> s {userStatus = a} :: AdminGetUserResponse)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminGetUser.hs:344:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminGetUserResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
344 | adminGetUserResponse_username = Lens.lens (\AdminGetUserResponse' {username} -> username) (\s@AdminGetUserResponse' {} a -> s {username = a} :: AdminGetUserResponse) Prelude.. Data._Sensitive
    |                                                                                                                                ^^^^^^^^^^^^
[182 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminGetDevice

gen/Amazonka/CognitoIdentityProvider/AdminGetDevice.hs:97:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deviceKey = a} with type AdminGetDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
97 | adminGetDevice_deviceKey = Lens.lens (\AdminGetDevice' {deviceKey} -> deviceKey) (\s@AdminGetDevice' {} a -> s {deviceKey = a} :: AdminGetDevice)
   |                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminGetDevice.hs:101:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminGetDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | adminGetDevice_userPoolId = Lens.lens (\AdminGetDevice' {userPoolId} -> userPoolId) (\s@AdminGetDevice' {} a -> s {userPoolId = a} :: AdminGetDevice)
    |                                                                                                                    ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminGetDevice.hs:105:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminGetDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
105 | adminGetDevice_username = Lens.lens (\AdminGetDevice' {username} -> username) (\s@AdminGetDevice' {} a -> s {username = a} :: AdminGetDevice) Prelude.. Data._Sensitive
    |                                                                                                              ^^^^^^^^^^^^
[183 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminForgetDevice

gen/Amazonka/CognitoIdentityProvider/AdminForgetDevice.hs:96:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminForgetDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
96 | adminForgetDevice_userPoolId = Lens.lens (\AdminForgetDevice' {userPoolId} -> userPoolId) (\s@AdminForgetDevice' {} a -> s {userPoolId = a} :: AdminForgetDevice)
   |                                                                                                                             ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminForgetDevice.hs:100:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminForgetDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | adminForgetDevice_username = Lens.lens (\AdminForgetDevice' {username} -> username) (\s@AdminForgetDevice' {} a -> s {username = a} :: AdminForgetDevice) Prelude.. Data._Sensitive
    |                                                                                                                       ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminForgetDevice.hs:104:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deviceKey = a} with type AdminForgetDevice is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | adminForgetDevice_deviceKey = Lens.lens (\AdminForgetDevice' {deviceKey} -> deviceKey) (\s@AdminForgetDevice' {} a -> s {deviceKey = a} :: AdminForgetDevice)
    |                                                                                                                          ^^^^^^^^^^^^^
[184 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminEnableUser

gen/Amazonka/CognitoIdentityProvider/AdminEnableUser.hs:88:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminEnableUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
88 | adminEnableUser_userPoolId = Lens.lens (\AdminEnableUser' {userPoolId} -> userPoolId) (\s@AdminEnableUser' {} a -> s {userPoolId = a} :: AdminEnableUser)
   |                                                                                                                       ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminEnableUser.hs:92:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminEnableUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | adminEnableUser_username = Lens.lens (\AdminEnableUser' {username} -> username) (\s@AdminEnableUser' {} a -> s {username = a} :: AdminEnableUser) Prelude.. Data._Sensitive
   |                                                                                                                 ^^^^^^^^^^^^
[185 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminDisableUser

gen/Amazonka/CognitoIdentityProvider/AdminDisableUser.hs:91:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminDisableUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
91 | adminDisableUser_userPoolId = Lens.lens (\AdminDisableUser' {userPoolId} -> userPoolId) (\s@AdminDisableUser' {} a -> s {userPoolId = a} :: AdminDisableUser)
   |                                                                                                                          ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminDisableUser.hs:95:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminDisableUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
95 | adminDisableUser_username = Lens.lens (\AdminDisableUser' {username} -> username) (\s@AdminDisableUser' {} a -> s {username = a} :: AdminDisableUser) Prelude.. Data._Sensitive
   |                                                                                                                    ^^^^^^^^^^^^
[186 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminDisableProviderForUser

gen/Amazonka/CognitoIdentityProvider/AdminDisableProviderForUser.hs:118:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminDisableProviderForUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
118 | adminDisableProviderForUser_userPoolId = Lens.lens (\AdminDisableProviderForUser' {userPoolId} -> userPoolId) (\s@AdminDisableProviderForUser' {} a -> s {userPoolId = a} :: AdminDisableProviderForUser)
    |                                                                                                                                                           ^^^^^^^^^^^^^^
[187 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminDeleteUserAttributes

gen/Amazonka/CognitoIdentityProvider/AdminDeleteUserAttributes.hs:109:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminDeleteUserAttributes is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | adminDeleteUserAttributes_userPoolId = Lens.lens (\AdminDeleteUserAttributes' {userPoolId} -> userPoolId) (\s@AdminDeleteUserAttributes' {} a -> s {userPoolId = a} :: AdminDeleteUserAttributes)
    |                                                                                                                                                     ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminDeleteUserAttributes.hs:114:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminDeleteUserAttributes is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | adminDeleteUserAttributes_username = Lens.lens (\AdminDeleteUserAttributes' {username} -> username) (\s@AdminDeleteUserAttributes' {} a -> s {username = a} :: AdminDeleteUserAttributes) Prelude.. Data._Sensitive
    |                                                                                                                                               ^^^^^^^^^^^^
[188 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminDeleteUser

gen/Amazonka/CognitoIdentityProvider/AdminDeleteUser.hs:85:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminDeleteUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
85 | adminDeleteUser_userPoolId = Lens.lens (\AdminDeleteUser' {userPoolId} -> userPoolId) (\s@AdminDeleteUser' {} a -> s {userPoolId = a} :: AdminDeleteUser)
   |                                                                                                                       ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminDeleteUser.hs:89:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminDeleteUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
89 | adminDeleteUser_username = Lens.lens (\AdminDeleteUser' {username} -> username) (\s@AdminDeleteUser' {} a -> s {username = a} :: AdminDeleteUser) Prelude.. Data._Sensitive
   |                                                                                                                 ^^^^^^^^^^^^
[189 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminCreateUser

gen/Amazonka/CognitoIdentityProvider/AdminCreateUser.hs:486:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminCreateUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
486 | adminCreateUser_userPoolId = Lens.lens (\AdminCreateUser' {userPoolId} -> userPoolId) (\s@AdminCreateUser' {} a -> s {userPoolId = a} :: AdminCreateUser)
    |                                                                                                                       ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminCreateUser.hs:492:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminCreateUser is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
492 | adminCreateUser_username = Lens.lens (\AdminCreateUser' {username} -> username) (\s@AdminCreateUser' {} a -> s {username = a} :: AdminCreateUser) Prelude.. Data._Sensitive
    |                                                                                                                 ^^^^^^^^^^^^
[190 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminConfirmSignUp

gen/Amazonka/CognitoIdentityProvider/AdminConfirmSignUp.hs:184:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminConfirmSignUp is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
184 | adminConfirmSignUp_userPoolId = Lens.lens (\AdminConfirmSignUp' {userPoolId} -> userPoolId) (\s@AdminConfirmSignUp' {} a -> s {userPoolId = a} :: AdminConfirmSignUp)
    |                                                                                                                                ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminConfirmSignUp.hs:188:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminConfirmSignUp is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
188 | adminConfirmSignUp_username = Lens.lens (\AdminConfirmSignUp' {username} -> username) (\s@AdminConfirmSignUp' {} a -> s {username = a} :: AdminConfirmSignUp) Prelude.. Data._Sensitive
    |                                                                                                                          ^^^^^^^^^^^^
[191 of 207] Compiling Amazonka.CognitoIdentityProvider.AdminAddUserToGroup

gen/Amazonka/CognitoIdentityProvider/AdminAddUserToGroup.hs:94:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AdminAddUserToGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | adminAddUserToGroup_userPoolId = Lens.lens (\AdminAddUserToGroup' {userPoolId} -> userPoolId) (\s@AdminAddUserToGroup' {} a -> s {userPoolId = a} :: AdminAddUserToGroup)
   |                                                                                                                                   ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminAddUserToGroup.hs:98:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type AdminAddUserToGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | adminAddUserToGroup_username = Lens.lens (\AdminAddUserToGroup' {username} -> username) (\s@AdminAddUserToGroup' {} a -> s {username = a} :: AdminAddUserToGroup) Prelude.. Data._Sensitive
   |                                                                                                                             ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/AdminAddUserToGroup.hs:102:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type AdminAddUserToGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | adminAddUserToGroup_groupName = Lens.lens (\AdminAddUserToGroup' {groupName} -> groupName) (\s@AdminAddUserToGroup' {} a -> s {groupName = a} :: AdminAddUserToGroup)
    |                                                                                                                                ^^^^^^^^^^^^^
[192 of 207] Compiling Amazonka.CognitoIdentityProvider.AddCustomAttributes

gen/Amazonka/CognitoIdentityProvider/AddCustomAttributes.hs:92:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type AddCustomAttributes is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | addCustomAttributes_userPoolId = Lens.lens (\AddCustomAttributes' {userPoolId} -> userPoolId) (\s@AddCustomAttributes' {} a -> s {userPoolId = a} :: AddCustomAttributes)
   |                                                                                                                                   ^^^^^^^^^^^^^^
[193 of 207] Compiling Amazonka.CognitoIdentityProvider.UntagResource
[194 of 207] Compiling Amazonka.CognitoIdentityProvider.UpdateAuthEventFeedback

gen/Amazonka/CognitoIdentityProvider/UpdateAuthEventFeedback.hs:117:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type UpdateAuthEventFeedback is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
117 | updateAuthEventFeedback_userPoolId = Lens.lens (\UpdateAuthEventFeedback' {userPoolId} -> userPoolId) (\s@UpdateAuthEventFeedback' {} a -> s {userPoolId = a} :: UpdateAuthEventFeedback)
    |                                                                                                                                               ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateAuthEventFeedback.hs:121:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {username = a} with type UpdateAuthEventFeedback is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
121 | updateAuthEventFeedback_username = Lens.lens (\UpdateAuthEventFeedback' {username} -> username) (\s@UpdateAuthEventFeedback' {} a -> s {username = a} :: UpdateAuthEventFeedback) Prelude.. Data._Sensitive
    |                                                                                                                                         ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateAuthEventFeedback.hs:125:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {eventId = a} with type UpdateAuthEventFeedback is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
125 | updateAuthEventFeedback_eventId = Lens.lens (\UpdateAuthEventFeedback' {eventId} -> eventId) (\s@UpdateAuthEventFeedback' {} a -> s {eventId = a} :: UpdateAuthEventFeedback)
    |                                                                                                                                      ^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateAuthEventFeedback.hs:133:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {feedbackValue = a} with type UpdateAuthEventFeedback is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
133 | updateAuthEventFeedback_feedbackValue = Lens.lens (\UpdateAuthEventFeedback' {feedbackValue} -> feedbackValue) (\s@UpdateAuthEventFeedback' {} a -> s {feedbackValue = a} :: UpdateAuthEventFeedback)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^
[195 of 207] Compiling Amazonka.CognitoIdentityProvider.UpdateDeviceStatus

gen/Amazonka/CognitoIdentityProvider/UpdateDeviceStatus.hs:100:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type UpdateDeviceStatus is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | updateDeviceStatus_accessToken = Lens.lens (\UpdateDeviceStatus' {accessToken} -> accessToken) (\s@UpdateDeviceStatus' {} a -> s {accessToken = a} :: UpdateDeviceStatus) Prelude.. Data._Sensitive
    |                                                                                                                                   ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateDeviceStatus.hs:104:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deviceKey = a} with type UpdateDeviceStatus is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | updateDeviceStatus_deviceKey = Lens.lens (\UpdateDeviceStatus' {deviceKey} -> deviceKey) (\s@UpdateDeviceStatus' {} a -> s {deviceKey = a} :: UpdateDeviceStatus)
    |                                                                                                                             ^^^^^^^^^^^^^
[196 of 207] Compiling Amazonka.CognitoIdentityProvider.UpdateGroup

gen/Amazonka/CognitoIdentityProvider/UpdateGroup.hs:113:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {description = a} with type UpdateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | updateGroup_description = Lens.lens (\UpdateGroup' {description} -> description) (\s@UpdateGroup' {} a -> s {description = a} :: UpdateGroup)
    |                                                                                                              ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateGroup.hs:119:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {precedence = a} with type UpdateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | updateGroup_precedence = Lens.lens (\UpdateGroup' {precedence} -> precedence) (\s@UpdateGroup' {} a -> s {precedence = a} :: UpdateGroup)
    |                                                                                                           ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateGroup.hs:125:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleArn = a} with type UpdateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
125 | updateGroup_roleArn = Lens.lens (\UpdateGroup' {roleArn} -> roleArn) (\s@UpdateGroup' {} a -> s {roleArn = a} :: UpdateGroup)
    |                                                                                                  ^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateGroup.hs:129:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {groupName = a} with type UpdateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | updateGroup_groupName = Lens.lens (\UpdateGroup' {groupName} -> groupName) (\s@UpdateGroup' {} a -> s {groupName = a} :: UpdateGroup)
    |                                                                                                        ^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateGroup.hs:133:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type UpdateGroup is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
133 | updateGroup_userPoolId = Lens.lens (\UpdateGroup' {userPoolId} -> userPoolId) (\s@UpdateGroup' {} a -> s {userPoolId = a} :: UpdateGroup)
    |                                                                                                           ^^^^^^^^^^^^^^
[197 of 207] Compiling Amazonka.CognitoIdentityProvider.UpdateIdentityProvider

gen/Amazonka/CognitoIdentityProvider/UpdateIdentityProvider.hs:104:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {attributeMapping = a} with type UpdateIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | updateIdentityProvider_attributeMapping = Lens.lens (\UpdateIdentityProvider' {attributeMapping} -> attributeMapping) (\s@UpdateIdentityProvider' {} a -> s {attributeMapping = a} :: UpdateIdentityProvider) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateIdentityProvider.hs:108:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {idpIdentifiers = a} with type UpdateIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | updateIdentityProvider_idpIdentifiers = Lens.lens (\UpdateIdentityProvider' {idpIdentifiers} -> idpIdentifiers) (\s@UpdateIdentityProvider' {} a -> s {idpIdentifiers = a} :: UpdateIdentityProvider) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateIdentityProvider.hs:112:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {providerDetails = a} with type UpdateIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
112 | updateIdentityProvider_providerDetails = Lens.lens (\UpdateIdentityProvider' {providerDetails} -> providerDetails) (\s@UpdateIdentityProvider' {} a -> s {providerDetails = a} :: UpdateIdentityProvider) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateIdentityProvider.hs:116:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type UpdateIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | updateIdentityProvider_userPoolId = Lens.lens (\UpdateIdentityProvider' {userPoolId} -> userPoolId) (\s@UpdateIdentityProvider' {} a -> s {userPoolId = a} :: UpdateIdentityProvider)
    |                                                                                                                                            ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateIdentityProvider.hs:120:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {providerName = a} with type UpdateIdentityProvider is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | updateIdentityProvider_providerName = Lens.lens (\UpdateIdentityProvider' {providerName} -> providerName) (\s@UpdateIdentityProvider' {} a -> s {providerName = a} :: UpdateIdentityProvider)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^
[198 of 207] Compiling Amazonka.CognitoIdentityProvider.UpdateResourceServer

gen/Amazonka/CognitoIdentityProvider/UpdateResourceServer.hs:106:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {scopes = a} with type UpdateResourceServer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | updateResourceServer_scopes = Lens.lens (\UpdateResourceServer' {scopes} -> scopes) (\s@UpdateResourceServer' {} a -> s {scopes = a} :: UpdateResourceServer) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateResourceServer.hs:110:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type UpdateResourceServer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | updateResourceServer_userPoolId = Lens.lens (\UpdateResourceServer' {userPoolId} -> userPoolId) (\s@UpdateResourceServer' {} a -> s {userPoolId = a} :: UpdateResourceServer)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateResourceServer.hs:114:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {identifier = a} with type UpdateResourceServer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
114 | updateResourceServer_identifier = Lens.lens (\UpdateResourceServer' {identifier} -> identifier) (\s@UpdateResourceServer' {} a -> s {identifier = a} :: UpdateResourceServer)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateResourceServer.hs:118:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type UpdateResourceServer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
118 | updateResourceServer_name = Lens.lens (\UpdateResourceServer' {name} -> name) (\s@UpdateResourceServer' {} a -> s {name = a} :: UpdateResourceServer)
    |                                                                                                                    ^^^^^^^^
[199 of 207] Compiling Amazonka.CognitoIdentityProvider.UpdateUserAttributes

gen/Amazonka/CognitoIdentityProvider/UpdateUserAttributes.hs:236:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type UpdateUserAttributes is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
236 | updateUserAttributes_accessToken = Lens.lens (\UpdateUserAttributes' {accessToken} -> accessToken) (\s@UpdateUserAttributes' {} a -> s {accessToken = a} :: UpdateUserAttributes) Prelude.. Data._Sensitive
    |                                                                                                                                         ^^^^^^^^^^^^^^^
[200 of 207] Compiling Amazonka.CognitoIdentityProvider.UpdateUserPool

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:321:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accountRecoverySetting = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
321 | updateUserPool_accountRecoverySetting = Lens.lens (\UpdateUserPool' {accountRecoverySetting} -> accountRecoverySetting) (\s@UpdateUserPool' {} a -> s {accountRecoverySetting = a} :: UpdateUserPool)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:325:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {adminCreateUserConfig = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
325 | updateUserPool_adminCreateUserConfig = Lens.lens (\UpdateUserPool' {adminCreateUserConfig} -> adminCreateUserConfig) (\s@UpdateUserPool' {} a -> s {adminCreateUserConfig = a} :: UpdateUserPool)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:330:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {autoVerifiedAttributes = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
330 | updateUserPool_autoVerifiedAttributes = Lens.lens (\UpdateUserPool' {autoVerifiedAttributes} -> autoVerifiedAttributes) (\s@UpdateUserPool' {} a -> s {autoVerifiedAttributes = a} :: UpdateUserPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:341:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deletionProtection = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
341 | updateUserPool_deletionProtection = Lens.lens (\UpdateUserPool' {deletionProtection} -> deletionProtection) (\s@UpdateUserPool' {} a -> s {deletionProtection = a} :: UpdateUserPool)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:350:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {deviceConfiguration = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
350 | updateUserPool_deviceConfiguration = Lens.lens (\UpdateUserPool' {deviceConfiguration} -> deviceConfiguration) (\s@UpdateUserPool' {} a -> s {deviceConfiguration = a} :: UpdateUserPool)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:357:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {emailConfiguration = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
357 | updateUserPool_emailConfiguration = Lens.lens (\UpdateUserPool' {emailConfiguration} -> emailConfiguration) (\s@UpdateUserPool' {} a -> s {emailConfiguration = a} :: UpdateUserPool)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:362:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {emailVerificationMessage = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
362 | updateUserPool_emailVerificationMessage = Lens.lens (\UpdateUserPool' {emailVerificationMessage} -> emailVerificationMessage) (\s@UpdateUserPool' {} a -> s {emailVerificationMessage = a} :: UpdateUserPool)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:367:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {emailVerificationSubject = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
367 | updateUserPool_emailVerificationSubject = Lens.lens (\UpdateUserPool' {emailVerificationSubject} -> emailVerificationSubject) (\s@UpdateUserPool' {} a -> s {emailVerificationSubject = a} :: UpdateUserPool)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:372:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {lambdaConfig = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
372 | updateUserPool_lambdaConfig = Lens.lens (\UpdateUserPool' {lambdaConfig} -> lambdaConfig) (\s@UpdateUserPool' {} a -> s {lambdaConfig = a} :: UpdateUserPool)
    |                                                                                                                          ^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:388:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {mfaConfiguration = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
388 | updateUserPool_mfaConfiguration = Lens.lens (\UpdateUserPool' {mfaConfiguration} -> mfaConfiguration) (\s@UpdateUserPool' {} a -> s {mfaConfiguration = a} :: UpdateUserPool)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:392:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {policies = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
392 | updateUserPool_policies = Lens.lens (\UpdateUserPool' {policies} -> policies) (\s@UpdateUserPool' {} a -> s {policies = a} :: UpdateUserPool)
    |                                                                                                              ^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:396:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {smsAuthenticationMessage = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
396 | updateUserPool_smsAuthenticationMessage = Lens.lens (\UpdateUserPool' {smsAuthenticationMessage} -> smsAuthenticationMessage) (\s@UpdateUserPool' {} a -> s {smsAuthenticationMessage = a} :: UpdateUserPool)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:405:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {smsConfiguration = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
405 | updateUserPool_smsConfiguration = Lens.lens (\UpdateUserPool' {smsConfiguration} -> smsConfiguration) (\s@UpdateUserPool' {} a -> s {smsConfiguration = a} :: UpdateUserPool)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:410:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {smsVerificationMessage = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
410 | updateUserPool_smsVerificationMessage = Lens.lens (\UpdateUserPool' {smsVerificationMessage} -> smsVerificationMessage) (\s@UpdateUserPool' {} a -> s {smsVerificationMessage = a} :: UpdateUserPool)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:419:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userAttributeUpdateSettings = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
419 | updateUserPool_userAttributeUpdateSettings = Lens.lens (\UpdateUserPool' {userAttributeUpdateSettings} -> userAttributeUpdateSettings) (\s@UpdateUserPool' {} a -> s {userAttributeUpdateSettings = a} :: UpdateUserPool)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:424:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolAddOns = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
424 | updateUserPool_userPoolAddOns = Lens.lens (\UpdateUserPool' {userPoolAddOns} -> userPoolAddOns) (\s@UpdateUserPool' {} a -> s {userPoolAddOns = a} :: UpdateUserPool)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:430:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolTags = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
430 | updateUserPool_userPoolTags = Lens.lens (\UpdateUserPool' {userPoolTags} -> userPoolTags) (\s@UpdateUserPool' {} a -> s {userPoolTags = a} :: UpdateUserPool) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                          ^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:434:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {verificationMessageTemplate = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
434 | updateUserPool_verificationMessageTemplate = Lens.lens (\UpdateUserPool' {verificationMessageTemplate} -> verificationMessageTemplate) (\s@UpdateUserPool' {} a -> s {verificationMessageTemplate = a} :: UpdateUserPool)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPool.hs:438:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type UpdateUserPool is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
438 | updateUserPool_userPoolId = Lens.lens (\UpdateUserPool' {userPoolId} -> userPoolId) (\s@UpdateUserPool' {} a -> s {userPoolId = a} :: UpdateUserPool)
    |                                                                                                                    ^^^^^^^^^^^^^^
[201 of 207] Compiling Amazonka.CognitoIdentityProvider.UpdateUserPoolClient

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:560:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessTokenValidity = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
560 | updateUserPoolClient_accessTokenValidity = Lens.lens (\UpdateUserPoolClient' {accessTokenValidity} -> accessTokenValidity) (\s@UpdateUserPoolClient' {} a -> s {accessTokenValidity = a} :: UpdateUserPoolClient)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:578:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {allowedOAuthFlows = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
578 | updateUserPoolClient_allowedOAuthFlows = Lens.lens (\UpdateUserPoolClient' {allowedOAuthFlows} -> allowedOAuthFlows) (\s@UpdateUserPoolClient' {} a -> s {allowedOAuthFlows = a} :: UpdateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:583:197: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {allowedOAuthFlowsUserPoolClient = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
583 | updateUserPoolClient_allowedOAuthFlowsUserPoolClient = Lens.lens (\UpdateUserPoolClient' {allowedOAuthFlowsUserPoolClient} -> allowedOAuthFlowsUserPoolClient) (\s@UpdateUserPoolClient' {} a -> s {allowedOAuthFlowsUserPoolClient = a} :: UpdateUserPoolClient)
    |                                                                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:590:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {allowedOAuthScopes = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
590 | updateUserPoolClient_allowedOAuthScopes = Lens.lens (\UpdateUserPoolClient' {allowedOAuthScopes} -> allowedOAuthScopes) (\s@UpdateUserPoolClient' {} a -> s {allowedOAuthScopes = a} :: UpdateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:601:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {analyticsConfiguration = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
601 | updateUserPoolClient_analyticsConfiguration = Lens.lens (\UpdateUserPoolClient' {analyticsConfiguration} -> analyticsConfiguration) (\s@UpdateUserPoolClient' {} a -> s {analyticsConfiguration = a} :: UpdateUserPoolClient)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:608:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {authSessionValidity = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
608 | updateUserPoolClient_authSessionValidity = Lens.lens (\UpdateUserPoolClient' {authSessionValidity} -> authSessionValidity) (\s@UpdateUserPoolClient' {} a -> s {authSessionValidity = a} :: UpdateUserPoolClient)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:628:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {callbackURLs = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
628 | updateUserPoolClient_callbackURLs = Lens.lens (\UpdateUserPoolClient' {callbackURLs} -> callbackURLs) (\s@UpdateUserPoolClient' {} a -> s {callbackURLs = a} :: UpdateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                            ^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:632:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientName = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
632 | updateUserPoolClient_clientName = Lens.lens (\UpdateUserPoolClient' {clientName} -> clientName) (\s@UpdateUserPoolClient' {} a -> s {clientName = a} :: UpdateUserPoolClient)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:652:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {defaultRedirectURI = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
652 | updateUserPoolClient_defaultRedirectURI = Lens.lens (\UpdateUserPoolClient' {defaultRedirectURI} -> defaultRedirectURI) (\s@UpdateUserPoolClient' {} a -> s {defaultRedirectURI = a} :: UpdateUserPoolClient)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:663:224: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {enablePropagateAdditionalUserContextData = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
663 | updateUserPoolClient_enablePropagateAdditionalUserContextData = Lens.lens (\UpdateUserPoolClient' {enablePropagateAdditionalUserContextData} -> enablePropagateAdditionalUserContextData) (\s@UpdateUserPoolClient' {} a -> s {enablePropagateAdditionalUserContextData = a} :: UpdateUserPoolClient)
    |                                                                                                                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:669:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {enableTokenRevocation = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
669 | updateUserPoolClient_enableTokenRevocation = Lens.lens (\UpdateUserPoolClient' {enableTokenRevocation} -> enableTokenRevocation) (\s@UpdateUserPoolClient' {} a -> s {enableTokenRevocation = a} :: UpdateUserPoolClient)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:706:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {explicitAuthFlows = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
706 | updateUserPoolClient_explicitAuthFlows = Lens.lens (\UpdateUserPoolClient' {explicitAuthFlows} -> explicitAuthFlows) (\s@UpdateUserPoolClient' {} a -> s {explicitAuthFlows = a} :: UpdateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:723:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {idTokenValidity = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
723 | updateUserPoolClient_idTokenValidity = Lens.lens (\UpdateUserPoolClient' {idTokenValidity} -> idTokenValidity) (\s@UpdateUserPoolClient' {} a -> s {idTokenValidity = a} :: UpdateUserPoolClient)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:727:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {logoutURLs = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
727 | updateUserPoolClient_logoutURLs = Lens.lens (\UpdateUserPoolClient' {logoutURLs} -> logoutURLs) (\s@UpdateUserPoolClient' {} a -> s {logoutURLs = a} :: UpdateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:746:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {preventUserExistenceErrors = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
746 | updateUserPoolClient_preventUserExistenceErrors = Lens.lens (\UpdateUserPoolClient' {preventUserExistenceErrors} -> preventUserExistenceErrors) (\s@UpdateUserPoolClient' {} a -> s {preventUserExistenceErrors = a} :: UpdateUserPoolClient)
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:750:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {readAttributes = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
750 | updateUserPoolClient_readAttributes = Lens.lens (\UpdateUserPoolClient' {readAttributes} -> readAttributes) (\s@UpdateUserPoolClient' {} a -> s {readAttributes = a} :: UpdateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:769:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {refreshTokenValidity = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
769 | updateUserPoolClient_refreshTokenValidity = Lens.lens (\UpdateUserPoolClient' {refreshTokenValidity} -> refreshTokenValidity) (\s@UpdateUserPoolClient' {} a -> s {refreshTokenValidity = a} :: UpdateUserPoolClient)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:776:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {supportedIdentityProviders = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
776 | updateUserPoolClient_supportedIdentityProviders = Lens.lens (\UpdateUserPoolClient' {supportedIdentityProviders} -> supportedIdentityProviders) (\s@UpdateUserPoolClient' {} a -> s {supportedIdentityProviders = a} :: UpdateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:782:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tokenValidityUnits = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
782 | updateUserPoolClient_tokenValidityUnits = Lens.lens (\UpdateUserPoolClient' {tokenValidityUnits} -> tokenValidityUnits) (\s@UpdateUserPoolClient' {} a -> s {tokenValidityUnits = a} :: UpdateUserPoolClient)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:786:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {writeAttributes = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
786 | updateUserPoolClient_writeAttributes = Lens.lens (\UpdateUserPoolClient' {writeAttributes} -> writeAttributes) (\s@UpdateUserPoolClient' {} a -> s {writeAttributes = a} :: UpdateUserPoolClient) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                     ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:791:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
791 | updateUserPoolClient_userPoolId = Lens.lens (\UpdateUserPoolClient' {userPoolId} -> userPoolId) (\s@UpdateUserPoolClient' {} a -> s {userPoolId = a} :: UpdateUserPoolClient)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolClient.hs:795:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {clientId = a} with type UpdateUserPoolClient is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
795 | updateUserPoolClient_clientId = Lens.lens (\UpdateUserPoolClient' {clientId} -> clientId) (\s@UpdateUserPoolClient' {} a -> s {clientId = a} :: UpdateUserPoolClient) Prelude.. Data._Sensitive
    |                                                                                                                                ^^^^^^^^^^^^
[202 of 207] Compiling Amazonka.CognitoIdentityProvider.UpdateUserPoolDomain

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolDomain.hs:148:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domain = a} with type UpdateUserPoolDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
148 | updateUserPoolDomain_domain = Lens.lens (\UpdateUserPoolDomain' {domain} -> domain) (\s@UpdateUserPoolDomain' {} a -> s {domain = a} :: UpdateUserPoolDomain)
    |                                                                                                                          ^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolDomain.hs:153:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userPoolId = a} with type UpdateUserPoolDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
153 | updateUserPoolDomain_userPoolId = Lens.lens (\UpdateUserPoolDomain' {userPoolId} -> userPoolId) (\s@UpdateUserPoolDomain' {} a -> s {userPoolId = a} :: UpdateUserPoolDomain)
    |                                                                                                                                      ^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/UpdateUserPoolDomain.hs:159:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {customDomainConfig = a} with type UpdateUserPoolDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
159 | updateUserPoolDomain_customDomainConfig = Lens.lens (\UpdateUserPoolDomain' {customDomainConfig} -> customDomainConfig) (\s@UpdateUserPoolDomain' {} a -> s {customDomainConfig = a} :: UpdateUserPoolDomain)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^
[203 of 207] Compiling Amazonka.CognitoIdentityProvider.VerifySoftwareToken

gen/Amazonka/CognitoIdentityProvider/VerifySoftwareToken.hs:106:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type VerifySoftwareToken is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | verifySoftwareToken_accessToken = Lens.lens (\VerifySoftwareToken' {accessToken} -> accessToken) (\s@VerifySoftwareToken' {} a -> s {accessToken = a} :: VerifySoftwareToken) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                                                      ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/VerifySoftwareToken.hs:115:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {session = a} with type VerifySoftwareToken is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
115 | verifySoftwareToken_session = Lens.lens (\VerifySoftwareToken' {session} -> session) (\s@VerifySoftwareToken' {} a -> s {session = a} :: VerifySoftwareToken)
    |                                                                                                                          ^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/VerifySoftwareToken.hs:226:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {session = a} with type VerifySoftwareTokenResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
226 | verifySoftwareTokenResponse_session = Lens.lens (\VerifySoftwareTokenResponse' {session} -> session) (\s@VerifySoftwareTokenResponse' {} a -> s {session = a} :: VerifySoftwareTokenResponse)
    |                                                                                                                                                  ^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/VerifySoftwareToken.hs:230:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type VerifySoftwareTokenResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
230 | verifySoftwareTokenResponse_status = Lens.lens (\VerifySoftwareTokenResponse' {status} -> status) (\s@VerifySoftwareTokenResponse' {} a -> s {status = a} :: VerifySoftwareTokenResponse)
    |                                                                                                                                               ^^^^^^^^^^
[204 of 207] Compiling Amazonka.CognitoIdentityProvider.VerifyUserAttribute

gen/Amazonka/CognitoIdentityProvider/VerifyUserAttribute.hs:106:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessToken = a} with type VerifyUserAttribute is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | verifyUserAttribute_accessToken = Lens.lens (\VerifyUserAttribute' {accessToken} -> accessToken) (\s@VerifyUserAttribute' {} a -> s {accessToken = a} :: VerifyUserAttribute) Prelude.. Data._Sensitive
    |                                                                                                                                      ^^^^^^^^^^^^^^^

gen/Amazonka/CognitoIdentityProvider/VerifyUserAttribute.hs:110:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {attributeName = a} with type VerifyUserAttribute is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | verifyUserAttribute_attributeName = Lens.lens (\VerifyUserAttribute' {attributeName} -> attributeName) (\s@VerifyUserAttribute' {} a -> s {attributeName = a} :: VerifyUserAttribute)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^
[205 of 207] Compiling Amazonka.CognitoIdentityProvider.Lens
[206 of 207] Compiling Amazonka.CognitoIdentityProvider.Waiters
[207 of 207] Compiling Amazonka.CognitoIdentityProvider
Configuring test suite 'amazonka-cognito-idp-test' for amazonka-cognito-idp-2.0...
Preprocessing test suite 'amazonka-cognito-idp-test' for amazonka-cognito-idp-2.0...
Building test suite 'amazonka-cognito-idp-test' for amazonka-cognito-idp-2.0...
[1 of 4] Compiling Test.Amazonka.CognitoIdentityProvider
[2 of 4] Compiling Test.Amazonka.CognitoIdentityProvider.Internal
[3 of 4] Compiling Main
[4 of 4] Compiling Test.Amazonka.Gen.CognitoIdentityProvider
[5 of 5] Linking /tmp/workdir-amazonka-cognito-idp/amazonka-cognito-idp-2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/amazonka-cognito-idp-2.0/t/amazonka-cognito-idp-test/build/amazonka-cognito-idp-test/amazonka-cognito-idp-test
