Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - amazonka-securitylake-2.0 (lib) (first run)
 - amazonka-securitylake-2.0 (test:amazonka-securitylake-test) (first run)
Configuring library for amazonka-securitylake-2.0...
Preprocessing library for amazonka-securitylake-2.0...
Building library for amazonka-securitylake-2.0...
[ 1 of 57] Compiling Amazonka.SecurityLake.Types.AccessType
[ 2 of 57] Compiling Amazonka.SecurityLake.Types.AwsLogSourceType
[ 3 of 57] Compiling Amazonka.SecurityLake.Types.Dimension
[ 4 of 57] Compiling Amazonka.SecurityLake.Types.EndpointProtocol
[ 5 of 57] Compiling Amazonka.SecurityLake.Types.Failures
[ 6 of 57] Compiling Amazonka.SecurityLake.Types.FailuresResponse
[ 7 of 57] Compiling Amazonka.SecurityLake.Types.HttpsMethod
[ 8 of 57] Compiling Amazonka.SecurityLake.Types.OcsfEventClass
[ 9 of 57] Compiling Amazonka.SecurityLake.Types.ProtocolAndNotificationEndpoint
[10 of 57] Compiling Amazonka.SecurityLake.Types.Region
[11 of 57] Compiling Amazonka.SecurityLake.Types.AutoEnableNewRegionConfiguration
[12 of 57] Compiling Amazonka.SecurityLake.Types.SettingsStatus
[13 of 57] Compiling Amazonka.SecurityLake.Types.SourceStatus
[14 of 57] Compiling Amazonka.SecurityLake.Types.LogsStatus
[15 of 57] Compiling Amazonka.SecurityLake.Types.AccountSources
[16 of 57] Compiling Amazonka.SecurityLake.Types.SourceType
[17 of 57] Compiling Amazonka.SecurityLake.Types.StorageClass
[18 of 57] Compiling Amazonka.SecurityLake.Types.RetentionSetting
[19 of 57] Compiling Amazonka.SecurityLake.Types.LakeConfigurationResponse
[20 of 57] Compiling Amazonka.SecurityLake.Types.LakeConfigurationRequest
[21 of 57] Compiling Amazonka.SecurityLake.Types.SubscriptionProtocolType
[22 of 57] Compiling Amazonka.SecurityLake.Types.SubscriptionStatus
[23 of 57] Compiling Amazonka.SecurityLake.Types.SubscriberResource
[24 of 57] Compiling Amazonka.SecurityLake.Types
[25 of 57] Compiling Amazonka.SecurityLake.ListSubscribers

gen/Amazonka/SecurityLake/ListSubscribers.hs:93:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListSubscribers is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | listSubscribers_nextToken = Lens.lens (\ListSubscribers' {nextToken} -> nextToken) (\s@ListSubscribers' {} a -> s {nextToken = a} :: ListSubscribers)
   |                                                                                                                    ^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/ListSubscribers.hs:202:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListSubscribersResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
202 | listSubscribersResponse_nextToken = Lens.lens (\ListSubscribersResponse' {nextToken} -> nextToken) (\s@ListSubscribersResponse' {} a -> s {nextToken = a} :: ListSubscribersResponse)
    |                                                                                                                                            ^^^^^^^^^^^^^
[26 of 57] Compiling Amazonka.SecurityLake.ListLogSources

gen/Amazonka/SecurityLake/ListLogSources.hs:149:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListLogSources is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
149 | listLogSources_nextToken = Lens.lens (\ListLogSources' {nextToken} -> nextToken) (\s@ListLogSources' {} a -> s {nextToken = a} :: ListLogSources)
    |                                                                                                                 ^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/ListLogSources.hs:283:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListLogSourcesResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
283 | listLogSourcesResponse_nextToken = Lens.lens (\ListLogSourcesResponse' {nextToken} -> nextToken) (\s@ListLogSourcesResponse' {} a -> s {nextToken = a} :: ListLogSourcesResponse)
    |                                                                                                                                         ^^^^^^^^^^^^^
[27 of 57] Compiling Amazonka.SecurityLake.ListDatalakeExceptions

gen/Amazonka/SecurityLake/ListDatalakeExceptions.hs:116:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListDatalakeExceptions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | listDatalakeExceptions_nextToken = Lens.lens (\ListDatalakeExceptions' {nextToken} -> nextToken) (\s@ListDatalakeExceptions' {} a -> s {nextToken = a} :: ListDatalakeExceptions)
    |                                                                                                                                         ^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/ListDatalakeExceptions.hs:258:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type ListDatalakeExceptionsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
258 | listDatalakeExceptionsResponse_nextToken = Lens.lens (\ListDatalakeExceptionsResponse' {nextToken} -> nextToken) (\s@ListDatalakeExceptionsResponse' {} a -> s {nextToken = a} :: ListDatalakeExceptionsResponse)
    |                                                                                                                                                                 ^^^^^^^^^^^^^
[28 of 57] Compiling Amazonka.SecurityLake.GetSubscriber
[29 of 57] Compiling Amazonka.SecurityLake.GetDatalakeStatus

gen/Amazonka/SecurityLake/GetDatalakeStatus.hs:130:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type GetDatalakeStatus is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
130 | getDatalakeStatus_nextToken = Lens.lens (\GetDatalakeStatus' {nextToken} -> nextToken) (\s@GetDatalakeStatus' {} a -> s {nextToken = a} :: GetDatalakeStatus)
    |                                                                                                                          ^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/GetDatalakeStatus.hs:268:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {nextToken = a} with type GetDatalakeStatusResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
268 | getDatalakeStatusResponse_nextToken = Lens.lens (\GetDatalakeStatusResponse' {nextToken} -> nextToken) (\s@GetDatalakeStatusResponse' {} a -> s {nextToken = a} :: GetDatalakeStatusResponse)
    |                                                                                                                                                  ^^^^^^^^^^^^^
[30 of 57] Compiling Amazonka.SecurityLake.GetDatalakeExceptionsSubscription
[31 of 57] Compiling Amazonka.SecurityLake.GetDatalakeExceptionsExpiry
[32 of 57] Compiling Amazonka.SecurityLake.GetDatalakeAutoEnable
[33 of 57] Compiling Amazonka.SecurityLake.GetDatalake
[34 of 57] Compiling Amazonka.SecurityLake.DeleteSubscriptionNotificationConfiguration

gen/Amazonka/SecurityLake/DeleteSubscriptionNotificationConfiguration.hs:79:215: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subscriptionId = a} with type DeleteSubscriptionNotificationConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
79 | deleteSubscriptionNotificationConfiguration_subscriptionId = Lens.lens (\DeleteSubscriptionNotificationConfiguration' {subscriptionId} -> subscriptionId) (\s@DeleteSubscriptionNotificationConfiguration' {} a -> s {subscriptionId = a} :: DeleteSubscriptionNotificationConfiguration)
   |                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^
[35 of 57] Compiling Amazonka.SecurityLake.DeleteSubscriber
[36 of 57] Compiling Amazonka.SecurityLake.DeleteDatalakeExceptionsSubscription

gen/Amazonka/SecurityLake/DeleteDatalakeExceptionsSubscription.hs:165:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type DeleteDatalakeExceptionsSubscriptionResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
165 | deleteDatalakeExceptionsSubscriptionResponse_status = Lens.lens (\DeleteDatalakeExceptionsSubscriptionResponse' {status} -> status) (\s@DeleteDatalakeExceptionsSubscriptionResponse' {} a -> s {status = a} :: DeleteDatalakeExceptionsSubscriptionResponse)
    |                                                                                                                                                                                                  ^^^^^^^^^^
[37 of 57] Compiling Amazonka.SecurityLake.DeleteDatalakeDelegatedAdmin

gen/Amazonka/SecurityLake/DeleteDatalakeDelegatedAdmin.hs:77:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {account = a} with type DeleteDatalakeDelegatedAdmin is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
77 | deleteDatalakeDelegatedAdmin_account = Lens.lens (\DeleteDatalakeDelegatedAdmin' {account} -> account) (\s@DeleteDatalakeDelegatedAdmin' {} a -> s {account = a} :: DeleteDatalakeDelegatedAdmin)
   |                                                                                                                                                     ^^^^^^^^^^^
[38 of 57] Compiling Amazonka.SecurityLake.DeleteDatalakeAutoEnable
[39 of 57] Compiling Amazonka.SecurityLake.DeleteDatalake
[40 of 57] Compiling Amazonka.SecurityLake.DeleteCustomLogSource
[41 of 57] Compiling Amazonka.SecurityLake.DeleteAwsLogSource
[42 of 57] Compiling Amazonka.SecurityLake.CreateSubscriptionNotificationConfiguration

gen/Amazonka/SecurityLake/CreateSubscriptionNotificationConfiguration.hs:141:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleArn = a} with type CreateSubscriptionNotificationConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
141 | createSubscriptionNotificationConfiguration_roleArn = Lens.lens (\CreateSubscriptionNotificationConfiguration' {roleArn} -> roleArn) (\s@CreateSubscriptionNotificationConfiguration' {} a -> s {roleArn = a} :: CreateSubscriptionNotificationConfiguration)
    |                                                                                                                                                                                                  ^^^^^^^^^^^

gen/Amazonka/SecurityLake/CreateSubscriptionNotificationConfiguration.hs:146:233: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subscriptionEndpoint = a} with type CreateSubscriptionNotificationConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
146 | createSubscriptionNotificationConfiguration_subscriptionEndpoint = Lens.lens (\CreateSubscriptionNotificationConfiguration' {subscriptionEndpoint} -> subscriptionEndpoint) (\s@CreateSubscriptionNotificationConfiguration' {} a -> s {subscriptionEndpoint = a} :: CreateSubscriptionNotificationConfiguration)
    |                                                                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/CreateSubscriptionNotificationConfiguration.hs:150:215: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subscriptionId = a} with type CreateSubscriptionNotificationConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
150 | createSubscriptionNotificationConfiguration_subscriptionId = Lens.lens (\CreateSubscriptionNotificationConfiguration' {subscriptionId} -> subscriptionId) (\s@CreateSubscriptionNotificationConfiguration' {} a -> s {subscriptionId = a} :: CreateSubscriptionNotificationConfiguration)
    |                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^
[43 of 57] Compiling Amazonka.SecurityLake.CreateSubscriber

gen/Amazonka/SecurityLake/CreateSubscriber.hs:129:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessTypes = a} with type CreateSubscriber is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | createSubscriber_accessTypes = Lens.lens (\CreateSubscriber' {accessTypes} -> accessTypes) (\s@CreateSubscriber' {} a -> s {accessTypes = a} :: CreateSubscriber) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                             ^^^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/CreateSubscriber.hs:133:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subscriberDescription = a} with type CreateSubscriber is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
133 | createSubscriber_subscriberDescription = Lens.lens (\CreateSubscriber' {subscriberDescription} -> subscriberDescription) (\s@CreateSubscriber' {} a -> s {subscriberDescription = a} :: CreateSubscriber)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/CreateSubscriber.hs:137:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accountId = a} with type CreateSubscriber is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | createSubscriber_accountId = Lens.lens (\CreateSubscriber' {accountId} -> accountId) (\s@CreateSubscriber' {} a -> s {accountId = a} :: CreateSubscriber)
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/CreateSubscriber.hs:144:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {externalId = a} with type CreateSubscriber is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
144 | createSubscriber_externalId = Lens.lens (\CreateSubscriber' {externalId} -> externalId) (\s@CreateSubscriber' {} a -> s {externalId = a} :: CreateSubscriber)
    |                                                                                                                          ^^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/CreateSubscriber.hs:150:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sourceTypes = a} with type CreateSubscriber is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
150 | createSubscriber_sourceTypes = Lens.lens (\CreateSubscriber' {sourceTypes} -> sourceTypes) (\s@CreateSubscriber' {} a -> s {sourceTypes = a} :: CreateSubscriber) Prelude.. Lens.coerced
    |                                                                                                                             ^^^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/CreateSubscriber.hs:154:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subscriberName = a} with type CreateSubscriber is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
154 | createSubscriber_subscriberName = Lens.lens (\CreateSubscriber' {subscriberName} -> subscriberName) (\s@CreateSubscriber' {} a -> s {subscriberName = a} :: CreateSubscriber)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/CreateSubscriber.hs:288:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleArn = a} with type CreateSubscriberResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
288 | createSubscriberResponse_roleArn = Lens.lens (\CreateSubscriberResponse' {roleArn} -> roleArn) (\s@CreateSubscriberResponse' {} a -> s {roleArn = a} :: CreateSubscriberResponse)
    |                                                                                                                                         ^^^^^^^^^^^

gen/Amazonka/SecurityLake/CreateSubscriber.hs:292:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {s3BucketArn = a} with type CreateSubscriberResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
292 | createSubscriberResponse_s3BucketArn = Lens.lens (\CreateSubscriberResponse' {s3BucketArn} -> s3BucketArn) (\s@CreateSubscriberResponse' {} a -> s {s3BucketArn = a} :: CreateSubscriberResponse)
    |                                                                                                                                                     ^^^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/CreateSubscriber.hs:296:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {snsArn = a} with type CreateSubscriberResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
296 | createSubscriberResponse_snsArn = Lens.lens (\CreateSubscriberResponse' {snsArn} -> snsArn) (\s@CreateSubscriberResponse' {} a -> s {snsArn = a} :: CreateSubscriberResponse)
    |                                                                                                                                      ^^^^^^^^^^

gen/Amazonka/SecurityLake/CreateSubscriber.hs:304:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subscriptionId = a} with type CreateSubscriberResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
304 | createSubscriberResponse_subscriptionId = Lens.lens (\CreateSubscriberResponse' {subscriptionId} -> subscriptionId) (\s@CreateSubscriberResponse' {} a -> s {subscriptionId = a} :: CreateSubscriberResponse)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^
[44 of 57] Compiling Amazonka.SecurityLake.CreateDatalakeExceptionsSubscription

gen/Amazonka/SecurityLake/CreateDatalakeExceptionsSubscription.hs:96:212: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subscriptionProtocol = a} with type CreateDatalakeExceptionsSubscription is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
96 | createDatalakeExceptionsSubscription_subscriptionProtocol = Lens.lens (\CreateDatalakeExceptionsSubscription' {subscriptionProtocol} -> subscriptionProtocol) (\s@CreateDatalakeExceptionsSubscription' {} a -> s {subscriptionProtocol = a} :: CreateDatalakeExceptionsSubscription)
   |                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
[45 of 57] Compiling Amazonka.SecurityLake.CreateDatalakeDelegatedAdmin

gen/Amazonka/SecurityLake/CreateDatalakeDelegatedAdmin.hs:80:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {account = a} with type CreateDatalakeDelegatedAdmin is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
80 | createDatalakeDelegatedAdmin_account = Lens.lens (\CreateDatalakeDelegatedAdmin' {account} -> account) (\s@CreateDatalakeDelegatedAdmin' {} a -> s {account = a} :: CreateDatalakeDelegatedAdmin)
   |                                                                                                                                                     ^^^^^^^^^^^
[46 of 57] Compiling Amazonka.SecurityLake.CreateDatalakeAutoEnable
[47 of 57] Compiling Amazonka.SecurityLake.CreateDatalake
[48 of 57] Compiling Amazonka.SecurityLake.CreateCustomLogSource

gen/Amazonka/SecurityLake/CreateCustomLogSource.hs:144:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {eventClass = a} with type CreateCustomLogSource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
144 | createCustomLogSource_eventClass = Lens.lens (\CreateCustomLogSource' {eventClass} -> eventClass) (\s@CreateCustomLogSource' {} a -> s {eventClass = a} :: CreateCustomLogSource)
    |                                                                                                                                         ^^^^^^^^^^^^^^
[49 of 57] Compiling Amazonka.SecurityLake.CreateAwsLogSource
[50 of 57] Compiling Amazonka.SecurityLake.UpdateDatalake
[51 of 57] Compiling Amazonka.SecurityLake.UpdateDatalakeExceptionsExpiry
[52 of 57] Compiling Amazonka.SecurityLake.UpdateDatalakeExceptionsSubscription

gen/Amazonka/SecurityLake/UpdateDatalakeExceptionsSubscription.hs:93:212: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subscriptionProtocol = a} with type UpdateDatalakeExceptionsSubscription is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | updateDatalakeExceptionsSubscription_subscriptionProtocol = Lens.lens (\UpdateDatalakeExceptionsSubscription' {subscriptionProtocol} -> subscriptionProtocol) (\s@UpdateDatalakeExceptionsSubscription' {} a -> s {subscriptionProtocol = a} :: UpdateDatalakeExceptionsSubscription)
   |                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
[53 of 57] Compiling Amazonka.SecurityLake.UpdateSubscriber

gen/Amazonka/SecurityLake/UpdateSubscriber.hs:109:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {externalId = a} with type UpdateSubscriber is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | updateSubscriber_externalId = Lens.lens (\UpdateSubscriber' {externalId} -> externalId) (\s@UpdateSubscriber' {} a -> s {externalId = a} :: UpdateSubscriber)
    |                                                                                                                          ^^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/UpdateSubscriber.hs:113:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subscriberDescription = a} with type UpdateSubscriber is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | updateSubscriber_subscriberDescription = Lens.lens (\UpdateSubscriber' {subscriberDescription} -> subscriberDescription) (\s@UpdateSubscriber' {} a -> s {subscriberDescription = a} :: UpdateSubscriber)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/UpdateSubscriber.hs:117:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subscriberName = a} with type UpdateSubscriber is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
117 | updateSubscriber_subscriberName = Lens.lens (\UpdateSubscriber' {subscriberName} -> subscriberName) (\s@UpdateSubscriber' {} a -> s {subscriberName = a} :: UpdateSubscriber)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/UpdateSubscriber.hs:128:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sourceTypes = a} with type UpdateSubscriber is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
128 | updateSubscriber_sourceTypes = Lens.lens (\UpdateSubscriber' {sourceTypes} -> sourceTypes) (\s@UpdateSubscriber' {} a -> s {sourceTypes = a} :: UpdateSubscriber) Prelude.. Lens.coerced
    |                                                                                                                             ^^^^^^^^^^^^^^^
[54 of 57] Compiling Amazonka.SecurityLake.UpdateSubscriptionNotificationConfiguration

gen/Amazonka/SecurityLake/UpdateSubscriptionNotificationConfiguration.hs:141:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {roleArn = a} with type UpdateSubscriptionNotificationConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
141 | updateSubscriptionNotificationConfiguration_roleArn = Lens.lens (\UpdateSubscriptionNotificationConfiguration' {roleArn} -> roleArn) (\s@UpdateSubscriptionNotificationConfiguration' {} a -> s {roleArn = a} :: UpdateSubscriptionNotificationConfiguration)
    |                                                                                                                                                                                                  ^^^^^^^^^^^

gen/Amazonka/SecurityLake/UpdateSubscriptionNotificationConfiguration.hs:145:233: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subscriptionEndpoint = a} with type UpdateSubscriptionNotificationConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
145 | updateSubscriptionNotificationConfiguration_subscriptionEndpoint = Lens.lens (\UpdateSubscriptionNotificationConfiguration' {subscriptionEndpoint} -> subscriptionEndpoint) (\s@UpdateSubscriptionNotificationConfiguration' {} a -> s {subscriptionEndpoint = a} :: UpdateSubscriptionNotificationConfiguration)
    |                                                                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/SecurityLake/UpdateSubscriptionNotificationConfiguration.hs:150:215: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subscriptionId = a} with type UpdateSubscriptionNotificationConfiguration is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
150 | updateSubscriptionNotificationConfiguration_subscriptionId = Lens.lens (\UpdateSubscriptionNotificationConfiguration' {subscriptionId} -> subscriptionId) (\s@UpdateSubscriptionNotificationConfiguration' {} a -> s {subscriptionId = a} :: UpdateSubscriptionNotificationConfiguration)
    |                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^
[55 of 57] Compiling Amazonka.SecurityLake.Lens
[56 of 57] Compiling Amazonka.SecurityLake.Waiters
[57 of 57] Compiling Amazonka.SecurityLake
Configuring test suite 'amazonka-securitylake-test' for amazonka-securitylake-2.0...
Preprocessing test suite 'amazonka-securitylake-test' for amazonka-securitylake-2.0...
Building test suite 'amazonka-securitylake-test' for amazonka-securitylake-2.0...
[1 of 4] Compiling Test.Amazonka.SecurityLake
[2 of 4] Compiling Test.Amazonka.SecurityLake.Internal
[3 of 4] Compiling Test.Amazonka.Gen.SecurityLake
[4 of 4] Compiling Main
[5 of 5] Linking /tmp/workdir-amazonka-securitylake/amazonka-securitylake-2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/amazonka-securitylake-2.0/t/amazonka-securitylake-test/build/amazonka-securitylake-test/amazonka-securitylake-test
