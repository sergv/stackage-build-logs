Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - cryptohash-0.11.9 (lib) (first run)
 - cryptohash-0.11.9 (test:test-kat) (first run)
Configuring library for cryptohash-0.11.9...
Preprocessing library for cryptohash-0.11.9...
Building library for cryptohash-0.11.9...
[ 1 of 21] Compiling Crypto.Hash.Internal
[ 2 of 21] Compiling Crypto.Hash.MD2
[ 3 of 21] Compiling Crypto.Hash.MD4
[ 4 of 21] Compiling Crypto.Hash.MD5
[ 5 of 21] Compiling Crypto.Hash.RIPEMD160
[ 6 of 21] Compiling Crypto.Hash.SHA1
[ 7 of 21] Compiling Crypto.Hash.SHA224
[ 8 of 21] Compiling Crypto.Hash.SHA256
[ 9 of 21] Compiling Crypto.Hash.SHA3

Crypto/Hash/SHA3.hs:61:11: warning: [GHC-87502] [-Winline-rule-shadowing]
    Rule "hashmany" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Suggested fix: Add phase [n] or [~n] to the competing rule
   |
61 | {-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/SHA3.hs:62:11: warning: [GHC-87502] [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Suggested fix: Add phase [n] or [~n] to the competing rule
   |
62 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/SHA3.hs:62:11: warning: [GHC-95396] [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire because ‘$’ might inline first
    Suggested fix: Add an INLINE[n] or NOINLINE[n] pragma for ‘$’
   |
62 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[10 of 21] Compiling Crypto.Hash.SHA384
[11 of 21] Compiling Crypto.Hash.SHA512

Crypto/Hash/SHA512.hs:51:11: warning: [GHC-95396] [-Winline-rule-shadowing]
    Rule "digestSize" may never fire
      because ‘B.length’ might inline first
    Suggested fix:
      Add an INLINE[n] or NOINLINE[n] pragma for ‘B.length’
   |
51 | {-# RULES "digestSize" B.length (finalize init) = digestSize #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/SHA512.hs:54:11: warning: [GHC-87502] [-Winline-rule-shadowing]
    Rule "hashmany" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Suggested fix: Add phase [n] or [~n] to the competing rule
   |
54 | {-# RULES "hashmany" forall b. finalize (foldl update init b) = hashlazy (L.fromChunks b) #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/SHA512.hs:55:11: warning: [GHC-87502] [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Suggested fix: Add phase [n] or [~n] to the competing rule
   |
55 | {-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/SHA512.hs:55:11: warning: [GHC-95396] [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire because ‘$’ might inline first
    Suggested fix: Add an INLINE[n] or NOINLINE[n] pragma for ‘$’
   |
55 | {-# RULES "hashlazy" forall b. finalize (foldl update init $ L.toChunks b) = hashlazy b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[12 of 21] Compiling Crypto.Hash.SHA512t

on the commandline: warning: [GHC-19244] [-Wtrustworthy-safe]
    ‘Crypto.Hash.SHA512t’ is marked as Trustworthy but has been inferred as safe!
[13 of 21] Compiling Crypto.Hash.Skein256

Crypto/Hash/Skein256.hs:53:11: warning: [GHC-87502] [-Winline-rule-shadowing]
    Rule "hashmany" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Suggested fix: Add phase [n] or [~n] to the competing rule
   |
53 | {-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/Skein256.hs:54:11: warning: [GHC-87502] [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Suggested fix: Add phase [n] or [~n] to the competing rule
   |
54 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/Skein256.hs:54:11: warning: [GHC-95396] [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire because ‘$’ might inline first
    Suggested fix: Add an INLINE[n] or NOINLINE[n] pragma for ‘$’
   |
54 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[14 of 21] Compiling Crypto.Hash.Skein512

Crypto/Hash/Skein512.hs:53:11: warning: [GHC-87502] [-Winline-rule-shadowing]
    Rule "hashmany" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Suggested fix: Add phase [n] or [~n] to the competing rule
   |
53 | {-# RULES "hashmany" forall b i. finalize (foldl update (init i) b) = hashlazy i (L.fromChunks b) #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/Skein512.hs:54:11: warning: [GHC-87502] [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire
      because rule "Class op foldl" for ‘foldl’ might fire first
    Suggested fix: Add phase [n] or [~n] to the competing rule
   |
54 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Crypto/Hash/Skein512.hs:54:11: warning: [GHC-95396] [-Winline-rule-shadowing]
    Rule "hashlazy" may never fire because ‘$’ might inline first
    Suggested fix: Add an INLINE[n] or NOINLINE[n] pragma for ‘$’
   |
54 | {-# RULES "hashlazy" forall b i. finalize (foldl update (init i) $ L.toChunks b) = hashlazy i b #-}
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[15 of 21] Compiling Crypto.Hash.Tiger
[16 of 21] Compiling Crypto.Hash.Types
[17 of 21] Compiling Crypto.Hash
[18 of 21] Compiling Crypto.Hash.Whirlpool
[19 of 21] Compiling Crypto.MAC
[20 of 21] Compiling Crypto.MAC.HMAC

on the commandline: warning: [GHC-19244] [-Wtrustworthy-safe]
    ‘Crypto.MAC.HMAC’ is marked as Trustworthy but has been inferred as safe!
[21 of 21] Compiling Crypto.MAC.SHA3
cbits/sha512.c: In function ‘cryptohash_sha512_init_t’:

cbits/sha512.c:235:43: error:
     warning: ‘%d’ directive writing between 1 and 11 bytes into a region of size 4 [-Wformat-overflow=]
      235 |                 i = sprintf(buf, "SHA-512/%d", t);
          |                                           ^~
    |
235 |                 i = sprintf(buf, "SHA-512/%d", t);
    |                                           ^

cbits/sha512.c:235:34: error:
     note: directive argument in the range [-2147483648, 511]
      235 |                 i = sprintf(buf, "SHA-512/%d", t);
          |                                  ^~~~~~~~~~~~
    |
235 |                 i = sprintf(buf, "SHA-512/%d", t);
    |                                  ^
In file included from /usr/include/stdio.h:894,

                 from cbits/sha512.c:197:0: error: 

/usr/include/x86_64-linux-gnu/bits/stdio2.h:38:10: error:
     note: ‘__builtin___sprintf_chk’ output between 10 and 20 bytes into a destination of size 12
       38 |   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
          |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       39 |                                   __glibc_objsize (__s), __fmt,
          |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       40 |                                   __va_arg_pack ());
          |                                   ~~~~~~~~~~~~~~~~~
   |
38 |   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
   |          ^
cbits/sha512.c: In function ‘cryptohash_sha512_init_t’:

cbits/sha512.c:235:43: error:
     warning: ‘%d’ directive writing between 1 and 11 bytes into a region of size 4 [-Wformat-overflow=]
      235 |                 i = sprintf(buf, "SHA-512/%d", t);
          |                                           ^~
    |
235 |                 i = sprintf(buf, "SHA-512/%d", t);
    |                                           ^

cbits/sha512.c:235:34: error:
     note: directive argument in the range [-2147483648, 511]
      235 |                 i = sprintf(buf, "SHA-512/%d", t);
          |                                  ^~~~~~~~~~~~
    |
235 |                 i = sprintf(buf, "SHA-512/%d", t);
    |                                  ^
In file included from /usr/include/stdio.h:894,

                 from cbits/sha512.c:197:0: error: 

/usr/include/x86_64-linux-gnu/bits/stdio2.h:38:10: error:
     note: ‘__builtin___sprintf_chk’ output between 10 and 20 bytes into a destination of size 12
       38 |   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
          |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       39 |                                   __glibc_objsize (__s), __fmt,
          |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       40 |                                   __va_arg_pack ());
          |                                   ~~~~~~~~~~~~~~~~~
   |
38 |   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
   |          ^
Configuring test suite 'test-kat' for cryptohash-0.11.9...
Preprocessing test suite 'test-kat' for cryptohash-0.11.9...
Building test suite 'test-kat' for cryptohash-0.11.9...
[1 of 1] Compiling Main
[2 of 2] Linking /tmp/workdir-cryptohash/cryptohash-0.11.9/dist-newstyle/build/x86_64-linux/ghc-9.6.6/cryptohash-0.11.9/t/test-kat/build/test-kat/test-kat
