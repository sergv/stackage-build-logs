Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - extensible-0.9.1 (lib) (first run)
 - extensible-0.9.1 (test:bits) (first run)
Configuring library for extensible-0.9.1...
Preprocessing library for extensible-0.9.1...
Building library for extensible-0.9.1...

src/Data/Extensible/Dictionary.hs:6:14: warning: [-Wdeprecated-flags]
    -XTypeInType is deprecated: use -XDataKinds and -XPolyKinds instead
  |
6 | {-# LANGUAGE TypeInType #-}
  |              ^^^^^^^^^^

src/Data/Extensible/Field.hs:7:39: warning: [-Wdeprecated-flags]
    -XTypeInType is deprecated: use -XDataKinds and -XPolyKinds instead
  |
7 | {-# LANGUAGE UndecidableSuperClasses, TypeInType #-}
  |                                       ^^^^^^^^^^
[ 1 of 19] Compiling Data.Extensible.Internal.Rig
[ 2 of 19] Compiling Data.Extensible.Wrapper
[ 3 of 19] Compiling Data.Extensible.Class
[ 4 of 19] Compiling Data.Extensible.Sum
[ 5 of 19] Compiling Data.Extensible.Struct

src/Data/Extensible/Struct.hs:61:1: warning: [-Wunused-imports]
    The import of ‘Data.Kind’ is redundant
      except perhaps to import instances from ‘Data.Kind’
    To import instances alone, use: import Data.Kind()
   |
61 | import Data.Kind (Type)
   | ^^^^^^^^^^^^^^^^^^^^^^^
[ 6 of 19] Compiling Data.Extensible.Product
[ 7 of 19] Compiling Data.Extensible.Plain
[ 8 of 19] Compiling Data.Extensible.Match
[ 9 of 19] Compiling Data.Extensible.Inclusion
[10 of 19] Compiling Data.Extensible.Nullable
[11 of 19] Compiling Data.Extensible.Tangle

src/Data/Extensible/Tangle.hs:21:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
21 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
[12 of 19] Compiling Data.Extensible.Field

src/Data/Extensible/Field.hs:244:1: warning: [GHC-90177] [-Worphans]
    Orphan instance: instance (k ~ l) => IsLabel k (Proxy l)
    Suggested fix:
      Move the instance declaration to the module of the class or of the type, or
      wrap the type with a newtype and declare the instance on the new type.
    |
244 | instance k ~ l => IsLabel k (Proxy l) where
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...
[13 of 19] Compiling Data.Extensible.TH
[14 of 19] Compiling Data.Extensible.Record
[15 of 19] Compiling Data.Extensible.Label
[16 of 19] Compiling Data.Extensible.GetOpt
[17 of 19] Compiling Data.Extensible.Dictionary
[18 of 19] Compiling Data.Extensible.Bits

src/Data/Extensible/Bits.hs:141:10: warning: [GHC-36038] [-Wloopy-superclass-solve]
    I am solving the constraint ‘KnownNat (BitWidth (h (TargetOf x)))’,
      arising from the superclasses of an instance declaration,
    in a way that might turn out to loop at runtime.
    Starting from GHC 9.10, this warning will turn into an error.
    See the user manual, § Undecidable instances and loopy superclasses.
    Suggested fix:
      Add the constraint ‘KnownNat
                            (BitWidth (h (TargetOf x)))’ to the instance context,
      even though it seems logically implied by other constraints in the context.
    |
141 | instance (Bits r, FromBits r (h (TargetOf x))) => FromBits r (Field h x) where
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[19 of 19] Compiling Data.Extensible
Configuring test suite 'bits' for extensible-0.9.1...
Preprocessing test suite 'bits' for extensible-0.9.1...
Building test suite 'bits' for extensible-0.9.1...
[1 of 1] Compiling Main
[2 of 2] Linking /tmp/workdir-extensible/extensible-0.9.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/extensible-0.9.1/t/bits/build/bits/bits
