Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - monoidal-functors-0.2.3.0 (lib) (first run)
 - monoidal-functors-0.2.3.0 (exe:co-log) (first run)
Configuring library for monoidal-functors-0.2.3.0...
Preprocessing library for monoidal-functors-0.2.3.0...
Building library for monoidal-functors-0.2.3.0...
[ 1 of 12] Compiling Control.Category.Tensor

src/Control/Category/Tensor.hs:26:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
26 | import Control.Applicative (Applicative (..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 2 of 12] Compiling Control.Category.Cartesian
[ 3 of 12] Compiling Control.Category.Tensor.Expr
[ 4 of 12] Compiling Data.Bifunctor.BiInvariant
[ 5 of 12] Compiling Data.Bifunctor.Module
[ 6 of 12] Compiling Data.Bifunctor.Monoidal
[ 7 of 12] Compiling Data.Bifunctor.Monoidal.Specialized

src/Data/Bifunctor/Monoidal/Specialized.hs:10:1: warning: [-Wunused-imports]
    The import of ‘Data.These’ is redundant
      except perhaps to import instances from ‘Data.These’
    To import instances alone, use: import Data.These()
   |
10 | import Data.These
   | ^^^^^^^^^^^^^^^^^
[ 8 of 12] Compiling Data.Functor.Invariant
[ 9 of 12] Compiling Data.Functor.Module
[10 of 12] Compiling Data.Functor.Monoidal
[11 of 12] Compiling Data.Trifunctor.Module
[12 of 12] Compiling Data.Trifunctor.Monoidal
Configuring executable 'co-log' for monoidal-functors-0.2.3.0...
Preprocessing executable 'co-log' for monoidal-functors-0.2.3.0...
Building executable 'co-log' for monoidal-functors-0.2.3.0...
[1 of 1] Compiling Main
[2 of 2] Linking /tmp/workdir-monoidal-functors/monoidal-functors-0.2.3.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/monoidal-functors-0.2.3.0/x/co-log/build/co-log/co-log
