Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - hvect-0.4.0.1 (lib) (first run)
 - hvect-0.4.0.1 (test:hvect-test) (first run)
Configuring library for hvect-0.4.0.1...
Preprocessing library for hvect-0.4.0.1...
Building library for hvect-0.4.0.1...
[1 of 1] Compiling Data.HVect

src/Data/HVect.hs:43:20: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
43 | data HVect (ts :: [*]) where
   |                    ^

src/Data/HVect.hs:80:31: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
80 | type family HVectElim (ts :: [*]) (a :: *) :: * where
   |                               ^

src/Data/HVect.hs:80:41: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
80 | type family HVectElim (ts :: [*]) (a :: *) :: * where
   |                                         ^

src/Data/HVect.hs:80:47: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
80 | type family HVectElim (ts :: [*]) (a :: *) :: * where
   |                                               ^

src/Data/HVect.hs:84:28: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
84 | type family Append (as :: [*]) (bs :: [*]) :: [*] where
   |                            ^

src/Data/HVect.hs:84:40: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
84 | type family Append (as :: [*]) (bs :: [*]) :: [*] where
   |                                        ^

src/Data/HVect.hs:84:48: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
84 | type family Append (as :: [*]) (bs :: [*]) :: [*] where
   |                                                ^

src/Data/HVect.hs:88:26: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
88 | type family InList (x :: *) (xs :: [*]) :: Nat where
   |                          ^

src/Data/HVect.hs:88:37: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
88 | type family InList (x :: *) (xs :: [*]) :: Nat where
   |                                     ^

src/Data/HVect.hs:92:27: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
92 | type family AllHave (c :: * -> Constraint) (xs :: [*]) :: Constraint where
   |                           ^

src/Data/HVect.hs:92:52: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
92 | type family AllHave (c :: * -> Constraint) (xs :: [*]) :: Constraint where
   |                                                    ^

src/Data/HVect.hs:105:29: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
105 | type family NotInList (x :: *) (xs :: [*]) :: Bool where
    |                             ^

src/Data/HVect.hs:105:40: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
105 | type family NotInList (x :: *) (xs :: [*]) :: Bool where
    |                                        ^

src/Data/HVect.hs:112:37: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
112 | type family MaybeToList (a :: Maybe *) :: [*] where
    |                                     ^

src/Data/HVect.hs:112:44: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
112 | type family MaybeToList (a :: Maybe *) :: [*] where
    |                                            ^

src/Data/HVect.hs:164:30: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
164 | type family HVectLen (ts :: [*]) :: Nat where
    |                              ^

src/Data/HVect.hs:168:41: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
168 | type family HVectIdx (n :: Nat) (ts :: [*]) :: * where
    |                                         ^

src/Data/HVect.hs:168:48: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
168 | type family HVectIdx (n :: Nat) (ts :: [*]) :: * where
    |                                                ^

src/Data/HVect.hs:193:33: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
193 | type family ReverseLoop (as :: [*]) (bs :: [*]) :: [*] where
    |                                 ^

src/Data/HVect.hs:193:45: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
193 | type family ReverseLoop (as :: [*]) (bs :: [*]) :: [*] where
    |                                             ^

src/Data/HVect.hs:193:53: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
193 | type family ReverseLoop (as :: [*]) (bs :: [*]) :: [*] where
    |                                                     ^

src/Data/HVect.hs:210:18: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
210 | data Rep (ts :: [*]) where
    |                  ^

src/Data/HVect.hs:214:22: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
214 | class HasRep (ts :: [*]) where
    |                      ^
Configuring test suite 'hvect-test' for hvect-0.4.0.1...
Preprocessing test suite 'hvect-test' for hvect-0.4.0.1...
Building test suite 'hvect-test' for hvect-0.4.0.1...
[1 of 2] Compiling Data.HVectSpec
[2 of 2] Compiling Main
[3 of 3] Linking /tmp/workdir-hvect/hvect-0.4.0.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/hvect-0.4.0.1/t/hvect-test/build/hvect-test/hvect-test
