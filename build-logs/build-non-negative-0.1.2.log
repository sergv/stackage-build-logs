Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - non-negative-0.1.2 (lib) (first run)
 - non-negative-0.1.2 (test:test) (first run)
Configuring library for non-negative-0.1.2...
Preprocessing library for non-negative-0.1.2...
Building library for non-negative-0.1.2...
[1 of 4] Compiling Numeric.NonNegative.Class

src/Numeric/NonNegative/Class.hs:33:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
33 | import Data.Monoid (Monoid, )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2 of 4] Compiling Numeric.NonNegative.ChunkyPrivate

src/Numeric/NonNegative/ChunkyPrivate.hs:21:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
21 | import Data.Monoid (Monoid(mempty, mappend), )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Numeric/NonNegative/ChunkyPrivate.hs:22:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
22 | import Data.Semigroup (Semigroup((<>)), )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Numeric/NonNegative/ChunkyPrivate.hs:202:4: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (T a)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
    |
202 |    mappend = lift2 (++)
    |    ^^^^^^^^^^^^^^^^^^^^
[3 of 4] Compiling Numeric.NonNegative.Chunky
[4 of 4] Compiling Numeric.NonNegative.Wrapper

src/Numeric/NonNegative/Wrapper.hs:18:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
18 | import Data.Monoid (Monoid(mempty, mappend, mconcat))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Numeric/NonNegative/Wrapper.hs:19:1: warning: [-Wunused-imports]
    The import of ‘<>’ from module ‘Data.Semigroup’ is redundant
   |
19 | import Data.Semigroup (Semigroup(sconcat, (<>)))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Numeric/NonNegative/Wrapper.hs:115:4: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (T a)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
    |
115 |    mappend (Cons x) (Cons y) = Cons (x+y)
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Configuring test suite 'test' for non-negative-0.1.2...
Preprocessing test suite 'test' for non-negative-0.1.2...
Building test suite 'test' for non-negative-0.1.2...

<no location info>: warning: [GHC-32850] [-Wmissing-home-modules]
    These modules are needed for compilation but not listed in your .cabal file's other-modules for ‘non-negative-0.1.2-inplace-test’ :
        Numeric.NonNegative.Chunky
        Numeric.NonNegative.ChunkyPrivate
        Numeric.NonNegative.Class
        Numeric.NonNegative.Wrapper
[1 of 7] Compiling Numeric.NonNegative.Class

src/Numeric/NonNegative/Class.hs:33:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
33 | import Data.Monoid (Monoid, )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2 of 7] Compiling Numeric.NonNegative.ChunkyPrivate

src/Numeric/NonNegative/ChunkyPrivate.hs:21:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
21 | import Data.Monoid (Monoid(mempty, mappend), )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Numeric/NonNegative/ChunkyPrivate.hs:22:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
22 | import Data.Semigroup (Semigroup((<>)), )
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Numeric/NonNegative/ChunkyPrivate.hs:202:4: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (T a)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
    |
202 |    mappend = lift2 (++)
    |    ^^^^^^^^^^^^^^^^^^^^
[3 of 7] Compiling Numeric.NonNegative.Chunky
[4 of 7] Compiling Numeric.NonNegative.Wrapper

src/Numeric/NonNegative/Wrapper.hs:18:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
18 | import Data.Monoid (Monoid(mempty, mappend, mconcat))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Numeric/NonNegative/Wrapper.hs:19:1: warning: [-Wunused-imports]
    The import of ‘<>’ from module ‘Data.Semigroup’ is redundant
   |
19 | import Data.Semigroup (Semigroup(sconcat, (<>)))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Numeric/NonNegative/Wrapper.hs:115:4: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (T a)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
    |
115 |    mappend (Cons x) (Cons y) = Cons (x+y)
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[5 of 7] Compiling Test.Numeric.NonNegative.Chunky
[6 of 7] Compiling Main
[7 of 7] Compiling Test.Utility

<no location info>: warning: [GHC-32850] [-Wmissing-home-modules]
    These modules are needed for compilation but not listed in your .cabal file's other-modules for ‘non-negative-0.1.2-inplace-test’ :
        Numeric.NonNegative.Chunky
        Numeric.NonNegative.ChunkyPrivate
        Numeric.NonNegative.Class
        Numeric.NonNegative.Wrapper
[8 of 8] Linking /tmp/workdir-non-negative/non-negative-0.1.2/dist-newstyle/build/x86_64-linux/ghc-9.6.6/non-negative-0.1.2/t/test/build/test/test
