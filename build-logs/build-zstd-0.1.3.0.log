Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - zstd-0.1.3.0 (lib) (first run)
 - zstd-0.1.3.0 (test:tests) (first run)
Configuring library for zstd-0.1.3.0...
Preprocessing library for zstd-0.1.3.0...
Building library for zstd-0.1.3.0...
[ 1 of 10] Compiling Codec.Compression.Zstd.FFI.Types
[ 2 of 10] Compiling Codec.Compression.Zstd.FFI
[ 3 of 10] Compiling Codec.Compression.Zstd.Base.Types
[ 4 of 10] Compiling Codec.Compression.Zstd.Base

Codec/Compression/Zstd/Base.hs:88:19: warning: [-Wunused-imports]
    The import of ‘Word’ from module ‘Data.Word’ is redundant
   |
88 | import Data.Word (Word, Word64)
   |                   ^^^^
[ 5 of 10] Compiling Codec.Compression.Zstd.Streaming

Codec/Compression/Zstd/Streaming.hs:92:19: warning: [-Wunused-matches]
    Defined but not used: ‘opos’
   |
92 |   finish cfp obfp opos dfp = do
   |                   ^^^^

Codec/Compression/Zstd/Streaming.hs:98:10: warning: [GHC-62161] [-Wincomplete-patterns]
    Pattern match(es) are non-exhaustive
    In a multi-way if alternative:
        Guards do not cover entire pattern space
   |
98 |       if | leftover <= 0 -> do -- leftover will never be <0, but compiler does not know that
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...
[ 6 of 10] Compiling Codec.Compression.Zstd.Lazy
[ 7 of 10] Compiling Codec.Compression.Zstd.Types
[ 8 of 10] Compiling Codec.Compression.Zstd.Internal

Codec/Compression/Zstd/Internal.hs:38:19: warning: [-Wunused-imports]
    The import of ‘Word’ from module ‘Data.Word’ is redundant
   |
38 | import Data.Word (Word, Word8)
   |                   ^^^^

Codec/Compression/Zstd/Internal.hs:68:36: warning: [GHC-68441] [-Wdeprecations]
    In the use of ‘memcpy’
    (imported from Data.ByteString.Internal, but defined in Data.ByteString.Internal.Type):
    Deprecated: "Use Foreign.Marshal.Utils.copyBytes instead"
   |
68 |         else B.create size $ \p -> B.memcpy p dst size
   |                                    ^^^^^^^^

Codec/Compression/Zstd/Internal.hs:167:40: warning: [GHC-68441] [-Wdeprecations]
    In the use of ‘memcpy’
    (imported from Data.ByteString.Internal, but defined in Data.ByteString.Internal.Type):
    Deprecated: "Use Foreign.Marshal.Utils.copyBytes instead"
    |
167 |             else B.create size $ \p -> B.memcpy p dict size
    |                                        ^^^^^^^^
[ 9 of 10] Compiling Codec.Compression.Zstd.Efficient
[10 of 10] Compiling Codec.Compression.Zstd
Configuring test suite 'tests' for zstd-0.1.3.0...
Preprocessing test suite 'tests' for zstd-0.1.3.0...
Building test suite 'tests' for zstd-0.1.3.0...
[1 of 3] Compiling QuickCheckUtils

tests/QuickCheckUtils.hs:24:1: warning: [-Wunused-imports]
    The qualified import of ‘Codec.Compression.Zstd.Lazy’ is redundant
      except perhaps to import instances from ‘Codec.Compression.Zstd.Lazy’
    To import instances alone, use: import Codec.Compression.Zstd.Lazy()
   |
24 | import qualified Codec.Compression.Zstd.Lazy as L
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/QuickCheckUtils.hs:27:1: warning: [-Wunused-imports]
    The import of ‘Data.Bits’ is redundant
      except perhaps to import instances from ‘Data.Bits’
    To import instances alone, use: import Data.Bits()
   |
27 | import Data.Bits (xor)
   | ^^^^^^^^^^^^^^^^^^^^^^

tests/QuickCheckUtils.hs:29:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
   |
29 | import Data.Monoid ((<>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

tests/QuickCheckUtils.hs:31:1: warning: [-Wunused-imports]
    The import of ‘Test.Framework’ is redundant
      except perhaps to import instances from ‘Test.Framework’
    To import instances alone, use: import Test.Framework()
   |
31 | import Test.Framework (Test, testGroup)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/QuickCheckUtils.hs:32:1: warning: [-Wunused-imports]
    The import of ‘Test.Framework.Providers.QuickCheck2’ is redundant
      except perhaps to import instances from ‘Test.Framework.Providers.QuickCheck2’
    To import instances alone, use: import Test.Framework.Providers.QuickCheck2()
   |
32 | import Test.Framework.Providers.QuickCheck2 (testProperty)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2 of 3] Compiling Properties

tests/Properties.hs:19:1: warning: [-Wunused-imports]
    The import of ‘Codec.Compression.Zstd.Streaming’ is redundant
      except perhaps to import instances from ‘Codec.Compression.Zstd.Streaming’
    To import instances alone, use: import Codec.Compression.Zstd.Streaming()
   |
19 | import Codec.Compression.Zstd.Streaming (Result(..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/Properties.hs:20:1: warning: [-Wunused-imports]
    The import of ‘Data.ByteString’ is redundant
      except perhaps to import instances from ‘Data.ByteString’
    To import instances alone, use: import Data.ByteString()
   |
20 | import Data.ByteString (ByteString, pack, unpack)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/Properties.hs:24:1: warning: [-Wunused-imports]
    The import of ‘Test.QuickCheck’ is redundant
      except perhaps to import instances from ‘Test.QuickCheck’
    To import instances alone, use: import Test.QuickCheck()
   |
24 | import Test.QuickCheck
   | ^^^^^^^^^^^^^^^^^^^^^^

tests/Properties.hs:25:1: warning: [-Wunused-imports]
    The qualified import of ‘Control.Exception’ is redundant
      except perhaps to import instances from ‘Control.Exception’
    To import instances alone, use: import Control.Exception()
   |
25 | import qualified Control.Exception as E
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/Properties.hs:31:1: warning: [GHC-38417] [-Wmissing-signatures]
    Top-level binding with no type signature: dict :: Dict
   |
31 | dict = unsafePerformIO $ do
   | ^^^^

tests/Properties.hs:40:1: warning: [GHC-38417] [-Wmissing-signatures]
    Top-level binding with no type signature:
      t_rechunk :: [Int] -> ByteString -> Bool
   |
40 | t_rechunk cs bs = L.toStrict (rechunk cs bs) == bs
   | ^^^^^^^^^

tests/Properties.hs:42:1: warning: [GHC-38417] [-Wmissing-signatures]
    Top-level binding with no type signature:
      t_roundtrip :: CLevel -> NEBS -> Bool
   |
42 | t_roundtrip (CLevel n) (NE s) = decompress (compress n s) == Decompress s
   | ^^^^^^^^^^^

tests/Properties.hs:44:1: warning: [GHC-38417] [-Wmissing-signatures]
    Top-level binding with no type signature:
      t_dict_roundtrip :: CLevel -> NEBS -> Bool
   |
44 | t_dict_roundtrip (CLevel n) (NE s) =
   | ^^^^^^^^^^^^^^^^

tests/Properties.hs:47:1: warning: [GHC-38417] [-Wmissing-signatures]
    Top-level binding with no type signature:
      t_lazy_roundtrip :: CLevel -> [Int] -> ByteString -> Bool
   |
47 | t_lazy_roundtrip (CLevel n) cs s =
   | ^^^^^^^^^^^^^^^^

tests/Properties.hs:51:1: warning: [GHC-38417] [-Wmissing-signatures]
    Top-level binding with no type signature:
      t_lazy_compress_equiv :: CLevel -> Property
   |
51 | t_lazy_compress_equiv (CLevel n) = unsquare $ \cs ds s ->
   | ^^^^^^^^^^^^^^^^^^^^^

tests/Properties.hs:54:1: warning: [GHC-38417] [-Wmissing-signatures]
    Top-level binding with no type signature:
      t_stream_lazy_compress :: CLevel -> Property
   |
54 | t_stream_lazy_compress (CLevel n) = unsquare $ \cs ds s ->
   | ^^^^^^^^^^^^^^^^^^^^^^

tests/Properties.hs:57:1: warning: [GHC-38417] [-Wmissing-signatures]
    Top-level binding with no type signature:
      t_stream_roundtrip :: CLevel -> [Int] -> ByteString -> Bool
   |
57 | t_stream_roundtrip (CLevel n) cs s =
   | ^^^^^^^^^^^^^^^^^^
[3 of 3] Compiling Main
[4 of 4] Linking /tmp/workdir-zstd/zstd-0.1.3.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/zstd-0.1.3.0/t/tests/build/tests/tests
