Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - graphite-0.10.0.1 (lib) (first run)
 - graphite-0.10.0.1 (test:graphite-test) (first run)
Configuring library for graphite-0.10.0.1...
Preprocessing library for graphite-0.10.0.1...
Building library for graphite-0.10.0.1...
[ 1 of 12] Compiling Data.Graph.DGraph.DegreeSequence
[ 2 of 12] Compiling Data.Graph.Types

src/Data/Graph/Types.hs:29:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
29 | import Control.Applicative ((<*>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Graph/Types.hs:30:1: warning: [-Wunused-imports]
    The import of ‘Data.Functor’ is redundant
      except perhaps to import instances from ‘Data.Functor’
    To import instances alone, use: import Data.Functor()
   |
30 | import Data.Functor        ((<$>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 3 of 12] Compiling Data.Graph.Traversal
[ 4 of 12] Compiling Data.Graph.Read
[ 5 of 12] Compiling Data.Graph.Internal
[ 6 of 12] Compiling Data.Graph.UGraph

src/Data/Graph/UGraph.hs:32:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
32 | import           Data.Semigroup
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/Graph/UGraph.hs:63:5: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (UGraph v e)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
63 |     mappend = union
   |     ^^^^^^^^^^^^^^^

src/Data/Graph/UGraph.hs:66:5: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘(<>) = mappend’ definition detected
    in the instance declaration for ‘Semigroup (UGraph v e)’.
    Move definition from ‘mappend’ to ‘(<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
66 |     (<>) = mappend
   |     ^^^^^^^^^^^^^^
[ 7 of 12] Compiling Data.Graph.DGraph

src/Data/Graph/DGraph.hs:46:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
46 | import Data.Semigroup
   | ^^^^^^^^^^^^^^^^^^^^^

src/Data/Graph/DGraph.hs:77:5: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (DGraph v e)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
77 |     mappend = union
   |     ^^^^^^^^^^^^^^^

src/Data/Graph/DGraph.hs:80:5: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘(<>) = mappend’ definition detected
    in the instance declaration for ‘Semigroup (DGraph v e)’.
    Move definition from ‘mappend’ to ‘(<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
80 |     (<>) = mappend
   |     ^^^^^^^^^^^^^^

src/Data/Graph/DGraph.hs:256:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘isSymmetric’
    |
256 | isSymmetric = undefined
    | ^^^^^^^^^^^

src/Data/Graph/DGraph.hs:264:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘isOriented’
    |
264 | isOriented = undefined
    | ^^^^^^^^^^

src/Data/Graph/DGraph.hs:278:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘isRegular’
    |
278 | isRegular _ = undefined
    | ^^^^^^^^^
[ 8 of 12] Compiling Data.Graph.Morphisms

src/Data/Graph/Morphisms.hs:12:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘areIsomorphic’
   |
12 | areIsomorphic = undefined
   | ^^^^^^^^^^^^^

src/Data/Graph/Morphisms.hs:15:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘isomorphism’
   |
15 | isomorphism = undefined
   | ^^^^^^^^^^^

src/Data/Graph/Morphisms.hs:21:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘isURegular’
   |
21 | isURegular = undefined
   | ^^^^^^^^^^

src/Data/Graph/Morphisms.hs:28:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘isDRegular’
   |
28 | isDRegular = undefined
   | ^^^^^^^^^^
[ 9 of 12] Compiling Data.Graph.Generation
[10 of 12] Compiling Data.Graph.Connectivity
[11 of 12] Compiling Data.Graph.UGraph.DegreeSequence

src/Data/Graph/UGraph/DegreeSequence.hs:18:19: warning: [-Wunused-imports]
    The import of ‘reverse’ from module ‘Data.List’ is redundant
   |
18 | import Data.List (reverse, sort)
   |                   ^^^^^^^

src/Data/Graph/UGraph/DegreeSequence.hs:60:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘isDirectedGraphic’
   |
60 | isDirectedGraphic = undefined
   | ^^^^^^^^^^^^^^^^^

src/Data/Graph/UGraph/DegreeSequence.hs:71:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘fromGraphicalSequence’
   |
71 | fromGraphicalSequence = undefined
   | ^^^^^^^^^^^^^^^^^^^^^
[12 of 12] Compiling Data.Graph.Visualize
Configuring test suite 'graphite-test' for graphite-0.10.0.1...
Preprocessing test suite 'graphite-test' for graphite-0.10.0.1...
Building test suite 'graphite-test' for graphite-0.10.0.1...
[1 of 4] Compiling Data.Graph.DGraphSpec
[2 of 4] Compiling Data.Graph.TypesSpec
[3 of 4] Compiling Data.Graph.UGraphSpec
[4 of 4] Compiling Main
[5 of 5] Linking /tmp/workdir-graphite/graphite-0.10.0.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/graphite-0.10.0.1/t/graphite-test/build/graphite-test/graphite-test
