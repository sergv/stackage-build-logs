Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - world-peace-1.0.2.0 (lib) (first run)
 - world-peace-1.0.2.0 (test:world-peace-doctest) (first run)
 - world-peace-1.0.2.0 (test:world-peace-test) (first run)
Configuring library for world-peace-1.0.2.0...
Preprocessing library for world-peace-1.0.2.0...
Building library for world-peace-1.0.2.0...
[1 of 5] Compiling Data.WorldPeace.Internal.Prism
[2 of 5] Compiling Data.WorldPeace.Internal
[3 of 5] Compiling Data.WorldPeace.Product

src/Data/WorldPeace/Product.hs:46:25: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
46 | data Product (f :: u -> *) (as :: [u]) where
   |                         ^

src/Data/WorldPeace/Product.hs:51:27: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
51 | class ToProduct (tuple :: *) (f :: u -> *) (as :: [u]) | f as -> tuple where
   |                           ^

src/Data/WorldPeace/Product.hs:51:41: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
51 | class ToProduct (tuple :: *) (f :: u -> *) (as :: [u]) | f as -> tuple where
   |                                         ^

src/Data/WorldPeace/Product.hs:56:30: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
56 | instance forall u (f :: u -> *) (a :: u). ToProduct (f a) f '[a] where
   |                              ^

src/Data/WorldPeace/Product.hs:61:30: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
61 | instance forall u (f :: u -> *) (a :: u) (b :: u). ToProduct (f a, f b) f '[a, b] where
   |                              ^

src/Data/WorldPeace/Product.hs:66:30: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
66 | instance forall u (f :: u -> *) (a :: u) (b :: u) (c :: u). ToProduct (f a, f b, f c) f '[a, b, c] where
   |                              ^

src/Data/WorldPeace/Product.hs:71:30: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
71 | instance forall u (f :: u -> *) (a :: u) (b :: u) (c :: u) (d :: u). ToProduct (f a, f b, f c, f d) f '[a, b, c, d] where
   |                              ^

src/Data/WorldPeace/Product.hs:91:31: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
91 | class ToOpenProduct (tuple :: *) (as :: [*]) | as -> tuple where
   |                               ^

src/Data/WorldPeace/Product.hs:91:42: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
91 | class ToOpenProduct (tuple :: *) (as :: [*]) | as -> tuple where
   |                                          ^

src/Data/WorldPeace/Product.hs:95:23: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
95 | instance forall (a :: *). ToOpenProduct a '[a] where
   |                       ^

src/Data/WorldPeace/Product.hs:101:18: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
101 |     forall (a :: *) (b :: *). ToOpenProduct (a, b) '[a, b] where
    |                  ^

src/Data/WorldPeace/Product.hs:101:27: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
101 |     forall (a :: *) (b :: *). ToOpenProduct (a, b) '[a, b] where
    |                           ^

src/Data/WorldPeace/Product.hs:107:18: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
107 |     forall (a :: *) (b :: *) (c :: *). ToOpenProduct (a, b, c) '[a, b, c] where
    |                  ^

src/Data/WorldPeace/Product.hs:107:27: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
107 |     forall (a :: *) (b :: *) (c :: *). ToOpenProduct (a, b, c) '[a, b, c] where
    |                           ^

src/Data/WorldPeace/Product.hs:107:36: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
107 |     forall (a :: *) (b :: *) (c :: *). ToOpenProduct (a, b, c) '[a, b, c] where
    |                                    ^

src/Data/WorldPeace/Product.hs:114:18: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
114 |     forall (a :: *) (b :: *) (c :: *) (d :: *).
    |                  ^

src/Data/WorldPeace/Product.hs:114:27: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
114 |     forall (a :: *) (b :: *) (c :: *) (d :: *).
    |                           ^

src/Data/WorldPeace/Product.hs:114:36: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
114 |     forall (a :: *) (b :: *) (c :: *) (d :: *).
    |                                    ^

src/Data/WorldPeace/Product.hs:114:45: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
114 |     forall (a :: *) (b :: *) (c :: *) (d :: *).
    |                                             ^
[4 of 5] Compiling Data.WorldPeace.Union

src/Data/WorldPeace/Union.hs:223:23: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
223 | data Union (f :: u -> *) (as :: [u]) where
    |                       ^
[5 of 5] Compiling Data.WorldPeace
Configuring test suite 'world-peace-doctest' for world-peace-1.0.2.0...
Preprocessing test suite 'world-peace-doctest' for world-peace-1.0.2.0...
Building test suite 'world-peace-doctest' for world-peace-1.0.2.0...
[1 of 1] Compiling Main

test/DocTest.hs:6:1: warning: [-Wunused-imports]
    The import of ‘Data.Monoid’ is redundant
      except perhaps to import instances from ‘Data.Monoid’
    To import instances alone, use: import Data.Monoid()
  |
6 | import Data.Monoid ((<>))
  | ^^^^^^^^^^^^^^^^^^^^^^^^^
[2 of 2] Linking /tmp/workdir-world-peace/world-peace-1.0.2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/world-peace-1.0.2.0/t/world-peace-doctest/build/world-peace-doctest/world-peace-doctest
Configuring test suite 'world-peace-test' for world-peace-1.0.2.0...
Preprocessing test suite 'world-peace-test' for world-peace-1.0.2.0...
Building test suite 'world-peace-test' for world-peace-1.0.2.0...
[1 of 2] Compiling Test.TypeErrors
[2 of 2] Compiling Main
[3 of 3] Linking /tmp/workdir-world-peace/world-peace-1.0.2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/world-peace-1.0.2.0/t/world-peace-test/build/world-peace-test/world-peace-test
