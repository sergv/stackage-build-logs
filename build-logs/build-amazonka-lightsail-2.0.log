Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - amazonka-lightsail-2.0 (lib) (first run)
 - amazonka-lightsail-2.0 (test:amazonka-lightsail-test) (first run)
Configuring library for amazonka-lightsail-2.0...
Preprocessing library for amazonka-lightsail-2.0...
Building library for amazonka-lightsail-2.0...
[  1 of 341] Compiling Amazonka.Lightsail.Types.AccessDirection
[  2 of 341] Compiling Amazonka.Lightsail.Types.AccessKeyLastUsed
[  3 of 341] Compiling Amazonka.Lightsail.Types.AccessType
[  4 of 341] Compiling Amazonka.Lightsail.Types.AccessRules
[  5 of 341] Compiling Amazonka.Lightsail.Types.AccountLevelBpaSyncStatus
[  6 of 341] Compiling Amazonka.Lightsail.Types.AddOn
[  7 of 341] Compiling Amazonka.Lightsail.Types.AddOnType
[  8 of 341] Compiling Amazonka.Lightsail.Types.AlarmState
[  9 of 341] Compiling Amazonka.Lightsail.Types.AttachedDisk
[ 10 of 341] Compiling Amazonka.Lightsail.Types.AutoSnapshotAddOnRequest
[ 11 of 341] Compiling Amazonka.Lightsail.Types.AddOnRequest
[ 12 of 341] Compiling Amazonka.Lightsail.Types.AutoSnapshotStatus
[ 13 of 341] Compiling Amazonka.Lightsail.Types.AutoSnapshotDetails
[ 14 of 341] Compiling Amazonka.Lightsail.Types.AvailabilityZone
[ 15 of 341] Compiling Amazonka.Lightsail.Types.BPAStatusMessage
[ 16 of 341] Compiling Amazonka.Lightsail.Types.AccountLevelBpaSync
[ 17 of 341] Compiling Amazonka.Lightsail.Types.BehaviorEnum
[ 18 of 341] Compiling Amazonka.Lightsail.Types.BlueprintType
[ 19 of 341] Compiling Amazonka.Lightsail.Types.BucketAccessLogConfig
[ 20 of 341] Compiling Amazonka.Lightsail.Types.BucketBundle
[ 21 of 341] Compiling Amazonka.Lightsail.Types.BucketMetricName
[ 22 of 341] Compiling Amazonka.Lightsail.Types.BucketState
[ 23 of 341] Compiling Amazonka.Lightsail.Types.CacheBehavior
[ 24 of 341] Compiling Amazonka.Lightsail.Types.CacheBehaviorPerPath
[ 25 of 341] Compiling Amazonka.Lightsail.Types.CertificateDomainValidationStatus
[ 26 of 341] Compiling Amazonka.Lightsail.Types.CertificateStatus
[ 27 of 341] Compiling Amazonka.Lightsail.Types.CloudFormationStackRecordSourceType
[ 28 of 341] Compiling Amazonka.Lightsail.Types.CloudFormationStackRecordSourceInfo
[ 29 of 341] Compiling Amazonka.Lightsail.Types.ComparisonOperator
[ 30 of 341] Compiling Amazonka.Lightsail.Types.ContactMethodStatus
[ 31 of 341] Compiling Amazonka.Lightsail.Types.ContactMethodVerificationProtocol
[ 32 of 341] Compiling Amazonka.Lightsail.Types.ContactProtocol
[ 33 of 341] Compiling Amazonka.Lightsail.Types.ContainerImage
[ 34 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceDeploymentState
[ 35 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceECRImagePullerRole
[ 36 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceECRImagePullerRoleRequest
[ 37 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceHealthCheckConfig
[ 38 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceEndpoint
[ 39 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceLogEvent
[ 40 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceMetricName
[ 41 of 341] Compiling Amazonka.Lightsail.Types.ContainerServicePower
[ 42 of 341] Compiling Amazonka.Lightsail.Types.ContainerServicePowerName
[ 43 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceProtocol
[ 44 of 341] Compiling Amazonka.Lightsail.Types.Container
[ 45 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceDeployment
[ 46 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceRegistryLogin
[ 47 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceState
[ 48 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceStateDetailCode
[ 49 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceStateDetail
[ 50 of 341] Compiling Amazonka.Lightsail.Types.DestinationInfo
[ 51 of 341] Compiling Amazonka.Lightsail.Types.DiskInfo
[ 52 of 341] Compiling Amazonka.Lightsail.Types.DiskMap
[ 53 of 341] Compiling Amazonka.Lightsail.Types.DiskSnapshotInfo
[ 54 of 341] Compiling Amazonka.Lightsail.Types.DiskSnapshotState
[ 55 of 341] Compiling Amazonka.Lightsail.Types.DiskState
[ 56 of 341] Compiling Amazonka.Lightsail.Types.DistributionBundle
[ 57 of 341] Compiling Amazonka.Lightsail.Types.DistributionMetricName
[ 58 of 341] Compiling Amazonka.Lightsail.Types.DnsRecordCreationStateCode
[ 59 of 341] Compiling Amazonka.Lightsail.Types.DnsRecordCreationState
[ 60 of 341] Compiling Amazonka.Lightsail.Types.DomainEntry
[ 61 of 341] Compiling Amazonka.Lightsail.Types.EndpointRequest
[ 62 of 341] Compiling Amazonka.Lightsail.Types.ContainerServiceDeploymentRequest
[ 63 of 341] Compiling Amazonka.Lightsail.Types.ExportSnapshotRecordSourceType
[ 64 of 341] Compiling Amazonka.Lightsail.Types.ForwardValues
[ 65 of 341] Compiling Amazonka.Lightsail.Types.CookieObject
[ 66 of 341] Compiling Amazonka.Lightsail.Types.HeaderEnum
[ 67 of 341] Compiling Amazonka.Lightsail.Types.HeaderObject
[ 68 of 341] Compiling Amazonka.Lightsail.Types.HostKeyAttributes
[ 69 of 341] Compiling Amazonka.Lightsail.Types.HttpEndpoint
[ 70 of 341] Compiling Amazonka.Lightsail.Types.HttpProtocolIpv6
[ 71 of 341] Compiling Amazonka.Lightsail.Types.HttpTokens
[ 72 of 341] Compiling Amazonka.Lightsail.Types.InstanceAccessProtocol
[ 73 of 341] Compiling Amazonka.Lightsail.Types.InstanceHealthReason
[ 74 of 341] Compiling Amazonka.Lightsail.Types.InstanceHealthState
[ 75 of 341] Compiling Amazonka.Lightsail.Types.InstanceHealthSummary
[ 76 of 341] Compiling Amazonka.Lightsail.Types.InstanceMetadataState
[ 77 of 341] Compiling Amazonka.Lightsail.Types.InstanceMetadataOptions
[ 78 of 341] Compiling Amazonka.Lightsail.Types.InstanceMetricName
[ 79 of 341] Compiling Amazonka.Lightsail.Types.InstancePlatform
[ 80 of 341] Compiling Amazonka.Lightsail.Types.Bundle
[ 81 of 341] Compiling Amazonka.Lightsail.Types.Blueprint
[ 82 of 341] Compiling Amazonka.Lightsail.Types.InstanceSnapshotInfo
[ 83 of 341] Compiling Amazonka.Lightsail.Types.ExportSnapshotRecordSourceInfo
[ 84 of 341] Compiling Amazonka.Lightsail.Types.InstanceSnapshotState
[ 85 of 341] Compiling Amazonka.Lightsail.Types.InstanceState
[ 86 of 341] Compiling Amazonka.Lightsail.Types.IpAddressType
[ 87 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerAttributeName
[ 88 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerMetricName
[ 89 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerProtocol
[ 90 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerState
[ 91 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsCertificateDnsRecordCreationStateCode
[ 92 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsCertificateDnsRecordCreationState
[ 93 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsCertificateDomainStatus
[ 94 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsCertificateDomainValidationOption
[ 95 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsCertificateDomainValidationRecord
[ 96 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsCertificateFailureReason
[ 97 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsCertificateRenewalStatus
[ 98 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsCertificateRenewalSummary
[ 99 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsCertificateRevocationReason
[100 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsCertificateStatus
[101 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsCertificateSummary
[102 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsPolicy
[103 of 341] Compiling Amazonka.Lightsail.Types.LogEvent
[104 of 341] Compiling Amazonka.Lightsail.Types.MetricName
[105 of 341] Compiling Amazonka.Lightsail.Types.MetricStatistic
[106 of 341] Compiling Amazonka.Lightsail.Types.MetricUnit
[107 of 341] Compiling Amazonka.Lightsail.Types.MetricDatapoint
[108 of 341] Compiling Amazonka.Lightsail.Types.MonthlyTransfer
[109 of 341] Compiling Amazonka.Lightsail.Types.NameServersUpdateStateCode
[110 of 341] Compiling Amazonka.Lightsail.Types.NameServersUpdateState
[111 of 341] Compiling Amazonka.Lightsail.Types.NetworkProtocol
[112 of 341] Compiling Amazonka.Lightsail.Types.OperationStatus
[113 of 341] Compiling Amazonka.Lightsail.Types.OperationType
[114 of 341] Compiling Amazonka.Lightsail.Types.OriginProtocolPolicyEnum
[115 of 341] Compiling Amazonka.Lightsail.Types.PasswordData
[116 of 341] Compiling Amazonka.Lightsail.Types.InstanceAccessDetails
[117 of 341] Compiling Amazonka.Lightsail.Types.PendingMaintenanceAction
[118 of 341] Compiling Amazonka.Lightsail.Types.PendingModifiedRelationalDatabaseValues
[119 of 341] Compiling Amazonka.Lightsail.Types.PortAccessType
[120 of 341] Compiling Amazonka.Lightsail.Types.InstancePortInfo
[121 of 341] Compiling Amazonka.Lightsail.Types.InstanceNetworking
[122 of 341] Compiling Amazonka.Lightsail.Types.PortInfo
[123 of 341] Compiling Amazonka.Lightsail.Types.PortInfoSourceType
[124 of 341] Compiling Amazonka.Lightsail.Types.InstanceEntry
[125 of 341] Compiling Amazonka.Lightsail.Types.PortState
[126 of 341] Compiling Amazonka.Lightsail.Types.InstancePortState
[127 of 341] Compiling Amazonka.Lightsail.Types.PrivateRegistryAccess
[128 of 341] Compiling Amazonka.Lightsail.Types.PrivateRegistryAccessRequest
[129 of 341] Compiling Amazonka.Lightsail.Types.QueryStringObject
[130 of 341] Compiling Amazonka.Lightsail.Types.CacheSettings
[131 of 341] Compiling Amazonka.Lightsail.Types.R53HostedZoneDeletionStateCode
[132 of 341] Compiling Amazonka.Lightsail.Types.R53HostedZoneDeletionState
[133 of 341] Compiling Amazonka.Lightsail.Types.RecordState
[134 of 341] Compiling Amazonka.Lightsail.Types.RegionName
[135 of 341] Compiling Amazonka.Lightsail.Types.RegionInfo
[136 of 341] Compiling Amazonka.Lightsail.Types.InputOrigin
[137 of 341] Compiling Amazonka.Lightsail.Types.RegisteredDomainDelegationInfo
[138 of 341] Compiling Amazonka.Lightsail.Types.RelationalDatabaseBundle
[139 of 341] Compiling Amazonka.Lightsail.Types.RelationalDatabaseEndpoint
[140 of 341] Compiling Amazonka.Lightsail.Types.RelationalDatabaseEngine
[141 of 341] Compiling Amazonka.Lightsail.Types.RelationalDatabaseBlueprint
[142 of 341] Compiling Amazonka.Lightsail.Types.RelationalDatabaseEvent
[143 of 341] Compiling Amazonka.Lightsail.Types.RelationalDatabaseHardware
[144 of 341] Compiling Amazonka.Lightsail.Types.RelationalDatabaseMetricName
[145 of 341] Compiling Amazonka.Lightsail.Types.RelationalDatabaseParameter
[146 of 341] Compiling Amazonka.Lightsail.Types.RelationalDatabasePasswordVersion
[147 of 341] Compiling Amazonka.Lightsail.Types.RenewalStatus
[148 of 341] Compiling Amazonka.Lightsail.Types.ResourceBucketAccess
[149 of 341] Compiling Amazonka.Lightsail.Types.ResourceLocation
[150 of 341] Compiling Amazonka.Lightsail.Types.ResourceReceivingAccess
[151 of 341] Compiling Amazonka.Lightsail.Types.ResourceRecord
[152 of 341] Compiling Amazonka.Lightsail.Types.DomainValidationRecord
[153 of 341] Compiling Amazonka.Lightsail.Types.RenewalSummary
[154 of 341] Compiling Amazonka.Lightsail.Types.ResourceType
[155 of 341] Compiling Amazonka.Lightsail.Types.Origin
[156 of 341] Compiling Amazonka.Lightsail.Types.Operation
[157 of 341] Compiling Amazonka.Lightsail.Types.MonitoredResourceInfo
[158 of 341] Compiling Amazonka.Lightsail.Types.ExportSnapshotRecord

gen/Amazonka/Lightsail/Types/ExportSnapshotRecord.hs:98:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {arn = a} with type ExportSnapshotRecord is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | exportSnapshotRecord_arn = Lens.lens (\ExportSnapshotRecord' {arn} -> arn) (\s@ExportSnapshotRecord' {} a -> s {arn = a} :: ExportSnapshotRecord)
   |                                                                                                                 ^^^^^^^

gen/Amazonka/Lightsail/Types/ExportSnapshotRecord.hs:102:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {createdAt = a} with type ExportSnapshotRecord is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | exportSnapshotRecord_createdAt = Lens.lens (\ExportSnapshotRecord' {createdAt} -> createdAt) (\s@ExportSnapshotRecord' {} a -> s {createdAt = a} :: ExportSnapshotRecord) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                   ^^^^^^^^^^^^^

gen/Amazonka/Lightsail/Types/ExportSnapshotRecord.hs:116:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type ExportSnapshotRecord is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
116 | exportSnapshotRecord_name = Lens.lens (\ExportSnapshotRecord' {name} -> name) (\s@ExportSnapshotRecord' {} a -> s {name = a} :: ExportSnapshotRecord)
    |                                                                                                                    ^^^^^^^^

gen/Amazonka/Lightsail/Types/ExportSnapshotRecord.hs:120:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceType = a} with type ExportSnapshotRecord is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | exportSnapshotRecord_resourceType = Lens.lens (\ExportSnapshotRecord' {resourceType} -> resourceType) (\s@ExportSnapshotRecord' {} a -> s {resourceType = a} :: ExportSnapshotRecord)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^
[159 of 341] Compiling Amazonka.Lightsail.Types.ContactMethod
[160 of 341] Compiling Amazonka.Lightsail.Types.CloudFormationStackRecord

gen/Amazonka/Lightsail/Types/CloudFormationStackRecord.hs:109:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {arn = a} with type CloudFormationStackRecord is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | cloudFormationStackRecord_arn = Lens.lens (\CloudFormationStackRecord' {arn} -> arn) (\s@CloudFormationStackRecord' {} a -> s {arn = a} :: CloudFormationStackRecord)
    |                                                                                                                                ^^^^^^^

gen/Amazonka/Lightsail/Types/CloudFormationStackRecord.hs:129:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type CloudFormationStackRecord is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
129 | cloudFormationStackRecord_name = Lens.lens (\CloudFormationStackRecord' {name} -> name) (\s@CloudFormationStackRecord' {} a -> s {name = a} :: CloudFormationStackRecord)
    |                                                                                                                                   ^^^^^^^^

gen/Amazonka/Lightsail/Types/CloudFormationStackRecord.hs:133:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceType = a} with type CloudFormationStackRecord is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
133 | cloudFormationStackRecord_resourceType = Lens.lens (\CloudFormationStackRecord' {resourceType} -> resourceType) (\s@CloudFormationStackRecord' {} a -> s {resourceType = a} :: CloudFormationStackRecord)
    |                                                                                                                                                           ^^^^^^^^^^^^^^^^
[161 of 341] Compiling Amazonka.Lightsail.Types.StaticIp
[162 of 341] Compiling Amazonka.Lightsail.Types.StatusType
[163 of 341] Compiling Amazonka.Lightsail.Types.AccessKey
[164 of 341] Compiling Amazonka.Lightsail.Types.Tag
[165 of 341] Compiling Amazonka.Lightsail.Types.RelationalDatabaseSnapshot
[166 of 341] Compiling Amazonka.Lightsail.Types.RelationalDatabase

gen/Amazonka/Lightsail/Types/RelationalDatabase.hs:231:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {backupRetentionEnabled = a} with type RelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
231 | relationalDatabase_backupRetentionEnabled = Lens.lens (\RelationalDatabase' {backupRetentionEnabled} -> backupRetentionEnabled) (\s@RelationalDatabase' {} a -> s {backupRetentionEnabled = a} :: RelationalDatabase)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/Types/RelationalDatabase.hs:247:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {engineVersion = a} with type RelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
247 | relationalDatabase_engineVersion = Lens.lens (\RelationalDatabase' {engineVersion} -> engineVersion) (\s@RelationalDatabase' {} a -> s {engineVersion = a} :: RelationalDatabase)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^
[167 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancerTlsCertificate

gen/Amazonka/Lightsail/Types/LoadBalancerTlsCertificate.hs:371:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type LoadBalancerTlsCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
371 | loadBalancerTlsCertificate_domainName = Lens.lens (\LoadBalancerTlsCertificate' {domainName} -> domainName) (\s@LoadBalancerTlsCertificate' {} a -> s {domainName = a} :: LoadBalancerTlsCertificate)
    |                                                                                                                                                        ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/Types/LoadBalancerTlsCertificate.hs:463:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type LoadBalancerTlsCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
463 | loadBalancerTlsCertificate_name = Lens.lens (\LoadBalancerTlsCertificate' {name} -> name) (\s@LoadBalancerTlsCertificate' {} a -> s {name = a} :: LoadBalancerTlsCertificate)
    |                                                                                                                                      ^^^^^^^^
[168 of 341] Compiling Amazonka.Lightsail.Types.LoadBalancer

gen/Amazonka/Lightsail/Types/LoadBalancer.hs:249:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type LoadBalancer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
249 | loadBalancer_name = Lens.lens (\LoadBalancer' {name} -> name) (\s@LoadBalancer' {} a -> s {name = a} :: LoadBalancer)
    |                                                                                            ^^^^^^^^
[169 of 341] Compiling Amazonka.Lightsail.Types.LightsailDistribution

gen/Amazonka/Lightsail/Types/LightsailDistribution.hs:276:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type LightsailDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
276 | lightsailDistribution_name = Lens.lens (\LightsailDistribution' {name} -> name) (\s@LightsailDistribution' {} a -> s {name = a} :: LightsailDistribution)
    |                                                                                                                       ^^^^^^^^

gen/Amazonka/Lightsail/Types/LightsailDistribution.hs:291:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceType = a} with type LightsailDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
291 | lightsailDistribution_resourceType = Lens.lens (\LightsailDistribution' {resourceType} -> resourceType) (\s@LightsailDistribution' {} a -> s {resourceType = a} :: LightsailDistribution)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^
[170 of 341] Compiling Amazonka.Lightsail.Types.KeyPair
[171 of 341] Compiling Amazonka.Lightsail.Types.Domain

gen/Amazonka/Lightsail/Types/Domain.hs:136:74: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type Domain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
136 | domain_name = Lens.lens (\Domain' {name} -> name) (\s@Domain' {} a -> s {name = a} :: Domain)
    |                                                                          ^^^^^^^^
[172 of 341] Compiling Amazonka.Lightsail.Types.DiskSnapshot
[173 of 341] Compiling Amazonka.Lightsail.Types.Disk

gen/Amazonka/Lightsail/Types/Disk.hs:213:68: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type Disk is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
213 | disk_name = Lens.lens (\Disk' {name} -> name) (\s@Disk' {} a -> s {name = a} :: Disk)
    |                                                                    ^^^^^^^^
[174 of 341] Compiling Amazonka.Lightsail.Types.InstanceSnapshot

gen/Amazonka/Lightsail/Types/InstanceSnapshot.hs:165:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {arn = a} with type InstanceSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
165 | instanceSnapshot_arn = Lens.lens (\InstanceSnapshot' {arn} -> arn) (\s@InstanceSnapshot' {} a -> s {arn = a} :: InstanceSnapshot)
    |                                                                                                     ^^^^^^^

gen/Amazonka/Lightsail/Types/InstanceSnapshot.hs:169:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {createdAt = a} with type InstanceSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
169 | instanceSnapshot_createdAt = Lens.lens (\InstanceSnapshot' {createdAt} -> createdAt) (\s@InstanceSnapshot' {} a -> s {createdAt = a} :: InstanceSnapshot) Prelude.. Lens.mapping Data._Time
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/Lightsail/Types/InstanceSnapshot.hs:203:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {location = a} with type InstanceSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
203 | instanceSnapshot_location = Lens.lens (\InstanceSnapshot' {location} -> location) (\s@InstanceSnapshot' {} a -> s {location = a} :: InstanceSnapshot)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/Lightsail/Types/InstanceSnapshot.hs:207:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type InstanceSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
207 | instanceSnapshot_name = Lens.lens (\InstanceSnapshot' {name} -> name) (\s@InstanceSnapshot' {} a -> s {name = a} :: InstanceSnapshot)
    |                                                                                                        ^^^^^^^^

gen/Amazonka/Lightsail/Types/InstanceSnapshot.hs:218:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceType = a} with type InstanceSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
218 | instanceSnapshot_resourceType = Lens.lens (\InstanceSnapshot' {resourceType} -> resourceType) (\s@InstanceSnapshot' {} a -> s {resourceType = a} :: InstanceSnapshot)
    |                                                                                                                                ^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/Types/InstanceSnapshot.hs:222:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sizeInGb = a} with type InstanceSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
222 | instanceSnapshot_sizeInGb = Lens.lens (\InstanceSnapshot' {sizeInGb} -> sizeInGb) (\s@InstanceSnapshot' {} a -> s {sizeInGb = a} :: InstanceSnapshot)
    |                                                                                                                    ^^^^^^^^^^^^

gen/Amazonka/Lightsail/Types/InstanceSnapshot.hs:226:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {state = a} with type InstanceSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
226 | instanceSnapshot_state = Lens.lens (\InstanceSnapshot' {state} -> state) (\s@InstanceSnapshot' {} a -> s {state = a} :: InstanceSnapshot)
    |                                                                                                           ^^^^^^^^^

gen/Amazonka/Lightsail/Types/InstanceSnapshot.hs:233:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {supportCode = a} with type InstanceSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
233 | instanceSnapshot_supportCode = Lens.lens (\InstanceSnapshot' {supportCode} -> supportCode) (\s@InstanceSnapshot' {} a -> s {supportCode = a} :: InstanceSnapshot)
    |                                                                                                                             ^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/Types/InstanceSnapshot.hs:239:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type InstanceSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
239 | instanceSnapshot_tags = Lens.lens (\InstanceSnapshot' {tags} -> tags) (\s@InstanceSnapshot' {} a -> s {tags = a} :: InstanceSnapshot) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                        ^^^^^^^^
[175 of 341] Compiling Amazonka.Lightsail.Types.InstanceHardware
[176 of 341] Compiling Amazonka.Lightsail.Types.Instance

gen/Amazonka/Lightsail/Types/Instance.hs:248:80: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type Instance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
248 | instance_name = Lens.lens (\Instance' {name} -> name) (\s@Instance' {} a -> s {name = a} :: Instance)
    |                                                                                ^^^^^^^^

gen/Amazonka/Lightsail/Types/Instance.hs:274:83: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {state = a} with type Instance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
274 | instance_state = Lens.lens (\Instance' {state} -> state) (\s@Instance' {} a -> s {state = a} :: Instance)
    |                                                                                   ^^^^^^^^^
[177 of 341] Compiling Amazonka.Lightsail.Types.ContainerService

gen/Amazonka/Lightsail/Types/ContainerService.hs:304:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {createdAt = a} with type ContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
304 | containerService_createdAt = Lens.lens (\ContainerService' {createdAt} -> createdAt) (\s@ContainerService' {} a -> s {createdAt = a} :: ContainerService) Prelude.. Lens.mapping Data._Time
    |                                                                                                                       ^^^^^^^^^^^^^

gen/Amazonka/Lightsail/Types/ContainerService.hs:420:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {state = a} with type ContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
420 | containerService_state = Lens.lens (\ContainerService' {state} -> state) (\s@ContainerService' {} a -> s {state = a} :: ContainerService)
    |                                                                                                           ^^^^^^^^^
[178 of 341] Compiling Amazonka.Lightsail.Types.Certificate

gen/Amazonka/Lightsail/Types/Certificate.hs:297:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type Certificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
297 | certificate_domainName = Lens.lens (\Certificate' {domainName} -> domainName) (\s@Certificate' {} a -> s {domainName = a} :: Certificate)
    |                                                                                                           ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/Types/Certificate.hs:302:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainValidationRecords = a} with type Certificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
302 | certificate_domainValidationRecords = Lens.lens (\Certificate' {domainValidationRecords} -> domainValidationRecords) (\s@Certificate' {} a -> s {domainValidationRecords = a} :: Certificate) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
[179 of 341] Compiling Amazonka.Lightsail.Types.CertificateSummary

gen/Amazonka/Lightsail/Types/CertificateSummary.hs:93:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type CertificateSummary is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | certificateSummary_domainName = Lens.lens (\CertificateSummary' {domainName} -> domainName) (\s@CertificateSummary' {} a -> s {domainName = a} :: CertificateSummary)
   |                                                                                                                                ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/Types/CertificateSummary.hs:99:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CertificateSummary is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
99 | certificateSummary_tags = Lens.lens (\CertificateSummary' {tags} -> tags) (\s@CertificateSummary' {} a -> s {tags = a} :: CertificateSummary) Prelude.. Lens.mapping Lens.coerced
   |                                                                                                              ^^^^^^^^
[180 of 341] Compiling Amazonka.Lightsail.Types.Bucket

gen/Amazonka/Lightsail/Types/Bucket.hs:253:74: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type Bucket is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
253 | bucket_name = Lens.lens (\Bucket' {name} -> name) (\s@Bucket' {} a -> s {name = a} :: Bucket)
    |                                                                          ^^^^^^^^

gen/Amazonka/Lightsail/Types/Bucket.hs:275:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceType = a} with type Bucket is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
275 | bucket_resourceType = Lens.lens (\Bucket' {resourceType} -> resourceType) (\s@Bucket' {} a -> s {resourceType = a} :: Bucket)
    |                                                                                                  ^^^^^^^^^^^^^^^^
[181 of 341] Compiling Amazonka.Lightsail.Types.TreatMissingData
[182 of 341] Compiling Amazonka.Lightsail.Types.Alarm

gen/Amazonka/Lightsail/Types/Alarm.hs:275:68: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {arn = a} with type Alarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
275 | alarm_arn = Lens.lens (\Alarm' {arn} -> arn) (\s@Alarm' {} a -> s {arn = a} :: Alarm)
    |                                                                    ^^^^^^^

gen/Amazonka/Lightsail/Types/Alarm.hs:316:71: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {name = a} with type Alarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
316 | alarm_name = Lens.lens (\Alarm' {name} -> name) (\s@Alarm' {} a -> s {name = a} :: Alarm)
    |                                                                       ^^^^^^^^

gen/Amazonka/Lightsail/Types/Alarm.hs:332:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceType = a} with type Alarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
332 | alarm_resourceType = Lens.lens (\Alarm' {resourceType} -> resourceType) (\s@Alarm' {} a -> s {resourceType = a} :: Alarm)
    |                                                                                               ^^^^^^^^^^^^^^^^
[183 of 341] Compiling Amazonka.Lightsail.Types
[184 of 341] Compiling Amazonka.Lightsail.TestAlarm

gen/Amazonka/Lightsail/TestAlarm.hs:128:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {state = a} with type TestAlarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
128 | testAlarm_state = Lens.lens (\TestAlarm' {state} -> state) (\s@TestAlarm' {} a -> s {state = a} :: TestAlarm)
    |                                                                                      ^^^^^^^^^
[185 of 341] Compiling Amazonka.Lightsail.TagResource

gen/Amazonka/Lightsail/TagResource.hs:105:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceName = a} with type TagResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
105 | tagResource_resourceName = Lens.lens (\TagResource' {resourceName} -> resourceName) (\s@TagResource' {} a -> s {resourceName = a} :: TagResource)
    |                                                                                                                 ^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/TagResource.hs:109:89: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type TagResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
109 | tagResource_tags = Lens.lens (\TagResource' {tags} -> tags) (\s@TagResource' {} a -> s {tags = a} :: TagResource) Prelude.. Lens.coerced
    |                                                                                         ^^^^^^^^
[186 of 341] Compiling Amazonka.Lightsail.StopRelationalDatabase
[187 of 341] Compiling Amazonka.Lightsail.StopInstance

gen/Amazonka/Lightsail/StopInstance.hs:113:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type StopInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | stopInstance_instanceName = Lens.lens (\StopInstance' {instanceName} -> instanceName) (\s@StopInstance' {} a -> s {instanceName = a} :: StopInstance)
    |                                                                                                                    ^^^^^^^^^^^^^^^^
[188 of 341] Compiling Amazonka.Lightsail.StartRelationalDatabase
[189 of 341] Compiling Amazonka.Lightsail.StartInstance

gen/Amazonka/Lightsail/StartInstance.hs:87:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type StartInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | startInstance_instanceName = Lens.lens (\StartInstance' {instanceName} -> instanceName) (\s@StartInstance' {} a -> s {instanceName = a} :: StartInstance)
   |                                                                                                                       ^^^^^^^^^^^^^^^^
[190 of 341] Compiling Amazonka.Lightsail.SetResourceAccessForBucket

gen/Amazonka/Lightsail/SetResourceAccessForBucket.hs:120:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceName = a} with type SetResourceAccessForBucket is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | setResourceAccessForBucket_resourceName = Lens.lens (\SetResourceAccessForBucket' {resourceName} -> resourceName) (\s@SetResourceAccessForBucket' {} a -> s {resourceName = a} :: SetResourceAccessForBucket)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^
[191 of 341] Compiling Amazonka.Lightsail.SetIpAddressType

gen/Amazonka/Lightsail/SetIpAddressType.hs:127:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceType = a} with type SetIpAddressType is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
127 | setIpAddressType_resourceType = Lens.lens (\SetIpAddressType' {resourceType} -> resourceType) (\s@SetIpAddressType' {} a -> s {resourceType = a} :: SetIpAddressType)
    |                                                                                                                                ^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/SetIpAddressType.hs:131:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceName = a} with type SetIpAddressType is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
131 | setIpAddressType_resourceName = Lens.lens (\SetIpAddressType' {resourceName} -> resourceName) (\s@SetIpAddressType' {} a -> s {resourceName = a} :: SetIpAddressType)
    |                                                                                                                                ^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/SetIpAddressType.hs:138:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {ipAddressType = a} with type SetIpAddressType is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
138 | setIpAddressType_ipAddressType = Lens.lens (\SetIpAddressType' {ipAddressType} -> ipAddressType) (\s@SetIpAddressType' {} a -> s {ipAddressType = a} :: SetIpAddressType)
    |                                                                                                                                   ^^^^^^^^^^^^^^^^^
[192 of 341] Compiling Amazonka.Lightsail.SendContactMethodVerification

gen/Amazonka/Lightsail/SendContactMethodVerification.hs:94:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {protocol = a} with type SendContactMethodVerification is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | sendContactMethodVerification_protocol = Lens.lens (\SendContactMethodVerification' {protocol} -> protocol) (\s@SendContactMethodVerification' {} a -> s {protocol = a} :: SendContactMethodVerification)
   |                                                                                                                                                           ^^^^^^^^^^^^
[193 of 341] Compiling Amazonka.Lightsail.ResetDistributionCache

gen/Amazonka/Lightsail/ResetDistributionCache.hs:207:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type ResetDistributionCacheResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
207 | resetDistributionCacheResponse_status = Lens.lens (\ResetDistributionCacheResponse' {status} -> status) (\s@ResetDistributionCacheResponse' {} a -> s {status = a} :: ResetDistributionCacheResponse)
    |                                                                                                                                                        ^^^^^^^^^^
[194 of 341] Compiling Amazonka.Lightsail.ReleaseStaticIp
[195 of 341] Compiling Amazonka.Lightsail.RegisterContainerImage

gen/Amazonka/Lightsail/RegisterContainerImage.hs:150:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type RegisterContainerImage is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
150 | registerContainerImage_serviceName = Lens.lens (\RegisterContainerImage' {serviceName} -> serviceName) (\s@RegisterContainerImage' {} a -> s {serviceName = a} :: RegisterContainerImage)
    |                                                                                                                                               ^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/RegisterContainerImage.hs:180:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {digest = a} with type RegisterContainerImage is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
180 | registerContainerImage_digest = Lens.lens (\RegisterContainerImage' {digest} -> digest) (\s@RegisterContainerImage' {} a -> s {digest = a} :: RegisterContainerImage)
    |                                                                                                                                ^^^^^^^^^^
[196 of 341] Compiling Amazonka.Lightsail.RebootRelationalDatabase
[197 of 341] Compiling Amazonka.Lightsail.RebootInstance

gen/Amazonka/Lightsail/RebootInstance.hs:80:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type RebootInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
80 | rebootInstance_instanceName = Lens.lens (\RebootInstance' {instanceName} -> instanceName) (\s@RebootInstance' {} a -> s {instanceName = a} :: RebootInstance)
   |                                                                                                                          ^^^^^^^^^^^^^^^^
[198 of 341] Compiling Amazonka.Lightsail.PutInstancePublicPorts

gen/Amazonka/Lightsail/PutInstancePublicPorts.hs:101:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type PutInstancePublicPorts is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
101 | putInstancePublicPorts_instanceName = Lens.lens (\PutInstancePublicPorts' {instanceName} -> instanceName) (\s@PutInstancePublicPorts' {} a -> s {instanceName = a} :: PutInstancePublicPorts)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^
[199 of 341] Compiling Amazonka.Lightsail.PutAlarm

gen/Amazonka/Lightsail/PutAlarm.hs:388:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {contactProtocols = a} with type PutAlarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
388 | putAlarm_contactProtocols = Lens.lens (\PutAlarm' {contactProtocols} -> contactProtocols) (\s@PutAlarm' {} a -> s {contactProtocols = a} :: PutAlarm) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                    ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/PutAlarm.hs:394:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {datapointsToAlarm = a} with type PutAlarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
394 | putAlarm_datapointsToAlarm = Lens.lens (\PutAlarm' {datapointsToAlarm} -> datapointsToAlarm) (\s@PutAlarm' {} a -> s {datapointsToAlarm = a} :: PutAlarm)
    |                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/PutAlarm.hs:401:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {notificationEnabled = a} with type PutAlarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
401 | putAlarm_notificationEnabled = Lens.lens (\PutAlarm' {notificationEnabled} -> notificationEnabled) (\s@PutAlarm' {} a -> s {notificationEnabled = a} :: PutAlarm)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/PutAlarm.hs:431:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {notificationTriggers = a} with type PutAlarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
431 | putAlarm_notificationTriggers = Lens.lens (\PutAlarm' {notificationTriggers} -> notificationTriggers) (\s@PutAlarm' {} a -> s {notificationTriggers = a} :: PutAlarm) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/PutAlarm.hs:453:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {treatMissingData = a} with type PutAlarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
453 | putAlarm_treatMissingData = Lens.lens (\PutAlarm' {treatMissingData} -> treatMissingData) (\s@PutAlarm' {} a -> s {treatMissingData = a} :: PutAlarm)
    |                                                                                                                    ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/PutAlarm.hs:484:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type PutAlarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
484 | putAlarm_metricName = Lens.lens (\PutAlarm' {metricName} -> metricName) (\s@PutAlarm' {} a -> s {metricName = a} :: PutAlarm)
    |                                                                                                  ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/PutAlarm.hs:497:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {comparisonOperator = a} with type PutAlarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
497 | putAlarm_comparisonOperator = Lens.lens (\PutAlarm' {comparisonOperator} -> comparisonOperator) (\s@PutAlarm' {} a -> s {comparisonOperator = a} :: PutAlarm)
    |                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/PutAlarm.hs:501:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {threshold = a} with type PutAlarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
501 | putAlarm_threshold = Lens.lens (\PutAlarm' {threshold} -> threshold) (\s@PutAlarm' {} a -> s {threshold = a} :: PutAlarm)
    |                                                                                               ^^^^^^^^^^^^^

gen/Amazonka/Lightsail/PutAlarm.hs:518:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {evaluationPeriods = a} with type PutAlarm is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
518 | putAlarm_evaluationPeriods = Lens.lens (\PutAlarm' {evaluationPeriods} -> evaluationPeriods) (\s@PutAlarm' {} a -> s {evaluationPeriods = a} :: PutAlarm)
    |                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^
[200 of 341] Compiling Amazonka.Lightsail.PeerVpc
[201 of 341] Compiling Amazonka.Lightsail.OpenInstancePublicPorts

gen/Amazonka/Lightsail/OpenInstancePublicPorts.hs:96:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type OpenInstancePublicPorts is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
96 | openInstancePublicPorts_instanceName = Lens.lens (\OpenInstancePublicPorts' {instanceName} -> instanceName) (\s@OpenInstancePublicPorts' {} a -> s {instanceName = a} :: OpenInstancePublicPorts)
   |                                                                                                                                                     ^^^^^^^^^^^^^^^^
[202 of 341] Compiling Amazonka.Lightsail.IsVpcPeered
[203 of 341] Compiling Amazonka.Lightsail.ImportKeyPair

gen/Amazonka/Lightsail/ImportKeyPair.hs:85:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyPairName = a} with type ImportKeyPair is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
85 | importKeyPair_keyPairName = Lens.lens (\ImportKeyPair' {keyPairName} -> keyPairName) (\s@ImportKeyPair' {} a -> s {keyPairName = a} :: ImportKeyPair)
   |                                                                                                                    ^^^^^^^^^^^^^^^
[204 of 341] Compiling Amazonka.Lightsail.GetStaticIps
[205 of 341] Compiling Amazonka.Lightsail.GetStaticIp
[206 of 341] Compiling Amazonka.Lightsail.GetRelationalDatabases
[207 of 341] Compiling Amazonka.Lightsail.GetRelationalDatabaseSnapshots
[208 of 341] Compiling Amazonka.Lightsail.GetRelationalDatabaseSnapshot
[209 of 341] Compiling Amazonka.Lightsail.GetRelationalDatabaseParameters
[210 of 341] Compiling Amazonka.Lightsail.GetRelationalDatabaseMetricData

gen/Amazonka/Lightsail/GetRelationalDatabaseMetricData.hs:381:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type GetRelationalDatabaseMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
381 | getRelationalDatabaseMetricData_metricName = Lens.lens (\GetRelationalDatabaseMetricData' {metricName} -> metricName) (\s@GetRelationalDatabaseMetricData' {} a -> s {metricName = a} :: GetRelationalDatabaseMetricData)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetRelationalDatabaseMetricData.hs:388:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {period = a} with type GetRelationalDatabaseMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
388 | getRelationalDatabaseMetricData_period = Lens.lens (\GetRelationalDatabaseMetricData' {period} -> period) (\s@GetRelationalDatabaseMetricData' {} a -> s {period = a} :: GetRelationalDatabaseMetricData)
    |                                                                                                                                                           ^^^^^^^^^^

gen/Amazonka/Lightsail/GetRelationalDatabaseMetricData.hs:420:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {unit = a} with type GetRelationalDatabaseMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
420 | getRelationalDatabaseMetricData_unit = Lens.lens (\GetRelationalDatabaseMetricData' {unit} -> unit) (\s@GetRelationalDatabaseMetricData' {} a -> s {unit = a} :: GetRelationalDatabaseMetricData)
    |                                                                                                                                                     ^^^^^^^^

gen/Amazonka/Lightsail/GetRelationalDatabaseMetricData.hs:581:191: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type GetRelationalDatabaseMetricDataResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
581 | getRelationalDatabaseMetricDataResponse_metricName = Lens.lens (\GetRelationalDatabaseMetricDataResponse' {metricName} -> metricName) (\s@GetRelationalDatabaseMetricDataResponse' {} a -> s {metricName = a} :: GetRelationalDatabaseMetricDataResponse)
    |                                                                                                                                                                                               ^^^^^^^^^^^^^^
[211 of 341] Compiling Amazonka.Lightsail.GetRelationalDatabaseMasterUserPassword

gen/Amazonka/Lightsail/GetRelationalDatabaseMasterUserPassword.hs:249:212: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {createdAt = a} with type GetRelationalDatabaseMasterUserPasswordResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
249 | getRelationalDatabaseMasterUserPasswordResponse_createdAt = Lens.lens (\GetRelationalDatabaseMasterUserPasswordResponse' {createdAt} -> createdAt) (\s@GetRelationalDatabaseMasterUserPasswordResponse' {} a -> s {createdAt = a} :: GetRelationalDatabaseMasterUserPasswordResponse) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                                                                                                    ^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetRelationalDatabaseMasterUserPassword.hs:253:239: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {masterUserPassword = a} with type GetRelationalDatabaseMasterUserPasswordResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
253 | getRelationalDatabaseMasterUserPasswordResponse_masterUserPassword = Lens.lens (\GetRelationalDatabaseMasterUserPasswordResponse' {masterUserPassword} -> masterUserPassword) (\s@GetRelationalDatabaseMasterUserPasswordResponse' {} a -> s {masterUserPassword = a} :: GetRelationalDatabaseMasterUserPasswordResponse) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^
[212 of 341] Compiling Amazonka.Lightsail.GetRelationalDatabaseLogStreams
[213 of 341] Compiling Amazonka.Lightsail.GetRelationalDatabaseLogEvents
[214 of 341] Compiling Amazonka.Lightsail.GetRelationalDatabaseEvents
[215 of 341] Compiling Amazonka.Lightsail.GetRelationalDatabaseBundles
[216 of 341] Compiling Amazonka.Lightsail.GetRelationalDatabaseBlueprints
[217 of 341] Compiling Amazonka.Lightsail.GetRelationalDatabase
[218 of 341] Compiling Amazonka.Lightsail.GetRegions
[219 of 341] Compiling Amazonka.Lightsail.GetOperationsForResource

gen/Amazonka/Lightsail/GetOperationsForResource.hs:106:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceName = a} with type GetOperationsForResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | getOperationsForResource_resourceName = Lens.lens (\GetOperationsForResource' {resourceName} -> resourceName) (\s@GetOperationsForResource' {} a -> s {resourceName = a} :: GetOperationsForResource)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^
[220 of 341] Compiling Amazonka.Lightsail.GetOperations
[221 of 341] Compiling Amazonka.Lightsail.GetOperation
[222 of 341] Compiling Amazonka.Lightsail.GetLoadBalancers
[223 of 341] Compiling Amazonka.Lightsail.GetLoadBalancerTlsPolicies
[224 of 341] Compiling Amazonka.Lightsail.GetLoadBalancerTlsCertificates

gen/Amazonka/Lightsail/GetLoadBalancerTlsCertificates.hs:88:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {loadBalancerName = a} with type GetLoadBalancerTlsCertificates is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
88 | getLoadBalancerTlsCertificates_loadBalancerName = Lens.lens (\GetLoadBalancerTlsCertificates' {loadBalancerName} -> loadBalancerName) (\s@GetLoadBalancerTlsCertificates' {} a -> s {loadBalancerName = a} :: GetLoadBalancerTlsCertificates)
   |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^
[225 of 341] Compiling Amazonka.Lightsail.GetLoadBalancerMetricData

gen/Amazonka/Lightsail/GetLoadBalancerMetricData.hs:414:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {loadBalancerName = a} with type GetLoadBalancerMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
414 | getLoadBalancerMetricData_loadBalancerName = Lens.lens (\GetLoadBalancerMetricData' {loadBalancerName} -> loadBalancerName) (\s@GetLoadBalancerMetricData' {} a -> s {loadBalancerName = a} :: GetLoadBalancerMetricData)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetLoadBalancerMetricData.hs:531:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type GetLoadBalancerMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
531 | getLoadBalancerMetricData_metricName = Lens.lens (\GetLoadBalancerMetricData' {metricName} -> metricName) (\s@GetLoadBalancerMetricData' {} a -> s {metricName = a} :: GetLoadBalancerMetricData)
    |                                                                                                                                                     ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetLoadBalancerMetricData.hs:535:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {period = a} with type GetLoadBalancerMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
535 | getLoadBalancerMetricData_period = Lens.lens (\GetLoadBalancerMetricData' {period} -> period) (\s@GetLoadBalancerMetricData' {} a -> s {period = a} :: GetLoadBalancerMetricData)
    |                                                                                                                                         ^^^^^^^^^^

gen/Amazonka/Lightsail/GetLoadBalancerMetricData.hs:549:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {unit = a} with type GetLoadBalancerMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
549 | getLoadBalancerMetricData_unit = Lens.lens (\GetLoadBalancerMetricData' {unit} -> unit) (\s@GetLoadBalancerMetricData' {} a -> s {unit = a} :: GetLoadBalancerMetricData)
    |                                                                                                                                   ^^^^^^^^

gen/Amazonka/Lightsail/GetLoadBalancerMetricData.hs:693:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type GetLoadBalancerMetricDataResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
693 | getLoadBalancerMetricDataResponse_metricName = Lens.lens (\GetLoadBalancerMetricDataResponse' {metricName} -> metricName) (\s@GetLoadBalancerMetricDataResponse' {} a -> s {metricName = a} :: GetLoadBalancerMetricDataResponse)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^
[226 of 341] Compiling Amazonka.Lightsail.GetLoadBalancer

gen/Amazonka/Lightsail/GetLoadBalancer.hs:78:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {loadBalancerName = a} with type GetLoadBalancer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
78 | getLoadBalancer_loadBalancerName = Lens.lens (\GetLoadBalancer' {loadBalancerName} -> loadBalancerName) (\s@GetLoadBalancer' {} a -> s {loadBalancerName = a} :: GetLoadBalancer)
   |                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^
[227 of 341] Compiling Amazonka.Lightsail.GetKeyPairs
[228 of 341] Compiling Amazonka.Lightsail.GetKeyPair

gen/Amazonka/Lightsail/GetKeyPair.hs:75:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyPairName = a} with type GetKeyPair is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
75 | getKeyPair_keyPairName = Lens.lens (\GetKeyPair' {keyPairName} -> keyPairName) (\s@GetKeyPair' {} a -> s {keyPairName = a} :: GetKeyPair)
   |                                                                                                           ^^^^^^^^^^^^^^^
[229 of 341] Compiling Amazonka.Lightsail.GetInstances
[230 of 341] Compiling Amazonka.Lightsail.GetInstanceState

gen/Amazonka/Lightsail/GetInstanceState.hs:76:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type GetInstanceState is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
76 | getInstanceState_instanceName = Lens.lens (\GetInstanceState' {instanceName} -> instanceName) (\s@GetInstanceState' {} a -> s {instanceName = a} :: GetInstanceState)
   |                                                                                                                                ^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetInstanceState.hs:159:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {state = a} with type GetInstanceStateResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
159 | getInstanceStateResponse_state = Lens.lens (\GetInstanceStateResponse' {state} -> state) (\s@GetInstanceStateResponse' {} a -> s {state = a} :: GetInstanceStateResponse)
    |                                                                                                                                   ^^^^^^^^^
[231 of 341] Compiling Amazonka.Lightsail.GetInstanceSnapshots
[232 of 341] Compiling Amazonka.Lightsail.GetInstanceSnapshot
[233 of 341] Compiling Amazonka.Lightsail.GetInstancePortStates

gen/Amazonka/Lightsail/GetInstancePortStates.hs:80:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type GetInstancePortStates is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
80 | getInstancePortStates_instanceName = Lens.lens (\GetInstancePortStates' {instanceName} -> instanceName) (\s@GetInstancePortStates' {} a -> s {instanceName = a} :: GetInstancePortStates)
   |                                                                                                                                               ^^^^^^^^^^^^^^^^
[234 of 341] Compiling Amazonka.Lightsail.GetInstanceMetricData

gen/Amazonka/Lightsail/GetInstanceMetricData.hs:410:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type GetInstanceMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
410 | getInstanceMetricData_instanceName = Lens.lens (\GetInstanceMetricData' {instanceName} -> instanceName) (\s@GetInstanceMetricData' {} a -> s {instanceName = a} :: GetInstanceMetricData)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetInstanceMetricData.hs:520:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type GetInstanceMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
520 | getInstanceMetricData_metricName = Lens.lens (\GetInstanceMetricData' {metricName} -> metricName) (\s@GetInstanceMetricData' {} a -> s {metricName = a} :: GetInstanceMetricData)
    |                                                                                                                                         ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetInstanceMetricData.hs:529:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {period = a} with type GetInstanceMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
529 | getInstanceMetricData_period = Lens.lens (\GetInstanceMetricData' {period} -> period) (\s@GetInstanceMetricData' {} a -> s {period = a} :: GetInstanceMetricData)
    |                                                                                                                             ^^^^^^^^^^

gen/Amazonka/Lightsail/GetInstanceMetricData.hs:543:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {unit = a} with type GetInstanceMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
543 | getInstanceMetricData_unit = Lens.lens (\GetInstanceMetricData' {unit} -> unit) (\s@GetInstanceMetricData' {} a -> s {unit = a} :: GetInstanceMetricData)
    |                                                                                                                       ^^^^^^^^

gen/Amazonka/Lightsail/GetInstanceMetricData.hs:686:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type GetInstanceMetricDataResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
686 | getInstanceMetricDataResponse_metricName = Lens.lens (\GetInstanceMetricDataResponse' {metricName} -> metricName) (\s@GetInstanceMetricDataResponse' {} a -> s {metricName = a} :: GetInstanceMetricDataResponse)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^
[235 of 341] Compiling Amazonka.Lightsail.GetInstanceAccessDetails

gen/Amazonka/Lightsail/GetInstanceAccessDetails.hs:90:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {protocol = a} with type GetInstanceAccessDetails is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | getInstanceAccessDetails_protocol = Lens.lens (\GetInstanceAccessDetails' {protocol} -> protocol) (\s@GetInstanceAccessDetails' {} a -> s {protocol = a} :: GetInstanceAccessDetails)
   |                                                                                                                                            ^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetInstanceAccessDetails.hs:94:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type GetInstanceAccessDetails is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | getInstanceAccessDetails_instanceName = Lens.lens (\GetInstanceAccessDetails' {instanceName} -> instanceName) (\s@GetInstanceAccessDetails' {} a -> s {instanceName = a} :: GetInstanceAccessDetails)
   |                                                                                                                                                        ^^^^^^^^^^^^^^^^
[236 of 341] Compiling Amazonka.Lightsail.GetInstance

gen/Amazonka/Lightsail/GetInstance.hs:76:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type GetInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
76 | getInstance_instanceName = Lens.lens (\GetInstance' {instanceName} -> instanceName) (\s@GetInstance' {} a -> s {instanceName = a} :: GetInstance)
   |                                                                                                                 ^^^^^^^^^^^^^^^^
[237 of 341] Compiling Amazonka.Lightsail.GetExportSnapshotRecords
[238 of 341] Compiling Amazonka.Lightsail.GetDomains
[239 of 341] Compiling Amazonka.Lightsail.GetDomain

gen/Amazonka/Lightsail/GetDomain.hs:75:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type GetDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
75 | getDomain_domainName = Lens.lens (\GetDomain' {domainName} -> domainName) (\s@GetDomain' {} a -> s {domainName = a} :: GetDomain)
   |                                                                                                     ^^^^^^^^^^^^^^
[240 of 341] Compiling Amazonka.Lightsail.GetDistributions
[241 of 341] Compiling Amazonka.Lightsail.GetDistributionMetricData

gen/Amazonka/Lightsail/GetDistributionMetricData.hs:412:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type GetDistributionMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
412 | getDistributionMetricData_metricName = Lens.lens (\GetDistributionMetricData' {metricName} -> metricName) (\s@GetDistributionMetricData' {} a -> s {metricName = a} :: GetDistributionMetricData)
    |                                                                                                                                                     ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetDistributionMetricData.hs:449:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {period = a} with type GetDistributionMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
449 | getDistributionMetricData_period = Lens.lens (\GetDistributionMetricData' {period} -> period) (\s@GetDistributionMetricData' {} a -> s {period = a} :: GetDistributionMetricData)
    |                                                                                                                                         ^^^^^^^^^^

gen/Amazonka/Lightsail/GetDistributionMetricData.hs:456:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {unit = a} with type GetDistributionMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
456 | getDistributionMetricData_unit = Lens.lens (\GetDistributionMetricData' {unit} -> unit) (\s@GetDistributionMetricData' {} a -> s {unit = a} :: GetDistributionMetricData)
    |                                                                                                                                   ^^^^^^^^

gen/Amazonka/Lightsail/GetDistributionMetricData.hs:600:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type GetDistributionMetricDataResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
600 | getDistributionMetricDataResponse_metricName = Lens.lens (\GetDistributionMetricDataResponse' {metricName} -> metricName) (\s@GetDistributionMetricDataResponse' {} a -> s {metricName = a} :: GetDistributionMetricDataResponse)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^
[242 of 341] Compiling Amazonka.Lightsail.GetDistributionLatestCacheReset

gen/Amazonka/Lightsail/GetDistributionLatestCacheReset.hs:214:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {status = a} with type GetDistributionLatestCacheResetResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
214 | getDistributionLatestCacheResetResponse_status = Lens.lens (\GetDistributionLatestCacheResetResponse' {status} -> status) (\s@GetDistributionLatestCacheResetResponse' {} a -> s {status = a} :: GetDistributionLatestCacheResetResponse)
    |                                                                                                                                                                                   ^^^^^^^^^^
[243 of 341] Compiling Amazonka.Lightsail.GetDistributionBundles
[244 of 341] Compiling Amazonka.Lightsail.GetDisks

gen/Amazonka/Lightsail/GetDisks.hs:212:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {disks = a} with type GetDisksResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
212 | getDisksResponse_disks = Lens.lens (\GetDisksResponse' {disks} -> disks) (\s@GetDisksResponse' {} a -> s {disks = a} :: GetDisksResponse) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                           ^^^^^^^^^
[245 of 341] Compiling Amazonka.Lightsail.GetDiskSnapshots
[246 of 341] Compiling Amazonka.Lightsail.GetDiskSnapshot
[247 of 341] Compiling Amazonka.Lightsail.GetDisk
[248 of 341] Compiling Amazonka.Lightsail.GetContainerServices

gen/Amazonka/Lightsail/GetContainerServices.hs:86:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type GetContainerServices is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
86 | getContainerServices_serviceName = Lens.lens (\GetContainerServices' {serviceName} -> serviceName) (\s@GetContainerServices' {} a -> s {serviceName = a} :: GetContainerServices)
   |                                                                                                                                         ^^^^^^^^^^^^^^^
[249 of 341] Compiling Amazonka.Lightsail.GetContainerServicePowers
[250 of 341] Compiling Amazonka.Lightsail.GetContainerServiceMetricData

gen/Amazonka/Lightsail/GetContainerServiceMetricData.hs:225:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type GetContainerServiceMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
225 | getContainerServiceMetricData_serviceName = Lens.lens (\GetContainerServiceMetricData' {serviceName} -> serviceName) (\s@GetContainerServiceMetricData' {} a -> s {serviceName = a} :: GetContainerServiceMetricData)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetContainerServiceMetricData.hs:251:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type GetContainerServiceMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
251 | getContainerServiceMetricData_metricName = Lens.lens (\GetContainerServiceMetricData' {metricName} -> metricName) (\s@GetContainerServiceMetricData' {} a -> s {metricName = a} :: GetContainerServiceMetricData)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetContainerServiceMetricData.hs:266:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {period = a} with type GetContainerServiceMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
266 | getContainerServiceMetricData_period = Lens.lens (\GetContainerServiceMetricData' {period} -> period) (\s@GetContainerServiceMetricData' {} a -> s {period = a} :: GetContainerServiceMetricData)
    |                                                                                                                                                     ^^^^^^^^^^

gen/Amazonka/Lightsail/GetContainerServiceMetricData.hs:412:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type GetContainerServiceMetricDataResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
412 | getContainerServiceMetricDataResponse_metricName = Lens.lens (\GetContainerServiceMetricDataResponse' {metricName} -> metricName) (\s@GetContainerServiceMetricDataResponse' {} a -> s {metricName = a} :: GetContainerServiceMetricDataResponse)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^
[251 of 341] Compiling Amazonka.Lightsail.GetContainerServiceDeployments

gen/Amazonka/Lightsail/GetContainerServiceDeployments.hs:89:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type GetContainerServiceDeployments is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
89 | getContainerServiceDeployments_serviceName = Lens.lens (\GetContainerServiceDeployments' {serviceName} -> serviceName) (\s@GetContainerServiceDeployments' {} a -> s {serviceName = a} :: GetContainerServiceDeployments)
   |                                                                                                                                                                       ^^^^^^^^^^^^^^^
[252 of 341] Compiling Amazonka.Lightsail.GetContainerLog

gen/Amazonka/Lightsail/GetContainerLog.hs:273:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type GetContainerLog is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
273 | getContainerLog_serviceName = Lens.lens (\GetContainerLog' {serviceName} -> serviceName) (\s@GetContainerLog' {} a -> s {serviceName = a} :: GetContainerLog)
    |                                                                                                                          ^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetContainerLog.hs:278:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {containerName = a} with type GetContainerLog is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
278 | getContainerLog_containerName = Lens.lens (\GetContainerLog' {containerName} -> containerName) (\s@GetContainerLog' {} a -> s {containerName = a} :: GetContainerLog)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^
[253 of 341] Compiling Amazonka.Lightsail.GetContainerImages

gen/Amazonka/Lightsail/GetContainerImages.hs:84:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type GetContainerImages is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
84 | getContainerImages_serviceName = Lens.lens (\GetContainerImages' {serviceName} -> serviceName) (\s@GetContainerImages' {} a -> s {serviceName = a} :: GetContainerImages)
   |                                                                                                                                   ^^^^^^^^^^^^^^^
[254 of 341] Compiling Amazonka.Lightsail.GetContainerAPIMetadata
[255 of 341] Compiling Amazonka.Lightsail.GetContactMethods

gen/Amazonka/Lightsail/GetContactMethods.hs:95:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {protocols = a} with type GetContactMethods is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
95 | getContactMethods_protocols = Lens.lens (\GetContactMethods' {protocols} -> protocols) (\s@GetContactMethods' {} a -> s {protocols = a} :: GetContactMethods) Prelude.. Lens.mapping Lens.coerced
   |                                                                                                                          ^^^^^^^^^^^^^
[256 of 341] Compiling Amazonka.Lightsail.GetCloudFormationStackRecords
[257 of 341] Compiling Amazonka.Lightsail.GetCertificates

gen/Amazonka/Lightsail/GetCertificates.hs:123:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateName = a} with type GetCertificates is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | getCertificates_certificateName = Lens.lens (\GetCertificates' {certificateName} -> certificateName) (\s@GetCertificates' {} a -> s {certificateName = a} :: GetCertificates)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^^^^
[258 of 341] Compiling Amazonka.Lightsail.GetBundles
[259 of 341] Compiling Amazonka.Lightsail.GetBuckets
[260 of 341] Compiling Amazonka.Lightsail.GetBucketMetricData

gen/Amazonka/Lightsail/GetBucketMetricData.hs:268:131: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type GetBucketMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
268 | getBucketMetricData_metricName = Lens.lens (\GetBucketMetricData' {metricName} -> metricName) (\s@GetBucketMetricData' {} a -> s {metricName = a} :: GetBucketMetricData)
    |                                                                                                                                   ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetBucketMetricData.hs:284:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {period = a} with type GetBucketMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
284 | getBucketMetricData_period = Lens.lens (\GetBucketMetricData' {period} -> period) (\s@GetBucketMetricData' {} a -> s {period = a} :: GetBucketMetricData)
    |                                                                                                                       ^^^^^^^^^^

gen/Amazonka/Lightsail/GetBucketMetricData.hs:318:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {unit = a} with type GetBucketMetricData is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
318 | getBucketMetricData_unit = Lens.lens (\GetBucketMetricData' {unit} -> unit) (\s@GetBucketMetricData' {} a -> s {unit = a} :: GetBucketMetricData)
    |                                                                                                                 ^^^^^^^^

gen/Amazonka/Lightsail/GetBucketMetricData.hs:433:155: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {metricName = a} with type GetBucketMetricDataResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
433 | getBucketMetricDataResponse_metricName = Lens.lens (\GetBucketMetricDataResponse' {metricName} -> metricName) (\s@GetBucketMetricDataResponse' {} a -> s {metricName = a} :: GetBucketMetricDataResponse)
    |                                                                                                                                                           ^^^^^^^^^^^^^^
[261 of 341] Compiling Amazonka.Lightsail.GetBucketBundles
[262 of 341] Compiling Amazonka.Lightsail.GetBucketAccessKeys
[263 of 341] Compiling Amazonka.Lightsail.GetBlueprints
[264 of 341] Compiling Amazonka.Lightsail.GetAutoSnapshots

gen/Amazonka/Lightsail/GetAutoSnapshots.hs:82:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceName = a} with type GetAutoSnapshots is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
82 | getAutoSnapshots_resourceName = Lens.lens (\GetAutoSnapshots' {resourceName} -> resourceName) (\s@GetAutoSnapshots' {} a -> s {resourceName = a} :: GetAutoSnapshots)
   |                                                                                                                                ^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetAutoSnapshots.hs:185:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceName = a} with type GetAutoSnapshotsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
185 | getAutoSnapshotsResponse_resourceName = Lens.lens (\GetAutoSnapshotsResponse' {resourceName} -> resourceName) (\s@GetAutoSnapshotsResponse' {} a -> s {resourceName = a} :: GetAutoSnapshotsResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/GetAutoSnapshots.hs:189:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceType = a} with type GetAutoSnapshotsResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
189 | getAutoSnapshotsResponse_resourceType = Lens.lens (\GetAutoSnapshotsResponse' {resourceType} -> resourceType) (\s@GetAutoSnapshotsResponse' {} a -> s {resourceType = a} :: GetAutoSnapshotsResponse)
    |                                                                                                                                                        ^^^^^^^^^^^^^^^^
[265 of 341] Compiling Amazonka.Lightsail.GetAlarms
[266 of 341] Compiling Amazonka.Lightsail.GetActiveNames
[267 of 341] Compiling Amazonka.Lightsail.ExportSnapshot
[268 of 341] Compiling Amazonka.Lightsail.EnableAddOn

gen/Amazonka/Lightsail/EnableAddOn.hs:90:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceName = a} with type EnableAddOn is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
90 | enableAddOn_resourceName = Lens.lens (\EnableAddOn' {resourceName} -> resourceName) (\s@EnableAddOn' {} a -> s {resourceName = a} :: EnableAddOn)
   |                                                                                                                 ^^^^^^^^^^^^^^^^
[269 of 341] Compiling Amazonka.Lightsail.DownloadDefaultKeyPair

gen/Amazonka/Lightsail/DownloadDefaultKeyPair.hs:156:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {createdAt = a} with type DownloadDefaultKeyPairResponse is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
156 | downloadDefaultKeyPairResponse_createdAt = Lens.lens (\DownloadDefaultKeyPairResponse' {createdAt} -> createdAt) (\s@DownloadDefaultKeyPairResponse' {} a -> s {createdAt = a} :: DownloadDefaultKeyPairResponse) Prelude.. Lens.mapping Data._Time
    |                                                                                                                                                                 ^^^^^^^^^^^^^
[270 of 341] Compiling Amazonka.Lightsail.DisableAddOn

gen/Amazonka/Lightsail/DisableAddOn.hs:87:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {addOnType = a} with type DisableAddOn is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
87 | disableAddOn_addOnType = Lens.lens (\DisableAddOn' {addOnType} -> addOnType) (\s@DisableAddOn' {} a -> s {addOnType = a} :: DisableAddOn)
   |                                                                                                           ^^^^^^^^^^^^^

gen/Amazonka/Lightsail/DisableAddOn.hs:91:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceName = a} with type DisableAddOn is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
91 | disableAddOn_resourceName = Lens.lens (\DisableAddOn' {resourceName} -> resourceName) (\s@DisableAddOn' {} a -> s {resourceName = a} :: DisableAddOn)
   |                                                                                                                    ^^^^^^^^^^^^^^^^
[271 of 341] Compiling Amazonka.Lightsail.DetachStaticIp
[272 of 341] Compiling Amazonka.Lightsail.DetachInstancesFromLoadBalancer

gen/Amazonka/Lightsail/DetachInstancesFromLoadBalancer.hs:94:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {loadBalancerName = a} with type DetachInstancesFromLoadBalancer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | detachInstancesFromLoadBalancer_loadBalancerName = Lens.lens (\DetachInstancesFromLoadBalancer' {loadBalancerName} -> loadBalancerName) (\s@DetachInstancesFromLoadBalancer' {} a -> s {loadBalancerName = a} :: DetachInstancesFromLoadBalancer)
   |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^
[273 of 341] Compiling Amazonka.Lightsail.DetachDisk
[274 of 341] Compiling Amazonka.Lightsail.DetachCertificateFromDistribution
[275 of 341] Compiling Amazonka.Lightsail.DeleteRelationalDatabaseSnapshot
[276 of 341] Compiling Amazonka.Lightsail.DeleteRelationalDatabase
[277 of 341] Compiling Amazonka.Lightsail.DeleteLoadBalancerTlsCertificate

gen/Amazonka/Lightsail/DeleteLoadBalancerTlsCertificate.hs:119:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {loadBalancerName = a} with type DeleteLoadBalancerTlsCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | deleteLoadBalancerTlsCertificate_loadBalancerName = Lens.lens (\DeleteLoadBalancerTlsCertificate' {loadBalancerName} -> loadBalancerName) (\s@DeleteLoadBalancerTlsCertificate' {} a -> s {loadBalancerName = a} :: DeleteLoadBalancerTlsCertificate)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/DeleteLoadBalancerTlsCertificate.hs:123:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateName = a} with type DeleteLoadBalancerTlsCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
123 | deleteLoadBalancerTlsCertificate_certificateName = Lens.lens (\DeleteLoadBalancerTlsCertificate' {certificateName} -> certificateName) (\s@DeleteLoadBalancerTlsCertificate' {} a -> s {certificateName = a} :: DeleteLoadBalancerTlsCertificate)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^
[278 of 341] Compiling Amazonka.Lightsail.DeleteLoadBalancer

gen/Amazonka/Lightsail/DeleteLoadBalancer.hs:86:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {loadBalancerName = a} with type DeleteLoadBalancer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
86 | deleteLoadBalancer_loadBalancerName = Lens.lens (\DeleteLoadBalancer' {loadBalancerName} -> loadBalancerName) (\s@DeleteLoadBalancer' {} a -> s {loadBalancerName = a} :: DeleteLoadBalancer)
   |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^
[279 of 341] Compiling Amazonka.Lightsail.DeleteKnownHostKeys

gen/Amazonka/Lightsail/DeleteKnownHostKeys.hs:86:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type DeleteKnownHostKeys is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
86 | deleteKnownHostKeys_instanceName = Lens.lens (\DeleteKnownHostKeys' {instanceName} -> instanceName) (\s@DeleteKnownHostKeys' {} a -> s {instanceName = a} :: DeleteKnownHostKeys)
   |                                                                                                                                         ^^^^^^^^^^^^^^^^
[280 of 341] Compiling Amazonka.Lightsail.DeleteKeyPair

gen/Amazonka/Lightsail/DeleteKeyPair.hs:113:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyPairName = a} with type DeleteKeyPair is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | deleteKeyPair_keyPairName = Lens.lens (\DeleteKeyPair' {keyPairName} -> keyPairName) (\s@DeleteKeyPair' {} a -> s {keyPairName = a} :: DeleteKeyPair)
    |                                                                                                                    ^^^^^^^^^^^^^^^
[281 of 341] Compiling Amazonka.Lightsail.DeleteInstanceSnapshot
[282 of 341] Compiling Amazonka.Lightsail.DeleteInstance

gen/Amazonka/Lightsail/DeleteInstance.hs:96:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type DeleteInstance is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
96 | deleteInstance_instanceName = Lens.lens (\DeleteInstance' {instanceName} -> instanceName) (\s@DeleteInstance' {} a -> s {instanceName = a} :: DeleteInstance)
   |                                                                                                                          ^^^^^^^^^^^^^^^^
[283 of 341] Compiling Amazonka.Lightsail.DeleteDomainEntry

gen/Amazonka/Lightsail/DeleteDomainEntry.hs:92:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type DeleteDomainEntry is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | deleteDomainEntry_domainName = Lens.lens (\DeleteDomainEntry' {domainName} -> domainName) (\s@DeleteDomainEntry' {} a -> s {domainName = a} :: DeleteDomainEntry)
   |                                                                                                                             ^^^^^^^^^^^^^^
[284 of 341] Compiling Amazonka.Lightsail.DeleteDomain

gen/Amazonka/Lightsail/DeleteDomain.hs:80:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type DeleteDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
80 | deleteDomain_domainName = Lens.lens (\DeleteDomain' {domainName} -> domainName) (\s@DeleteDomain' {} a -> s {domainName = a} :: DeleteDomain)
   |                                                                                                              ^^^^^^^^^^^^^^
[285 of 341] Compiling Amazonka.Lightsail.DeleteDistribution
[286 of 341] Compiling Amazonka.Lightsail.DeleteDiskSnapshot
[287 of 341] Compiling Amazonka.Lightsail.DeleteDisk
[288 of 341] Compiling Amazonka.Lightsail.DeleteContainerService

gen/Amazonka/Lightsail/DeleteContainerService.hs:77:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type DeleteContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
77 | deleteContainerService_serviceName = Lens.lens (\DeleteContainerService' {serviceName} -> serviceName) (\s@DeleteContainerService' {} a -> s {serviceName = a} :: DeleteContainerService)
   |                                                                                                                                               ^^^^^^^^^^^^^^^
[289 of 341] Compiling Amazonka.Lightsail.DeleteContainerImage

gen/Amazonka/Lightsail/DeleteContainerImage.hs:106:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type DeleteContainerImage is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | deleteContainerImage_serviceName = Lens.lens (\DeleteContainerImage' {serviceName} -> serviceName) (\s@DeleteContainerImage' {} a -> s {serviceName = a} :: DeleteContainerImage)
    |                                                                                                                                         ^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/DeleteContainerImage.hs:119:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {image = a} with type DeleteContainerImage is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | deleteContainerImage_image = Lens.lens (\DeleteContainerImage' {image} -> image) (\s@DeleteContainerImage' {} a -> s {image = a} :: DeleteContainerImage)
    |                                                                                                                       ^^^^^^^^^
[290 of 341] Compiling Amazonka.Lightsail.DeleteContactMethod

gen/Amazonka/Lightsail/DeleteContactMethod.hs:95:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {protocol = a} with type DeleteContactMethod is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
95 | deleteContactMethod_protocol = Lens.lens (\DeleteContactMethod' {protocol} -> protocol) (\s@DeleteContactMethod' {} a -> s {protocol = a} :: DeleteContactMethod)
   |                                                                                                                             ^^^^^^^^^^^^
[291 of 341] Compiling Amazonka.Lightsail.DeleteCertificate

gen/Amazonka/Lightsail/DeleteCertificate.hs:92:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateName = a} with type DeleteCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | deleteCertificate_certificateName = Lens.lens (\DeleteCertificate' {certificateName} -> certificateName) (\s@DeleteCertificate' {} a -> s {certificateName = a} :: DeleteCertificate)
   |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^
[292 of 341] Compiling Amazonka.Lightsail.DeleteBucketAccessKey

gen/Amazonka/Lightsail/DeleteBucketAccessKey.hs:108:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessKeyId = a} with type DeleteBucketAccessKey is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | deleteBucketAccessKey_accessKeyId = Lens.lens (\DeleteBucketAccessKey' {accessKeyId} -> accessKeyId) (\s@DeleteBucketAccessKey' {} a -> s {accessKeyId = a} :: DeleteBucketAccessKey)
    |                                                                                                                                            ^^^^^^^^^^^^^^^
[293 of 341] Compiling Amazonka.Lightsail.DeleteBucket
[294 of 341] Compiling Amazonka.Lightsail.DeleteAutoSnapshot

gen/Amazonka/Lightsail/DeleteAutoSnapshot.hs:94:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceName = a} with type DeleteAutoSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | deleteAutoSnapshot_resourceName = Lens.lens (\DeleteAutoSnapshot' {resourceName} -> resourceName) (\s@DeleteAutoSnapshot' {} a -> s {resourceName = a} :: DeleteAutoSnapshot)
   |                                                                                                                                      ^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/DeleteAutoSnapshot.hs:100:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {date = a} with type DeleteAutoSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
100 | deleteAutoSnapshot_date = Lens.lens (\DeleteAutoSnapshot' {date} -> date) (\s@DeleteAutoSnapshot' {} a -> s {date = a} :: DeleteAutoSnapshot)
    |                                                                                                              ^^^^^^^^
[295 of 341] Compiling Amazonka.Lightsail.DeleteAlarm
[296 of 341] Compiling Amazonka.Lightsail.CreateRelationalDatabaseSnapshot

gen/Amazonka/Lightsail/CreateRelationalDatabaseSnapshot.hs:120:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateRelationalDatabaseSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
120 | createRelationalDatabaseSnapshot_tags = Lens.lens (\CreateRelationalDatabaseSnapshot' {tags} -> tags) (\s@CreateRelationalDatabaseSnapshot' {} a -> s {tags = a} :: CreateRelationalDatabaseSnapshot) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                        ^^^^^^^^
[297 of 341] Compiling Amazonka.Lightsail.CreateRelationalDatabaseFromSnapshot

gen/Amazonka/Lightsail/CreateRelationalDatabaseFromSnapshot.hs:241:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {availabilityZone = a} with type CreateRelationalDatabaseFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
241 | createRelationalDatabaseFromSnapshot_availabilityZone = Lens.lens (\CreateRelationalDatabaseFromSnapshot' {availabilityZone} -> availabilityZone) (\s@CreateRelationalDatabaseFromSnapshot' {} a -> s {availabilityZone = a} :: CreateRelationalDatabaseFromSnapshot)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateRelationalDatabaseFromSnapshot.hs:249:206: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {publiclyAccessible = a} with type CreateRelationalDatabaseFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
249 | createRelationalDatabaseFromSnapshot_publiclyAccessible = Lens.lens (\CreateRelationalDatabaseFromSnapshot' {publiclyAccessible} -> publiclyAccessible) (\s@CreateRelationalDatabaseFromSnapshot' {} a -> s {publiclyAccessible = a} :: CreateRelationalDatabaseFromSnapshot)
    |                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateRelationalDatabaseFromSnapshot.hs:260:230: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {relationalDatabaseBundleId = a} with type CreateRelationalDatabaseFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
260 | createRelationalDatabaseFromSnapshot_relationalDatabaseBundleId = Lens.lens (\CreateRelationalDatabaseFromSnapshot' {relationalDatabaseBundleId} -> relationalDatabaseBundleId) (\s@CreateRelationalDatabaseFromSnapshot' {} a -> s {relationalDatabaseBundleId = a} :: CreateRelationalDatabaseFromSnapshot)
    |                                                                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateRelationalDatabaseFromSnapshot.hs:293:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateRelationalDatabaseFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
293 | createRelationalDatabaseFromSnapshot_tags = Lens.lens (\CreateRelationalDatabaseFromSnapshot' {tags} -> tags) (\s@CreateRelationalDatabaseFromSnapshot' {} a -> s {tags = a} :: CreateRelationalDatabaseFromSnapshot) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                    ^^^^^^^^
[298 of 341] Compiling Amazonka.Lightsail.CreateRelationalDatabase

gen/Amazonka/Lightsail/CreateRelationalDatabase.hs:477:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {availabilityZone = a} with type CreateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
477 | createRelationalDatabase_availabilityZone = Lens.lens (\CreateRelationalDatabase' {availabilityZone} -> availabilityZone) (\s@CreateRelationalDatabase' {} a -> s {availabilityZone = a} :: CreateRelationalDatabase)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateRelationalDatabase.hs:491:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {masterUserPassword = a} with type CreateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
491 | createRelationalDatabase_masterUserPassword = Lens.lens (\CreateRelationalDatabase' {masterUserPassword} -> masterUserPassword) (\s@CreateRelationalDatabase' {} a -> s {masterUserPassword = a} :: CreateRelationalDatabase) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateRelationalDatabase.hs:514:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {preferredBackupWindow = a} with type CreateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
514 | createRelationalDatabase_preferredBackupWindow = Lens.lens (\CreateRelationalDatabase' {preferredBackupWindow} -> preferredBackupWindow) (\s@CreateRelationalDatabase' {} a -> s {preferredBackupWindow = a} :: CreateRelationalDatabase)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateRelationalDatabase.hs:535:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {preferredMaintenanceWindow = a} with type CreateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
535 | createRelationalDatabase_preferredMaintenanceWindow = Lens.lens (\CreateRelationalDatabase' {preferredMaintenanceWindow} -> preferredMaintenanceWindow) (\s@CreateRelationalDatabase' {} a -> s {preferredMaintenanceWindow = a} :: CreateRelationalDatabase)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateRelationalDatabase.hs:543:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {publiclyAccessible = a} with type CreateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
543 | createRelationalDatabase_publiclyAccessible = Lens.lens (\CreateRelationalDatabase' {publiclyAccessible} -> publiclyAccessible) (\s@CreateRelationalDatabase' {} a -> s {publiclyAccessible = a} :: CreateRelationalDatabase)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateRelationalDatabase.hs:549:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
549 | createRelationalDatabase_tags = Lens.lens (\CreateRelationalDatabase' {tags} -> tags) (\s@CreateRelationalDatabase' {} a -> s {tags = a} :: CreateRelationalDatabase) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                ^^^^^^^^

gen/Amazonka/Lightsail/CreateRelationalDatabase.hs:567:203: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {relationalDatabaseBlueprintId = a} with type CreateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
567 | createRelationalDatabase_relationalDatabaseBlueprintId = Lens.lens (\CreateRelationalDatabase' {relationalDatabaseBlueprintId} -> relationalDatabaseBlueprintId) (\s@CreateRelationalDatabase' {} a -> s {relationalDatabaseBlueprintId = a} :: CreateRelationalDatabase)
    |                                                                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateRelationalDatabase.hs:575:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {relationalDatabaseBundleId = a} with type CreateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
575 | createRelationalDatabase_relationalDatabaseBundleId = Lens.lens (\CreateRelationalDatabase' {relationalDatabaseBundleId} -> relationalDatabaseBundleId) (\s@CreateRelationalDatabase' {} a -> s {relationalDatabaseBundleId = a} :: CreateRelationalDatabase)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateRelationalDatabase.hs:625:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {masterDatabaseName = a} with type CreateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
625 | createRelationalDatabase_masterDatabaseName = Lens.lens (\CreateRelationalDatabase' {masterDatabaseName} -> masterDatabaseName) (\s@CreateRelationalDatabase' {} a -> s {masterDatabaseName = a} :: CreateRelationalDatabase)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateRelationalDatabase.hs:668:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {masterUsername = a} with type CreateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
668 | createRelationalDatabase_masterUsername = Lens.lens (\CreateRelationalDatabase' {masterUsername} -> masterUsername) (\s@CreateRelationalDatabase' {} a -> s {masterUsername = a} :: CreateRelationalDatabase)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^
[299 of 341] Compiling Amazonka.Lightsail.CreateLoadBalancerTlsCertificate

gen/Amazonka/Lightsail/CreateLoadBalancerTlsCertificate.hs:153:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateLoadBalancerTlsCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
153 | createLoadBalancerTlsCertificate_tags = Lens.lens (\CreateLoadBalancerTlsCertificate' {tags} -> tags) (\s@CreateLoadBalancerTlsCertificate' {} a -> s {tags = a} :: CreateLoadBalancerTlsCertificate) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                        ^^^^^^^^

gen/Amazonka/Lightsail/CreateLoadBalancerTlsCertificate.hs:158:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {loadBalancerName = a} with type CreateLoadBalancerTlsCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
158 | createLoadBalancerTlsCertificate_loadBalancerName = Lens.lens (\CreateLoadBalancerTlsCertificate' {loadBalancerName} -> loadBalancerName) (\s@CreateLoadBalancerTlsCertificate' {} a -> s {loadBalancerName = a} :: CreateLoadBalancerTlsCertificate)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateLoadBalancerTlsCertificate.hs:169:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateName = a} with type CreateLoadBalancerTlsCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
169 | createLoadBalancerTlsCertificate_certificateName = Lens.lens (\CreateLoadBalancerTlsCertificate' {certificateName} -> certificateName) (\s@CreateLoadBalancerTlsCertificate' {} a -> s {certificateName = a} :: CreateLoadBalancerTlsCertificate)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^
[300 of 341] Compiling Amazonka.Lightsail.CreateLoadBalancer

gen/Amazonka/Lightsail/CreateLoadBalancer.hs:218:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateName = a} with type CreateLoadBalancer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
218 | createLoadBalancer_certificateName = Lens.lens (\CreateLoadBalancer' {certificateName} -> certificateName) (\s@CreateLoadBalancer' {} a -> s {certificateName = a} :: CreateLoadBalancer)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateLoadBalancer.hs:228:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {healthCheckPath = a} with type CreateLoadBalancer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
228 | createLoadBalancer_healthCheckPath = Lens.lens (\CreateLoadBalancer' {healthCheckPath} -> healthCheckPath) (\s@CreateLoadBalancer' {} a -> s {healthCheckPath = a} :: CreateLoadBalancer)
    |                                                                                                                                               ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateLoadBalancer.hs:237:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {ipAddressType = a} with type CreateLoadBalancer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
237 | createLoadBalancer_ipAddressType = Lens.lens (\CreateLoadBalancer' {ipAddressType} -> ipAddressType) (\s@CreateLoadBalancer' {} a -> s {ipAddressType = a} :: CreateLoadBalancer)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateLoadBalancer.hs:243:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateLoadBalancer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
243 | createLoadBalancer_tags = Lens.lens (\CreateLoadBalancer' {tags} -> tags) (\s@CreateLoadBalancer' {} a -> s {tags = a} :: CreateLoadBalancer) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                              ^^^^^^^^

gen/Amazonka/Lightsail/CreateLoadBalancer.hs:255:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tlsPolicyName = a} with type CreateLoadBalancer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
255 | createLoadBalancer_tlsPolicyName = Lens.lens (\CreateLoadBalancer' {tlsPolicyName} -> tlsPolicyName) (\s@CreateLoadBalancer' {} a -> s {tlsPolicyName = a} :: CreateLoadBalancer)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateLoadBalancer.hs:259:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {loadBalancerName = a} with type CreateLoadBalancer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
259 | createLoadBalancer_loadBalancerName = Lens.lens (\CreateLoadBalancer' {loadBalancerName} -> loadBalancerName) (\s@CreateLoadBalancer' {} a -> s {loadBalancerName = a} :: CreateLoadBalancer)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateLoadBalancer.hs:263:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instancePort = a} with type CreateLoadBalancer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
263 | createLoadBalancer_instancePort = Lens.lens (\CreateLoadBalancer' {instancePort} -> instancePort) (\s@CreateLoadBalancer' {} a -> s {instancePort = a} :: CreateLoadBalancer)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^
[301 of 341] Compiling Amazonka.Lightsail.CreateKeyPair

gen/Amazonka/Lightsail/CreateKeyPair.hs:102:95: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateKeyPair is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | createKeyPair_tags = Lens.lens (\CreateKeyPair' {tags} -> tags) (\s@CreateKeyPair' {} a -> s {tags = a} :: CreateKeyPair) Prelude.. Lens.mapping Lens.coerced
    |                                                                                               ^^^^^^^^

gen/Amazonka/Lightsail/CreateKeyPair.hs:106:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyPairName = a} with type CreateKeyPair is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | createKeyPair_keyPairName = Lens.lens (\CreateKeyPair' {keyPairName} -> keyPairName) (\s@CreateKeyPair' {} a -> s {keyPairName = a} :: CreateKeyPair)
    |                                                                                                                    ^^^^^^^^^^^^^^^
[302 of 341] Compiling Amazonka.Lightsail.CreateInstancesFromSnapshot

gen/Amazonka/Lightsail/CreateInstancesFromSnapshot.hs:294:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {addOns = a} with type CreateInstancesFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
294 | createInstancesFromSnapshot_addOns = Lens.lens (\CreateInstancesFromSnapshot' {addOns} -> addOns) (\s@CreateInstancesFromSnapshot' {} a -> s {addOns = a} :: CreateInstancesFromSnapshot) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                               ^^^^^^^^^^

gen/Amazonka/Lightsail/CreateInstancesFromSnapshot.hs:319:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {ipAddressType = a} with type CreateInstancesFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
319 | createInstancesFromSnapshot_ipAddressType = Lens.lens (\CreateInstancesFromSnapshot' {ipAddressType} -> ipAddressType) (\s@CreateInstancesFromSnapshot' {} a -> s {ipAddressType = a} :: CreateInstancesFromSnapshot)
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateInstancesFromSnapshot.hs:323:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyPairName = a} with type CreateInstancesFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
323 | createInstancesFromSnapshot_keyPairName = Lens.lens (\CreateInstancesFromSnapshot' {keyPairName} -> keyPairName) (\s@CreateInstancesFromSnapshot' {} a -> s {keyPairName = a} :: CreateInstancesFromSnapshot)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateInstancesFromSnapshot.hs:363:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateInstancesFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
363 | createInstancesFromSnapshot_tags = Lens.lens (\CreateInstancesFromSnapshot' {tags} -> tags) (\s@CreateInstancesFromSnapshot' {} a -> s {tags = a} :: CreateInstancesFromSnapshot) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                         ^^^^^^^^

gen/Amazonka/Lightsail/CreateInstancesFromSnapshot.hs:389:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userData = a} with type CreateInstancesFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
389 | createInstancesFromSnapshot_userData = Lens.lens (\CreateInstancesFromSnapshot' {userData} -> userData) (\s@CreateInstancesFromSnapshot' {} a -> s {userData = a} :: CreateInstancesFromSnapshot)
    |                                                                                                                                                     ^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateInstancesFromSnapshot.hs:402:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {availabilityZone = a} with type CreateInstancesFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
402 | createInstancesFromSnapshot_availabilityZone = Lens.lens (\CreateInstancesFromSnapshot' {availabilityZone} -> availabilityZone) (\s@CreateInstancesFromSnapshot' {} a -> s {availabilityZone = a} :: CreateInstancesFromSnapshot)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateInstancesFromSnapshot.hs:407:149: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bundleId = a} with type CreateInstancesFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
407 | createInstancesFromSnapshot_bundleId = Lens.lens (\CreateInstancesFromSnapshot' {bundleId} -> bundleId) (\s@CreateInstancesFromSnapshot' {} a -> s {bundleId = a} :: CreateInstancesFromSnapshot)
    |                                                                                                                                                     ^^^^^^^^^^^^
[303 of 341] Compiling Amazonka.Lightsail.CreateInstances

gen/Amazonka/Lightsail/CreateInstances.hs:211:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {addOns = a} with type CreateInstances is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
211 | createInstances_addOns = Lens.lens (\CreateInstances' {addOns} -> addOns) (\s@CreateInstances' {} a -> s {addOns = a} :: CreateInstances) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                           ^^^^^^^^^^

gen/Amazonka/Lightsail/CreateInstances.hs:227:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {ipAddressType = a} with type CreateInstances is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
227 | createInstances_ipAddressType = Lens.lens (\CreateInstances' {ipAddressType} -> ipAddressType) (\s@CreateInstances' {} a -> s {ipAddressType = a} :: CreateInstances)
    |                                                                                                                                ^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateInstances.hs:231:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {keyPairName = a} with type CreateInstances is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
231 | createInstances_keyPairName = Lens.lens (\CreateInstances' {keyPairName} -> keyPairName) (\s@CreateInstances' {} a -> s {keyPairName = a} :: CreateInstances)
    |                                                                                                                          ^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateInstances.hs:237:101: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateInstances is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
237 | createInstances_tags = Lens.lens (\CreateInstances' {tags} -> tags) (\s@CreateInstances' {} a -> s {tags = a} :: CreateInstances) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                     ^^^^^^^^

gen/Amazonka/Lightsail/CreateInstances.hs:248:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {userData = a} with type CreateInstances is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
248 | createInstances_userData = Lens.lens (\CreateInstances' {userData} -> userData) (\s@CreateInstances' {} a -> s {userData = a} :: CreateInstances)
    |                                                                                                                 ^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateInstances.hs:263:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {availabilityZone = a} with type CreateInstances is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
263 | createInstances_availabilityZone = Lens.lens (\CreateInstances' {availabilityZone} -> availabilityZone) (\s@CreateInstances' {} a -> s {availabilityZone = a} :: CreateInstances)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateInstances.hs:275:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {blueprintId = a} with type CreateInstances is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
275 | createInstances_blueprintId = Lens.lens (\CreateInstances' {blueprintId} -> blueprintId) (\s@CreateInstances' {} a -> s {blueprintId = a} :: CreateInstances)
    |                                                                                                                          ^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateInstances.hs:280:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bundleId = a} with type CreateInstances is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
280 | createInstances_bundleId = Lens.lens (\CreateInstances' {bundleId} -> bundleId) (\s@CreateInstances' {} a -> s {bundleId = a} :: CreateInstances)
    |                                                                                                                 ^^^^^^^^^^^^
[304 of 341] Compiling Amazonka.Lightsail.CreateInstanceSnapshot

gen/Amazonka/Lightsail/CreateInstanceSnapshot.hs:105:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateInstanceSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
105 | createInstanceSnapshot_tags = Lens.lens (\CreateInstanceSnapshot' {tags} -> tags) (\s@CreateInstanceSnapshot' {} a -> s {tags = a} :: CreateInstanceSnapshot) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                          ^^^^^^^^

gen/Amazonka/Lightsail/CreateInstanceSnapshot.hs:113:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type CreateInstanceSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | createInstanceSnapshot_instanceName = Lens.lens (\CreateInstanceSnapshot' {instanceName} -> instanceName) (\s@CreateInstanceSnapshot' {} a -> s {instanceName = a} :: CreateInstanceSnapshot)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^
[305 of 341] Compiling Amazonka.Lightsail.CreateDomainEntry

gen/Amazonka/Lightsail/CreateDomainEntry.hs:98:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type CreateDomainEntry is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
98 | createDomainEntry_domainName = Lens.lens (\CreateDomainEntry' {domainName} -> domainName) (\s@CreateDomainEntry' {} a -> s {domainName = a} :: CreateDomainEntry)
   |                                                                                                                             ^^^^^^^^^^^^^^
[306 of 341] Compiling Amazonka.Lightsail.CreateDomain

gen/Amazonka/Lightsail/CreateDomain.hs:93:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
93 | createDomain_tags = Lens.lens (\CreateDomain' {tags} -> tags) (\s@CreateDomain' {} a -> s {tags = a} :: CreateDomain) Prelude.. Lens.mapping Lens.coerced
   |                                                                                            ^^^^^^^^

gen/Amazonka/Lightsail/CreateDomain.hs:97:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type CreateDomain is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
97 | createDomain_domainName = Lens.lens (\CreateDomain' {domainName} -> domainName) (\s@CreateDomain' {} a -> s {domainName = a} :: CreateDomain)
   |                                                                                                              ^^^^^^^^^^^^^^
[307 of 341] Compiling Amazonka.Lightsail.CreateDistribution

gen/Amazonka/Lightsail/CreateDistribution.hs:177:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cacheBehaviorSettings = a} with type CreateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
177 | createDistribution_cacheBehaviorSettings = Lens.lens (\CreateDistribution' {cacheBehaviorSettings} -> cacheBehaviorSettings) (\s@CreateDistribution' {} a -> s {cacheBehaviorSettings = a} :: CreateDistribution)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateDistribution.hs:182:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cacheBehaviors = a} with type CreateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
182 | createDistribution_cacheBehaviors = Lens.lens (\CreateDistribution' {cacheBehaviors} -> cacheBehaviors) (\s@CreateDistribution' {} a -> s {cacheBehaviors = a} :: CreateDistribution) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateDistribution.hs:191:137: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {ipAddressType = a} with type CreateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
191 | createDistribution_ipAddressType = Lens.lens (\CreateDistribution' {ipAddressType} -> ipAddressType) (\s@CreateDistribution' {} a -> s {ipAddressType = a} :: CreateDistribution)
    |                                                                                                                                         ^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateDistribution.hs:198:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
198 | createDistribution_tags = Lens.lens (\CreateDistribution' {tags} -> tags) (\s@CreateDistribution' {} a -> s {tags = a} :: CreateDistribution) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                              ^^^^^^^^

gen/Amazonka/Lightsail/CreateDistribution.hs:209:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {origin = a} with type CreateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
209 | createDistribution_origin = Lens.lens (\CreateDistribution' {origin} -> origin) (\s@CreateDistribution' {} a -> s {origin = a} :: CreateDistribution)
    |                                                                                                                    ^^^^^^^^^^

gen/Amazonka/Lightsail/CreateDistribution.hs:214:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {defaultCacheBehavior = a} with type CreateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
214 | createDistribution_defaultCacheBehavior = Lens.lens (\CreateDistribution' {defaultCacheBehavior} -> defaultCacheBehavior) (\s@CreateDistribution' {} a -> s {defaultCacheBehavior = a} :: CreateDistribution)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateDistribution.hs:224:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bundleId = a} with type CreateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
224 | createDistribution_bundleId = Lens.lens (\CreateDistribution' {bundleId} -> bundleId) (\s@CreateDistribution' {} a -> s {bundleId = a} :: CreateDistribution)
    |                                                                                                                          ^^^^^^^^^^^^
[308 of 341] Compiling Amazonka.Lightsail.CreateDiskSnapshot

gen/Amazonka/Lightsail/CreateDiskSnapshot.hs:162:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type CreateDiskSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
162 | createDiskSnapshot_instanceName = Lens.lens (\CreateDiskSnapshot' {instanceName} -> instanceName) (\s@CreateDiskSnapshot' {} a -> s {instanceName = a} :: CreateDiskSnapshot)
    |                                                                                                                                      ^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateDiskSnapshot.hs:168:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateDiskSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
168 | createDiskSnapshot_tags = Lens.lens (\CreateDiskSnapshot' {tags} -> tags) (\s@CreateDiskSnapshot' {} a -> s {tags = a} :: CreateDiskSnapshot) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                              ^^^^^^^^
[309 of 341] Compiling Amazonka.Lightsail.CreateDiskFromSnapshot

gen/Amazonka/Lightsail/CreateDiskFromSnapshot.hs:244:128: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {addOns = a} with type CreateDiskFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
244 | createDiskFromSnapshot_addOns = Lens.lens (\CreateDiskFromSnapshot' {addOns} -> addOns) (\s@CreateDiskFromSnapshot' {} a -> s {addOns = a} :: CreateDiskFromSnapshot) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                ^^^^^^^^^^

gen/Amazonka/Lightsail/CreateDiskFromSnapshot.hs:295:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateDiskFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
295 | createDiskFromSnapshot_tags = Lens.lens (\CreateDiskFromSnapshot' {tags} -> tags) (\s@CreateDiskFromSnapshot' {} a -> s {tags = a} :: CreateDiskFromSnapshot) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                          ^^^^^^^^

gen/Amazonka/Lightsail/CreateDiskFromSnapshot.hs:323:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {availabilityZone = a} with type CreateDiskFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
323 | createDiskFromSnapshot_availabilityZone = Lens.lens (\CreateDiskFromSnapshot' {availabilityZone} -> availabilityZone) (\s@CreateDiskFromSnapshot' {} a -> s {availabilityZone = a} :: CreateDiskFromSnapshot)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateDiskFromSnapshot.hs:327:134: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sizeInGb = a} with type CreateDiskFromSnapshot is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
327 | createDiskFromSnapshot_sizeInGb = Lens.lens (\CreateDiskFromSnapshot' {sizeInGb} -> sizeInGb) (\s@CreateDiskFromSnapshot' {} a -> s {sizeInGb = a} :: CreateDiskFromSnapshot)
    |                                                                                                                                      ^^^^^^^^^^^^
[310 of 341] Compiling Amazonka.Lightsail.CreateDisk

gen/Amazonka/Lightsail/CreateDisk.hs:130:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {addOns = a} with type CreateDisk is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
130 | createDisk_addOns = Lens.lens (\CreateDisk' {addOns} -> addOns) (\s@CreateDisk' {} a -> s {addOns = a} :: CreateDisk) Prelude.. Lens.mapping Lens.coerced
    |                                                                                            ^^^^^^^^^^

gen/Amazonka/Lightsail/CreateDisk.hs:136:86: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateDisk is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
136 | createDisk_tags = Lens.lens (\CreateDisk' {tags} -> tags) (\s@CreateDisk' {} a -> s {tags = a} :: CreateDisk) Prelude.. Lens.mapping Lens.coerced
    |                                                                                      ^^^^^^^^

gen/Amazonka/Lightsail/CreateDisk.hs:149:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {availabilityZone = a} with type CreateDisk is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
149 | createDisk_availabilityZone = Lens.lens (\CreateDisk' {availabilityZone} -> availabilityZone) (\s@CreateDisk' {} a -> s {availabilityZone = a} :: CreateDisk)
    |                                                                                                                          ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateDisk.hs:153:98: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {sizeInGb = a} with type CreateDisk is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
153 | createDisk_sizeInGb = Lens.lens (\CreateDisk' {sizeInGb} -> sizeInGb) (\s@CreateDisk' {} a -> s {sizeInGb = a} :: CreateDisk)
    |                                                                                                  ^^^^^^^^^^^^
[311 of 341] Compiling Amazonka.Lightsail.CreateContainerServiceRegistryLogin
[312 of 341] Compiling Amazonka.Lightsail.CreateContainerServiceDeployment

gen/Amazonka/Lightsail/CreateContainerServiceDeployment.hs:108:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {containers = a} with type CreateContainerServiceDeployment is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | createContainerServiceDeployment_containers = Lens.lens (\CreateContainerServiceDeployment' {containers} -> containers) (\s@CreateContainerServiceDeployment' {} a -> s {containers = a} :: CreateContainerServiceDeployment) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                          ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateContainerServiceDeployment.hs:113:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {publicEndpoint = a} with type CreateContainerServiceDeployment is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
113 | createContainerServiceDeployment_publicEndpoint = Lens.lens (\CreateContainerServiceDeployment' {publicEndpoint} -> publicEndpoint) (\s@CreateContainerServiceDeployment' {} a -> s {publicEndpoint = a} :: CreateContainerServiceDeployment)
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateContainerServiceDeployment.hs:117:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type CreateContainerServiceDeployment is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
117 | createContainerServiceDeployment_serviceName = Lens.lens (\CreateContainerServiceDeployment' {serviceName} -> serviceName) (\s@CreateContainerServiceDeployment' {} a -> s {serviceName = a} :: CreateContainerServiceDeployment)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^
[313 of 341] Compiling Amazonka.Lightsail.CreateContainerService

gen/Amazonka/Lightsail/CreateContainerService.hs:291:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {privateRegistryAccess = a} with type CreateContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
291 | createContainerService_privateRegistryAccess = Lens.lens (\CreateContainerService' {privateRegistryAccess} -> privateRegistryAccess) (\s@CreateContainerService' {} a -> s {privateRegistryAccess = a} :: CreateContainerService)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateContainerService.hs:312:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {publicDomainNames = a} with type CreateContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
312 | createContainerService_publicDomainNames = Lens.lens (\CreateContainerService' {publicDomainNames} -> publicDomainNames) (\s@CreateContainerService' {} a -> s {publicDomainNames = a} :: CreateContainerService) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateContainerService.hs:322:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
322 | createContainerService_tags = Lens.lens (\CreateContainerService' {tags} -> tags) (\s@CreateContainerService' {} a -> s {tags = a} :: CreateContainerService) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                          ^^^^^^^^

gen/Amazonka/Lightsail/CreateContainerService.hs:348:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type CreateContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
348 | createContainerService_serviceName = Lens.lens (\CreateContainerService' {serviceName} -> serviceName) (\s@CreateContainerService' {} a -> s {serviceName = a} :: CreateContainerService)
    |                                                                                                                                               ^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateContainerService.hs:362:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {power = a} with type CreateContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
362 | createContainerService_power = Lens.lens (\CreateContainerService' {power} -> power) (\s@CreateContainerService' {} a -> s {power = a} :: CreateContainerService)
    |                                                                                                                             ^^^^^^^^^

gen/Amazonka/Lightsail/CreateContainerService.hs:372:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {scale = a} with type CreateContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
372 | createContainerService_scale = Lens.lens (\CreateContainerService' {scale} -> scale) (\s@CreateContainerService' {} a -> s {scale = a} :: CreateContainerService)
    |                                                                                                                             ^^^^^^^^^
[314 of 341] Compiling Amazonka.Lightsail.CreateContactMethod

gen/Amazonka/Lightsail/CreateContactMethod.hs:186:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {protocol = a} with type CreateContactMethod is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
186 | createContactMethod_protocol = Lens.lens (\CreateContactMethod' {protocol} -> protocol) (\s@CreateContactMethod' {} a -> s {protocol = a} :: CreateContactMethod)
    |                                                                                                                             ^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateContactMethod.hs:199:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {contactEndpoint = a} with type CreateContactMethod is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
199 | createContactMethod_contactEndpoint = Lens.lens (\CreateContactMethod' {contactEndpoint} -> contactEndpoint) (\s@CreateContactMethod' {} a -> s {contactEndpoint = a} :: CreateContactMethod)
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^
[315 of 341] Compiling Amazonka.Lightsail.CreateCloudFormationStack
[316 of 341] Compiling Amazonka.Lightsail.CreateCertificate

gen/Amazonka/Lightsail/CreateCertificate.hs:139:164: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {subjectAlternativeNames = a} with type CreateCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
139 | createCertificate_subjectAlternativeNames = Lens.lens (\CreateCertificate' {subjectAlternativeNames} -> subjectAlternativeNames) (\s@CreateCertificate' {} a -> s {subjectAlternativeNames = a} :: CreateCertificate) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateCertificate.hs:146:107: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
146 | createCertificate_tags = Lens.lens (\CreateCertificate' {tags} -> tags) (\s@CreateCertificate' {} a -> s {tags = a} :: CreateCertificate) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                           ^^^^^^^^

gen/Amazonka/Lightsail/CreateCertificate.hs:150:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateName = a} with type CreateCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
150 | createCertificate_certificateName = Lens.lens (\CreateCertificate' {certificateName} -> certificateName) (\s@CreateCertificate' {} a -> s {certificateName = a} :: CreateCertificate)
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/CreateCertificate.hs:154:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type CreateCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
154 | createCertificate_domainName = Lens.lens (\CreateCertificate' {domainName} -> domainName) (\s@CreateCertificate' {} a -> s {domainName = a} :: CreateCertificate)
    |                                                                                                                             ^^^^^^^^^^^^^^
[317 of 341] Compiling Amazonka.Lightsail.CreateBucketAccessKey
[318 of 341] Compiling Amazonka.Lightsail.CreateBucket

gen/Amazonka/Lightsail/CreateBucket.hs:166:92: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {tags = a} with type CreateBucket is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
166 | createBucket_tags = Lens.lens (\CreateBucket' {tags} -> tags) (\s@CreateBucket' {} a -> s {tags = a} :: CreateBucket) Prelude.. Lens.mapping Lens.coerced
    |                                                                                            ^^^^^^^^

gen/Amazonka/Lightsail/CreateBucket.hs:189:104: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bundleId = a} with type CreateBucket is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
189 | createBucket_bundleId = Lens.lens (\CreateBucket' {bundleId} -> bundleId) (\s@CreateBucket' {} a -> s {bundleId = a} :: CreateBucket)
    |                                                                                                        ^^^^^^^^^^^^
[319 of 341] Compiling Amazonka.Lightsail.CopySnapshot
[320 of 341] Compiling Amazonka.Lightsail.CloseInstancePublicPorts

gen/Amazonka/Lightsail/CloseInstancePublicPorts.hs:94:152: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type CloseInstancePublicPorts is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
94 | closeInstancePublicPorts_instanceName = Lens.lens (\CloseInstancePublicPorts' {instanceName} -> instanceName) (\s@CloseInstancePublicPorts' {} a -> s {instanceName = a} :: CloseInstancePublicPorts)
   |                                                                                                                                                        ^^^^^^^^^^^^^^^^
[321 of 341] Compiling Amazonka.Lightsail.AttachStaticIp

gen/Amazonka/Lightsail/AttachStaticIp.hs:89:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type AttachStaticIp is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
89 | attachStaticIp_instanceName = Lens.lens (\AttachStaticIp' {instanceName} -> instanceName) (\s@AttachStaticIp' {} a -> s {instanceName = a} :: AttachStaticIp)
   |                                                                                                                          ^^^^^^^^^^^^^^^^
[322 of 341] Compiling Amazonka.Lightsail.AttachLoadBalancerTlsCertificate

gen/Amazonka/Lightsail/AttachLoadBalancerTlsCertificate.hs:104:188: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {loadBalancerName = a} with type AttachLoadBalancerTlsCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
104 | attachLoadBalancerTlsCertificate_loadBalancerName = Lens.lens (\AttachLoadBalancerTlsCertificate' {loadBalancerName} -> loadBalancerName) (\s@AttachLoadBalancerTlsCertificate' {} a -> s {loadBalancerName = a} :: AttachLoadBalancerTlsCertificate)
    |                                                                                                                                                                                            ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/AttachLoadBalancerTlsCertificate.hs:108:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateName = a} with type AttachLoadBalancerTlsCertificate is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | attachLoadBalancerTlsCertificate_certificateName = Lens.lens (\AttachLoadBalancerTlsCertificate' {certificateName} -> certificateName) (\s@AttachLoadBalancerTlsCertificate' {} a -> s {certificateName = a} :: AttachLoadBalancerTlsCertificate)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^
[323 of 341] Compiling Amazonka.Lightsail.AttachInstancesToLoadBalancer

gen/Amazonka/Lightsail/AttachInstancesToLoadBalancer.hs:108:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {loadBalancerName = a} with type AttachInstancesToLoadBalancer is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
108 | attachInstancesToLoadBalancer_loadBalancerName = Lens.lens (\AttachInstancesToLoadBalancer' {loadBalancerName} -> loadBalancerName) (\s@AttachInstancesToLoadBalancer' {} a -> s {loadBalancerName = a} :: AttachInstancesToLoadBalancer)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^
[324 of 341] Compiling Amazonka.Lightsail.AttachDisk

gen/Amazonka/Lightsail/AttachDisk.hs:106:110: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type AttachDisk is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
106 | attachDisk_instanceName = Lens.lens (\AttachDisk' {instanceName} -> instanceName) (\s@AttachDisk' {} a -> s {instanceName = a} :: AttachDisk)
    |                                                                                                              ^^^^^^^^^^^^^^^^
[325 of 341] Compiling Amazonka.Lightsail.AttachCertificateToDistribution

gen/Amazonka/Lightsail/AttachCertificateToDistribution.hs:150:182: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {certificateName = a} with type AttachCertificateToDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
150 | attachCertificateToDistribution_certificateName = Lens.lens (\AttachCertificateToDistribution' {certificateName} -> certificateName) (\s@AttachCertificateToDistribution' {} a -> s {certificateName = a} :: AttachCertificateToDistribution)
    |                                                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^
[326 of 341] Compiling Amazonka.Lightsail.AllocateStaticIp
[327 of 341] Compiling Amazonka.Lightsail.UnpeerVpc
[328 of 341] Compiling Amazonka.Lightsail.UntagResource

gen/Amazonka/Lightsail/UntagResource.hs:102:119: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {resourceName = a} with type UntagResource is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
102 | untagResource_resourceName = Lens.lens (\UntagResource' {resourceName} -> resourceName) (\s@UntagResource' {} a -> s {resourceName = a} :: UntagResource)
    |                                                                                                                       ^^^^^^^^^^^^^^^^
[329 of 341] Compiling Amazonka.Lightsail.UpdateBucket

gen/Amazonka/Lightsail/UpdateBucket.hs:132:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessLogConfig = a} with type UpdateBucket is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
132 | updateBucket_accessLogConfig = Lens.lens (\UpdateBucket' {accessLogConfig} -> accessLogConfig) (\s@UpdateBucket' {} a -> s {accessLogConfig = a} :: UpdateBucket)
    |                                                                                                                             ^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateBucket.hs:137:113: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {accessRules = a} with type UpdateBucket is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
137 | updateBucket_accessRules = Lens.lens (\UpdateBucket' {accessRules} -> accessRules) (\s@UpdateBucket' {} a -> s {accessRules = a} :: UpdateBucket)
    |                                                                                                                 ^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateBucket.hs:145:146: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {readonlyAccessAccounts = a} with type UpdateBucket is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
145 | updateBucket_readonlyAccessAccounts = Lens.lens (\UpdateBucket' {readonlyAccessAccounts} -> readonlyAccessAccounts) (\s@UpdateBucket' {} a -> s {readonlyAccessAccounts = a} :: UpdateBucket) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
[330 of 341] Compiling Amazonka.Lightsail.UpdateBucketBundle

gen/Amazonka/Lightsail/UpdateBucketBundle.hs:119:122: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bundleId = a} with type UpdateBucketBundle is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
119 | updateBucketBundle_bundleId = Lens.lens (\UpdateBucketBundle' {bundleId} -> bundleId) (\s@UpdateBucketBundle' {} a -> s {bundleId = a} :: UpdateBucketBundle)
    |                                                                                                                          ^^^^^^^^^^^^
[331 of 341] Compiling Amazonka.Lightsail.UpdateContainerService

gen/Amazonka/Lightsail/UpdateContainerService.hs:185:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isDisabled = a} with type UpdateContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
185 | updateContainerService_isDisabled = Lens.lens (\UpdateContainerService' {isDisabled} -> isDisabled) (\s@UpdateContainerService' {} a -> s {isDisabled = a} :: UpdateContainerService)
    |                                                                                                                                            ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateContainerService.hs:198:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {power = a} with type UpdateContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
198 | updateContainerService_power = Lens.lens (\UpdateContainerService' {power} -> power) (\s@UpdateContainerService' {} a -> s {power = a} :: UpdateContainerService)
    |                                                                                                                             ^^^^^^^^^

gen/Amazonka/Lightsail/UpdateContainerService.hs:208:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {privateRegistryAccess = a} with type UpdateContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
208 | updateContainerService_privateRegistryAccess = Lens.lens (\UpdateContainerService' {privateRegistryAccess} -> privateRegistryAccess) (\s@UpdateContainerService' {} a -> s {privateRegistryAccess = a} :: UpdateContainerService)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateContainerService.hs:229:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {publicDomainNames = a} with type UpdateContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
229 | updateContainerService_publicDomainNames = Lens.lens (\UpdateContainerService' {publicDomainNames} -> publicDomainNames) (\s@UpdateContainerService' {} a -> s {publicDomainNames = a} :: UpdateContainerService) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateContainerService.hs:239:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {scale = a} with type UpdateContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
239 | updateContainerService_scale = Lens.lens (\UpdateContainerService' {scale} -> scale) (\s@UpdateContainerService' {} a -> s {scale = a} :: UpdateContainerService)
    |                                                                                                                             ^^^^^^^^^

gen/Amazonka/Lightsail/UpdateContainerService.hs:243:143: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {serviceName = a} with type UpdateContainerService is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
243 | updateContainerService_serviceName = Lens.lens (\UpdateContainerService' {serviceName} -> serviceName) (\s@UpdateContainerService' {} a -> s {serviceName = a} :: UpdateContainerService)
    |                                                                                                                                               ^^^^^^^^^^^^^^^
[332 of 341] Compiling Amazonka.Lightsail.UpdateDistribution

gen/Amazonka/Lightsail/UpdateDistribution.hs:143:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cacheBehaviorSettings = a} with type UpdateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
143 | updateDistribution_cacheBehaviorSettings = Lens.lens (\UpdateDistribution' {cacheBehaviorSettings} -> cacheBehaviorSettings) (\s@UpdateDistribution' {} a -> s {cacheBehaviorSettings = a} :: UpdateDistribution)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateDistribution.hs:148:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {cacheBehaviors = a} with type UpdateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
148 | updateDistribution_cacheBehaviors = Lens.lens (\UpdateDistribution' {cacheBehaviors} -> cacheBehaviors) (\s@UpdateDistribution' {} a -> s {cacheBehaviors = a} :: UpdateDistribution) Prelude.. Lens.mapping Lens.coerced
    |                                                                                                                                            ^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateDistribution.hs:153:158: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {defaultCacheBehavior = a} with type UpdateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
153 | updateDistribution_defaultCacheBehavior = Lens.lens (\UpdateDistribution' {defaultCacheBehavior} -> defaultCacheBehavior) (\s@UpdateDistribution' {} a -> s {defaultCacheBehavior = a} :: UpdateDistribution)
    |                                                                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateDistribution.hs:157:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {isEnabled = a} with type UpdateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
157 | updateDistribution_isEnabled = Lens.lens (\UpdateDistribution' {isEnabled} -> isEnabled) (\s@UpdateDistribution' {} a -> s {isEnabled = a} :: UpdateDistribution)
    |                                                                                                                             ^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateDistribution.hs:164:116: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {origin = a} with type UpdateDistribution is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
164 | updateDistribution_origin = Lens.lens (\UpdateDistribution' {origin} -> origin) (\s@UpdateDistribution' {} a -> s {origin = a} :: UpdateDistribution)
    |                                                                                                                    ^^^^^^^^^^
[333 of 341] Compiling Amazonka.Lightsail.UpdateDistributionBundle

gen/Amazonka/Lightsail/UpdateDistributionBundle.hs:110:140: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {bundleId = a} with type UpdateDistributionBundle is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
110 | updateDistributionBundle_bundleId = Lens.lens (\UpdateDistributionBundle' {bundleId} -> bundleId) (\s@UpdateDistributionBundle' {} a -> s {bundleId = a} :: UpdateDistributionBundle)
    |                                                                                                                                            ^^^^^^^^^^^^
[334 of 341] Compiling Amazonka.Lightsail.UpdateDomainEntry

gen/Amazonka/Lightsail/UpdateDomainEntry.hs:92:125: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {domainName = a} with type UpdateDomainEntry is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
   |
92 | updateDomainEntry_domainName = Lens.lens (\UpdateDomainEntry' {domainName} -> domainName) (\s@UpdateDomainEntry' {} a -> s {domainName = a} :: UpdateDomainEntry)
   |                                                                                                                             ^^^^^^^^^^^^^^
[335 of 341] Compiling Amazonka.Lightsail.UpdateInstanceMetadataOptions

gen/Amazonka/Lightsail/UpdateInstanceMetadataOptions.hs:159:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {httpEndpoint = a} with type UpdateInstanceMetadataOptions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
159 | updateInstanceMetadataOptions_httpEndpoint = Lens.lens (\UpdateInstanceMetadataOptions' {httpEndpoint} -> httpEndpoint) (\s@UpdateInstanceMetadataOptions' {} a -> s {httpEndpoint = a} :: UpdateInstanceMetadataOptions)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateInstanceMetadataOptions.hs:167:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {httpProtocolIpv6 = a} with type UpdateInstanceMetadataOptions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
167 | updateInstanceMetadataOptions_httpProtocolIpv6 = Lens.lens (\UpdateInstanceMetadataOptions' {httpProtocolIpv6} -> httpProtocolIpv6) (\s@UpdateInstanceMetadataOptions' {} a -> s {httpProtocolIpv6 = a} :: UpdateInstanceMetadataOptions)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateInstanceMetadataOptions.hs:173:200: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {httpPutResponseHopLimit = a} with type UpdateInstanceMetadataOptions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
173 | updateInstanceMetadataOptions_httpPutResponseHopLimit = Lens.lens (\UpdateInstanceMetadataOptions' {httpPutResponseHopLimit} -> httpPutResponseHopLimit) (\s@UpdateInstanceMetadataOptions' {} a -> s {httpPutResponseHopLimit = a} :: UpdateInstanceMetadataOptions)
    |                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateInstanceMetadataOptions.hs:190:161: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {httpTokens = a} with type UpdateInstanceMetadataOptions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
190 | updateInstanceMetadataOptions_httpTokens = Lens.lens (\UpdateInstanceMetadataOptions' {httpTokens} -> httpTokens) (\s@UpdateInstanceMetadataOptions' {} a -> s {httpTokens = a} :: UpdateInstanceMetadataOptions)
    |                                                                                                                                                                 ^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateInstanceMetadataOptions.hs:194:167: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {instanceName = a} with type UpdateInstanceMetadataOptions is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
194 | updateInstanceMetadataOptions_instanceName = Lens.lens (\UpdateInstanceMetadataOptions' {instanceName} -> instanceName) (\s@UpdateInstanceMetadataOptions' {} a -> s {instanceName = a} :: UpdateInstanceMetadataOptions)
    |                                                                                                                                                                       ^^^^^^^^^^^^^^^^
[336 of 341] Compiling Amazonka.Lightsail.UpdateLoadBalancerAttribute

gen/Amazonka/Lightsail/UpdateLoadBalancerAttribute.hs:168:173: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {loadBalancerName = a} with type UpdateLoadBalancerAttribute is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
168 | updateLoadBalancerAttribute_loadBalancerName = Lens.lens (\UpdateLoadBalancerAttribute' {loadBalancerName} -> loadBalancerName) (\s@UpdateLoadBalancerAttribute' {} a -> s {loadBalancerName = a} :: UpdateLoadBalancerAttribute)
    |                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^^^
[337 of 341] Compiling Amazonka.Lightsail.UpdateRelationalDatabase

gen/Amazonka/Lightsail/UpdateRelationalDatabase.hs:272:185: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {caCertificateIdentifier = a} with type UpdateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
272 | updateRelationalDatabase_caCertificateIdentifier = Lens.lens (\UpdateRelationalDatabase' {caCertificateIdentifier} -> caCertificateIdentifier) (\s@UpdateRelationalDatabase' {} a -> s {caCertificateIdentifier = a} :: UpdateRelationalDatabase)
    |                                                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateRelationalDatabase.hs:303:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {masterUserPassword = a} with type UpdateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
303 | updateRelationalDatabase_masterUserPassword = Lens.lens (\UpdateRelationalDatabase' {masterUserPassword} -> masterUserPassword) (\s@UpdateRelationalDatabase' {} a -> s {masterUserPassword = a} :: UpdateRelationalDatabase) Prelude.. Lens.mapping Data._Sensitive
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateRelationalDatabase.hs:320:179: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {preferredBackupWindow = a} with type UpdateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
320 | updateRelationalDatabase_preferredBackupWindow = Lens.lens (\UpdateRelationalDatabase' {preferredBackupWindow} -> preferredBackupWindow) (\s@UpdateRelationalDatabase' {} a -> s {preferredBackupWindow = a} :: UpdateRelationalDatabase)
    |                                                                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateRelationalDatabase.hs:341:194: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {preferredMaintenanceWindow = a} with type UpdateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
341 | updateRelationalDatabase_preferredMaintenanceWindow = Lens.lens (\UpdateRelationalDatabase' {preferredMaintenanceWindow} -> preferredMaintenanceWindow) (\s@UpdateRelationalDatabase' {} a -> s {preferredMaintenanceWindow = a} :: UpdateRelationalDatabase)
    |                                                                                                                                                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

gen/Amazonka/Lightsail/UpdateRelationalDatabase.hs:349:170: warning: [GHC-02256] [-Wambiguous-fields]
    The record update s {publiclyAccessible = a} with type UpdateRelationalDatabase is ambiguous.
    This will not be supported by -XDuplicateRecordFields in future releases of GHC.
    |
349 | updateRelationalDatabase_publiclyAccessible = Lens.lens (\UpdateRelationalDatabase' {publiclyAccessible} -> publiclyAccessible) (\s@UpdateRelationalDatabase' {} a -> s {publiclyAccessible = a} :: UpdateRelationalDatabase)
    |                                                                                                                                                                          ^^^^^^^^^^^^^^^^^^^^^^
[338 of 341] Compiling Amazonka.Lightsail.UpdateRelationalDatabaseParameters
[339 of 341] Compiling Amazonka.Lightsail.Lens
[340 of 341] Compiling Amazonka.Lightsail.Waiters
[341 of 341] Compiling Amazonka.Lightsail
Configuring test suite 'amazonka-lightsail-test' for amazonka-lightsail-2.0...
Preprocessing test suite 'amazonka-lightsail-test' for amazonka-lightsail-2.0...
Building test suite 'amazonka-lightsail-test' for amazonka-lightsail-2.0...
[1 of 4] Compiling Test.Amazonka.Lightsail
[2 of 4] Compiling Test.Amazonka.Lightsail.Internal
[3 of 4] Compiling Test.Amazonka.Gen.Lightsail
[4 of 4] Compiling Main
[5 of 5] Linking /tmp/workdir-amazonka-lightsail/amazonka-lightsail-2.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/amazonka-lightsail-2.0/t/amazonka-lightsail-test/build/amazonka-lightsail-test/amazonka-lightsail-test
