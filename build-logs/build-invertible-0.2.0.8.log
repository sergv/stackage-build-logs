Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - invertible-0.2.0.8 (lib) (first run)
 - invertible-0.2.0.8 (test:tests) (first run)
Configuring library for invertible-0.2.0.8...
Preprocessing library for invertible-0.2.0.8...
Building library for invertible-0.2.0.8...
[ 1 of 28] Compiling Data.Invertible.Bijection

Data/Invertible/Bijection.hs:3:14: warning: [GHC-19244] [-Wtrustworthy-safe]
    ‘Data.Invertible.Bijection’ is marked as Trustworthy but has been inferred as safe!
  |
3 | {-# LANGUAGE Trustworthy, TypeOperators, KindSignatures, FlexibleInstances, CPP #-}
  |              ^^^^^^^^^^^

Data/Invertible/Bijection.hs:31:22: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
31 | data Bijection (a :: * -> * -> *) b c = (:<->:)
   |                      ^

Data/Invertible/Bijection.hs:31:27: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
31 | data Bijection (a :: * -> * -> *) b c = (:<->:)
   |                           ^

Data/Invertible/Bijection.hs:31:32: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
31 | data Bijection (a :: * -> * -> *) b c = (:<->:)
   |                                ^
[ 2 of 28] Compiling Control.Invertible.BiArrow

Control/Invertible/BiArrow.hs:137:1: warning: [GHC-90177] [-Worphans]
    Orphan instance: instance Semigroupoid Partial.Iso
    Suggested fix:
      Move the instance declaration to the module of the class or of the type, or
      wrap the type with a newtype and declare the instance on the new type.
    |
137 | instance Semigroupoid Partial.Iso where
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...

Control/Invertible/BiArrow.hs:140:1: warning: [GHC-90177] [-Worphans]
    Orphan instance: instance Groupoid Partial.Iso
    Suggested fix:
      Move the instance declaration to the module of the class or of the type, or
      wrap the type with a newtype and declare the instance on the new type.
    |
140 | instance Groupoid Partial.Iso where
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...
[ 3 of 28] Compiling Data.Invertible.Coerce
[ 4 of 28] Compiling Data.Invertible.Enum
[ 5 of 28] Compiling Data.Invertible.Function
[ 6 of 28] Compiling Data.Invertible.Internal
[ 7 of 28] Compiling Data.Invertible.Bool
[ 8 of 28] Compiling Data.Invertible.Bits
[ 9 of 28] Compiling Data.Invertible.Invariant
[10 of 28] Compiling Data.Invertible.Lens
[11 of 28] Compiling Data.Invertible.Monad
[12 of 28] Compiling Data.Invertible.PartialIsomorphism
[13 of 28] Compiling Data.Invertible.Semigroupoid
[14 of 28] Compiling Data.Invertible.TH
[15 of 28] Compiling Data.Invertible.Ord
[16 of 28] Compiling Data.Invertible.Monoid

Data/Invertible/Monoid.hs:44:3: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (BiEndo a)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
   |
44 |   BiEndo f `mappend` BiEndo g = BiEndo (f C.. g)
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[17 of 28] Compiling Control.Invertible.Functor
[18 of 28] Compiling Data.Invertible.Maybe
[19 of 28] Compiling Data.Invertible.List
[20 of 28] Compiling Data.Invertible.Functor
[21 of 28] Compiling Data.Invertible.Either
[22 of 28] Compiling Data.Invertible.Complex
[23 of 28] Compiling Control.Invertible.MonadArrow
[24 of 28] Compiling Data.Invertible.Tuple
[25 of 28] Compiling Data.Invertible.Prelude
[26 of 28] Compiling Data.Invertible
[27 of 28] Compiling Control.Invertible.Monoidal

Control/Invertible/Monoidal.hs:52:29: warning: [-Wunused-imports]
    The import of ‘liftA2’
    from module ‘Control.Applicative’ is redundant
   |
52 | import Control.Applicative (liftA2, Alternative, (<|>))
   |                             ^^^^^^

Control/Invertible/Monoidal.hs:235:1: warning: [GHC-90177] [-Worphans]
    Orphan instance: instance I.Functor m => I.Functor (MaybeT m)
    Suggested fix:
      Move the instance declaration to the module of the class or of the type, or
      wrap the type with a newtype and declare the instance on the new type.
    |
235 | instance I.Functor m => I.Functor (MaybeT m) where
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...
[28 of 28] Compiling Control.Invertible.Monoidal.Free

Control/Invertible/Monoidal/Free.hs:29:21: warning: [-Wunused-imports]
    The import of ‘<>’ from module ‘Data.Monoid’ is redundant
   |
29 | import Data.Monoid ((<>), Alt(..))
   |                     ^^^^
Configuring test suite 'tests' for invertible-0.2.0.8...
Preprocessing test suite 'tests' for invertible-0.2.0.8...
Building test suite 'tests' for invertible-0.2.0.8...
[1 of 2] Compiling FreeMonoidal

test/FreeMonoidal.hs:126:3: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘Maybe (Tree Int, [Int])’ not matched: Nothing
    |
126 |   Just (r, t) = p
    |   ^^^^^^^^^^^^^^^

test/FreeMonoidal.hs:131:25: warning: [GHC-62161] [-Wincomplete-uni-patterns]
    Pattern match(es) are non-exhaustive
    In a pattern binding:
        Patterns of type ‘Tree a’ not matched:
            TreeEmpty
            TreeJoin _
            TreeChoose _
    |
131 |   produce (Const _) x = case unsafeCoerce x of { ~(TreeFree j) -> j }
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[2 of 2] Compiling Main
[3 of 3] Linking /tmp/workdir-invertible/invertible-0.2.0.8/dist-newstyle/build/x86_64-linux/ghc-9.6.6/invertible-0.2.0.8/t/tests/build/tests/tests
