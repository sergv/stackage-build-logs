Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - poly-arity-0.1.0 (lib) (first run)
Configuring library for poly-arity-0.1.0...
Preprocessing library for poly-arity-0.1.0...
Building library for poly-arity-0.1.0...
[1 of 1] Compiling Data.Function.Poly

src/Data/Function/Poly.hs:23:37: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
23 | type family TypeListToArity (xs :: [*]) (r :: *) :: * where
   |                                     ^

src/Data/Function/Poly.hs:23:47: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
23 | type family TypeListToArity (xs :: [*]) (r :: *) :: * where
   |                                               ^

src/Data/Function/Poly.hs:23:53: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
23 | type family TypeListToArity (xs :: [*]) (r :: *) :: * where
   |                                                     ^

src/Data/Function/Poly.hs:28:35: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
28 | type family ArityToTypeList (r :: *) :: [*] where
   |                                   ^

src/Data/Function/Poly.hs:28:42: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
28 | type family ArityToTypeList (r :: *) :: [*] where
   |                                          ^

src/Data/Function/Poly.hs:33:26: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
33 | type family Result (f :: *) :: * where
   |                          ^

src/Data/Function/Poly.hs:33:32: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
33 | type family Result (f :: *) :: * where
   |                                ^

src/Data/Function/Poly.hs:40:38: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
40 | type family ArityMinusTypeList (r :: *) (xs :: [*]) :: * where
   |                                      ^

src/Data/Function/Poly.hs:40:49: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
40 | type family ArityMinusTypeList (r :: *) (xs :: [*]) :: * where
   |                                                 ^

src/Data/Function/Poly.hs:40:56: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
40 | type family ArityMinusTypeList (r :: *) (xs :: [*]) :: * where
   |                                                        ^

src/Data/Function/Poly.hs:52:30: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
52 | type family InjectLast (x :: *) (f :: *) :: * where
   |                              ^

src/Data/Function/Poly.hs:52:39: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
52 | type family InjectLast (x :: *) (f :: *) :: * where
   |                                       ^

src/Data/Function/Poly.hs:52:45: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
52 | type family InjectLast (x :: *) (f :: *) :: * where
   |                                             ^

src/Data/Function/Poly.hs:56:28: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
56 | type family Append (xs :: [*]) (x :: *) :: [*] where
   |                            ^

src/Data/Function/Poly.hs:56:38: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
56 | type family Append (xs :: [*]) (x :: *) :: [*] where
   |                                      ^

src/Data/Function/Poly.hs:56:45: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
56 | type family Append (xs :: [*]) (x :: *) :: [*] where
   |                                             ^

src/Data/Function/Poly.hs:64:33: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
64 | type family ExpectArity (xs :: [*]) (f :: *) :: Constraint where
   |                                 ^

src/Data/Function/Poly.hs:64:43: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
64 | type family ExpectArity (xs :: [*]) (f :: *) :: Constraint where
   |                                           ^

src/Data/Function/Poly.hs:69:30: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
69 | type family ExpectLast (x :: *) (f :: *) :: Constraint where
   |                              ^

src/Data/Function/Poly.hs:69:39: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
69 | type family ExpectLast (x :: *) (f :: *) :: Constraint where
   |                                       ^

src/Data/Function/Poly.hs:82:20: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
82 | data HList (xs :: [*]) where
   |                    ^

src/Data/Function/Poly.hs:84:18: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
84 |   HCons :: (x :: *) -> HList xs -> HList (x ': xs)
   |                  ^

src/Data/Function/Poly.hs:88:48: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
88 | class ExpectArity xs f => ConsumeArity (xs :: [*]) (f :: *) result | xs f -> result where
   |                                                ^

src/Data/Function/Poly.hs:88:58: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
88 | class ExpectArity xs f => ConsumeArity (xs :: [*]) (f :: *) result | xs f -> result where
   |                                                          ^

src/Data/Function/Poly.hs:103:29: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
103 | type family HasResult (f :: *) (r :: *) :: Constraint where
    |                             ^

src/Data/Function/Poly.hs:103:38: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
103 | type family HasResult (f :: *) (r :: *) :: Constraint where
    |                                      ^
