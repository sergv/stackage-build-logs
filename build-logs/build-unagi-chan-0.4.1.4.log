Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - unagi-chan-0.4.1.4 (lib) (first run)
 - unagi-chan-0.4.1.4 (test:test) (first run)
Configuring library for unagi-chan-0.4.1.4...
Preprocessing library for unagi-chan-0.4.1.4...
Building library for unagi-chan-0.4.1.4...
[ 1 of 14] Compiling Control.Concurrent.Chan.Unagi.Constants
[ 2 of 14] Compiling Control.Concurrent.Chan.Unagi.NoBlocking.Types

src/Control/Concurrent/Chan/Unagi/NoBlocking/Types.hs:10:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Fail’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fail’
    To import instances alone, use: import Control.Monad.Fail()
   |
10 | import Control.Monad.Fail
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

src/Control/Concurrent/Chan/Unagi/NoBlocking/Types.hs:51:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘pure = return’ definition detected
    in the instance declaration for ‘Applicative Element’.
    Move definition from ‘return’ to ‘pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
   |
51 |     pure = return
   |     ^^^^^^^^^^^^^

src/Control/Concurrent/Chan/Unagi/NoBlocking/Types.hs:59:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad Element’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
   |
59 |     return = Element . return . return
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 3 of 14] Compiling Data.Atomics.Counter.Fat
[ 4 of 14] Compiling Utilities
[ 5 of 14] Compiling Control.Concurrent.Chan.Unagi.Unboxed.Internal
[ 6 of 14] Compiling Control.Concurrent.Chan.Unagi.Unboxed
[ 7 of 14] Compiling Control.Concurrent.Chan.Unagi.NoBlocking.Unboxed.Internal
[ 8 of 14] Compiling Control.Concurrent.Chan.Unagi.NoBlocking.Unboxed
[ 9 of 14] Compiling Control.Concurrent.Chan.Unagi.Internal
[10 of 14] Compiling Control.Concurrent.Chan.Unagi.NoBlocking.Internal
[11 of 14] Compiling Control.Concurrent.Chan.Unagi.NoBlocking
[12 of 14] Compiling Control.Concurrent.Chan.Unagi
[13 of 14] Compiling Control.Concurrent.Chan.Unagi.Bounded.Internal
[14 of 14] Compiling Control.Concurrent.Chan.Unagi.Bounded
Configuring test suite 'test' for unagi-chan-0.4.1.4...
Preprocessing test suite 'test' for unagi-chan-0.4.1.4...
Building test suite 'test' for unagi-chan-0.4.1.4...

<no location info>: warning: [GHC-32850] [-Wmissing-home-modules]
    These modules are needed for compilation but not listed in your .cabal file's other-modules for ‘unagi-chan-0.4.1.4-inplace-test’ :
        Control.Concurrent.Chan.Unagi
        Control.Concurrent.Chan.Unagi.Bounded
        Control.Concurrent.Chan.Unagi.Bounded.Internal
        Control.Concurrent.Chan.Unagi.Constants
        Control.Concurrent.Chan.Unagi.Internal
        Control.Concurrent.Chan.Unagi.NoBlocking
        Control.Concurrent.Chan.Unagi.NoBlocking.Internal
        Control.Concurrent.Chan.Unagi.NoBlocking.Types
        Control.Concurrent.Chan.Unagi.NoBlocking.Unboxed
        Control.Concurrent.Chan.Unagi.NoBlocking.Unboxed.Internal
        Control.Concurrent.Chan.Unagi.Unboxed
        Control.Concurrent.Chan.Unagi.Unboxed.Internal
        Data.Atomics.Counter.Fat
        Utilities
[ 1 of 26] Compiling Control.Concurrent.Chan.Unagi.Constants
[ 2 of 26] Compiling Control.Concurrent.Chan.Unagi.NoBlocking.Types

src/Control/Concurrent/Chan/Unagi/NoBlocking/Types.hs:10:1: warning: [-Wunused-imports]
    The import of ‘Control.Monad.Fail’ is redundant
      except perhaps to import instances from ‘Control.Monad.Fail’
    To import instances alone, use: import Control.Monad.Fail()
   |
10 | import Control.Monad.Fail
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

src/Control/Concurrent/Chan/Unagi/NoBlocking/Types.hs:51:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘pure = return’ definition detected
    in the instance declaration for ‘Applicative Element’.
    Move definition from ‘return’ to ‘pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
   |
51 |     pure = return
   |     ^^^^^^^^^^^^^

src/Control/Concurrent/Chan/Unagi/NoBlocking/Types.hs:59:5: warning: [-Wnoncanonical-monad-instances]
    Noncanonical ‘return’ definition detected
    in the instance declaration for ‘Monad Element’.
    ‘return’ will eventually be removed in favour of ‘pure’
    Either remove definition for ‘return’ (recommended) or define as ‘return = pure’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/monad-of-no-return
   |
59 |     return = Element . return . return
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[ 3 of 26] Compiling Data.Atomics.Counter.Fat
[ 4 of 26] Compiling Atomics

tests/Atomics.hs:104:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘testNextistentSuccessFailure’
    |
104 | testNextistentSuccessFailure = do
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/Atomics.hs:142:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘forkSync’
    |
142 | forkSync sem target io = 
    | ^^^^^^^^
[ 5 of 26] Compiling Utilities
[ 6 of 26] Compiling IndexedMVar
[ 7 of 26] Compiling Control.Concurrent.Chan.Unagi.Unboxed.Internal
[ 8 of 26] Compiling Control.Concurrent.Chan.Unagi.Unboxed
[ 9 of 26] Compiling UnagiUnboxed
[10 of 26] Compiling Control.Concurrent.Chan.Unagi.NoBlocking.Unboxed.Internal
[11 of 26] Compiling Control.Concurrent.Chan.Unagi.NoBlocking.Unboxed
[12 of 26] Compiling UnagiNoBlockingUnboxed
[13 of 26] Compiling Control.Concurrent.Chan.Unagi.Internal
[14 of 26] Compiling Control.Concurrent.Chan.Unagi.NoBlocking.Internal
[15 of 26] Compiling Control.Concurrent.Chan.Unagi.NoBlocking
[16 of 26] Compiling UnagiNoBlocking
[17 of 26] Compiling Control.Concurrent.Chan.Unagi
[18 of 26] Compiling Unagi
[19 of 26] Compiling Control.Concurrent.Chan.Unagi.Bounded.Internal
[20 of 26] Compiling Control.Concurrent.Chan.Unagi.Bounded
[21 of 26] Compiling UnagiBounded
[22 of 26] Compiling Implementations
[23 of 26] Compiling Smoke
[24 of 26] Compiling DupChan
[25 of 26] Compiling Deadlocks
[26 of 26] Compiling Main

<no location info>: warning: [GHC-32850] [-Wmissing-home-modules]
    These modules are needed for compilation but not listed in your .cabal file's other-modules for ‘unagi-chan-0.4.1.4-inplace-test’ :
        Control.Concurrent.Chan.Unagi
        Control.Concurrent.Chan.Unagi.Bounded
        Control.Concurrent.Chan.Unagi.Bounded.Internal
        Control.Concurrent.Chan.Unagi.Constants
        Control.Concurrent.Chan.Unagi.Internal
        Control.Concurrent.Chan.Unagi.NoBlocking
        Control.Concurrent.Chan.Unagi.NoBlocking.Internal
        Control.Concurrent.Chan.Unagi.NoBlocking.Types
        Control.Concurrent.Chan.Unagi.NoBlocking.Unboxed
        Control.Concurrent.Chan.Unagi.NoBlocking.Unboxed.Internal
        Control.Concurrent.Chan.Unagi.Unboxed
        Control.Concurrent.Chan.Unagi.Unboxed.Internal
        Data.Atomics.Counter.Fat
        Utilities
[27 of 27] Linking /tmp/workdir-unagi-chan/unagi-chan-0.4.1.4/dist-newstyle/build/x86_64-linux/ghc-9.6.6/unagi-chan-0.4.1.4/t/test/build/test/test
