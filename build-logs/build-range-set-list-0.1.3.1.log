Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - range-set-list-0.1.3.1 (lib) (first run)
 - range-set-list-0.1.3.1 (test:test) (first run)
Configuring library for range-set-list-0.1.3.1...
Preprocessing library for range-set-list-0.1.3.1...
Building library for range-set-list-0.1.3.1...
[1 of 4] Compiling Data.RangeSet.Internal
[2 of 4] Compiling Data.RangeSet.List

src/Data/RangeSet/List.hs:99:1: warning: [-Wunused-imports]
    The import of ‘Data.Foldable’ is redundant
      except perhaps to import instances from ‘Data.Foldable’
    To import instances alone, use: import Data.Foldable()
   |
99 | import           Data.Foldable   (foldMap)
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/RangeSet/List.hs:102:35: warning: [-Wunused-imports]
    The import of ‘Monoid’ from module ‘Data.Monoid’ is redundant
    |
102 | import           Data.Monoid     (Monoid (..), getSum)
    |                                   ^^^^^^^^^^^

src/Data/RangeSet/List.hs:103:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
    |
103 | import           Data.Semigroup  (Semigroup (..))
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/RangeSet/List.hs:123:5: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (RSet a)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
    |
123 |     mappend = union
    |     ^^^^^^^^^^^^^^^
[3 of 4] Compiling Data.RangeSet.IntMap

src/Data/RangeSet/IntMap.hs:78:1: warning: [-Wunused-imports]
    The import of ‘Data.Functor’ is redundant
      except perhaps to import instances from ‘Data.Functor’
    To import instances alone, use: import Data.Functor()
   |
78 | import           Data.Functor       ((<$>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/RangeSet/IntMap.hs:80:38: warning: [-Wunused-imports]
    The import of ‘Monoid’ from module ‘Data.Monoid’ is redundant
   |
80 | import           Data.Monoid        (Monoid (..), getSum)
   |                                      ^^^^^^^^^^^

src/Data/RangeSet/IntMap.hs:81:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
81 | import           Data.Semigroup     (Semigroup (..))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/RangeSet/IntMap.hs:101:3: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid RIntSet’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
    |
101 |   mappend = union
    |   ^^^^^^^^^^^^^^^
[4 of 4] Compiling Data.RangeSet.Map

src/Data/RangeSet/Map.hs:97:1: warning: [-Wunused-imports]
    The import of ‘Data.Functor’ is redundant
      except perhaps to import instances from ‘Data.Functor’
    To import instances alone, use: import Data.Functor()
   |
97 | import           Data.Functor    ((<$>))
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/RangeSet/Map.hs:99:35: warning: [-Wunused-imports]
    The import of ‘Monoid’ from module ‘Data.Monoid’ is redundant
   |
99 | import           Data.Monoid     (Monoid (..), getSum)
   |                                   ^^^^^^^^^^^

src/Data/RangeSet/Map.hs:100:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
    |
100 | import           Data.Semigroup  (Semigroup (..))
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

src/Data/RangeSet/Map.hs:120:3: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (RSet a)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
    |
120 |   mappend = union
    |   ^^^^^^^^^^^^^^^
Configuring test suite 'test' for range-set-list-0.1.3.1...
Preprocessing test suite 'test' for range-set-list-0.1.3.1...
Building test suite 'test' for range-set-list-0.1.3.1...
[1 of 5] Compiling SetAction

tests/SetAction.hs:8:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
  |
8 | import Control.Applicative
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/SetAction.hs:33:37: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘arbitrary1’ shadows the existing binding
      imported from ‘Test.Tasty.QuickCheck’ at tests/SetAction.hs:3:1-34
      (and originally defined in ‘QuickCheck-2.14.3:Test.QuickCheck.Arbitrary’)
   |
33 |                               where arbitrary1 = arbitrary' $ n - 1
   |                                     ^^^^^^^^^^

tests/SetAction.hs:34:37: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘arbitrary2’ shadows the existing binding
      imported from ‘Test.Tasty.QuickCheck’ at tests/SetAction.hs:3:1-34
      (and originally defined in ‘QuickCheck-2.14.3:Test.QuickCheck.Arbitrary’)
   |
34 |                                     arbitrary2 = arbitrary' $ n `div` 2
   |                                     ^^^^^^^^^^

tests/SetAction.hs:69:37: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘arbitrary1’ shadows the existing binding
      imported from ‘Test.Tasty.QuickCheck’ at tests/SetAction.hs:3:1-34
      (and originally defined in ‘QuickCheck-2.14.3:Test.QuickCheck.Arbitrary’)
   |
69 |                               where arbitrary1 = arbitrary' $ n - 1
   |                                     ^^^^^^^^^^

tests/SetAction.hs:70:37: warning: [GHC-63397] [-Wname-shadowing]
    This binding for ‘arbitrary2’ shadows the existing binding
      imported from ‘Test.Tasty.QuickCheck’ at tests/SetAction.hs:3:1-34
      (and originally defined in ‘QuickCheck-2.14.3:Test.QuickCheck.Arbitrary’)
   |
70 |                                     arbitrary2 = arbitrary' $ n `div` 2
   |                                     ^^^^^^^^^^
[2 of 5] Compiling Map

tests/Map.hs:11:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
11 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/Map.hs:14:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
14 | import Data.Semigroup
   | ^^^^^^^^^^^^^^^^^^^^^
[3 of 5] Compiling List

tests/List.hs:11:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
11 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/List.hs:14:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
14 | import Data.Semigroup
   | ^^^^^^^^^^^^^^^^^^^^^
[4 of 5] Compiling IntMap

tests/IntMap.hs:11:1: warning: [-Wunused-imports]
    The import of ‘Control.Applicative’ is redundant
      except perhaps to import instances from ‘Control.Applicative’
    To import instances alone, use: import Control.Applicative()
   |
11 | import Control.Applicative
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/IntMap.hs:13:1: warning: [-Wunused-imports]
    The import of ‘Data.Semigroup’ is redundant
      except perhaps to import instances from ‘Data.Semigroup’
    To import instances alone, use: import Data.Semigroup()
   |
13 | import Data.Semigroup
   | ^^^^^^^^^^^^^^^^^^^^^
[5 of 5] Compiling Main
[6 of 6] Linking /tmp/workdir-range-set-list/range-set-list-0.1.3.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/range-set-list-0.1.3.1/t/test/build/test/test
