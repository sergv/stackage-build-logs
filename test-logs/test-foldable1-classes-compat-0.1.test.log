Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - foldable1-classes-compat-0.1 (test:test) (ephemeral targets)
Preprocessing test suite 'test' for foldable1-classes-compat-0.1...
Building test suite 'test' for foldable1-classes-compat-0.1...
Running 1 test suites...
Test suite test: RUNNING...
NonEmpty:
  foldMap1 ~= foldMap: [OK, passed 100 tests]
  toList . toNonEmpty ~= toList: [OK, passed 100 tests]
  foldl1 non/strict: [OK, passed 100 tests]
  foldr1 non/strict: [OK, passed 100 tests]
  foldlMap1 non/strict: [OK, passed 100 tests]
  foldrMap1 non/strict: [OK, passed 100 tests]
  foldMap1 default: [OK, passed 100 tests]
  foldrMap1 default: [OK, passed 100 tests]
  foldlMap1 default: [OK, passed 100 tests]
  toNonEmpty default: [OK, passed 100 tests]
  head default: [OK, passed 100 tests]
  last default: [OK, passed 100 tests]
  minimum default: [OK, passed 100 tests]
  maximum default: [OK, passed 100 tests]
  foldMap via toNonEmpty: [OK, passed 100 tests]
  foldr1 via toNonEmpty: [OK, passed 100 tests]
  foldl1 via toNonEmpty: [OK, passed 100 tests]
  foldr1' via toNonEmpty: [OK, passed 100 tests]
  foldl1' via toNonEmpty: [OK, passed 100 tests]
  head via toNonEmpty: [OK, passed 100 tests]
  last via toNonEmpty: [OK, passed 100 tests]
  minimum via toNonEmpty: [OK, passed 100 tests]
  maximum via toNonEmpty: [OK, passed 100 tests]
foldMap1:
  foldMap1 ~= foldMap: [OK, passed 100 tests]
  toList . toNonEmpty ~= toList: [OK, passed 100 tests]
  foldl1 non/strict: [OK, passed 100 tests]
  foldr1 non/strict: [OK, passed 100 tests]
  foldlMap1 non/strict: [OK, passed 100 tests]
  foldrMap1 non/strict: [OK, passed 100 tests]
  foldMap1 default: [OK, passed 100 tests]
  foldrMap1 default: [OK, passed 100 tests]
  foldlMap1 default: [OK, passed 100 tests]
  toNonEmpty default: [OK, passed 100 tests]
  head default: [OK, passed 100 tests]
  last default: [OK, passed 100 tests]
  minimum default: [OK, passed 100 tests]
  maximum default: [OK, passed 100 tests]
  foldMap via toNonEmpty: [OK, passed 100 tests]
  foldr1 via toNonEmpty: [OK, passed 100 tests]
  foldl1 via toNonEmpty: [OK, passed 100 tests]
  foldr1' via toNonEmpty: [OK, passed 100 tests]
  foldl1' via toNonEmpty: [OK, passed 100 tests]
  head via toNonEmpty: [OK, passed 100 tests]
  last via toNonEmpty: [OK, passed 100 tests]
  minimum via toNonEmpty: [OK, passed 100 tests]
  maximum via toNonEmpty: [OK, passed 100 tests]
foldrMap1:
  foldMap1 ~= foldMap: [OK, passed 100 tests]
  toList . toNonEmpty ~= toList: [OK, passed 100 tests]
  foldl1 non/strict: [OK, passed 100 tests]
  foldr1 non/strict: [OK, passed 100 tests]
  foldlMap1 non/strict: [OK, passed 100 tests]
  foldrMap1 non/strict: [OK, passed 100 tests]
  foldMap1 default: [OK, passed 100 tests]
  foldrMap1 default: [OK, passed 100 tests]
  foldlMap1 default: [OK, passed 100 tests]
  toNonEmpty default: [OK, passed 100 tests]
  head default: [OK, passed 100 tests]
  last default: [OK, passed 100 tests]
  minimum default: [OK, passed 100 tests]
  maximum default: [OK, passed 100 tests]
  foldMap via toNonEmpty: [OK, passed 100 tests]
  foldr1 via toNonEmpty: [OK, passed 100 tests]
  foldl1 via toNonEmpty: [OK, passed 100 tests]
  foldr1' via toNonEmpty: [OK, passed 100 tests]
  foldl1' via toNonEmpty: [OK, passed 100 tests]
  head via toNonEmpty: [OK, passed 100 tests]
  last via toNonEmpty: [OK, passed 100 tests]
  minimum via toNonEmpty: [OK, passed 100 tests]
  maximum via toNonEmpty: [OK, passed 100 tests]
Tree:
  foldMap1 ~= foldMap: [OK, passed 100 tests]
  toList . toNonEmpty ~= toList: [OK, passed 100 tests]
  foldl1 non/strict: [OK, passed 100 tests]
  foldr1 non/strict: [OK, passed 100 tests]
  foldlMap1 non/strict: [OK, passed 100 tests]
  foldrMap1 non/strict: [OK, passed 100 tests]
  foldMap1 default: [OK, passed 100 tests]
  foldrMap1 default: [OK, passed 100 tests]
  foldlMap1 default: [OK, passed 100 tests]
  toNonEmpty default: [OK, passed 100 tests]
  head default: [OK, passed 100 tests]
  last default: [OK, passed 100 tests]
  minimum default: [OK, passed 100 tests]
  maximum default: [OK, passed 100 tests]
  foldMap via toNonEmpty: [OK, passed 100 tests]
  foldr1 via toNonEmpty: [OK, passed 100 tests]
  foldl1 via toNonEmpty: [OK, passed 100 tests]
  foldr1' via toNonEmpty: [OK, passed 100 tests]
  foldl1' via toNonEmpty: [OK, passed 100 tests]
  head via toNonEmpty: [OK, passed 100 tests]
  last via toNonEmpty: [OK, passed 100 tests]
  minimum via toNonEmpty: [OK, passed 100 tests]
  maximum via toNonEmpty: [OK, passed 100 tests]
Identity:
  foldMap1 ~= foldMap: [OK, passed 100 tests]
  toList . toNonEmpty ~= toList: [OK, passed 100 tests]
  foldl1 non/strict: [OK, passed 100 tests]
  foldr1 non/strict: [OK, passed 100 tests]
  foldlMap1 non/strict: [OK, passed 100 tests]
  foldrMap1 non/strict: [OK, passed 100 tests]
  foldMap1 default: [OK, passed 100 tests]
  foldrMap1 default: [OK, passed 100 tests]
  foldlMap1 default: [OK, passed 100 tests]
  toNonEmpty default: [OK, passed 100 tests]
  head default: [OK, passed 100 tests]
  last default: [OK, passed 100 tests]
  minimum default: [OK, passed 100 tests]
  maximum default: [OK, passed 100 tests]
  foldMap via toNonEmpty: [OK, passed 100 tests]
  foldr1 via toNonEmpty: [OK, passed 100 tests]
  foldl1 via toNonEmpty: [OK, passed 100 tests]
  foldr1' via toNonEmpty: [OK, passed 100 tests]
  foldl1' via toNonEmpty: [OK, passed 100 tests]
  head via toNonEmpty: [OK, passed 100 tests]
  last via toNonEmpty: [OK, passed 100 tests]
  minimum via toNonEmpty: [OK, passed 100 tests]
  maximum via toNonEmpty: [OK, passed 100 tests]
Compose:
  foldMap1 ~= foldMap: [OK, passed 100 tests]
  toList . toNonEmpty ~= toList: [OK, passed 100 tests]
  foldl1 non/strict: [OK, passed 100 tests]
  foldr1 non/strict: [OK, passed 100 tests]
  foldlMap1 non/strict: [OK, passed 100 tests]
  foldrMap1 non/strict: [OK, passed 100 tests]
  foldMap1 default: [OK, passed 100 tests]
  foldrMap1 default: [OK, passed 100 tests]
  foldlMap1 default: [OK, passed 100 tests]
  toNonEmpty default: [OK, passed 100 tests]
  head default: [OK, passed 100 tests]
  last default: [OK, passed 100 tests]
  minimum default: [OK, passed 100 tests]
  maximum default: [OK, passed 100 tests]
  foldMap via toNonEmpty: [OK, passed 100 tests]
  foldr1 via toNonEmpty: [OK, passed 100 tests]
  foldl1 via toNonEmpty: [OK, passed 100 tests]
  foldr1' via toNonEmpty: [OK, passed 100 tests]
  foldl1' via toNonEmpty: [OK, passed 100 tests]
  head via toNonEmpty: [OK, passed 100 tests]
  last via toNonEmpty: [OK, passed 100 tests]
  minimum via toNonEmpty: [OK, passed 100 tests]
  maximum via toNonEmpty: [OK, passed 100 tests]
Product:
  foldMap1 ~= foldMap: [OK, passed 100 tests]
  toList . toNonEmpty ~= toList: [OK, passed 100 tests]
  foldl1 non/strict: [OK, passed 100 tests]
  foldr1 non/strict: [OK, passed 100 tests]
  foldlMap1 non/strict: [OK, passed 100 tests]
  foldrMap1 non/strict: [OK, passed 100 tests]
  foldMap1 default: [OK, passed 100 tests]
  foldrMap1 default: [OK, passed 100 tests]
  foldlMap1 default: [OK, passed 100 tests]
  toNonEmpty default: [OK, passed 100 tests]
  head default: [OK, passed 100 tests]
  last default: [OK, passed 100 tests]
  minimum default: [OK, passed 100 tests]
  maximum default: [OK, passed 100 tests]
  foldMap via toNonEmpty: [OK, passed 100 tests]
  foldr1 via toNonEmpty: [OK, passed 100 tests]
  foldl1 via toNonEmpty: [OK, passed 100 tests]
  foldr1' via toNonEmpty: [OK, passed 100 tests]
  foldl1' via toNonEmpty: [OK, passed 100 tests]
  head via toNonEmpty: [OK, passed 100 tests]
  last via toNonEmpty: [OK, passed 100 tests]
  minimum via toNonEmpty: [OK, passed 100 tests]
  maximum via toNonEmpty: [OK, passed 100 tests]
Sum:
  foldMap1 ~= foldMap: [OK, passed 100 tests]
  toList . toNonEmpty ~= toList: [OK, passed 100 tests]
  foldl1 non/strict: [OK, passed 100 tests]
  foldr1 non/strict: [OK, passed 100 tests]
  foldlMap1 non/strict: [OK, passed 100 tests]
  foldrMap1 non/strict: [OK, passed 100 tests]
  foldMap1 default: [OK, passed 100 tests]
  foldrMap1 default: [OK, passed 100 tests]
  foldlMap1 default: [OK, passed 100 tests]
  toNonEmpty default: [OK, passed 100 tests]
  head default: [OK, passed 100 tests]
  last default: [OK, passed 100 tests]
  minimum default: [OK, passed 100 tests]
  maximum default: [OK, passed 100 tests]
  foldMap via toNonEmpty: [OK, passed 100 tests]
  foldr1 via toNonEmpty: [OK, passed 100 tests]
  foldl1 via toNonEmpty: [OK, passed 100 tests]
  foldr1' via toNonEmpty: [OK, passed 100 tests]
  foldl1' via toNonEmpty: [OK, passed 100 tests]
  head via toNonEmpty: [OK, passed 100 tests]
  last via toNonEmpty: [OK, passed 100 tests]
  minimum via toNonEmpty: [OK, passed 100 tests]
  maximum via toNonEmpty: [OK, passed 100 tests]

         Properties  Total 
 Passed  184         184   
 Failed  0           0     
 Total   184         184   
Test suite test: PASS
Test suite logged to:
/tmp/workdir-foldable1-classes-compat/foldable1-classes-compat-0.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/foldable1-classes-compat-0.1/t/test/test/foldable1-classes-compat-0.1-test.log
1 of 1 test suites (1 of 1 test cases) passed.
