Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - tasty-sugar-2.2.1.0 (test:test-params) (ephemeral targets)
Preprocessing test suite 'test-params' for tasty-sugar-2.2.1.0...
Building test suite 'test-params' for tasty-sugar-2.2.1.0...
Running 1 test suites...
Test suite test-params: RUNNING...
elf
  simple.noopt.clang.exe
    optimization not specified
      c-compiler=clang
        simple.noopt.clang.exe #1: Sweets
  { rootBaseName = "simple"
  , rootMatchName = "simple.opt-clang.exe"
  , rootFile = "examples/params/samples/simple.opt-clang.exe"
  , cubeParams =
      [ ( "optimization" , Nothing )
      , ( "c-compiler" , Just [ "gcc" , "clang" ] )
      ]
  , expected =
      [ Expectation
          { expectedFile = "examples/params/samples/simple-opt.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , Explicit "opt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , NotSpecified )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      ]
  }
Sweets
  { rootBaseName = "simple"
  , rootMatchName = "simple.opt-clang.exe"
  , rootFile = "examples/params/samples/simple.opt-clang.exe"
  , cubeParams =
      [ ( "optimization" , Nothing )
      , ( "c-compiler" , Just [ "gcc" , "clang" ] )
      ]
  , expected =
      [ Expectation
          { expectedFile = "examples/params/samples/simple-opt.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , Explicit "opt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , NotSpecified )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      ]
  }
Sweets
  { rootBaseName = "simple"
  , rootMatchName = "simple.noopt.clang.exe"
  , rootFile = "examples/params/samples/simple.noopt.clang.exe"
  , cubeParams =
      [ ( "optimization" , Nothing )
      , ( "c-compiler" , Just [ "gcc" , "clang" ] )
      ]
  , expected =
      [ Expectation
          { expectedFile = "examples/params/samples/simple-opt.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , Explicit "opt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , NotSpecified )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , Explicit "noopt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      ]
  }
Sweets
  { rootBaseName = "simple"
  , rootMatchName = "simple.noopt.clang.exe"
  , rootFile = "examples/params/samples/simple.noopt.clang.exe"
  , cubeParams =
      [ ( "optimization" , Nothing )
      , ( "c-compiler" , Just [ "gcc" , "clang" ] )
      ]
  , expected =
      [ Expectation
          { expectedFile = "examples/params/samples/simple-opt.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , Explicit "opt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , NotSpecified )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , Explicit "noopt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      ]
  }
Sweets
  { rootBaseName = "simple"
  , rootMatchName = "simple.noopt.clang.exe"
  , rootFile = "examples/params/samples/simple.noopt.clang.exe"
  , cubeParams =
      [ ( "optimization" , Nothing )
      , ( "c-compiler" , Just [ "gcc" , "clang" ] )
      ]
  , expected =
      [ Expectation
          { expectedFile = "examples/params/samples/simple-opt.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , Explicit "opt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , NotSpecified )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "clang" )
              , ( "optimization" , Explicit "noopt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      ]
  }
Sweets
  { rootBaseName = "simple"
  , rootMatchName = "simple.noopt.gcc.exe"
  , rootFile = "examples/params/samples/simple.noopt.gcc.exe"
  , cubeParams =
      [ ( "optimization" , Nothing )
      , ( "c-compiler" , Just [ "gcc" , "clang" ] )
      ]
  , expected =
      [ Expectation
          { expectedFile = "examples/params/samples/simple-opt.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "gcc" )
              , ( "optimization" , Explicit "opt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.noopt-gcc.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "gcc" )
              , ( "optimization" , NotSpecified )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.noopt-gcc.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "gcc" )
              , ( "optimization" , Explicit "noopt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      ]
  }
OK
    noopt
Sweets
  { rootBaseName = "simple"
  , rootMatchName = "simple.noopt.gcc.exe"
  , rootFile = "examples/params/samples/simple.noopt.gcc.exe"
  , cubeParams =
      [ ( "optimization" , Nothing )
      , ( "c-compiler" , Just [ "gcc" , "clang" ] )
      ]
  , expected =
      [ Expectation
          { expectedFile = "examples/params/samples/simple-opt.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "gcc" )
              , ( "optimization" , Explicit "opt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.noopt-gcc.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "gcc" )
              , ( "optimization" , NotSpecified )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.noopt-gcc.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "gcc" )
              , ( "optimization" , Explicit "noopt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      ]
  }
Sweets
  { rootBaseName = "simple"
  , rootMatchName = "simple.noopt.gcc.exe"
  , rootFile = "examples/params/samples/simple.noopt.gcc.exe"
  , cubeParams =
      [ ( "optimization" , Nothing )
      , ( "c-compiler" , Just [ "gcc" , "clang" ] )
      ]
  , expected =
      [ Expectation
          { expectedFile = "examples/params/samples/simple-opt.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "gcc" )
              , ( "optimization" , Explicit "opt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.noopt-gcc.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "gcc" )
              , ( "optimization" , NotSpecified )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      , Expectation
          { expectedFile = "examples/params/samples/simple.noopt-gcc.expct"
          , expParamsMatch =
              [ ( "c-compiler" , Explicit "gcc" )
              , ( "optimization" , Explicit "noopt" )
              ]
          , associated =
              [ ( "c-source" , "examples/params/samples/simple.c" ) ]
          }
      ]
  }
      c-compiler=clang
        simple.noopt.clang.exe #1: OK
    opt
      c-compiler=clang
        simple.noopt.clang.exe #1: OK
  simple.noopt.gcc.exe
    optimization not specified
      c-compiler=gcc
        simple.noopt.gcc.exe #1:   OK
    noopt
      c-compiler=gcc
        simple.noopt.gcc.exe #1:   OK
    opt
      c-compiler=gcc
        simple.noopt.gcc.exe #1:   OK
  simple.opt-clang.exe
    optimization not specified
      c-compiler=clang
        simple.opt-clang.exe #1:   OK
    opt
      c-compiler=clang
        simple.opt-clang.exe #1:   OK

All 8 tests passed (0.00s)
Test suite test-params: PASS
Test suite logged to:
/tmp/workdir-tasty-sugar/tasty-sugar-2.2.1.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/tasty-sugar-2.2.1.0/t/test-params/test/tasty-sugar-2.2.1.0-test-params.log
1 of 1 test suites (1 of 1 test cases) passed.
