Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - fixed-vector-hetero-0.6.1.1 (test:doctests) (ephemeral targets)
Preprocessing test suite 'doctests' for fixed-vector-hetero-0.6.1.1...
Building test suite 'doctests' for fixed-vector-hetero-0.6.1.1...
Running 1 test suites...
Test suite doctests: RUNNING...

Data/Vector/HFixed/Class.hs:98:27: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
98 | type family Fn (f :: α -> *) (as :: [α]) b where
   |                           ^

Data/Vector/HFixed/Class.hs:230:20: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
230 |   type Elems v :: [*]
    |                    ^

Data/Vector/HFixed/Class.hs:253:48: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
253 | class Arity (ElemsF v) => HVectorF (v :: (α -> *) -> *) where
    |                                                ^

Data/Vector/HFixed/Class.hs:253:54: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
253 | class Arity (ElemsF v) => HVectorF (v :: (α -> *) -> *) where
    |                                                      ^

Data/Vector/HFixed/Class.hs:373:41: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
373 | newtype ContVecF (xs :: [α]) (f :: α -> *) =
    |                                         ^

Data/Vector/HFixed/Class.hs:547:53: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
547 | class ArityPeano n => Index (n :: PeanoNum) (xs :: [*]) where
    |                                                     ^

Data/Vector/HFixed/Class.hs:549:24: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
549 |   type ValueAt n xs :: *
    |                        ^

Data/Vector/HFixed/Class.hs:551:28: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
551 |   type NewElems n xs a :: [*]
    |                            ^

Data/Vector/HFixed/Class.hs:946:22: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
946 | class GHVector (v :: * -> *) where
    |                      ^

Data/Vector/HFixed/Class.hs:946:27: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
946 | class GHVector (v :: * -> *) where
    |                           ^

Data/Vector/HFixed/Class.hs:947:21: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
947 |   type GElems v :: [*]
    |                     ^

Data/Vector/HFixed/Cont.hs:234:18: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
234 | data VecList :: [*] -> * where
    |                  ^

Data/Vector/HFixed/Cont.hs:234:24: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
234 | data VecList :: [*] -> * where
    |                        ^

Data/Vector/HFixed/Cont.hs:255:38: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
    |
255 | data VecListF (xs :: [α]) (f :: α -> *) where
    |                                      ^

Data/Vector/HFixed/HVec.hs:41:23: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
41 | newtype HVecF (xs :: [*]) (f :: * -> *) = HVecF (SmallArray Any)
   |                       ^

Data/Vector/HFixed/HVec.hs:41:33: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
41 | newtype HVecF (xs :: [*]) (f :: * -> *) = HVecF (SmallArray Any)
   |                                 ^

Data/Vector/HFixed/HVec.hs:41:38: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
41 | newtype HVecF (xs :: [*]) (f :: * -> *) = HVecF (SmallArray Any)
   |                                      ^

Data/Vector/HFixed/HVec.hs:59:21: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
59 | data T_insp (xs :: [*]) = T_insp Int (SmallArray Any)
   |                     ^

Data/Vector/HFixed/HVec.hs:60:21: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
60 | data T_con  (xs :: [*]) = T_con  Int (Box Any)
   |                     ^

Data/Vector/HFixed/HVec.hs:96:22: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.
   |
96 | newtype HVec (xs :: [*]) = HVec (HVecF xs Identity)
   |                      ^

Data/Vector/HFixed/Class.hs:98:27: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Class.hs:230:20: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Class.hs:253:48: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Class.hs:253:54: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Class.hs:305:10: warning: [GHC-36038] [-Wloopy-superclass-solve]
    I am solving the constraint ‘Arity (HomList (Peano n) a)’,
      arising from the superclasses of an instance declaration,
    in a way that might turn out to loop at runtime.
    Starting from GHC 9.10, this warning will turn into an error.
    See the user manual, § Undecidable instances and loopy superclasses.
    Suggested fix:
      Add the constraint ‘Arity
                            (HomList (Peano n) a)’ to the instance context,
      even though it seems logically implied by other constraints in the context.

Data/Vector/HFixed/Class.hs:315:10: warning: [GHC-36038] [-Wloopy-superclass-solve]
    I am solving the constraint ‘Arity (HomList (Peano n) a)’,
      arising from the superclasses of an instance declaration,
    in a way that might turn out to loop at runtime.
    Starting from GHC 9.10, this warning will turn into an error.
    See the user manual, § Undecidable instances and loopy superclasses.
    Suggested fix:
      Add the constraint ‘Arity
                            (HomList (Peano n) a)’ to the instance context,
      even though it seems logically implied by other constraints in the context.

Data/Vector/HFixed/Class.hs:326:10: warning: [GHC-36038] [-Wloopy-superclass-solve]
    I am solving the constraint ‘Arity (HomList (Peano n) a)’,
      arising from the superclasses of an instance declaration,
    in a way that might turn out to loop at runtime.
    Starting from GHC 9.10, this warning will turn into an error.
    See the user manual, § Undecidable instances and loopy superclasses.
    Suggested fix:
      Add the constraint ‘Arity
                            (HomList (Peano n) a)’ to the instance context,
      even though it seems logically implied by other constraints in the context.

Data/Vector/HFixed/Class.hs:337:10: warning: [GHC-36038] [-Wloopy-superclass-solve]
    I am solving the constraint ‘Arity (HomList (Peano n) a)’,
      arising from the superclasses of an instance declaration,
    in a way that might turn out to loop at runtime.
    Starting from GHC 9.10, this warning will turn into an error.
    See the user manual, § Undecidable instances and loopy superclasses.
    Suggested fix:
      Add the constraint ‘Arity
                            (HomList (Peano n) a)’ to the instance context,
      even though it seems logically implied by other constraints in the context.

Data/Vector/HFixed/Class.hs:373:41: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Class.hs:547:53: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Class.hs:549:24: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Class.hs:551:28: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Class.hs:946:22: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Class.hs:946:27: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Class.hs:947:21: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Cont.hs:234:18: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Cont.hs:234:24: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/Cont.hs:255:38: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/HVec.hs:41:23: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/HVec.hs:41:33: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/HVec.hs:41:38: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/HVec.hs:59:21: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/HVec.hs:60:21: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/HVec.hs:96:22: warning: [GHC-39567] [-Wstar-is-type]
    Using ‘*’ (or its Unicode variant) to mean ‘Data.Kind.Type’
    relies on the StarIsType extension, which will become
    deprecated in the future.
    Suggested fix: Use ‘Type’ from ‘Data.Kind’ instead.

Data/Vector/HFixed/HVec.hs:127:3: warning: [-Wnoncanonical-monoid-instances]
    Noncanonical ‘mappend’ definition detected
    in the instance declaration for ‘Monoid (HVec xs)’.
    ‘mappend’ will eventually be removed in favour of ‘(<>)’
    Either remove definition for ‘mappend’ (recommended) or define as ‘mappend = (<>)’
    See also: https://gitlab.haskell.org/ghc/ghc/-/wikis/proposal/semigroup-monoid
Examples: 49  Tried: 49  Errors: 0  Failures: 0
Data
Test suite doctests: PASS
Test suite logged to:
/tmp/workdir-fixed-vector-hetero/fixed-vector-hetero-0.6.1.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/fixed-vector-hetero-0.6.1.1/t/doctests/test/fixed-vector-hetero-0.6.1.1-doctests.log
1 of 1 test suites (1 of 1 test cases) passed.
