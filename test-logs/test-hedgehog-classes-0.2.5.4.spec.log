Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - hedgehog-classes-0.2.5.4 (test:spec) (ephemeral targets)
Preprocessing test suite 'spec' for hedgehog-classes-0.2.5.4...
Building test suite 'spec' for hedgehog-classes-0.2.5.4...
Running 1 test suites...
Test suite spec: RUNNING...

Testing properties for common typeclasses...

---------
-- Int --
---------

Bits: Conjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Disjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Double Complement   ✓ <interactive> passed 100 tests.
Bits: Set Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Bit   ✓ <interactive> passed 100 tests.
Bits: Complement Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Zero   ✓ <interactive> passed 100 tests.
Bits: Set Zero   ✓ <interactive> passed 100 tests.
Bits: Test Zero   ✓ <interactive> passed 100 tests.
Bits: Pop Zero   ✓ <interactive> passed 100 tests.
Bits: Count Leading Zeros of Zero   ✓ <interactive> passed 100 tests.
Bits: Count Trailing Zeros of Zero   ✓ <interactive> passed 100 tests.

----------
-- Int8 --
----------

Bits: Conjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Disjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Double Complement   ✓ <interactive> passed 100 tests.
Bits: Set Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Bit   ✓ <interactive> passed 100 tests.
Bits: Complement Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Zero   ✓ <interactive> passed 100 tests.
Bits: Set Zero   ✓ <interactive> passed 100 tests.
Bits: Test Zero   ✓ <interactive> passed 100 tests.
Bits: Pop Zero   ✓ <interactive> passed 100 tests.
Bits: Count Leading Zeros of Zero   ✓ <interactive> passed 100 tests.
Bits: Count Trailing Zeros of Zero   ✓ <interactive> passed 100 tests.

-----------
-- Int16 --
-----------

Bits: Conjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Disjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Double Complement   ✓ <interactive> passed 100 tests.
Bits: Set Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Bit   ✓ <interactive> passed 100 tests.
Bits: Complement Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Zero   ✓ <interactive> passed 100 tests.
Bits: Set Zero   ✓ <interactive> passed 100 tests.
Bits: Test Zero   ✓ <interactive> passed 100 tests.
Bits: Pop Zero   ✓ <interactive> passed 100 tests.
Bits: Count Leading Zeros of Zero   ✓ <interactive> passed 100 tests.
Bits: Count Trailing Zeros of Zero   ✓ <interactive> passed 100 tests.

-----------
-- Int32 --
-----------

Bits: Conjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Disjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Double Complement   ✓ <interactive> passed 100 tests.
Bits: Set Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Bit   ✓ <interactive> passed 100 tests.
Bits: Complement Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Zero   ✓ <interactive> passed 100 tests.
Bits: Set Zero   ✓ <interactive> passed 100 tests.
Bits: Test Zero   ✓ <interactive> passed 100 tests.
Bits: Pop Zero   ✓ <interactive> passed 100 tests.
Bits: Count Leading Zeros of Zero   ✓ <interactive> passed 100 tests.
Bits: Count Trailing Zeros of Zero   ✓ <interactive> passed 100 tests.

-----------
-- Int64 --
-----------

Bits: Conjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Disjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Double Complement   ✓ <interactive> passed 100 tests.
Bits: Set Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Bit   ✓ <interactive> passed 100 tests.
Bits: Complement Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Zero   ✓ <interactive> passed 100 tests.
Bits: Set Zero   ✓ <interactive> passed 100 tests.
Bits: Test Zero   ✓ <interactive> passed 100 tests.
Bits: Pop Zero   ✓ <interactive> passed 100 tests.
Bits: Count Leading Zeros of Zero   ✓ <interactive> passed 100 tests.
Bits: Count Trailing Zeros of Zero   ✓ <interactive> passed 100 tests.

----------
-- Word --
----------

Bits: Conjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Disjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Double Complement   ✓ <interactive> passed 100 tests.
Bits: Set Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Bit   ✓ <interactive> passed 100 tests.
Bits: Complement Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Zero   ✓ <interactive> passed 100 tests.
Bits: Set Zero   ✓ <interactive> passed 100 tests.
Bits: Test Zero   ✓ <interactive> passed 100 tests.
Bits: Pop Zero   ✓ <interactive> passed 100 tests.
Bits: Count Leading Zeros of Zero   ✓ <interactive> passed 100 tests.
Bits: Count Trailing Zeros of Zero   ✓ <interactive> passed 100 tests.

-----------
-- Word8 --
-----------

Bits: Conjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Disjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Double Complement   ✓ <interactive> passed 100 tests.
Bits: Set Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Bit   ✓ <interactive> passed 100 tests.
Bits: Complement Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Zero   ✓ <interactive> passed 100 tests.
Bits: Set Zero   ✓ <interactive> passed 100 tests.
Bits: Test Zero   ✓ <interactive> passed 100 tests.
Bits: Pop Zero   ✓ <interactive> passed 100 tests.
Bits: Count Leading Zeros of Zero   ✓ <interactive> passed 100 tests.
Bits: Count Trailing Zeros of Zero   ✓ <interactive> passed 100 tests.

------------
-- Word16 --
------------

Bits: Conjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Disjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Double Complement   ✓ <interactive> passed 100 tests.
Bits: Set Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Bit   ✓ <interactive> passed 100 tests.
Bits: Complement Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Zero   ✓ <interactive> passed 100 tests.
Bits: Set Zero   ✓ <interactive> passed 100 tests.
Bits: Test Zero   ✓ <interactive> passed 100 tests.
Bits: Pop Zero   ✓ <interactive> passed 100 tests.
Bits: Count Leading Zeros of Zero   ✓ <interactive> passed 100 tests.
Bits: Count Trailing Zeros of Zero   ✓ <interactive> passed 100 tests.

------------
-- Word32 --
------------

Bits: Conjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Disjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Double Complement   ✓ <interactive> passed 100 tests.
Bits: Set Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Bit   ✓ <interactive> passed 100 tests.
Bits: Complement Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Zero   ✓ <interactive> passed 100 tests.
Bits: Set Zero   ✓ <interactive> passed 100 tests.
Bits: Test Zero   ✓ <interactive> passed 100 tests.
Bits: Pop Zero   ✓ <interactive> passed 100 tests.
Bits: Count Leading Zeros of Zero   ✓ <interactive> passed 100 tests.
Bits: Count Trailing Zeros of Zero   ✓ <interactive> passed 100 tests.

------------
-- Word64 --
------------

Bits: Conjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Disjunction Idempotence   ✓ <interactive> passed 100 tests.
Bits: Double Complement   ✓ <interactive> passed 100 tests.
Bits: Set Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Bit   ✓ <interactive> passed 100 tests.
Bits: Complement Bit   ✓ <interactive> passed 100 tests.
Bits: Clear Zero   ✓ <interactive> passed 100 tests.
Bits: Set Zero   ✓ <interactive> passed 100 tests.
Bits: Test Zero   ✓ <interactive> passed 100 tests.
Bits: Pop Zero   ✓ <interactive> passed 100 tests.
Bits: Count Leading Zeros of Zero   ✓ <interactive> passed 100 tests.
Bits: Count Trailing Zeros of Zero   ✓ <interactive> passed 100 tests.

-------------
-- Integer --
-------------

Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

-------------
-- Natural --
-------------

Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

-------
-- E --
-------

Bounded Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Bounded Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

---------
-- Int --
---------

Bounded Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Bounded Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

----------
-- Int8 --
----------

Bounded Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Bounded Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

-----------
-- Int16 --
-----------

Bounded Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Bounded Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

-----------
-- Int32 --
-----------

Bounded Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Bounded Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

-----------
-- Int64 --
-----------

Bounded Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Bounded Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

----------
-- Word --
----------

Bounded Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Bounded Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

-----------
-- Word8 --
-----------

Bounded Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Bounded Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

------------
-- Word16 --
------------

Bounded Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Bounded Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

------------
-- Word32 --
------------

Bounded Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Bounded Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

------------
-- Word64 --
------------

Bounded Enum: Succ Pred Identity   ✓ <interactive> passed 100 tests.
Bounded Enum: Pred Succ Identity   ✓ <interactive> passed 100 tests.

------------
-- Person --
------------

Binary: Partial Isomorphism   ✓ <interactive> passed 100 tests.

---------
-- Int --
---------

Eq: Transitive   ✓ <interactive> passed 100 tests.
Eq: Symmetric   ✓ <interactive> passed 100 tests.
Eq: Reflexive   ✓ <interactive> passed 100 tests.
Eq: Negation   ✓ <interactive> passed 100 tests.

----------
-- Int8 --
----------

Eq: Transitive   ✓ <interactive> passed 100 tests.
Eq: Symmetric   ✓ <interactive> passed 100 tests.
Eq: Reflexive   ✓ <interactive> passed 100 tests.
Eq: Negation   ✓ <interactive> passed 100 tests.

-----------
-- Int16 --
-----------

Eq: Transitive   ✓ <interactive> passed 100 tests.
Eq: Symmetric   ✓ <interactive> passed 100 tests.
Eq: Reflexive   ✓ <interactive> passed 100 tests.
Eq: Negation   ✓ <interactive> passed 100 tests.

-----------
-- Int32 --
-----------

Eq: Transitive   ✓ <interactive> passed 100 tests.
Eq: Symmetric   ✓ <interactive> passed 100 tests.
Eq: Reflexive   ✓ <interactive> passed 100 tests.
Eq: Negation   ✓ <interactive> passed 100 tests.

-----------
-- Int64 --
-----------

Eq: Transitive   ✓ <interactive> passed 100 tests.
Eq: Symmetric   ✓ <interactive> passed 100 tests.
Eq: Reflexive   ✓ <interactive> passed 100 tests.
Eq: Negation   ✓ <interactive> passed 100 tests.

----------
-- Word --
----------

Eq: Transitive   ✓ <interactive> passed 100 tests.
Eq: Symmetric   ✓ <interactive> passed 100 tests.
Eq: Reflexive   ✓ <interactive> passed 100 tests.
Eq: Negation   ✓ <interactive> passed 100 tests.

-----------
-- Word8 --
-----------

Eq: Transitive   ✓ <interactive> passed 100 tests.
Eq: Symmetric   ✓ <interactive> passed 100 tests.
Eq: Reflexive   ✓ <interactive> passed 100 tests.
Eq: Negation   ✓ <interactive> passed 100 tests.

------------
-- Word16 --
------------

Eq: Transitive   ✓ <interactive> passed 100 tests.
Eq: Symmetric   ✓ <interactive> passed 100 tests.
Eq: Reflexive   ✓ <interactive> passed 100 tests.
Eq: Negation   ✓ <interactive> passed 100 tests.

------------
-- Word32 --
------------

Eq: Transitive   ✓ <interactive> passed 100 tests.
Eq: Symmetric   ✓ <interactive> passed 100 tests.
Eq: Reflexive   ✓ <interactive> passed 100 tests.
Eq: Negation   ✓ <interactive> passed 100 tests.

------------
-- Word64 --
------------

Eq: Transitive   ✓ <interactive> passed 100 tests.
Eq: Symmetric   ✓ <interactive> passed 100 tests.
Eq: Reflexive   ✓ <interactive> passed 100 tests.
Eq: Negation   ✓ <interactive> passed 100 tests.

-------
-- E --
-------

Generic: From-To inverse   ✓ <interactive> passed 100 tests.
Generic: To-From inverse   ✓ <interactive> passed 100 tests.

----------
-- Bool --
----------

Generic: From-To inverse   ✓ <interactive> passed 100 tests.
Generic: To-From inverse   ✓ <interactive> passed 100 tests.

----------------
-- Maybe Bool --
----------------

Generic: From-To inverse   ✓ <interactive> passed 100 tests.
Generic: To-From inverse   ✓ <interactive> passed 100 tests.

---------
-- Int --
---------

Integral: Quotient Remainder   ✓ <interactive> passed 100 tests.
Integral: Division Modulus   ✓ <interactive> passed 100 tests.
Integral: Integer Roundtrip   ✓ <interactive> passed 100 tests.

----------
-- Int8 --
----------

Integral: Quotient Remainder   ✓ <interactive> passed 100 tests.
Integral: Division Modulus   ✓ <interactive> passed 100 tests.
Integral: Integer Roundtrip   ✓ <interactive> passed 100 tests.

-----------
-- Int16 --
-----------

Integral: Quotient Remainder   ✓ <interactive> passed 100 tests.
Integral: Division Modulus   ✓ <interactive> passed 100 tests.
Integral: Integer Roundtrip   ✓ <interactive> passed 100 tests.

-----------
-- Int32 --
-----------

Integral: Quotient Remainder   ✓ <interactive> passed 100 tests.
Integral: Division Modulus   ✓ <interactive> passed 100 tests.
Integral: Integer Roundtrip   ✓ <interactive> passed 100 tests.

-----------
-- Int64 --
-----------

Integral: Quotient Remainder   ✓ <interactive> passed 100 tests.
Integral: Division Modulus   ✓ <interactive> passed 100 tests.
Integral: Integer Roundtrip   ✓ <interactive> passed 100 tests.

----------
-- Word --
----------

Integral: Quotient Remainder   ✓ <interactive> passed 100 tests.
Integral: Division Modulus   ✓ <interactive> passed 100 tests.
Integral: Integer Roundtrip   ✓ <interactive> passed 100 tests.

-----------
-- Word8 --
-----------

Integral: Quotient Remainder   ✓ <interactive> passed 100 tests.
Integral: Division Modulus   ✓ <interactive> passed 100 tests.
Integral: Integer Roundtrip   ✓ <interactive> passed 100 tests.

------------
-- Word16 --
------------

Integral: Quotient Remainder   ✓ <interactive> passed 100 tests.
Integral: Division Modulus   ✓ <interactive> passed 100 tests.
Integral: Integer Roundtrip   ✓ <interactive> passed 100 tests.

------------
-- Word32 --
------------

Integral: Quotient Remainder   ✓ <interactive> passed 100 tests.
Integral: Division Modulus   ✓ <interactive> passed 100 tests.
Integral: Integer Roundtrip   ✓ <interactive> passed 100 tests.

------------
-- Word64 --
------------

Integral: Quotient Remainder   ✓ <interactive> passed 100 tests.
Integral: Division Modulus   ✓ <interactive> passed 100 tests.
Integral: Integer Roundtrip   ✓ <interactive> passed 100 tests.

------------
-- Person --
------------

ToJSON/FromJSON: Partial Isomorphism   ✓ <interactive> passed 100 tests.
ToJSON/FromJSON: Encoding equals value   ✓ <interactive> passed 100 tests.

-----------------
-- Sum Integer --
-----------------

Monoid: Left Identity   ✓ <interactive> passed 100 tests.
Monoid: Right Identity   ✓ <interactive> passed 100 tests.
Monoid: Associativity   ✓ <interactive> passed 100 tests.
Monoid: Concatenation   ✓ <interactive> passed 100 tests.

---------------------
-- Product Integer --
---------------------

Monoid: Left Identity   ✓ <interactive> passed 100 tests.
Monoid: Right Identity   ✓ <interactive> passed 100 tests.
Monoid: Associativity   ✓ <interactive> passed 100 tests.
Monoid: Concatenation   ✓ <interactive> passed 100 tests.

-------------------
-- Maybe Integer --
-------------------

Monoid: Left Identity   ✓ <interactive> passed 100 tests.
Monoid: Right Identity   ✓ <interactive> passed 100 tests.
Monoid: Associativity   ✓ <interactive> passed 100 tests.
Monoid: Concatenation   ✓ <interactive> passed 100 tests.

----------------------
-- Ap Maybe Integer --
----------------------

Monoid: Left Identity   ✓ <interactive> passed 100 tests.
Monoid: Right Identity   ✓ <interactive> passed 100 tests.
Monoid: Associativity   ✓ <interactive> passed 100 tests.
Monoid: Concatenation   ✓ <interactive> passed 100 tests.

-----------------
-- Sum Integer --
-----------------

Commutative Monoid: Commutativity   ✓ <interactive> passed 100 tests.

---------------------
-- Product Integer --
---------------------

Commutative Monoid: Commutativity   ✓ <interactive> passed 100 tests.

-------------------
-- Maybe Integer --
-------------------

Commutative Monoid: Commutativity   ✓ <interactive> passed 100 tests.

---------
-- Int --
---------

Ord: Antisymmetry   ✓ <interactive> passed 100 tests.
Ord: Transitivity   ✓ <interactive> passed 100 tests.
Ord: Reflexivity   ✓ <interactive> passed 100 tests.
Ord: Totality   ✓ <interactive> passed 100 tests.

----------
-- Int8 --
----------

Ord: Antisymmetry   ✓ <interactive> passed 100 tests.
Ord: Transitivity   ✓ <interactive> passed 100 tests.
Ord: Reflexivity   ✓ <interactive> passed 100 tests.
Ord: Totality   ✓ <interactive> passed 100 tests.

-----------
-- Int16 --
-----------

Ord: Antisymmetry   ✓ <interactive> passed 100 tests.
Ord: Transitivity   ✓ <interactive> passed 100 tests.
Ord: Reflexivity   ✓ <interactive> passed 100 tests.
Ord: Totality   ✓ <interactive> passed 100 tests.

-----------
-- Int32 --
-----------

Ord: Antisymmetry   ✓ <interactive> passed 100 tests.
Ord: Transitivity   ✓ <interactive> passed 100 tests.
Ord: Reflexivity   ✓ <interactive> passed 100 tests.
Ord: Totality   ✓ <interactive> passed 100 tests.

-----------
-- Int64 --
-----------

Ord: Antisymmetry   ✓ <interactive> passed 100 tests.
Ord: Transitivity   ✓ <interactive> passed 100 tests.
Ord: Reflexivity   ✓ <interactive> passed 100 tests.
Ord: Totality   ✓ <interactive> passed 100 tests.

----------
-- Word --
----------

Ord: Antisymmetry   ✓ <interactive> passed 100 tests.
Ord: Transitivity   ✓ <interactive> passed 100 tests.
Ord: Reflexivity   ✓ <interactive> passed 100 tests.
Ord: Totality   ✓ <interactive> passed 100 tests.

-----------
-- Word8 --
-----------

Ord: Antisymmetry   ✓ <interactive> passed 100 tests.
Ord: Transitivity   ✓ <interactive> passed 100 tests.
Ord: Reflexivity   ✓ <interactive> passed 100 tests.
Ord: Totality   ✓ <interactive> passed 100 tests.

------------
-- Word16 --
------------

Ord: Antisymmetry   ✓ <interactive> passed 100 tests.
Ord: Transitivity   ✓ <interactive> passed 100 tests.
Ord: Reflexivity   ✓ <interactive> passed 100 tests.
Ord: Totality   ✓ <interactive> passed 100 tests.

------------
-- Word32 --
------------

Ord: Antisymmetry   ✓ <interactive> passed 100 tests.
Ord: Transitivity   ✓ <interactive> passed 100 tests.
Ord: Reflexivity   ✓ <interactive> passed 100 tests.
Ord: Totality   ✓ <interactive> passed 100 tests.

------------
-- Word64 --
------------

Ord: Antisymmetry   ✓ <interactive> passed 100 tests.
Ord: Transitivity   ✓ <interactive> passed 100 tests.
Ord: Reflexivity   ✓ <interactive> passed 100 tests.
Ord: Totality   ✓ <interactive> passed 100 tests.

-------------
-- Natural --
-------------

Ord: Antisymmetry   ✓ <interactive> passed 100 tests.
Ord: Transitivity   ✓ <interactive> passed 100 tests.
Ord: Reflexivity   ✓ <interactive> passed 100 tests.
Ord: Totality   ✓ <interactive> passed 100 tests.

----------
-- Pair --
----------

Ord: Antisymmetry   ✓ <interactive> passed 100 tests.
Ord: Transitivity   ✓ <interactive> passed 100 tests.
Ord: Reflexivity   ✓ <interactive> passed 100 tests.
Ord: Totality   ✓ <interactive> passed 100 tests.

---------
-- Int --
---------

Prim: ByteArray Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set Range   ✓ <interactive> passed 100 tests.
Prim: ByteArray List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: Addr Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: Addr Set Range   ✓ <interactive> passed 100 tests.
Prim: Addr List Conversion Roundtrips   ✓ <interactive> passed 100 tests.

----------
-- Int8 --
----------

Prim: ByteArray Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set Range   ✓ <interactive> passed 100 tests.
Prim: ByteArray List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: Addr Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: Addr Set Range   ✓ <interactive> passed 100 tests.
Prim: Addr List Conversion Roundtrips   ✓ <interactive> passed 100 tests.

-----------
-- Int16 --
-----------

Prim: ByteArray Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set Range   ✓ <interactive> passed 100 tests.
Prim: ByteArray List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: Addr Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: Addr Set Range   ✓ <interactive> passed 100 tests.
Prim: Addr List Conversion Roundtrips   ✓ <interactive> passed 100 tests.

-----------
-- Int32 --
-----------

Prim: ByteArray Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set Range   ✓ <interactive> passed 100 tests.
Prim: ByteArray List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: Addr Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: Addr Set Range   ✓ <interactive> passed 100 tests.
Prim: Addr List Conversion Roundtrips   ✓ <interactive> passed 100 tests.

-----------
-- Int64 --
-----------

Prim: ByteArray Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set Range   ✓ <interactive> passed 100 tests.
Prim: ByteArray List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: Addr Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: Addr Set Range   ✓ <interactive> passed 100 tests.
Prim: Addr List Conversion Roundtrips   ✓ <interactive> passed 100 tests.

----------
-- Word --
----------

Prim: ByteArray Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set Range   ✓ <interactive> passed 100 tests.
Prim: ByteArray List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: Addr Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: Addr Set Range   ✓ <interactive> passed 100 tests.
Prim: Addr List Conversion Roundtrips   ✓ <interactive> passed 100 tests.

-----------
-- Word8 --
-----------

Prim: ByteArray Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set Range   ✓ <interactive> passed 100 tests.
Prim: ByteArray List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: Addr Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: Addr Set Range   ✓ <interactive> passed 100 tests.
Prim: Addr List Conversion Roundtrips   ✓ <interactive> passed 100 tests.

------------
-- Word16 --
------------

Prim: ByteArray Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set Range   ✓ <interactive> passed 100 tests.
Prim: ByteArray List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: Addr Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: Addr Set Range   ✓ <interactive> passed 100 tests.
Prim: Addr List Conversion Roundtrips   ✓ <interactive> passed 100 tests.

------------
-- Word32 --
------------

Prim: ByteArray Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set Range   ✓ <interactive> passed 100 tests.
Prim: ByteArray List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: Addr Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: Addr Set Range   ✓ <interactive> passed 100 tests.
Prim: Addr List Conversion Roundtrips   ✓ <interactive> passed 100 tests.

------------
-- Word64 --
------------

Prim: ByteArray Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: ByteArray Set Range   ✓ <interactive> passed 100 tests.
Prim: ByteArray List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Prim: Addr Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Prim: Addr Set-Set (putting twice is the same as putting once)   ✓ <interactive> passed 100 tests.
Prim: Addr Set Range   ✓ <interactive> passed 100 tests.
Prim: Addr List Conversion Roundtrips   ✓ <interactive> passed 100 tests.

----------
-- Last --
----------

Semigroup: Associativity   ✓ <interactive> passed 100 tests.
Semigroup: Concatenation   ✓ <interactive> passed 100 tests.
Semigroup: Times   ✓ <interactive> passed 100 tests.

-----------
-- Maybe --
-----------

Semigroup: Associativity   ✓ <interactive> passed 100 tests.
Semigroup: Concatenation   ✓ <interactive> passed 100 tests.
Semigroup: Times   ✓ <interactive> passed 100 tests.

-----------
-- Maybe --
-----------

Commutative Semigroup: Commutative   ✓ <interactive> passed 100 tests.

----------
-- Last --
----------

Exponential Semigroup: Exponential   ✓ <interactive> passed 100 tests.

-----------
-- Maybe --
-----------

Exponential Semigroup: Exponential   ✓ <interactive> passed 100 tests.

----------
-- Last --
----------

Idempotent Semigroup: Idempotent   ✓ <interactive> passed 100 tests.

----------
-- Last --
----------

Rectangular Band Semigroup: Rectangular Band   ✓ <interactive> passed 100 tests.

----------
-- Bool --
----------

Semiring: Additive Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Associativity   ✓ <interactive> passed 100 tests.
Semiring: Additive Commutativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Associativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Left-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Right-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Annihilation   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Annihilation   ✓ <interactive> passed 100 tests.

---------
-- Int --
---------

Semiring: Additive Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Associativity   ✓ <interactive> passed 100 tests.
Semiring: Additive Commutativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Associativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Left-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Right-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Annihilation   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Annihilation   ✓ <interactive> passed 100 tests.

----------
-- Int8 --
----------

Semiring: Additive Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Associativity   ✓ <interactive> passed 100 tests.
Semiring: Additive Commutativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Associativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Left-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Right-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Annihilation   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Annihilation   ✓ <interactive> passed 100 tests.

-----------
-- Int16 --
-----------

Semiring: Additive Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Associativity   ✓ <interactive> passed 100 tests.
Semiring: Additive Commutativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Associativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Left-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Right-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Annihilation   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Annihilation   ✓ <interactive> passed 100 tests.

-----------
-- Int32 --
-----------

Semiring: Additive Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Associativity   ✓ <interactive> passed 100 tests.
Semiring: Additive Commutativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Associativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Left-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Right-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Annihilation   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Annihilation   ✓ <interactive> passed 100 tests.

-----------
-- Int64 --
-----------

Semiring: Additive Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Associativity   ✓ <interactive> passed 100 tests.
Semiring: Additive Commutativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Associativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Left-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Right-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Annihilation   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Annihilation   ✓ <interactive> passed 100 tests.

----------
-- Word --
----------

Semiring: Additive Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Associativity   ✓ <interactive> passed 100 tests.
Semiring: Additive Commutativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Associativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Left-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Right-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Annihilation   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Annihilation   ✓ <interactive> passed 100 tests.

-----------
-- Word8 --
-----------

Semiring: Additive Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Associativity   ✓ <interactive> passed 100 tests.
Semiring: Additive Commutativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Associativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Left-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Right-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Annihilation   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Annihilation   ✓ <interactive> passed 100 tests.

------------
-- Word16 --
------------

Semiring: Additive Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Associativity   ✓ <interactive> passed 100 tests.
Semiring: Additive Commutativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Associativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Left-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Right-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Annihilation   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Annihilation   ✓ <interactive> passed 100 tests.

------------
-- Word32 --
------------

Semiring: Additive Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Associativity   ✓ <interactive> passed 100 tests.
Semiring: Additive Commutativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Associativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Left-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Right-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Annihilation   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Annihilation   ✓ <interactive> passed 100 tests.

------------
-- Word64 --
------------

Semiring: Additive Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Additive Associativity   ✓ <interactive> passed 100 tests.
Semiring: Additive Commutativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Identity   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Associativity   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Left-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplication Right-Distributes Over Addition   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Left Annihilation   ✓ <interactive> passed 100 tests.
Semiring: Multiplicative Right Annihilation   ✓ <interactive> passed 100 tests.

---------
-- Int --
---------

Ring: Additive Inverse   ✓ <interactive> passed 100 tests.

----------
-- Int8 --
----------

Ring: Additive Inverse   ✓ <interactive> passed 100 tests.

-----------
-- Int16 --
-----------

Ring: Additive Inverse   ✓ <interactive> passed 100 tests.

-----------
-- Int32 --
-----------

Ring: Additive Inverse   ✓ <interactive> passed 100 tests.

-----------
-- Int64 --
-----------

Ring: Additive Inverse   ✓ <interactive> passed 100 tests.

----------
-- Word --
----------

Ring: Additive Inverse   ✓ <interactive> passed 100 tests.

-----------
-- Word8 --
-----------

Ring: Additive Inverse   ✓ <interactive> passed 100 tests.

------------
-- Word16 --
------------

Ring: Additive Inverse   ✓ <interactive> passed 100 tests.

------------
-- Word32 --
------------

Ring: Additive Inverse   ✓ <interactive> passed 100 tests.

------------
-- Word64 --
------------

Ring: Additive Inverse   ✓ <interactive> passed 100 tests.

----------
-- Bool --
----------

Star: Asteration   ✓ <interactive> passed 100 tests.
Star: APlus   ✓ <interactive> passed 100 tests.

-------
-- E --
-------

Show: ShowsPrec Zero   ✓ <interactive> passed 100 tests.
Show: Equivariance: showsPrec   ✓ <interactive> passed 100 tests.
Show: Equivariance: showList   ✓ <interactive> passed 100 tests.

---------
-- Int --
---------

Show: ShowsPrec Zero   ✓ <interactive> passed 100 tests.
Show: Equivariance: showsPrec   ✓ <interactive> passed 100 tests.
Show: Equivariance: showList   ✓ <interactive> passed 100 tests.

----------
-- Int8 --
----------

Show: ShowsPrec Zero   ✓ <interactive> passed 100 tests.
Show: Equivariance: showsPrec   ✓ <interactive> passed 100 tests.
Show: Equivariance: showList   ✓ <interactive> passed 100 tests.

-----------
-- Int16 --
-----------

Show: ShowsPrec Zero   ✓ <interactive> passed 100 tests.
Show: Equivariance: showsPrec   ✓ <interactive> passed 100 tests.
Show: Equivariance: showList   ✓ <interactive> passed 100 tests.

-----------
-- Int32 --
-----------

Show: ShowsPrec Zero   ✓ <interactive> passed 100 tests.
Show: Equivariance: showsPrec   ✓ <interactive> passed 100 tests.
Show: Equivariance: showList   ✓ <interactive> passed 100 tests.

-----------
-- Int64 --
-----------

Show: ShowsPrec Zero   ✓ <interactive> passed 100 tests.
Show: Equivariance: showsPrec   ✓ <interactive> passed 100 tests.
Show: Equivariance: showList   ✓ <interactive> passed 100 tests.

----------
-- Word --
----------

Show: ShowsPrec Zero   ✓ <interactive> passed 100 tests.
Show: Equivariance: showsPrec   ✓ <interactive> passed 100 tests.
Show: Equivariance: showList   ✓ <interactive> passed 100 tests.

-----------
-- Word8 --
-----------

Show: ShowsPrec Zero   ✓ <interactive> passed 100 tests.
Show: Equivariance: showsPrec   ✓ <interactive> passed 100 tests.
Show: Equivariance: showList   ✓ <interactive> passed 100 tests.

------------
-- Word16 --
------------

Show: ShowsPrec Zero   ✓ <interactive> passed 100 tests.
Show: Equivariance: showsPrec   ✓ <interactive> passed 100 tests.
Show: Equivariance: showList   ✓ <interactive> passed 100 tests.

------------
-- Word32 --
------------

Show: ShowsPrec Zero   ✓ <interactive> passed 100 tests.
Show: Equivariance: showsPrec   ✓ <interactive> passed 100 tests.
Show: Equivariance: showList   ✓ <interactive> passed 100 tests.

------------
-- Word64 --
------------

Show: ShowsPrec Zero   ✓ <interactive> passed 100 tests.
Show: Equivariance: showsPrec   ✓ <interactive> passed 100 tests.
Show: Equivariance: showList   ✓ <interactive> passed 100 tests.

-------
-- E --
-------

Show/Read: Partial Isomorphism: show/read   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: show/read with initial space   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showsPrec/readsPrec   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showList/readList   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showListWith shows/readListDefault   ✓ <interactive> passed 100 tests.

---------
-- Int --
---------

Show/Read: Partial Isomorphism: show/read   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: show/read with initial space   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showsPrec/readsPrec   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showList/readList   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showListWith shows/readListDefault   ✓ <interactive> passed 100 tests.

----------
-- Int8 --
----------

Show/Read: Partial Isomorphism: show/read   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: show/read with initial space   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showsPrec/readsPrec   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showList/readList   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showListWith shows/readListDefault   ✓ <interactive> passed 100 tests.

-----------
-- Int16 --
-----------

Show/Read: Partial Isomorphism: show/read   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: show/read with initial space   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showsPrec/readsPrec   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showList/readList   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showListWith shows/readListDefault   ✓ <interactive> passed 100 tests.

-----------
-- Int32 --
-----------

Show/Read: Partial Isomorphism: show/read   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: show/read with initial space   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showsPrec/readsPrec   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showList/readList   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showListWith shows/readListDefault   ✓ <interactive> passed 100 tests.

-----------
-- Int64 --
-----------

Show/Read: Partial Isomorphism: show/read   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: show/read with initial space   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showsPrec/readsPrec   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showList/readList   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showListWith shows/readListDefault   ✓ <interactive> passed 100 tests.

----------
-- Word --
----------

Show/Read: Partial Isomorphism: show/read   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: show/read with initial space   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showsPrec/readsPrec   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showList/readList   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showListWith shows/readListDefault   ✓ <interactive> passed 100 tests.

-----------
-- Word8 --
-----------

Show/Read: Partial Isomorphism: show/read   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: show/read with initial space   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showsPrec/readsPrec   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showList/readList   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showListWith shows/readListDefault   ✓ <interactive> passed 100 tests.

------------
-- Word16 --
------------

Show/Read: Partial Isomorphism: show/read   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: show/read with initial space   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showsPrec/readsPrec   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showList/readList   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showListWith shows/readListDefault   ✓ <interactive> passed 100 tests.

------------
-- Word32 --
------------

Show/Read: Partial Isomorphism: show/read   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: show/read with initial space   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showsPrec/readsPrec   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showList/readList   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showListWith shows/readListDefault   ✓ <interactive> passed 100 tests.

------------
-- Word64 --
------------

Show/Read: Partial Isomorphism: show/read   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: show/read with initial space   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showsPrec/readsPrec   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showList/readList   ✓ <interactive> passed 100 tests.
Show/Read: Partial Isomorphism: showListWith shows/readListDefault   ✓ <interactive> passed 100 tests.

---------
-- Int --
---------

Storable: Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Storable: Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Storable: List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Storable: peekElemOff a i ≡ peek (plusPtr a (i * sizeOf undefined))   ✓ <interactive> passed 100 tests.
Storable: pokeElemOff a i x ≡ poke (plusPtr a (i * sizeOf undefined)) x ≡ id    ✓ <interactive> passed 100 tests.
Storable: peekByteOff a i ≡ peek (plusPtr a i)   ✓ <interactive> passed 100 tests.
Storable: pokeByteOff a i x ≡ poke (plusPtr a i) x ≡ id    ✓ <interactive> passed 100 tests.

----------
-- Int8 --
----------

Storable: Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Storable: Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Storable: List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Storable: peekElemOff a i ≡ peek (plusPtr a (i * sizeOf undefined))   ✓ <interactive> passed 100 tests.
Storable: pokeElemOff a i x ≡ poke (plusPtr a (i * sizeOf undefined)) x ≡ id    ✓ <interactive> passed 100 tests.
Storable: peekByteOff a i ≡ peek (plusPtr a i)   ✓ <interactive> passed 100 tests.
Storable: pokeByteOff a i x ≡ poke (plusPtr a i) x ≡ id    ✓ <interactive> passed 100 tests.

-----------
-- Int16 --
-----------

Storable: Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Storable: Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Storable: List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Storable: peekElemOff a i ≡ peek (plusPtr a (i * sizeOf undefined))   ✓ <interactive> passed 100 tests.
Storable: pokeElemOff a i x ≡ poke (plusPtr a (i * sizeOf undefined)) x ≡ id    ✓ <interactive> passed 100 tests.
Storable: peekByteOff a i ≡ peek (plusPtr a i)   ✓ <interactive> passed 100 tests.
Storable: pokeByteOff a i x ≡ poke (plusPtr a i) x ≡ id    ✓ <interactive> passed 100 tests.

-----------
-- Int32 --
-----------

Storable: Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Storable: Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Storable: List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Storable: peekElemOff a i ≡ peek (plusPtr a (i * sizeOf undefined))   ✓ <interactive> passed 100 tests.
Storable: pokeElemOff a i x ≡ poke (plusPtr a (i * sizeOf undefined)) x ≡ id    ✓ <interactive> passed 100 tests.
Storable: peekByteOff a i ≡ peek (plusPtr a i)   ✓ <interactive> passed 100 tests.
Storable: pokeByteOff a i x ≡ poke (plusPtr a i) x ≡ id    ✓ <interactive> passed 100 tests.

-----------
-- Int64 --
-----------

Storable: Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Storable: Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Storable: List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Storable: peekElemOff a i ≡ peek (plusPtr a (i * sizeOf undefined))   ✓ <interactive> passed 100 tests.
Storable: pokeElemOff a i x ≡ poke (plusPtr a (i * sizeOf undefined)) x ≡ id    ✓ <interactive> passed 100 tests.
Storable: peekByteOff a i ≡ peek (plusPtr a i)   ✓ <interactive> passed 100 tests.
Storable: pokeByteOff a i x ≡ poke (plusPtr a i) x ≡ id    ✓ <interactive> passed 100 tests.

----------
-- Word --
----------

Storable: Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Storable: Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Storable: List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Storable: peekElemOff a i ≡ peek (plusPtr a (i * sizeOf undefined))   ✓ <interactive> passed 100 tests.
Storable: pokeElemOff a i x ≡ poke (plusPtr a (i * sizeOf undefined)) x ≡ id    ✓ <interactive> passed 100 tests.
Storable: peekByteOff a i ≡ peek (plusPtr a i)   ✓ <interactive> passed 100 tests.
Storable: pokeByteOff a i x ≡ poke (plusPtr a i) x ≡ id    ✓ <interactive> passed 100 tests.

-----------
-- Word8 --
-----------

Storable: Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Storable: Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Storable: List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Storable: peekElemOff a i ≡ peek (plusPtr a (i * sizeOf undefined))   ✓ <interactive> passed 100 tests.
Storable: pokeElemOff a i x ≡ poke (plusPtr a (i * sizeOf undefined)) x ≡ id    ✓ <interactive> passed 100 tests.
Storable: peekByteOff a i ≡ peek (plusPtr a i)   ✓ <interactive> passed 100 tests.
Storable: pokeByteOff a i x ≡ poke (plusPtr a i) x ≡ id    ✓ <interactive> passed 100 tests.

------------
-- Word16 --
------------

Storable: Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Storable: Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Storable: List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Storable: peekElemOff a i ≡ peek (plusPtr a (i * sizeOf undefined))   ✓ <interactive> passed 100 tests.
Storable: pokeElemOff a i x ≡ poke (plusPtr a (i * sizeOf undefined)) x ≡ id    ✓ <interactive> passed 100 tests.
Storable: peekByteOff a i ≡ peek (plusPtr a i)   ✓ <interactive> passed 100 tests.
Storable: pokeByteOff a i x ≡ poke (plusPtr a i) x ≡ id    ✓ <interactive> passed 100 tests.

------------
-- Word32 --
------------

Storable: Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Storable: Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Storable: List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Storable: peekElemOff a i ≡ peek (plusPtr a (i * sizeOf undefined))   ✓ <interactive> passed 100 tests.
Storable: pokeElemOff a i x ≡ poke (plusPtr a (i * sizeOf undefined)) x ≡ id    ✓ <interactive> passed 100 tests.
Storable: peekByteOff a i ≡ peek (plusPtr a i)   ✓ <interactive> passed 100 tests.
Storable: pokeByteOff a i x ≡ poke (plusPtr a i) x ≡ id    ✓ <interactive> passed 100 tests.

------------
-- Word64 --
------------

Storable: Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Storable: Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Storable: List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Storable: peekElemOff a i ≡ peek (plusPtr a (i * sizeOf undefined))   ✓ <interactive> passed 100 tests.
Storable: pokeElemOff a i x ≡ poke (plusPtr a (i * sizeOf undefined)) x ≡ id    ✓ <interactive> passed 100 tests.
Storable: peekByteOff a i ≡ peek (plusPtr a i)   ✓ <interactive> passed 100 tests.
Storable: pokeByteOff a i x ≡ poke (plusPtr a i) x ≡ id    ✓ <interactive> passed 100 tests.

--------------------
-- complex struct --
--------------------

Storable: Set-Get (you get back what you put in)   ✓ <interactive> passed 100 tests.
Storable: Get-Set (putting back what you got out has no effect)   ✓ <interactive> passed 100 tests.
Storable: List Conversion Roundtrips   ✓ <interactive> passed 100 tests.
Storable: peekElemOff a i ≡ peek (plusPtr a (i * sizeOf undefined))   ✓ <interactive> passed 100 tests.
Storable: pokeElemOff a i x ≡ poke (plusPtr a (i * sizeOf undefined)) x ≡ id    ✓ <interactive> passed 100 tests.
Storable: peekByteOff a i ≡ peek (plusPtr a i)   ✓ <interactive> passed 100 tests.
Storable: pokeByteOff a i x ≡ poke (plusPtr a i) x ≡ id    ✓ <interactive> passed 100 tests.

-----------
-- Word8 --
-----------

Vector.Unboxed.MVector: New-Length   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Replicate-Length   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Slice-Length   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Grow-Length   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Set-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Sliced-Set-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Replicate-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Slice-Overlaps   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Slice-Copy   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Slice-Move   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-Copy-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-Move-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-Grow-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Sliced-Write-Copy-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Sliced-Write-Move-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Sliced-Write-Grow-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-InitializeAround-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-ClearAround-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-SetAround-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-WriteAround-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-CopyAround-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-MoveAround-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-InitializeBetween-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-ClearBetween-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-SetBetween-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-CopyBetween-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-MoveBetween-Read   ✓ <interactive> passed 100 tests.

-----------------
-- (Int, Word) --
-----------------

Vector.Unboxed.MVector: New-Length   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Replicate-Length   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Slice-Length   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Grow-Length   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Set-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Sliced-Set-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Replicate-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Slice-Overlaps   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Slice-Copy   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Slice-Move   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-Copy-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-Move-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-Grow-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Sliced-Write-Copy-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Sliced-Write-Move-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Sliced-Write-Grow-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-InitializeAround-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-ClearAround-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-SetAround-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-WriteAround-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-CopyAround-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-MoveAround-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-InitializeBetween-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-ClearBetween-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-SetBetween-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-CopyBetween-Read   ✓ <interactive> passed 100 tests.
Vector.Unboxed.MVector: Write-MoveBetween-Read   ✓ <interactive> passed 100 tests.

--------
-- [] --
--------

Alternative: Left Identity   ✓ <interactive> passed 100 tests.
Alternative: Right Identity   ✓ <interactive> passed 100 tests.
Alternative: Associativity   ✓ <interactive> passed 100 tests.

-----------
-- Maybe --
-----------

Alternative: Left Identity   ✓ <interactive> passed 100 tests.
Alternative: Right Identity   ✓ <interactive> passed 100 tests.
Alternative: Associativity   ✓ <interactive> passed 100 tests.

--------
-- [] --
--------

Applicative: Identity   ✓ <interactive> passed 100 tests.
Applicative: Composition   ✓ <interactive> passed 100 tests.
Applicative: Homomorphism   ✓ <interactive> passed 100 tests.
Applicative: Interchange   ✓ <interactive> passed 100 tests.
Applicative: LiftA2 Part 1   ✓ <interactive> passed 100 tests.
Applicative: LiftA2 Part 2   ✓ <interactive> passed 100 tests.

-----------
-- Maybe --
-----------

Applicative: Identity   ✓ <interactive> passed 100 tests.
Applicative: Composition   ✓ <interactive> passed 100 tests.
Applicative: Homomorphism   ✓ <interactive> passed 100 tests.
Applicative: Interchange   ✓ <interactive> passed 100 tests.
Applicative: LiftA2 Part 1   ✓ <interactive> passed 100 tests.
Applicative: LiftA2 Part 2   ✓ <interactive> passed 100 tests.

--------------
-- Either e --
--------------

Applicative: Identity   ✓ <interactive> passed 100 tests.
Applicative: Composition   ✓ <interactive> passed 100 tests.
Applicative: Homomorphism   ✓ <interactive> passed 100 tests.
Applicative: Interchange   ✓ <interactive> passed 100 tests.
Applicative: LiftA2 Part 1   ✓ <interactive> passed 100 tests.
Applicative: LiftA2 Part 2   ✓ <interactive> passed 100 tests.

-------------
-- Compose --
-------------

Applicative: Identity   ✓ <interactive> passed 100 tests.
Applicative: Composition   ✓ <interactive> passed 100 tests.
Applicative: Homomorphism   ✓ <interactive> passed 100 tests.
Applicative: Interchange   ✓ <interactive> passed 100 tests.
Applicative: LiftA2 Part 1   ✓ <interactive> passed 100 tests.
Applicative: LiftA2 Part 2   ✓ <interactive> passed 100 tests.

--------------
-- Identity --
--------------

Comonad: Extend/Extract Identity   ✓ <interactive> passed 100 tests.
Comonad: Extract/Extend   ✓ <interactive> passed 100 tests.
Comonad: Extend/Extend   ✓ <interactive> passed 100 tests.
Comonad: Extract Right Identity   ✓ <interactive> passed 100 tests.
Comonad: Extract Left Identity   ✓ <interactive> passed 100 tests.
Comonad: Cokleisli Associativity   ✓ <interactive> passed 100 tests.
Comonad: Extract/Duplicate Identity   ✓ <interactive> passed 100 tests.
Comonad: Fmap Extract/Duplicate Identity   ✓ <interactive> passed 100 tests.
Comonad: Double Duplication   ✓ <interactive> passed 100 tests.
Comonad: Extend/Fmap . Duplicate Identity   ✓ <interactive> passed 100 tests.
Comonad: Duplicate/Extend id Identity   ✓ <interactive> passed 100 tests.
Comonad: Fmap/Extend Extract   ✓ <interactive> passed 100 tests.
Comonad: Fmap/LiftW Isomorphism   ✓ <interactive> passed 100 tests.

--------------
-- NonEmpty --
--------------

Comonad: Extend/Extract Identity   ✓ <interactive> passed 100 tests.
Comonad: Extract/Extend   ✓ <interactive> passed 100 tests.
Comonad: Extend/Extend   ✓ <interactive> passed 100 tests.
Comonad: Extract Right Identity   ✓ <interactive> passed 100 tests.
Comonad: Extract Left Identity   ✓ <interactive> passed 100 tests.
Comonad: Cokleisli Associativity   ✓ <interactive> passed 100 tests.
Comonad: Extract/Duplicate Identity   ✓ <interactive> passed 100 tests.
Comonad: Fmap Extract/Duplicate Identity   ✓ <interactive> passed 100 tests.
Comonad: Double Duplication   ✓ <interactive> passed 100 tests.
Comonad: Extend/Fmap . Duplicate Identity   ✓ <interactive> passed 100 tests.
Comonad: Duplicate/Extend id Identity   ✓ <interactive> passed 100 tests.
Comonad: Fmap/Extend Extract   ✓ <interactive> passed 100 tests.
Comonad: Fmap/LiftW Isomorphism   ✓ <interactive> passed 100 tests.

-----------
-- (,) e --
-----------

Comonad: Extend/Extract Identity   ✓ <interactive> passed 100 tests.
Comonad: Extract/Extend   ✓ <interactive> passed 100 tests.
Comonad: Extend/Extend   ✓ <interactive> passed 100 tests.
Comonad: Extract Right Identity   ✓ <interactive> passed 100 tests.
Comonad: Extract Left Identity   ✓ <interactive> passed 100 tests.
Comonad: Cokleisli Associativity   ✓ <interactive> passed 100 tests.
Comonad: Extract/Duplicate Identity   ✓ <interactive> passed 100 tests.
Comonad: Fmap Extract/Duplicate Identity   ✓ <interactive> passed 100 tests.
Comonad: Double Duplication   ✓ <interactive> passed 100 tests.
Comonad: Extend/Fmap . Duplicate Identity   ✓ <interactive> passed 100 tests.
Comonad: Duplicate/Extend id Identity   ✓ <interactive> passed 100 tests.
Comonad: Fmap/Extend Extract   ✓ <interactive> passed 100 tests.
Comonad: Fmap/LiftW Isomorphism   ✓ <interactive> passed 100 tests.

-----------------------------
-- StoreT Integer Identity --
-----------------------------

Comonad: Extend/Extract Identity   ✓ <interactive> passed 100 tests.
Comonad: Extract/Extend   ✓ <interactive> passed 100 tests.
Comonad: Extend/Extend   ✓ <interactive> passed 100 tests.
Comonad: Extract Right Identity   ✓ <interactive> passed 100 tests.
Comonad: Extract Left Identity   ✓ <interactive> passed 100 tests.
Comonad: Cokleisli Associativity   ✓ <interactive> passed 100 tests.
Comonad: Extract/Duplicate Identity   ✓ <interactive> passed 100 tests.
Comonad: Fmap Extract/Duplicate Identity   ✓ <interactive> passed 100 tests.
Comonad: Double Duplication   ✓ <interactive> passed 100 tests.
Comonad: Extend/Fmap . Duplicate Identity   ✓ <interactive> passed 100 tests.
Comonad: Duplicate/Extend id Identity   ✓ <interactive> passed 100 tests.
Comonad: Fmap/Extend Extract   ✓ <interactive> passed 100 tests.
Comonad: Fmap/LiftW Isomorphism   ✓ <interactive> passed 100 tests.

-----------
-- Proxy --
-----------

Contravariant: Identity   ✓ <interactive> passed 100 tests.
Contravariant: Composition   ✓ <interactive> passed 100 tests.

-----------
-- Const --
-----------

Contravariant: Identity   ✓ <interactive> passed 100 tests.
Contravariant: Composition   ✓ <interactive> passed 100 tests.

---------
-- Sum --
---------

Contravariant: Identity   ✓ <interactive> passed 100 tests.
Contravariant: Composition   ✓ <interactive> passed 100 tests.

-------------
-- Product --
-------------

Contravariant: Identity   ✓ <interactive> passed 100 tests.
Contravariant: Composition   ✓ <interactive> passed 100 tests.

---------
-- Set --
---------

Foldable: fold   ✓ <interactive> passed 100 tests.
Foldable: foldMap   ✓ <interactive> passed 100 tests.
Foldable: foldr   ✓ <interactive> passed 100 tests.
Foldable: foldr'   ✓ <interactive> passed 100 tests.
Foldable: foldl   ✓ <interactive> passed 100 tests.
Foldable: foldl'   ✓ <interactive> passed 100 tests.
Foldable: foldl1   ✓ <interactive> passed 100 tests.
Foldable: foldr1   ✓ <interactive> passed 100 tests.
Foldable: toList   ✓ <interactive> passed 100 tests.
Foldable: null   ✓ <interactive> passed 100 tests.
Foldable: length   ✓ <interactive> passed 100 tests.

--------
-- [] --
--------

Functor: Identity   ✓ <interactive> passed 100 tests.
Functor: Composition   ✓ <interactive> passed 100 tests.
Functor: Const   ✓ <interactive> passed 100 tests.

-----------
-- Maybe --
-----------

Functor: Identity   ✓ <interactive> passed 100 tests.
Functor: Composition   ✓ <interactive> passed 100 tests.
Functor: Const   ✓ <interactive> passed 100 tests.

--------------
-- Either e --
--------------

Functor: Identity   ✓ <interactive> passed 100 tests.
Functor: Composition   ✓ <interactive> passed 100 tests.
Functor: Const   ✓ <interactive> passed 100 tests.

-------------
-- Compose --
-------------

Functor: Identity   ✓ <interactive> passed 100 tests.
Functor: Composition   ✓ <interactive> passed 100 tests.
Functor: Const   ✓ <interactive> passed 100 tests.

--------
-- [] --
--------

Monad: Left Identity   ✓ <interactive> passed 100 tests.
Monad: Right Identity   ✓ <interactive> passed 100 tests.
Monad: Associativity   ✓ <interactive> passed 100 tests.
Monad: Return   ✓ <interactive> passed 100 tests.
Monad: Ap   ✓ <interactive> passed 100 tests.

--------------
-- Either e --
--------------

Monad: Left Identity   ✓ <interactive> passed 100 tests.
Monad: Right Identity   ✓ <interactive> passed 100 tests.
Monad: Associativity   ✓ <interactive> passed 100 tests.
Monad: Return   ✓ <interactive> passed 100 tests.
Monad: Ap   ✓ <interactive> passed 100 tests.

--------------
-- Identity --
--------------

Monad: Left Identity   ✓ <interactive> passed 100 tests.
Monad: Right Identity   ✓ <interactive> passed 100 tests.
Monad: Associativity   ✓ <interactive> passed 100 tests.
Monad: Return   ✓ <interactive> passed 100 tests.
Monad: Ap   ✓ <interactive> passed 100 tests.

--------
-- IO --
--------

Monad: Left Identity   ✓ <interactive> passed 100 tests.
Monad: Right Identity   ✓ <interactive> passed 100 tests.
Monad: Associativity   ✓ <interactive> passed 100 tests.
Monad: Return   ✓ <interactive> passed 100 tests.
Monad: Ap   ✓ <interactive> passed 100 tests.

-----------
-- Maybe --
-----------

Monad: Left Identity   ✓ <interactive> passed 100 tests.
Monad: Right Identity   ✓ <interactive> passed 100 tests.
Monad: Associativity   ✓ <interactive> passed 100 tests.
Monad: Return   ✓ <interactive> passed 100 tests.
Monad: Ap   ✓ <interactive> passed 100 tests.

--------
-- IO --
--------

MonadIO: Return   ✓ <interactive> passed 100 tests.
MonadIO: Lift   ✓ <interactive> passed 100 tests.

--------
-- [] --
--------

MonadPlus: Left Identity   ✓ <interactive> passed 100 tests.
MonadPlus: Right Identity   ✓ <interactive> passed 100 tests.
MonadPlus: Associativity   ✓ <interactive> passed 100 tests.
MonadPlus: Left Zero   ✓ <interactive> passed 100 tests.
MonadPlus: Right Zero   ✓ <interactive> passed 100 tests.

-----------
-- Maybe --
-----------

MonadPlus: Left Identity   ✓ <interactive> passed 100 tests.
MonadPlus: Right Identity   ✓ <interactive> passed 100 tests.
MonadPlus: Associativity   ✓ <interactive> passed 100 tests.
MonadPlus: Left Zero   ✓ <interactive> passed 100 tests.
MonadPlus: Right Zero   ✓ <interactive> passed 100 tests.

--------
-- [] --
--------

Monad: Naturality   ✓ <interactive> passed 100 tests.

--------------
-- Identity --
--------------

Monad: Naturality   ✓ <interactive> passed 100 tests.

-----------
-- Maybe --
-----------

Monad: Naturality   ✓ <interactive> passed 100 tests.

--------
-- [] --
--------

Foldable: Naturality   ✓ <interactive> passed 100 tests.
Foldable: Identity   ✓ <interactive> passed 100 tests.
Foldable: Composition   ✓ <interactive> passed 100 tests.
Foldable: Sequence Naturality   ✓ <interactive> passed 100 tests.
Foldable: Sequence Identity   ✓ <interactive> passed 100 tests.
Foldable: Sequence Composition   ✓ <interactive> passed 100 tests.
Foldable: foldMap   ✓ <interactive> passed 100 tests.
Foldable: fmap   ✓ <interactive> passed 100 tests.

------------
-- Either --
------------

Bifoldable: Identity   ✓ <interactive> passed 100 tests.
Bifoldable: FoldMap   ✓ <interactive> passed 100 tests.
Bifoldable: Foldr   ✓ <interactive> passed 100 tests.

-----------
-- Const --
-----------

Bifoldable: Identity   ✓ <interactive> passed 100 tests.
Bifoldable: FoldMap   ✓ <interactive> passed 100 tests.
Bifoldable: Foldr   ✓ <interactive> passed 100 tests.

------------
-- Either --
------------

Bifoldable/Bifunctor: Composition   ✓ <interactive> passed 100 tests.
Bifoldable/Bifunctor: FoldMap   ✓ <interactive> passed 100 tests.

-----------
-- Const --
-----------

Bifoldable/Bifunctor: Composition   ✓ <interactive> passed 100 tests.
Bifoldable/Bifunctor: FoldMap   ✓ <interactive> passed 100 tests.

------------
-- Either --
------------

Bifunctor: Identity   ✓ <interactive> passed 100 tests.
Bifunctor: First Identity   ✓ <interactive> passed 100 tests.
Bifunctor: Second Identity   ✓ <interactive> passed 100 tests.
Bifunctor: Composition   ✓ <interactive> passed 100 tests.

-----------
-- Const --
-----------

Bifunctor: Identity   ✓ <interactive> passed 100 tests.
Bifunctor: First Identity   ✓ <interactive> passed 100 tests.
Bifunctor: Second Identity   ✓ <interactive> passed 100 tests.
Bifunctor: Composition   ✓ <interactive> passed 100 tests.

------------
-- Either --
------------

Bitraversable: Naturality   ✓ <interactive> passed 100 tests.
Bitraversable: Identity   ✓ <interactive> passed 100 tests.
Bitraversable: Composition   ✓ <interactive> passed 100 tests.

-----------
-- Const --
-----------

Bitraversable: Naturality   ✓ <interactive> passed 100 tests.
Bitraversable: Identity   ✓ <interactive> passed 100 tests.
Bitraversable: Composition   ✓ <interactive> passed 100 tests.

------------
-- ProxyC --
------------

Category: Left Identity   ✓ <interactive> passed 100 tests.
Category: Right Identity   ✓ <interactive> passed 100 tests.
Category: Associativity   ✓ <interactive> passed 100 tests.

------------
-- ProxyC --
------------

Commutative Category: Commutativity   ✓ <interactive> passed 100 tests.


All tests succeeded
Test suite spec: PASS
Test suite logged to:
/tmp/workdir-hedgehog-classes/hedgehog-classes-0.2.5.4/dist-newstyle/build/x86_64-linux/ghc-9.6.6/hedgehog-classes-0.2.5.4/t/spec/test/hedgehog-classes-0.2.5.4-spec.log
1 of 1 test suites (1 of 1 test cases) passed.
