Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - stylish-haskell-0.14.5.0 (test:stylish-haskell-tests) (ephemeral targets)
Preprocessing test suite 'stylish-haskell-tests' for stylish-haskell-0.14.5.0...
Building test suite 'stylish-haskell-tests' for stylish-haskell-0.14.5.0...
Running 1 test suites...
Test suite stylish-haskell-tests: RUNNING...
/tmp/workdir-stylish-haskell/stylish-haskell-0.14.5.0/.stylish-haskell.yaml does not exist
/tmp/workdir-stylish-haskell/.stylish-haskell.yaml does not exist
/tmp/.stylish-haskell.yaml does not exist
/.stylish-haskell.yaml does not exist
/home/stackage/.config/stylish-haskell/config.yaml does not exist
/home/stackage/.stylish-haskell.yaml does not exist
Loading configuration at <embedded>
Parsing /tmp/workdir-stylish-haskell/stylish-haskell-0.14.5.0/stylish-haskell.cabal...
Gathered default-extensions: []
Loading configuration at test-config.yaml
.cabal file not found, directories searched: ["/tmp/stylish_haskell10182237106006776337","/tmp/","/"]
Stylish Haskell will work basing on LANGUAGE pragmas in source files.
Loading configuration at test-config.yaml
.cabal file not found, directories searched: ["/tmp/stylish_haskell1446146984481497626","/tmp/","/"]
Stylish Haskell will work basing on LANGUAGE pragmas in source files.
/tmp/workdir-stylish-haskell/stylish-haskell-0.14.5.0/.stylish-haskell.yaml does not exist
/tmp/workdir-stylish-haskell/.stylish-haskell.yaml does not exist
/tmp/.stylish-haskell.yaml does not exist
/.stylish-haskell.yaml does not exist
/home/stackage/.config/stylish-haskell/config.yaml does not exist
/home/stackage/.stylish-haskell.yaml does not exist
Loading configuration at <embedded>
Parsing /tmp/workdir-stylish-haskell/stylish-haskell-0.14.5.0/stylish-haskell.cabal...
Gathered default-extensions: []
Language.Haskell.Stylish.Parse:
  UTF-8 Byte Order Mark: [OK]
  Extra extensions: [OK]
  Multiline CPP: [OK]
  Haskell2010 extension: [OK]
  Shebang: [OK]
  ShebangExt: [OK]
  ShebangDouble: [OK]
  GADTs extension: [OK]
  KindSignatures extension: [OK]
  StandalonDeriving extension: [OK]
  UnicodeSyntax extension: [OK]
  XmlSyntax regression: [OK]
  MagicHash regression: [OK]
  Disabling extensions: [OK]
  Safe extension: [OK]
Language.Haskell.Stylish.Config:
  Extensions extracted correctly from .cabal file: [OK]
  Extensions extracted correctly from .stylish-haskell.yaml file: [OK]
  Extensions extracted correctly from .stylish-haskell.yaml and .cabal files: [OK]
  NoXyz extensions from .stylish-haskell.yaml file: [OK]
  NoXyz extensions from .cabal file: [OK]
  Correctly read .stylish-haskell.yaml file with default max column number: [OK]
  Correctly read .stylish-haskell.yaml file with specified max column number: [OK]
  Correctly read .stylish-haskell.yaml file with no max column number: [OK]
  Backwards-compatible align options: [OK]
Language.Haskell.Stylish.Step.Data.Tests:
  case 00: [OK]
  case 01: [OK]
  case 02: [OK]
  case 03: [OK]
  case 04: [OK]
  case 05: [OK]
  case 06: [OK]
  case 07: [OK]
  case 08: [OK]
  case 09: [OK]
  case 10: [OK]
  case 11: [OK]
  case 12: [OK]
  case 13: [OK]
  case 14: [OK]
  case 15: [OK]
  case 16: [OK]
  case 17: [OK]
  case 18: [OK]
  case 19: [OK]
  case 20 (issue #262): [OK]
  case 21: [OK]
  case 22: [OK]
  case 23: [OK]
  case 24: [OK]
  case 25: [OK]
  case 26: [OK]
  case 27: [OK]
  case 28: [OK]
  case 29: [OK]
  case 30: [OK]
  case 31: [OK]
  case 32: [OK]
  case 33: [OK]
  case 34: [OK]
  case 35: [OK]
  case 36: [OK]
  case 37: [OK]
  case 38: [OK]
  case 39: [OK]
  case 40: [OK]
  case 41: [OK]
  case 42: [OK]
  case 43: [OK]
  case 44: [OK]
  case 45: [OK]
  case 46: [OK]
  case 47: [OK]
  case 48: [OK]
  case 49: [OK]
  case 50: [OK]
  case 51: [OK]
  case 52: [OK]
  case 53: [OK]
  case 54: [OK]
  case 55: [OK]
  case 56: [OK]
  case 57: [OK]
  case 58: [OK]
  case 59: [OK]
  case 60: [OK]
  case 61 (issue #282): [OK]
  case 62 (issue #273): [OK]
  case 63 (issue #338): [OK]
  case 64: [OK]
  case 65: [OK]
  case 66 (issue #411): [OK]
Language.Haskell.Stylish.Step.Imports.Tests:
  case 01: [OK]
  case 02: [OK]
  case 03: [OK]
  case 04: [OK]
  case 05: [OK]
  case 06: [OK]
  case 07: [OK]
  case 08: [OK]
  case 08b: [OK]
  case 09: [OK]
  case 10: [OK]
  case 11: [OK]
  case 11b: [OK]
  case 12: [OK]
  case 12b: [OK]
  case 13: [OK]
  case 13b: [OK]
  case 14: [OK]
  case 15: [OK]
  case 16: [OK]
  case 17: [OK]
  case 18: [OK]
  case 19: [OK]
  case 19b: [OK]
  case 19d: [OK]
  case 19d: [OK]
  case 20: [OK]
  case 21: [OK]
  case 22: [OK]
  case 23: [OK]
  case 23b: [OK]
  case 24: [OK]
  case 25: [OK]
  case 26 (issue #185): [OK]
  case 27: [OK]
  case 28: [OK]
  case 29: [OK]
  case 30: [OK]
  case 31: [OK]
  case 32: [OK]
  case 33: [OK]
  case 34: [OK]
  case 35: [OK]
  case 36: [OK]
  case 37: [OK]
  case 38: [OK]
  case 39: [OK]
  case 40: [OK]
  case 41: [OK]
  case 42: [OK]
  case 43: [OK]
  case 44a: [OK]
  case 44b: [OK]
  case 44c: [OK]
Language.Haskell.Stylish.Step.Imports.FelixTests:
  Hello world: [OK]
  Sorted simple: [OK]
  Sorted import lists: [OK]
  Sorted import lists and import decls: [OK]
  Import constructor all: [OK]
  Import constructor specific: [OK]
  Import constructor specific sorted: [OK]
  Imports step does not change rest of file: [OK]
  Imports respect groups: [OK]
  Imports respects whitespace between groups: [OK]
  Doesn't add extra space after 'hiding': [OK]
  Should be able to format symbolic imports: [OK]
  Able to merge equivalent imports: [OK]
  Obeys max columns setting: [OK]
  Obeys max columns setting with two in each: [OK]
  Respects multiple groups: [OK]
  Doesn't delete nullary imports: [OK]
Language.Haskell.Stylish.Step.LanguagePragmas.Tests:
  case 01: [OK]
  case 02: [OK]
  case 03: [OK]
  case 04: [OK]
  case 05: [OK]
  case 06: [OK]
  case 07: [OK]
  case 08: [OK]
  case 09: [OK]
  case 10: [OK]
  case 11: [OK]
  case 12: [OK]
  case 13: [OK]
  case 14: [OK]
Language.Haskell.Stylish.Printer.ModuleHeader:
  Does not indent absent export list: [OK]
  Does not indent absent export list, open_bracket = same_line: [OK]
  Empty exports list: [OK]
  Empty exports list , open_bracket = same_line: [OK]
  Single exported variable: [OK]
  Single exported variable, open_bracket = same_line: [OK]
  Multiple exported variables: [OK]
  Multiple exported variables, open_bracket = same_line: [OK]
  Only reformats module header: [OK]
  Only reformats module header, open_bracket = same_line: [OK]
  Leaving pragmas in place: [OK]
  Leaving pragmas in place, open_bracket = same_line: [OK]
  Leaving pragmas in place variant: [OK]
  Leaving pragmas in place variant, open_bracket = same_line: [OK]
  Leaving comments in place: [OK]
  Leaving comments in place, open_bracket = same_line: [OK]
  Exports all: [OK]
  Exports all, open_bracket = same_line: [OK]
  Exports module: [OK]
  Exports module, open_bracket = same_line: [OK]
  Exports symbol: [OK]
  Exports symbol, open_bracket = same_line: [OK]
  Respects groups: [OK]
  Respects groups, open_bracket = same_line: [OK]
  'where' not repeated when not part of exports with always break_where: [OK]
  'where' not repeated when not part of exports with always break_where, open_bracket = same_line: [OK]
  Indents absent export list with 2 spaces with always break_where: [OK]
  Indents absent export list with 2 spaces with always break_where, open_bracket = same_line: [OK]
  Indents with 2 spaces: [OK]
  Indents with 2 spaces, open_bracket = same_line: [OK]
  Group doc with 2 spaces: [OK]
  Group doc with 2 spaces, open_bracket = same_line: [OK]
  Does not sort: [OK]
  Repects separate_lists: [OK]
  Repects separate_lists, open_bracket = same_line: [OK]
  Indents absent export list with always break_where: [OK]
  Respects bundled patterns: [OK]
  Respects bundled patterns, open_bracket = same_line: [OK]
  Inline no export list: [OK]
  Inline empty export list: [OK]
  Inline empty export list, open_bracket = same_line: [OK]
  Inline single export: [OK]
  Inline single export, open_bracket = same_line: [OK]
  Inline single line sorts: [OK]
  Inline single line sorts, open_bracket = same_line: [OK]
  Inline breaks when too long: [OK]
  Inline breaks when too long, open_bracket = same_line: [OK]
  Inline single line when no max cols: [OK]
  Inline single line when no max cols, open_bracket = same_line: [OK]
  Inline breaks when comments present: [OK]
  Inline breaks when comments present, open_bracket = same_line: [OK]
  Single no export list: [OK]
  Single no export list, open_bracket = same_line: [OK]
  Single empty export list: [OK]
  Single empty export list, open_bracket = same_line: [OK]
  Single one export: [OK]
  Single one export, open_bracket = same_line: [OK]
  Single two exports: [OK]
  Single two exports, open_bracket = same_line: [OK]
  Single one export with comment: [OK]
  Single one export with comment, open_bracket = same_line: [OK]
  Single one module comment: [OK]
  Inline comments: [OK]
Language.Haskell.Stylish.Step.SimpleAlign.Tests:
  case 01: [OK]
  case 02: [OK]
  case 03: [OK]
  case 04: [OK]
  case 05: [OK]
  case 06: [OK]
  case 07: [OK]
  case 08: [OK]
  case 09: [OK]
  case 10: [OK]
  case 11: [OK]
  case 12: [OK]
  case 13: [OK]
  case 13b: [OK]
  case 14: [OK]
  case 15: [OK]
  case 16: [OK]
  case 17: [OK]
Language.Haskell.Stylish.Step.SimpleSquash.Tests:
  case 01: [OK]
  case 02: [OK]
  case 03: [OK]
  case 04: [OK]
  case 05: [OK]
  case 06 (issue #355): [OK]
Language.Haskell.Stylish.Step.Tabs.Tests:
  case 01: [OK]
Language.Haskell.Stylish.Step.TrailingWhitespace.Tests:
  case 01: [OK]
Language.Haskell.Stylish.Step.UnicodeSyntax.Tests:
  case 01: [OK]
  case 02: [OK]
  case 03: [OK]
Language.Haskell.Stylish.Tests:
  case 01: [OK]
  case 02: [OK]
  case 03: [OK]
  case 04: [OK]
  case 05: [OK]
  case 06: [OK]
  case 07: [OK]
Language.Haskell.Stylish.Regressions:
  case 00 (issue #198): [OK]

         Test Cases  Total 
 Passed  276         276   
 Failed  0           0     
 Total   276         276   
Test suite stylish-haskell-tests: PASS
Test suite logged to:
/tmp/workdir-stylish-haskell/stylish-haskell-0.14.5.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/stylish-haskell-0.14.5.0/t/stylish-haskell-tests/test/stylish-haskell-0.14.5.0-stylish-haskell-tests.log
1 of 1 test suites (1 of 1 test cases) passed.
