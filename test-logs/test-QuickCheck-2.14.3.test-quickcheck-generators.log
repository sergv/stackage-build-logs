Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - QuickCheck-2.14.3 (test:test-quickcheck-generators) (ephemeral targets)
Preprocessing test suite 'test-quickcheck-generators' for QuickCheck-2.14.3...
Building test suite 'test-quickcheck-generators' for QuickCheck-2.14.3...
Running 1 test suites...
Test suite test-quickcheck-generators: RUNNING...
=== prop_int from tests/Generators.hs:51 ===
+++ OK, passed 100 tests.

=== prop_int32 from tests/Generators.hs:54 ===
+++ OK, failed as expected. Falsified (after 44 tests and 1 shrink):
Path [1348839]

=== prop_word from tests/Generators.hs:57 ===
+++ OK, failed as expected. Falsified (after 1 test):
Path [0]

=== prop_word32 from tests/Generators.hs:60 ===
+++ OK, failed as expected. Falsified (after 1 test):
Path [0]

=== prop_integer from tests/Generators.hs:63 ===
+++ OK, passed 100 tests.

=== prop_small from tests/Generators.hs:66 ===
+++ OK, passed 100 tests.

=== prop_large from tests/Generators.hs:69 ===
+++ OK, failed as expected. Falsified (after 29 tests and 1 shrink):
Path [Large {getLarge = 1129315}]

=== prop_smallWord from tests/Generators.hs:72 ===
+++ OK, passed 100 tests.

=== prop_largeWord from tests/Generators.hs:75 ===
+++ OK, failed as expected. Falsified (after 1 test):
Path [Large {getLarge = 0}]

=== prop_fixed_length from tests/Generators.hs:87 ===
+++ OK, passed 100 tests.

=== prop_fixed_idem from tests/Generators.hs:90 ===
+++ OK, passed 100 tests.

=== prop_blind_idem from tests/Generators.hs:91 ===
+++ OK, passed 100 tests.

=== prop_ordered_list from tests/Generators.hs:93 ===
+++ OK, passed 100 tests.

=== prop_nonempty_list from tests/Generators.hs:94 ===
+++ OK, passed 100 tests.

=== prop_positive from tests/Generators.hs:124 ===
+++ OK, passed 100 tests.

=== prop_positive_bound from tests/Generators.hs:125 ===
+++ OK, failed as expected. Falsified (after 1 test):
Int
Path [Positive {getPositive = Extremal {getExtremal = 1}}]

=== prop_nonzero from tests/Generators.hs:127 ===
+++ OK, passed 100 tests.

=== prop_nonzero_bound_1 from tests/Generators.hs:128 ===
+++ OK, failed as expected. Falsified (after 1 test):
Integer
Path [NonZero {getNonZero = -1},NonZero {getNonZero = 1}]

=== prop_nonzero_bound_2 from tests/Generators.hs:129 ===
+++ OK, failed as expected. Falsified (after 1 test and 1 shrink):
Int32
Path [NonZero {getNonZero = Extremal {getExtremal = -2}},NonZero {getNonZero = Extremal {getExtremal = -1}}]

=== prop_nonnegative from tests/Generators.hs:131 ===
+++ OK, passed 100 tests.

=== prop_nonnegative_bound from tests/Generators.hs:132 ===
+++ OK, failed as expected. Falsified (after 1 test):
Int
Path [NonNegative {getNonNegative = Extremal {getExtremal = 9223372036854775807}},NonNegative {getNonNegative = Extremal {getExtremal = 9223372036854759424}},NonNegative {getNonNegative = Extremal {getExtremal = 9223372036854759361}},NonNegative {getNonNegative = Extremal {getExtremal = 0}}]

=== prop_negative from tests/Generators.hs:134 ===
+++ OK, passed 100 tests.

=== prop_negative_bound from tests/Generators.hs:135 ===
+++ OK, failed as expected. Falsified (after 1 test):
Int
Path [Negative {getNegative = Extremal {getExtremal = -2}},Negative {getNegative = Extremal {getExtremal = -1}}]

=== prop_nonpositive from tests/Generators.hs:137 ===
+++ OK, passed 100 tests.

=== prop_nonpositive_bound from tests/Generators.hs:138 ===
+++ OK, failed as expected. Falsified (after 1 test):
Int
Path [NonPositive {getNonPositive = Extremal {getExtremal = -1}},NonPositive {getNonPositive = Extremal {getExtremal = 0}}]

=== prop_reachesBound_Int8 from tests/Generators.hs:144 ===
+++ OK, failed as expected. Falsified (after 23 tests and 1 shrink):
93

=== prop_reachesBound_Int16 from tests/Generators.hs:145 ===
+++ OK, failed as expected. Falsified (after 31 tests and 6 shrinks):
24573

=== prop_reachesBound_Int32 from tests/Generators.hs:146 ===
+++ OK, failed as expected. Falsified (after 64 tests and 11 shrinks):
1610612733

=== prop_reachesBound_Int64 from tests/Generators.hs:147 ===
+++ OK, failed as expected. Falsified (after 97 tests and 35 shrinks):
6917529027641081853

=== prop_reachesBound_Word8 from tests/Generators.hs:148 ===
+++ OK, failed as expected. Falsified (after 21 tests and 2 shrinks):
189

=== prop_reachesBound_Word16 from tests/Generators.hs:149 ===
+++ OK, failed as expected. Falsified (after 33 tests and 4 shrinks):
49149

=== prop_reachesBound_Word32 from tests/Generators.hs:150 ===
+++ OK, failed as expected. Falsified (after 65 tests and 11 shrinks):
3221225469

=== prop_reachesBound_Word64 from tests/Generators.hs:151 ===
+++ OK, failed as expected. Falsified (after 85 tests and 30 shrinks):
13835058055282163709

=== prop_no_shrinking_loop_Unit from tests/Generators.hs:157 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Bool from tests/Generators.hs:158 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Ordering from tests/Generators.hs:159 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Maybe from tests/Generators.hs:160 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Either from tests/Generators.hs:161 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_List from tests/Generators.hs:162 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Ratio from tests/Generators.hs:163 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Complex from tests/Generators.hs:164 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Fixed from tests/Generators.hs:165 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Pair from tests/Generators.hs:166 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Triple from tests/Generators.hs:167 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Integer from tests/Generators.hs:168 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Int from tests/Generators.hs:169 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Int8 from tests/Generators.hs:170 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Int16 from tests/Generators.hs:171 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Int32 from tests/Generators.hs:172 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Int64 from tests/Generators.hs:173 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Word from tests/Generators.hs:174 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Word8 from tests/Generators.hs:175 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Word16 from tests/Generators.hs:176 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Word32 from tests/Generators.hs:177 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Word64 from tests/Generators.hs:178 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Char from tests/Generators.hs:179 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Float from tests/Generators.hs:180 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Double from tests/Generators.hs:181 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_Version from tests/Generators.hs:182 ===
+++ OK, passed 100 tests.

=== prop_no_shrinking_loop_ExitCode from tests/Generators.hs:183 ===
+++ OK, passed 100 tests.

=== prop_shrink_candidate_double from tests/Generators.hs:186 ===
+++ OK, passed 100 tests; 93 discarded.

=== prop_B1 from tests/Generators.hs:204 ===
+++ OK, failed as expected. Falsified (after 1 test and 10000 shrinks):
B1 0
0 /= 1

=== prop_double_duplicate_list from tests/Generators.hs:210 ===
+++ OK, failed as expected. Falsified (after 20 tests and 7 shrinks):
[-1.0,-1.0]
[-1.0] /= [-1.0,-1.0]

=== prop_double_assoc from tests/Generators.hs:215 ===
+++ OK, failed as expected. Falsified (after 11 tests and 10 shrinks):
0.3
5.0e-2
8.0
8.350000000000001 /= 8.35

Test suite test-quickcheck-generators: PASS
Test suite logged to:
/tmp/workdir-QuickCheck/QuickCheck-2.14.3/dist-newstyle/build/x86_64-linux/ghc-9.6.6/QuickCheck-2.14.3/t/test-quickcheck-generators/test/QuickCheck-2.14.3-test-quickcheck-generators.log
1 of 1 test suites (1 of 1 test cases) passed.
