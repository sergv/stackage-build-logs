Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - infinite-list-0.1.1 (test:infinite-properties-O0) (ephemeral targets)
Preprocessing test suite 'infinite-properties-O0' for infinite-list-0.1.1...
Building test suite 'infinite-properties-O0' for infinite-list-0.1.1...
Running 1 test suites...
Test suite infinite-properties-O0: RUNNING...
All
  head:                    OK
    +++ OK, passed 100 tests.
  tail:                    OK
    +++ OK, passed 100 tests.
  uncons:                  OK
    +++ OK, passed 100 tests.
  map:                     OK
    +++ OK, passed 100 tests.
  fmap:                    OK
    +++ OK, passed 100 tests.
  <$:                      OK
    +++ OK, passed 100 tests.
  pure:                    OK
    +++ OK, passed 100 tests.
  *>:                      OK
    +++ OK, passed 100 tests.
  <*:                      OK
    +++ OK, passed 100 tests.
  >>= 1:                   OK
    +++ OK, passed 100 tests.
  >>= 2:                   OK
    +++ OK, passed 100 tests.
  >>= 3:                   OK
    +++ OK, passed 100 tests.
  >>:                      OK
    +++ OK, passed 100 tests.
  concat:                  OK
    +++ OK, passed 100 tests.
  concatMap:               OK
    +++ OK, passed 100 tests.
  intersperse:             OK
    +++ OK, passed 100 tests.
  intersperse laziness 1:  OK
    +++ OK, passed 1 test.
  intersperse laziness 2:  OK
    +++ OK, passed 1 test.
  intercalate:             OK
    +++ OK, passed 100 tests.
  intercalate laziness 1:  OK
    +++ OK, passed 1 test.
  intercalate laziness 2:  OK
    +++ OK, passed 1 test.
  interleave 1:            OK
    +++ OK, passed 100 tests.
  interleave 2:            OK
    +++ OK, passed 100 tests.
  interleave laziness:     OK
    +++ OK, passed 1 test.
  transpose []:            OK
    +++ OK, passed 100 tests; 15 discarded.
  transpose NE:            OK
    +++ OK, passed 100 tests.
  transpose laziness 1:    OK
    +++ OK, passed 1 test.
  transpose laziness 2:    OK
    +++ OK, passed 1 test.
  subsequences:            OK
    +++ OK, passed 100 tests.
  subsequences laziness 1: OK
    +++ OK, passed 1 test.
  subsequences laziness 2: OK
    +++ OK, passed 1 test.
  permutations:            OK
    +++ OK, passed 100 tests.
  permutations laziness:   OK
    +++ OK, passed 1 test.
  ... Bool:                OK
    +++ OK, passed 100 tests.
  ... Int:                 OK
    +++ OK, passed 100 tests.
  ... Int maxBound:        OK
    +++ OK, passed 100 tests.
  ... Word:                OK
    +++ OK, passed 100 tests.
  ... Word maxBound:       OK
    +++ OK, passed 100 tests.
  ... Integer:             OK
    +++ OK, passed 100 tests.
  ... Natural:             OK
    +++ OK, passed 100 tests.
  .... Bool:               OK
    +++ OK, passed 100 tests.
  .... Int:                OK
    +++ OK, passed 100 tests.
  .... Word:               OK
    +++ OK, passed 100 tests.
  .... Integer:            OK
    +++ OK, passed 100 tests.
  .... Natural:            OK
    +++ OK, passed 100 tests.
  toList:                  OK
    +++ OK, passed 100 tests.
  scanl:                   OK
    +++ OK, passed 100 tests.
  scanl laziness:          OK
    +++ OK, passed 1 test.
  scanl':                  OK
    +++ OK, passed 100 tests.
  scanl' laziness:         OK
    +++ OK, passed 1 test.
  scanl1:                  OK
    +++ OK, passed 100 tests.
  scanl1 laziness:         OK
    +++ OK, passed 1 test.
  mapAccumL:               OK
    +++ OK, passed 100 tests.
  mapAccumL laziness:      OK
    +++ OK, passed 1 test.
  iterate:                 OK
    +++ OK, passed 100 tests.
  iterate laziness:        OK
    +++ OK, passed 1 test.
  iterate':                OK
    +++ OK, passed 100 tests.
  iterate' laziness:       OK
    +++ OK, passed 1 test.
  repeat:                  OK
    +++ OK, passed 100 tests.
  cycle:                   OK
    +++ OK, passed 100 tests.
  cycle laziness:          OK
    +++ OK, passed 1 test.
  unfoldr:                 OK
    +++ OK, passed 100 tests.
  unfoldr laziness:        OK
    +++ OK, passed 1 test.
  take:                    OK
    +++ OK, passed 100 tests.
  take laziness 1:         OK
    +++ OK, passed 1 test.
  take laziness 2:         OK
    +++ OK, passed 1 test.
  drop:                    OK
    +++ OK, passed 100 tests.
  drop laziness:           OK
    +++ OK, passed 1 test.
  splitAt:                 OK
    +++ OK, passed 100 tests.
  splitAt laziness 1:      OK
    +++ OK, passed 1 test.
  splitAt laziness 2:      OK
    +++ OK, passed 1 test.
  takeWhile:               OK
    +++ OK, passed 100 tests.
  takeWhile laziness 1:    OK
    +++ OK, passed 1 test.
  takeWhile laziness 2:    OK
    +++ OK, passed 1 test.
  fst . span:              OK
    +++ OK, passed 100 tests.
  fst . break:             OK
    +++ OK, passed 100 tests.
  dropWhile:               OK
    +++ OK, passed 100 tests.
  snd . span:              OK
    +++ OK, passed 100 tests.
  snd . break:             OK
    +++ OK, passed 100 tests.
  span laziness:           OK
    +++ OK, passed 1 test.
  break laziness:          OK
    +++ OK, passed 1 test.
  stripPrefix:             OK
    +++ OK, passed 100 tests.
  stripPrefix laziness 1:  OK
    +++ OK, passed 1 test.
  stripPrefix laziness 2:  OK
    +++ OK, passed 1 test.
  isPrefixOf:              OK
    +++ OK, passed 100 tests.
  isPrefixOf laziness 1:   OK
    +++ OK, passed 1 test.
  isPrefixOf laziness 2:   OK
    +++ OK, passed 1 test.
  isPrefixOf laziness 3:   OK
    +++ OK, passed 1 test.
  zip:                     OK
    +++ OK, passed 100 tests.
  zip3:                    OK
    +++ OK, passed 100 tests.
  zip4:                    OK
    +++ OK, passed 100 tests.
  zip5:                    OK
    +++ OK, passed 100 tests.
  zip6:                    OK
    +++ OK, passed 100 tests.
  zip7:                    OK
    +++ OK, passed 100 tests.
  unzip:                   OK
    +++ OK, passed 100 tests.
  unzip3:                  OK
    +++ OK, passed 100 tests.
  unzip4:                  OK
    +++ OK, passed 100 tests.
  unzip5:                  OK
    +++ OK, passed 100 tests.
  unzip6:                  OK
    +++ OK, passed 100 tests.
  unzip7:                  OK
    +++ OK, passed 100 tests.
  lines:                   OK
    +++ OK, passed 100 tests.
  lines laziness 1:        OK
    +++ OK, passed 1 test.
  lines laziness 2:        OK
    +++ OK, passed 1 test.
  words:                   OK
    +++ OK, passed 100 tests.
  words laziness:          OK
    +++ OK, passed 1 test.
  unlines:                 OK
    +++ OK, passed 100 tests.
  unlines laziness:        OK
    +++ OK, passed 1 test.
  unwords:                 OK
    +++ OK, passed 100 tests.
  unwords laziness:        OK
    +++ OK, passed 1 test.
  unlines . lines:         OK
    +++ OK, passed 100 tests.
  group:                   OK
    +++ OK, passed 100 tests.
  groupBy:                 OK
    +++ OK, passed 100 tests; 41 discarded.
  group laziness:          OK
    +++ OK, passed 1 test.
  nub:                     OK
    +++ OK, passed 100 tests.
  nub laziness:            OK
    +++ OK, passed 1 test.
  delete:                  OK
    +++ OK, passed 100 tests.
  delete laziness:         OK
    +++ OK, passed 1 test.
  insert:                  OK
    +++ OK, passed 100 tests.
  insert laziness:         OK
    +++ OK, passed 1 test.
  \\:                      OK
    +++ OK, passed 100 tests.
  \\ laziness:             OK
    +++ OK, passed 1 test.
  union:                   OK
    +++ OK, passed 100 tests.
  union laziness:          OK
    +++ OK, passed 1 test.
  intersect:               OK
    +++ OK, passed 100 tests; 18 discarded.
  intersect laziness:      OK
    +++ OK, passed 1 test.
  inits:                   OK
    +++ OK, passed 100 tests.
  inits laziness 1:        OK
    +++ OK, passed 1 test.
  inits laziness 2:        OK
    +++ OK, passed 1 test.
  inits1:                  OK
    +++ OK, passed 100 tests.
  tails:                   OK
    +++ OK, passed 100 tests.
  tails laziness:          OK
    +++ OK, passed 1 test.
  lookup:                  OK
    +++ OK, passed 100 tests.
  lookup laziness:         OK
    +++ OK, passed 1 test.
  find:                    OK
    +++ OK, passed 100 tests.
  find laziness:           OK
    +++ OK, passed 1 test.
  filter:                  OK
    +++ OK, passed 100 tests.
  mapMaybe:                OK
    +++ OK, passed 100 tests.
  catMaybes:               OK
    +++ OK, passed 100 tests.
  partition:               OK
    +++ OK, passed 100 tests.
  mapEither:               OK
    +++ OK, passed 100 tests.
  partitionEithers:        OK
    +++ OK, passed 100 tests.
  !!:                      OK
    +++ OK, passed 100 tests.
  tabulate:                OK
    +++ OK, passed 100 tests.
  elemIndex:               OK
    +++ OK, passed 100 tests.
  elemIndices:             OK
    +++ OK, passed 100 tests.
  >>= 32bit:               OK
    +++ OK, passed 1 test.

All 146 tests passed (0.09s)
Test suite infinite-properties-O0: PASS
Test suite logged to:
/tmp/workdir-infinite-list/infinite-list-0.1.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/infinite-list-0.1.1/t/infinite-properties-O0/test/infinite-list-0.1.1-infinite-properties-O0.log
1 of 1 test suites (1 of 1 test cases) passed.
