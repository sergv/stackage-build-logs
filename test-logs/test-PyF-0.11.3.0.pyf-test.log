Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - PyF-0.11.3.0 (test:pyf-test) (ephemeral targets)
Preprocessing test suite 'pyf-test' for PyF-0.11.3.0...
Building test suite 'pyf-test' for PyF-0.11.3.0...
Running 1 test suites...
Test suite pyf-test: RUNNING...

simple with external variable
  int [✔]
  float [✔]
  string [✔]
only expression
  default
    int [✔]
    float [✔]
    string [✔]
    float precision [✔]
    string precision [✔]
    sign + [✔]
    sign space [✔]
    sign neg [✔]
  binary
    simple [✔]
    alt [✔]
    sign [✔]
  character
    simple [✔]
  decimal
    simple [✔]
    sign [✔]
  exponentiel
    simple > 1 [✔]
    precision > 1 [✔]
    simple < 1 [✔]
    precision < 1  [✔]
  exponentiel caps
    simple > 1 [✔]
    precision > 1 [✔]
    simple < 1 [✔]
    precision < 1  [✔]
  general
    simple small [✔]
    precision small [✔]
    simple big [✔]
    precision big [✔]
  general caps
    simple small [✔]
    precision small [✔]
    simple big [✔]
    precision big [✔]
  fixed
    simple [✔]
    precision [✔]
  fixed caps
    simple [✔]
    precision [✔]
  octal
    simple [✔]
    alt [✔]
  string
    string [✔]
    precision [✔]
  hex
    simple [✔]
    alt [✔]
  hex caps
    simple [✔]
    alt [✔]
  percent
    simple [✔]
    precision [✔]
  string truncating
    works [✔]
  padding
    default char
      left [✔]
      right [✔]
      center [✔]
    a char
      left [✔]
      right [✔]
      center [✔]
    inside
      inside [✔]
      inside [✔]
      inside [✔]
      inside [✔]
      inside [✔]
    default padding
      floating [✔]
      integral [✔]
      string [✔]
      default [✔]
      default [✔]
      default [✔]
  NaN
    float
      nan [✔]
      nan f [✔]
      nan e [✔]
      nan g [✔]
      nan F [✔]
      nan G [✔]
      nan E [✔]
    double
      nan [✔]
      nan f [✔]
      nan e [✔]
      nan g [✔]
      nan F [✔]
      nan G [✔]
      nan E [✔]
  Infinite
    float
      infinite [✔]
      infinite f [✔]
      infinite e [✔]
      infinite g [✔]
      infinite F [✔]
      infinite G [✔]
      infinite E [✔]
    double
      infinite [✔]
      infinite f [✔]
      infinite e [✔]
      infinite g [✔]
      infinite F [✔]
      infinite G [✔]
      infinite E [✔]
  Grouping
    groups int [✔]
    groups int with _ [✔]
    groups float [✔]
    groups bin [✔]
    groups hex [✔]
    groups oct [✔]
  negative zero
    f [✔]
    e [✔]
    g [✔]
    F [✔]
    G [✔]
    E [✔]
  0
    works [✔]
    works with sign [✔]
    accept mode override [✔]
    accept mode and char override [✔]
  no digit no dot
    f [✔]
    e [✔]
    g [✔]
    E [✔]
    G [✔]
    percent [✔]
  no digit alt -> dot
    f [✔]
    e [✔]
    g [✔]
    E [✔]
    G [✔]
    percent [✔]
complex
  works with many things at once [✔]
sub expressions
  works [✔]
escape strings
  works [✔]
variable precision
  works [✔]
variable padding
  works [✔]
escape chars [✔]
custom delimiters
  works [✔]
  escape chars [✔]
  works for custom precision [✔]
empty line
  works [✔]
multi line escape
  works [✔]
  escapes in middle of line [✔]
  escapes a lot of things [✔]
  escapes [✔]
empty trailing value
  String [✔]
language extensions
  parses @Int [✔]
  parses @_ [✔]
  parses BinaryLiterals [✔]
  OverloadedLabels works [✔]
custom types
  works with integral [✔]
  works with floating [✔]
  works with string [✔]
  works with classify [✔]
Special syntax 
  [] is correct expression [✔]
  () is correct expression [✔]
instances
  default
    bytestring [✔]
    bytestring lazy [✔]
    bytestring char 8 lazy [✔]
    bytestring char 8 [✔]
    text [✔]
    lazy text [✔]
    DiffTime [✔]
    NominalDiffTime [✔]
    Ratio [✔]
    Int [✔]
    Char [✔]
  forced
    bytestring [✔]
    bytestring lazy [✔]
    bytestring char 8 lazy [✔]
    bytestring char 8 [✔]
    text [✔]
    lazy text [✔]
    DiffTime [✔]
    NominalDiffTime [✔]
    Ratio [✔]
    int
      decimal [✔]
      fractional [✔]
    Char
      string [✔]
      int [✔]
syntax
  name
    qualified [✔]
  literals
    list [✔]
    arith seq
      from [✔]
      fromthen [✔]
      fromto [✔]
      fromthento [✔]
  lambda [✔]
  section [✔]
  tuples [✔]
multiline trimming
  works with overloading [✔]
  overloading in overloading [✔]
  do not fail on trailing ignore line return [✔]
  do not take too much indent in account [✔]
  works with empty lines [✔]
  works with empty last lines [✔]
  works [✔]
  works with replacement [✔]
  Do not ignore not indented lines [✔]
  works with multiline [✔]
  behaves well with escaped first line [✔]
  Do not touch single lines [✔]
raw
  does not escape anything [✔]
str
  basic escaping but no indentation neither formatting [✔]
strTrim
  basic escaping neither formatting [✔]
handle ::
  works in simple context [✔]
  works in a padding = context [✔]
  works in a padding < context [✔]
  works in a padding > context [✔]
  works in a padding ^ context [✔]
variables
  local [✔]
  global [✔]
  multiple expressions with variables [✔]
  an expression with multiples variables [✔]
  an expression with module.variable [✔]

Finished in 0.0078 seconds
204 examples, 0 failures
Test suite pyf-test: PASS
Test suite logged to:
/tmp/workdir-PyF/PyF-0.11.3.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/PyF-0.11.3.0/t/pyf-test/test/PyF-0.11.3.0-pyf-test.log
1 of 1 test suites (1 of 1 test cases) passed.
