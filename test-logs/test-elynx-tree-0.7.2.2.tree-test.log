Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - elynx-tree-0.7.2.2 (test:tree-test) (ephemeral targets)
Preprocessing test suite 'tree-test' for elynx-tree-0.7.2.2...
Building test suite 'tree-test' for elynx-tree-0.7.2.2...
Running 1 test suites...
Test suite tree-test: RUNNING...

ELynx.Topology.Rooted
  Topology
    has reasonable applicative take right instance [✔]
      +++ OK, passed 100 tests.
    has reasonable applicative take left instance [✔]
      +++ OK, passed 100 tests.
    has reasonable applicative liftA2 instance [✔]
      +++ OK, passed 100 tests.
    has reasonable applicative and functor instances [✔]
      +++ OK, passed 100 tests.
    Functor
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Const [✔]
        +++ OK, passed 100 tests.
    Foldable
      fold [✔]
        +++ OK, passed 100 tests.
      foldMap [✔]
        +++ OK, passed 100 tests.
      foldr [✔]
        +++ OK, passed 100 tests.
      foldr' [✔]
        +++ OK, passed 100 tests.
      foldl [✔]
        +++ OK, passed 100 tests.
      foldl' [✔]
        +++ OK, passed 100 tests.
      foldl1 [✔]
        +++ OK, passed 100 tests.
      foldr1 [✔]
        +++ OK, passed 100 tests.
      toList [✔]
        +++ OK, passed 100 tests.
      null [✔]
        +++ OK, passed 100 tests.
      length [✔]
        +++ OK, passed 100 tests.
    Traversable
      Naturality [✔]
        +++ OK, passed 100 tests.
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Sequence Naturality [✔]
        +++ OK, passed 100 tests.
      Sequence Identity [✔]
        +++ OK, passed 100 tests.
      Sequence Composition [✔]
        +++ OK, passed 100 tests.
      foldMap [✔]
        +++ OK, passed 100 tests.
      fmap [✔]
        +++ OK, passed 100 tests.
    Applicative
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Homomorphism [✔]
        +++ OK, passed 100 tests.
      Interchange [✔]
        +++ OK, passed 100 tests.
      LiftA2 Part 1 [✔]
        +++ OK, passed 100 tests.
    Monad
      Left Identity [✔]
        +++ OK, passed 100 tests.
      Right Identity [✔]
        +++ OK, passed 100 tests.
      Associativity [✔]
        +++ OK, passed 100 tests.
      Return [✔]
        +++ OK, passed 100 tests.
      Ap [✔]
        +++ OK, passed 100 tests.
ELynx.Tree.Bipartition
  bipartitions
    calculates correct bipartitions for sample trees [✔]
  bipartitionToBranch
    creates a map from bipartitions to branch lengths [✔]
ELynx.Tree.Distance
  symmetric
    calculates correct distances for sample trees [✔]
    is zero for a collection of random trees [✔]
      +++ OK, passed 100 tests.
  incompatibleSplit
    calculates correct distances for sample trees [✔]
    calculates correct distances for sample trees with branch support [✔]
    is zero for a collection of random trees [✔]
      +++ OK, passed 100 tests.
  branchScore
    calculates correct distances for sample trees [✔]
    is zero for a collection of random trees [✔]
      +++ OK, passed 100 tests.
ELynx.Tree.Export.Newick
  parseByteStringWith newick $ toNewickPhyloByteString
    should be an invariant for a sample tree [✔]
    should be an invariant for a sample tree [✔]
      +++ OK, passed 100 tests.
ELynx.Tree.Export.Nexus
  toNexusTrees
    exports a nexus file with a TREES block [✔]
ELynx.Tree.Import.Newick
  newick
    parses newick trees [✔]
    parses a weird newick tree without node labels nor branch lengths [✔]
  newickRevBayes
    parses newick trees in RevBayes format [✔]
ELynx.Tree.Import.Nexus
  trees
    parses a nexus file with a TREES block [✔]
ELynx.Tree.Partition
  partitions
    calculates correct partitions for a sample tree [✔]
ELynx.Tree.Phylogeny
  equal
    correctly handles some test cases [✔]
    is commutative [✔]
      +++ OK, passed 100 tests.
  roots
    correctly handles leaves and cherries [✔]
    correctly handles simple trees [✔]
    returns the correct number of rooted trees for arbitrary trees [✔]
      +++ OK, passed 100 tests.
    does not change the total tree length [✔]
      +++ OK, passed 100 tests.
  outgroup
    correctly handles simple trees [✔]
ELynx.Tree.Rooted
  Tree
    [Applicative] Reasonable take right instance [✔]
      +++ OK, passed 100 tests.
    [Applicative] Reasonable take left instance [✔]
      +++ OK, passed 100 tests.
    [Applicative] Reasonable liftA2 instance [✔]
      +++ OK, passed 100 tests.
    [Functor/Applicative] Reasonable fmap/pure functions [✔]
      +++ OK, passed 100 tests.
    Functor
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Const [✔]
        +++ OK, passed 100 tests.
    Bifunctor
      Identity [✔]
        +++ OK, passed 100 tests.
      First Identity [✔]
        +++ OK, passed 100 tests.
      Second Identity [✔]
        +++ OK, passed 100 tests.
      Bifunctor Composition [✔]
        +++ OK, passed 100 tests.
    Foldable
      fold [✔]
        +++ OK, passed 100 tests.
      foldMap [✔]
        +++ OK, passed 100 tests.
      foldr [✔]
        +++ OK, passed 100 tests.
      foldr' [✔]
        +++ OK, passed 100 tests.
      foldl [✔]
        +++ OK, passed 100 tests.
      foldl' [✔]
        +++ OK, passed 100 tests.
      foldl1 [✔]
        +++ OK, passed 100 tests.
      foldr1 [✔]
        +++ OK, passed 100 tests.
      toList [✔]
        +++ OK, passed 100 tests.
      null [✔]
        +++ OK, passed 100 tests.
      length [✔]
        +++ OK, passed 100 tests.
    Bifoldable
      Bifold Identity [✔]
        +++ OK, passed 100 tests.
      BifoldMap Identity [✔]
        +++ OK, passed 100 tests.
      Bifoldr Identity [✔]
        +++ OK, passed 100 tests.
    Traversable
      Naturality [✔]
        +++ OK, passed 100 tests.
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Sequence Naturality [✔]
        +++ OK, passed 100 tests.
      Sequence Identity [✔]
        +++ OK, passed 100 tests.
      Sequence Composition [✔]
        +++ OK, passed 100 tests.
      foldMap [✔]
        +++ OK, passed 100 tests.
      fmap [✔]
        +++ OK, passed 100 tests.
    Bitraversable
      Naturality [✔]
        +++ OK, passed 100 tests.
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
    Applicative
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Homomorphism [✔]
        +++ OK, passed 100 tests.
      Interchange [✔]
        +++ OK, passed 100 tests.
      LiftA2 Part 1 [✔]
        +++ OK, passed 100 tests.
    Monad
      Left Identity [✔]
        +++ OK, passed 100 tests.
      Right Identity [✔]
        +++ OK, passed 100 tests.
      Associativity [✔]
        +++ OK, passed 100 tests.
      Return [✔]
        +++ OK, passed 100 tests.
      Ap [✔]
        +++ OK, passed 100 tests.
  BranchTree
    [Functor] Treats branches correctly with fmap [✔]
      +++ OK, passed 100 tests.
    [Traversable] Equal traversable instance as Tree [✔]
      +++ OK, passed 100 tests.
    [Applicative] Reasonable take right instance [✔]
      +++ OK, passed 100 tests.
    [Applicative] Reasonable take left instance [✔]
      +++ OK, passed 100 tests.
    [Applicative] Reasonable liftA2 instance [✔]
      +++ OK, passed 100 tests.
    [Functor/Applicative] Reasonable fmap/pure functions [✔]
      +++ OK, passed 100 tests.
    Functor
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Const [✔]
        +++ OK, passed 100 tests.
    Foldable
      fold [✔]
        +++ OK, passed 100 tests.
      foldMap [✔]
        +++ OK, passed 100 tests.
      foldr [✔]
        +++ OK, passed 100 tests.
      foldr' [✔]
        +++ OK, passed 100 tests.
      foldl [✔]
        +++ OK, passed 100 tests.
      foldl' [✔]
        +++ OK, passed 100 tests.
      foldl1 [✔]
        +++ OK, passed 100 tests.
      foldr1 [✔]
        +++ OK, passed 100 tests.
      toList [✔]
        +++ OK, passed 100 tests.
      null [✔]
        +++ OK, passed 100 tests.
      length [✔]
        +++ OK, passed 100 tests.
    Traversable
      Naturality [✔]
        +++ OK, passed 100 tests.
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Sequence Naturality [✔]
        +++ OK, passed 100 tests.
      Sequence Identity [✔]
        +++ OK, passed 100 tests.
      Sequence Composition [✔]
        +++ OK, passed 100 tests.
      foldMap [✔]
        +++ OK, passed 100 tests.
      fmap [✔]
        +++ OK, passed 100 tests.
    Applicative
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Homomorphism [✔]
        +++ OK, passed 100 tests.
      Interchange [✔]
        +++ OK, passed 100 tests.
      LiftA2 Part 1 [✔]
        +++ OK, passed 100 tests.
  ZipTree
    [Applicative] Reasonable take right instance [✔]
      +++ OK, passed 100 tests.
    [Applicative] Reasonable take left instance [✔]
      +++ OK, passed 100 tests.
    [Applicative] Reasonable liftA2 instance [✔]
      +++ OK, passed 100 tests.
    [Functor/Applicative] Reasonable fmap/pure functions [✔]
      +++ OK, passed 100 tests.
    Functor
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Const [✔]
        +++ OK, passed 100 tests.
    Foldable
      fold [✔]
        +++ OK, passed 100 tests.
      foldMap [✔]
        +++ OK, passed 100 tests.
      foldr [✔]
        +++ OK, passed 100 tests.
      foldr' [✔]
        +++ OK, passed 100 tests.
      foldl [✔]
        +++ OK, passed 100 tests.
      foldl' [✔]
        +++ OK, passed 100 tests.
      foldl1 [✔]
        +++ OK, passed 100 tests.
      foldr1 [✔]
        +++ OK, passed 100 tests.
      toList [✔]
        +++ OK, passed 100 tests.
      null [✔]
        +++ OK, passed 100 tests.
      length [✔]
        +++ OK, passed 100 tests.
    Traversable
      Naturality [✔]
        +++ OK, passed 100 tests.
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Sequence Naturality [✔]
        +++ OK, passed 100 tests.
      Sequence Identity [✔]
        +++ OK, passed 100 tests.
      Sequence Composition [✔]
        +++ OK, passed 100 tests.
      foldMap [✔]
        +++ OK, passed 100 tests.
      fmap [✔]
        +++ OK, passed 100 tests.
    Applicative
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Interchange [✔]
        +++ OK, passed 100 tests.
      LiftA2 Part 1 [✔]
        +++ OK, passed 100 tests.
  ZipBranchTree
    [Applicative] Reasonable take right instance [✔]
      +++ OK, passed 100 tests.
    [Applicative] Reasonable take left instance [✔]
      +++ OK, passed 100 tests.
    [Applicative] Reasonable liftA2 instance [✔]
      +++ OK, passed 100 tests.
    [Functor/Applicative] Reasonable fmap/pure functions [✔]
      +++ OK, passed 100 tests.
    Functor
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Const [✔]
        +++ OK, passed 100 tests.
    Foldable
      fold [✔]
        +++ OK, passed 100 tests.
      foldMap [✔]
        +++ OK, passed 100 tests.
      foldr [✔]
        +++ OK, passed 100 tests.
      foldr' [✔]
        +++ OK, passed 100 tests.
      foldl [✔]
        +++ OK, passed 100 tests.
      foldl' [✔]
        +++ OK, passed 100 tests.
      foldl1 [✔]
        +++ OK, passed 100 tests.
      foldr1 [✔]
        +++ OK, passed 100 tests.
      toList [✔]
        +++ OK, passed 100 tests.
      null [✔]
        +++ OK, passed 100 tests.
      length [✔]
        +++ OK, passed 100 tests.
    Traversable
      Naturality [✔]
        +++ OK, passed 100 tests.
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Sequence Naturality [✔]
        +++ OK, passed 100 tests.
      Sequence Identity [✔]
        +++ OK, passed 100 tests.
      Sequence Composition [✔]
        +++ OK, passed 100 tests.
      foldMap [✔]
        +++ OK, passed 100 tests.
      fmap [✔]
        +++ OK, passed 100 tests.
    Applicative
      Identity [✔]
        +++ OK, passed 100 tests.
      Composition [✔]
        +++ OK, passed 100 tests.
      Interchange [✔]
        +++ OK, passed 100 tests.
      LiftA2 Part 1 [✔]
        +++ OK, passed 100 tests.
  ZipTree and ZipBranchTree
    [Applicative] Somewhat corresponding instances of <*> [✔]
      +++ OK, passed 100 tests.
    [Traversable] Somewhat correspnding instances of traverse [✔]
      +++ OK, passed 100 tests.
  prune
    leaves a normal tree untouched [✔]
    correctly prunes a small example [✔]
    leaves height constant for trees with branch lengths [✔]
  dropLeavesWith
    returns the same tree if no leaves satisfy predicate [✔]
    returns nothing if all leaves satisfy predicate [✔]
    returns the correct subtree for a small example [✔]
ELynx.Tree.Support
  collapse
    creates a star tree for 1.0 [✔]

Finished in 4.1246 seconds
208 examples, 0 failures
Test suite tree-test: PASS
Test suite logged to:
/tmp/workdir-elynx-tree/elynx-tree-0.7.2.2/dist-newstyle/build/x86_64-linux/ghc-9.6.6/elynx-tree-0.7.2.2/t/tree-test/test/elynx-tree-0.7.2.2-tree-test.log
1 of 1 test suites (1 of 1 test cases) passed.
