Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - general-games-1.1.1 (test:general-games-test) (ephemeral targets)
Preprocessing test suite 'general-games-test' for general-games-1.1.1...
Building test suite 'general-games-test' for general-games-1.1.1...
Running 1 test suites...
Test suite general-games-test: RUNNING...

Game.Implement.Card.draw (PlayingCard)
  returns drawn hands from a deck, plus the remaining deck [✔]
  returns Nothing when trying to return more cards than in deck [✔]
  returns Nothing when trying to return negative cards [✔]
Game.Implement.Card.fullDeck (PlayingCard)
  returns 52 cards [✔]
  returns unique cards [✔]
Game.Game.Poker.compareCardBy
  orders low to high by default, check ace low [✔]
  orders low to high by default, check ace high [✔]
Game.Game.Poker.isHand
  confirms that an Ace low straight flush exists [✔]
  confirms that an Ace high straight flush is not Ace low [✔]
  confirms that an Ace high straight flush exists [✔]
Game.Implement.Card.Standard.Poker.isRoyalFlush
  confirms that [AH, QH, KH, JH, TH] is a Royal Flush [✔]
  confirms that [AH, QH, 8H, JH, TH] is not a Royal Flush [✔]
Game.Game.Poker.randomHighCard
  returns a HighCard of typeOfPokerHand HighCard [✔]
  returns 100000 random HighCards [✔]
Game.Game.Poker.randomPair
  returns a Pair of typeOfPokerHand Pair [✔]
  returns 100000 random Pairs [✔]
Game.Game.Poker.randomTwoPair
  returns a TwoPair of typeOfPokerHand TwoPair [✔]
  returns 100000 random TwoPairs [✔]
Game.Game.Poker.randomThreeOfAKind
  returns a ThreeOfAKind of typeOfPokerHand ThreeOfAKind [✔]
  returns 100000 random ThreeOfAKinds [✔]
Game.Game.Poker.randomStraight
  returns a Straight of typeOfPokerHand Straight [✔]
  returns 100000 random Straights [✔]
Game.Game.Poker.randomFlush
  returns a Flush of typeOfPokerHand Flush [✔]
  returns 100000 random Flushes [✔]
Game.Game.Poker.randomFullHouse
  returns a FullHouse of typeOfPokerHand FullHouse [✔]
  returns 100000 random Full Houses [✔]
Game.Game.Poker.randomFourOfAKind
  returns a FourOfAKind of typeOfPokerHand FourOfAKind [✔]
  returns 100000 random Four-of-a-Kinds [✔]
Game.Game.Poker.randomStraightFlush
  returns a StraightFlush of typeOfPokerHand StraightFlush [✔]
  returns 100000 random Straight Flushes [✔]
Game.Game.Poker.randomRoyalFlush
  returns a RoyalFlush of typeOfPokerHand RoyalFlush [✔]
  returns 100000 random Royal Flushes [✔]
Game.Implement.Card.shuffle (PlayingCard)
  returns 10000 different fullDeck shuffles using the global random generator [✔]
Game.Game.Poker allPossibleHands / mkHand / isHand functions
  confirms that sets of each hand are disjoint and that total count correct [✔]
  confirms the total number of poker hands [✔]
  confirms the total number of royal flushes [✔]
  confirms the total number of straight flushes [✔]
  confirms the total number of four-of-a-kinds [✔]
  confirms the total number of full houses [✔]
  confirms the total number of flushes [✔]
  confirms the total number of straights [✔]
  confirms the total number of three-of-a-kinds [✔]
  confirms the total number of two-pairs [✔]
  confirms the total number of pairs [✔]
  confirms the total number of high card hands [✔]

Finished in 55.0392 seconds
45 examples, 0 failures
Test suite general-games-test: PASS
Test suite logged to:
/tmp/workdir-general-games/general-games-1.1.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/general-games-1.1.1/t/general-games-test/test/general-games-1.1.1-general-games-test.log
1 of 1 test suites (1 of 1 test cases) passed.
