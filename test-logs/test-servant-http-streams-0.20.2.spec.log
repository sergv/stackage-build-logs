Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - servant-http-streams-0.20.2 (test:spec) (ephemeral targets)
Preprocessing test suite 'spec' for servant-http-streams-0.20.2...
Building test suite 'spec' for servant-http-streams-0.20.2...
Running 1 test suites...
Test suite spec: RUNNING...

Servant.Client
  Servant.HttpStreams
    Servant.API.Get root [✔]
    Servant.API.Get [✔]
    Servant.API.Delete
      allows empty content type [✔]
      allows content type [✔]
    Servant.API.Capture [✔]
    Servant.API.CaptureAll [✔]
    Servant.API.ReqBody [✔]
    Servant.API FailureResponse [✔]
    Servant.API.QueryParam [✔]
    Servant.API.QueryParam.QueryParams [✔]
    Servant.API.QueryParam.QueryFlag
      False [✔]
      True [✔]
    Servant.API.Raw on success [✔]
    Servant.API.Raw should return a Left in case of failure [✔]
    Returns headers appropriately [✔]
    works for a combination of Capture, QueryParam, QueryFlag and ReqBody [✔]
      +++ OK, passed 20 tests.
    client returns errors appropriately
      reports FailureResponse [✔]
      reports DecodeFailure [✔]
      reports ConnectionError [‐]
        # PENDING: No reason given
      reports UnsupportedContentType [✔]
      reports InvalidContentTypeHeader [✔]
    error status codes
      are correctly handled by the client
        Delete [✔]
        Get [✔]
        Post [✔]
        Put [✔]
    Authentication works when requests are properly authenticated
      Authenticates a BasicAuth protected server appropriately [✔]
    Authentication is rejected when requests are not authenticated properly
      Authenticates a BasicAuth protected server appropriately [✔]
    Authentication works when requests are properly authenticated
      Authenticates a AuthProtect protected server appropriately [✔]
    Authentication is rejected when requests are not authenticated properly
      Authenticates a AuthProtect protected server appropriately [✔]
    Servant.Client.hoistClient
      allows us to GET/POST/... requests in IO instead of ClientM [✔]
    Servant.Client.ClientError
      correctly catches ConnectionErrors when the HTTP request can't go through [‐]
        # PENDING: No reason given
Servant.Stream
  Servant.HttpStreams streaming
    works with Servant.API.StreamGet.Newline [✔]
    works with Servant.API.StreamGet.Netstring [✔]
    works with Servant.API.StreamBody [✔]

Finished in 0.0762 seconds
34 examples, 0 failures, 2 pending
Test suite spec: PASS
Test suite logged to:
/tmp/workdir-servant-http-streams/servant-http-streams-0.20.2/dist-newstyle/build/x86_64-linux/ghc-9.6.6/servant-http-streams-0.20.2/t/spec/test/servant-http-streams-0.20.2-spec.log
1 of 1 test suites (1 of 1 test cases) passed.
