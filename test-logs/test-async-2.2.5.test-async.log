Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - async-2.2.5 (test:test-async) (ephemeral targets)
Preprocessing test suite 'test-async' for async-2.2.5...
Building test suite 'test-async' for async-2.2.5...
Running 1 test suites...
Test suite test-async: RUNNING...
async_wait: [OK]
async_waitCatch: [OK]
async_exwait: [OK]
async_exwaitCatch: [OK]
withasync_waitCatch: [OK]
withasync_wait2: [OK]
async_cancel_rep:
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
  async_cancel: [OK]
async_cancelmany: [OK]
async_poll: [OK]
async_poll2: [OK]
withasync_waitCatch_blocked: [OK]
withasync_wait_blocked: [OK]
children surviving too long:
  concurrently+success: [OK]
  concurrently+failure: [OK]
  concurrentlyE+success: [OK]
  concurrentlyE+failure: [OK]
  race+success: [OK]
  race+failure: [OK]
  cancel: [OK]
  withAsync: [OK]
concurrently_: [OK]
replicateConcurrently_: [OK]
replicateConcurrently: [OK]
link1: [OK]
link2: [OK]
link1_cancel: [OK]
concurrently_deadlock: [OK]
concurrentlyE_deadlock: [OK]
concurrentlyE:
  concurrentlyE_right: [OK]
  concurrentlyE_left1: [OK]
  concurrentlyE_left2: [OK]
  concurrentlyE_earlyException: [OK]
  concurrentlyE_lateException: [OK]
  concurrentlyE_Monoid: [OK]
  concurrentlyE_Monoid_fail: [OK]

         Test Cases  Total 
 Passed  1034        1034  
 Failed  0           0     
 Total   1034        1034  
Test suite test-async: PASS
Test suite logged to:
/tmp/workdir-async/async-2.2.5/dist-newstyle/build/x86_64-linux/ghc-9.6.6/async-2.2.5/t/test-async/test/async-2.2.5-test-async.log
1 of 1 test suites (1 of 1 test cases) passed.
