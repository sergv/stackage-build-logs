Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - midi-0.2.2.4 (test:test) (ephemeral targets)
Preprocessing test suite 'test' for midi-0.2.2.4...
Building test suite 'test' for midi-0.2.2.4...
Running 1 test suites...
Test suite test: RUNNING...
True
True
True
True
saveLoadByteString: +++ OK, passed 100 tests.
saveLoadCompressedByteString: +++ OK, passed 100 tests.
saveLoadCompressedByteString sorted: +++ OK, passed 100 tests.
saveLoadMaybeByteList: +++ OK, passed 100 tests.
saveLoadByteList: +++ OK, passed 100 tests.
loadSaveByteString: +++ OK, passed 100 tests.
loadSaveCompressedByteString: +++ OK, passed 100 tests.
loadSaveCompressedByteString sorted: +++ OK, passed 100 tests.
loadSaveByteList: +++ OK, passed 100 tests.
compressionShortens: +++ OK, passed 100 tests.
compressionStrictlyShortens: +++ OK, passed 100 tests; 82 discarded.
restrictionByteList: +++ OK, passed 100 tests.
lazinessZeroOrMoreByteList: +++ OK, passed 100 tests.
lazinessByteList: +++ OK, passed 100 tests.
corruptionByteList: +++ OK, passed 100 tests.
corruptionByteString: *** Failed! (after 17 tests and 47 shrinks):
Exception:
  Data.Binary.Get.runGet at position 121: not enough bytes
  CallStack (from HasCallStack):
    error, called at libraries/binary/src/Data/Binary/Get.hs:345:5 in binary-0.8.9.1:Data.Binary.Get
-468
0
Cons Serial (SMPTE 112 8) [0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 52}) (Velocity {fromVelocity = 10}))}) ./ empty,0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 114}) (Velocity {fromVelocity = 29}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 7}) (Velocity {fromVelocity = 42}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 53}) (Velocity {fromVelocity = 50}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 44}) (Velocity {fromVelocity = 42}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Mode PolyMode}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (PolyAftertouch (Pitch {fromPitch = 67}) 39)}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (MonoAftertouch 94)}) ./ empty,0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 22}) (Velocity {fromVelocity = 11}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (Control (Controller {fromController = 107}) 108)}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 9}) (Velocity {fromVelocity = 76}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 8}, messageBody = Voice (NoteOn (Pitch {fromPitch = 7}) (Velocity {fromVelocity = 27}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 79}) (Velocity {fromVelocity = 115}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 96}) (Velocity {fromVelocity = 41}))}) ./ empty,0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 97}) (Velocity {fromVelocity = 47}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (Control (Controller {fromController = 20}) 80)}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 85}) (Velocity {fromVelocity = 116}))}) ./ empty,0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 16}) (Velocity {fromVelocity = 74}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (ProgramChange (Program {fromProgram = 70}))}) ./ 0 /. MetaEvent (Marker "yQia8NYMiKNs58Y9") ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 37}) (Velocity {fromVelocity = 92}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 119}) (Velocity {fromVelocity = 32}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 103}) (Velocity {fromVelocity = 71}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 4}, messageBody = Voice (NoteOn (Pitch {fromPitch = 113}) (Velocity {fromVelocity = 58}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 40}) (Velocity {fromVelocity = 43}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 52}) (Velocity {fromVelocity = 12}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (PolyAftertouch (Pitch {fromPitch = 7}) 18)}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 109}) (Velocity {fromVelocity = 11}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 22}) (Velocity {fromVelocity = 71}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 124}) (Velocity {fromVelocity = 8}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 4}, messageBody = Mode (LocalControl True)}) ./ empty,0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (ProgramChange (Program {fromProgram = 34}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 105}) (Velocity {fromVelocity = 87}))}) ./ empty,0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 66}) (Velocity {fromVelocity = 34}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 89}) (Velocity {fromVelocity = 8}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 7}, messageBody = Voice (NoteOff (Pitch {fromPitch = 56}) (Velocity {fromVelocity = 19}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (ProgramChange (Program {fromProgram = 86}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (MonoAftertouch 54)}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (Control (Controller {fromController = 110}) 69)}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 66}) (Velocity {fromVelocity = 108}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 42}) (Velocity {fromVelocity = 0}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 62}) (Velocity {fromVelocity = 99}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 68}) (Velocity {fromVelocity = 64}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOff (Pitch {fromPitch = 106}) (Velocity {fromVelocity = 6}))}) ./ 0 /. MIDIEvent (Cons {messageChannel = Channel {fromChannel = 3}, messageBody = Voice (NoteOn (Pitch {fromPitch = 2}) (Velocity {fromVelocity = 62}))}) ./ empty]
Test suite test: PASS
Test suite logged to:
/tmp/workdir-midi/midi-0.2.2.4/dist-newstyle/build/x86_64-linux/ghc-9.6.6/midi-0.2.2.4/t/test/test/midi-0.2.2.4-test.log
1 of 1 test suites (1 of 1 test cases) passed.
