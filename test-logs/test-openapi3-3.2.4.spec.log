Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - openapi3-3.2.4 (ephemeral targets)
Preprocessing library for openapi3-3.2.4..
Building library for openapi3-3.2.4..
Preprocessing test suite 'doctests' for openapi3-3.2.4..
Building test suite 'doctests' for openapi3-3.2.4..
Preprocessing executable 'example' for openapi3-3.2.4..
Building executable 'example' for openapi3-3.2.4..
[2 of 2] Linking /tmp/workdir-openapi3/openapi3-3.2.4/dist-newstyle/build/x86_64-linux/ghc-9.6.6/openapi3-3.2.4/build/example/example [Library changed]
Preprocessing test suite 'spec' for openapi3-3.2.4..
Building test suite 'spec' for openapi3-3.2.4..
[9 of 9] Linking /tmp/workdir-openapi3/openapi3-3.2.4/dist-newstyle/build/x86_64-linux/ghc-9.6.6/openapi3-3.2.4/build/spec/spec [Library changed]
Running 1 test suites...
Test suite spec: RUNNING...

Data.OpenApi
  License Object
    encodes correctly [✔]
    decodes correctly [✔]
    roundtrips: eitherDecode . encode [✔]
    roundtrips with toJSON [✔]
    roundtrips with toEncoding [✔]
  Contact Object
    encodes correctly [✔]
    decodes correctly [✔]
    roundtrips: eitherDecode . encode [✔]
    roundtrips with toJSON [✔]
    roundtrips with toEncoding [✔]
  Info Object
    encodes correctly [✔]
    decodes correctly [✔]
    roundtrips: eitherDecode . encode [✔]
    roundtrips with toJSON [✔]
    roundtrips with toEncoding [✔]
  Operation Object
    encodes correctly [✔]
    decodes correctly [✔]
    roundtrips: eitherDecode . encode [✔]
    roundtrips with toJSON [✔]
    roundtrips with toEncoding [✔]
  Schema Object
    Primitive Sample
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Simple Model
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Model with Map/Dictionary Properties
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Model with Arbitrary Properties
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Model with Example
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
  Definitions Object
    encodes correctly [✔]
    decodes correctly [✔]
    roundtrips: eitherDecode . encode [✔]
    roundtrips with toJSON [✔]
    roundtrips with toEncoding [✔]
  Parameters Definition Object
    encodes correctly [✔]
    decodes correctly [✔]
    roundtrips: eitherDecode . encode [✔]
    roundtrips with toJSON [✔]
    roundtrips with toEncoding [✔]
  Responses Definition Object
    encodes correctly [✔]
    decodes correctly [✔]
    roundtrips: eitherDecode . encode [✔]
    roundtrips with toJSON [✔]
    roundtrips with toEncoding [✔]
  Security Definitions Object
    encodes correctly [✔]
    decodes correctly [✔]
    roundtrips: eitherDecode . encode [✔]
    roundtrips with toJSON [✔]
    roundtrips with toEncoding [✔]
  OAuth2 Security Definitions with merged Scope
    encodes correctly [✔]
    decodes correctly [✔]
    roundtrips: eitherDecode . encode [✔]
    roundtrips with toJSON [✔]
    roundtrips with toEncoding [✔]
  OAuth2 Security Definitions with empty Scope
    encodes correctly [✔]
    decodes correctly [✔]
    roundtrips: eitherDecode . encode [✔]
    roundtrips with toJSON [✔]
    roundtrips with toEncoding [✔]
  Composition Schema Example
    encodes correctly [✔]
    decodes correctly [✔]
    roundtrips: eitherDecode . encode [✔]
    roundtrips with toJSON [✔]
    roundtrips with toEncoding [✔]
  Swagger Object
    Example with no paths
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
      fails to parse a spec with a wrong Openapi spec version [✔]
    Todo Example
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    PetStore Example
      decodes successfully [✔]
      roundtrips: fmap toJSON . fromJSON [✔]
    Security schemes
      merged correctly [✔]
Data.OpenApi.ParamSchema
  Generic ToParamSchema
    Unit
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Color (bounded enum)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Status (constructorTagModifier)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Unary records
      Email (unary record)
        encodes correctly [✔]
        decodes correctly [✔]
        roundtrips: eitherDecode . encode [✔]
        roundtrips with toJSON [✔]
        roundtrips with toEncoding [✔]
      UserId (non-record newtype)
        encodes correctly [✔]
        decodes correctly [✔]
        roundtrips: eitherDecode . encode [✔]
        roundtrips with toJSON [✔]
        roundtrips with toEncoding [✔]
    TimeOfDay
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
Data.OpenApi.Schema
  Generic ToSchema
    Unit
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Person
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    ISPair
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Point (fieldLabelModifier)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Point5 (many field record)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
      has these fields in order ["x","y","z","u","v"] [✔]
    Color (bounded enum)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Shade (paramSchemaToNamedSchema)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Paint (record with bounded enum field)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    UserGroup (set newtype)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Unary records
      Email (unwrapUnaryRecords)
        encodes correctly [✔]
        decodes correctly [✔]
        roundtrips: eitherDecode . encode [✔]
        roundtrips with toJSON [✔]
        roundtrips with toEncoding [✔]
      UserId (non-record newtype)
        encodes correctly [✔]
        decodes correctly [✔]
        roundtrips: eitherDecode . encode [✔]
        roundtrips with toJSON [✔]
        roundtrips with toEncoding [✔]
      Player (unary record)
        encodes correctly [✔]
        decodes correctly [✔]
        roundtrips: eitherDecode . encode [✔]
        roundtrips with toJSON [✔]
        roundtrips with toEncoding [✔]
      SingleMaybeField (unary record with Maybe)
        encodes correctly [✔]
        decodes correctly [✔]
        roundtrips: eitherDecode . encode [✔]
        roundtrips with toJSON [✔]
        roundtrips with toEncoding [✔]
      Natural Language (single field data with recursive fields)
        encodes correctly [✔]
        decodes correctly [✔]
        roundtrips: eitherDecode . encode [✔]
        roundtrips with toJSON [✔]
        roundtrips with toEncoding [✔]
    Players (inlining schema)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    MyRoseTree (datatypeNameModifier)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    MyRoseTree' (datatypeNameModifier)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Sum types
      Status (sum of unary constructors)
        encodes correctly [✔]
        decodes correctly [✔]
        roundtrips: eitherDecode . encode [✔]
        roundtrips with toJSON [✔]
        roundtrips with toEncoding [✔]
      Character (ref and record sum)
        encodes correctly [✔]
        decodes correctly [✔]
        roundtrips: eitherDecode . encode [✔]
        roundtrips with toJSON [✔]
        roundtrips with toEncoding [✔]
      Light (sum with unwrapUnaryRecords)
        encodes correctly [✔]
        decodes correctly [✔]
        roundtrips: eitherDecode . encode [✔]
        roundtrips with toJSON [✔]
        roundtrips with toEncoding [✔]
    UnsignedInts
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Schema name
      String
        schema name is Nothing [✔]
      (Int, Float)
        schema name is Nothing [✔]
      Person
        schema name is Just "Person" [✔]
      Shade
        schema name is Just "Shade" [✔]
  Generic Definitions
    Unit
      uses these definitions [] [✔]
    Paint
      uses these definitions ["Color"] [✔]
    Light
      uses these definitions ["Color"] [✔]
    Character
      uses these definitions ["Player","Point"] [✔]
    MyRoseTree
      uses these definitions ["RoseTree"] [✔]
    MyRoseTree'
      uses these definitions ["myrosetree'"] [✔]
    [Set (Unit, Maybe Color)]
      uses these definitions ["Unit","Color"] [✔]
    ResourceId
      uses these definitions [] [✔]
  Inlining Schemas
    Paint
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Character
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Character (inlining only Player)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    Light
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    MyRoseTree (inlineNonRecursiveSchemas)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    MyRoseTree' (inlineNonRecursiveSchemas)
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
  Bounded Enum key mapping
    ButtonImages
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
    TimeOfDay
      encodes correctly [✔]
      decodes correctly [✔]
      roundtrips: eitherDecode . encode [✔]
      roundtrips with toJSON [✔]
      roundtrips with toEncoding [✔]
Data.OpenApi.Schema.Generator
  FromJSON validation
    Bool [✔]
      +++ OK, passed 100 tests.
    Char [✔]
      +++ OK, passed 100 tests.
    Double [✔]
      +++ OK, passed 100 tests.
    Float [✔]
      +++ OK, passed 100 tests.
    Int [✔]
      +++ OK, passed 100 tests.
    Int8 [✔]
      +++ OK, passed 100 tests.
    Int16 [✔]
      +++ OK, passed 100 tests.
    Int32 [✔]
      +++ OK, passed 100 tests.
    Int64 [✔]
      +++ OK, passed 100 tests.
    Integer [✔]
      +++ OK, passed 100 tests.
    Word [✔]
      +++ OK, passed 100 tests.
    Word8 [✔]
      +++ OK, passed 100 tests.
    Word16 [✔]
      +++ OK, passed 100 tests.
    Word32 [✔]
      +++ OK, passed 100 tests.
    Word64 [✔]
      +++ OK, passed 100 tests.
    String [✔]
      +++ OK, passed 100 tests.
    () [✔]
      +++ OK, passed 100 tests.
    T.Text [✔]
      +++ OK, passed 100 tests.
    TL.Text [✔]
      +++ OK, passed 100 tests.
    [String] [✔]
      +++ OK, passed 100 tests.
    (IntMap String) [✔]
      +++ OK, passed 100 tests.
    (Set Bool) [✔]
      +++ OK, passed 100 tests.
    (NonEmpty Bool) [✔]
      +++ OK, passed 100 tests.
    (HashSet Bool) [✔]
      +++ OK, passed 100 tests.
    (Either Int String) [✔]
      +++ OK, passed 100 tests.
    (Int, String) [✔]
      +++ OK, passed 100 tests.
    (Map String Int) [✔]
      +++ OK, passed 100 tests.
    (Map T.Text Int) [✔]
      +++ OK, passed 100 tests.
    (Map TL.Text Bool) [✔]
      +++ OK, passed 100 tests.
    (HashMap String Int) [✔]
      +++ OK, passed 100 tests.
    (HashMap T.Text Int) [✔]
      +++ OK, passed 100 tests.
    (HashMap TL.Text Bool) [✔]
      +++ OK, passed 100 tests.
    Object [✔]
      +++ OK, passed 100 tests.
    (Int, String, Double) [✔]
      +++ OK, passed 100 tests.
    (Int, String, Double, [Int]) [✔]
      +++ OK, passed 100 tests.
    (Int, String, Double, [Int], Int) [✔]
      +++ OK, passed 100 tests.
  Invalid FromJSON validation
    WrongType [✔]
      +++ OK, failed as expected. Error in $: parsing WrongType failed, expected Boolean, but encountered Object (after 1 test):
      Object (fromList [])
    MissingRequired [✔]
      +++ OK, failed as expected. Error in $: key "propB" not found (after 1 test):
      Object (fromList [("propA",String "")])
    MissingProperty [✔]
      +++ OK, failed as expected. Error in $: key "propD" not found (after 1 test):
      Object (fromList [("propC",String "")])
    WrongPropType [✔]
      +++ OK, failed as expected. Error in $.propE: expected String, but encountered Boolean (after 1 test):
      Object (fromList [("propE",Bool False)])
Data.OpenApi.Schema.Validation
  Validation
    Bool [✔]
      +++ OK, passed 100 tests.
    Char [✔]
      +++ OK, passed 100 tests.
    Double [✔]
      +++ OK, passed 100 tests.
    Float [✔]
      +++ OK, passed 100 tests.
    Int [✔]
      +++ OK, passed 100 tests.
    Int8 [✔]
      +++ OK, passed 100 tests.
    Int16 [✔]
      +++ OK, passed 100 tests.
    Int32 [✔]
      +++ OK, passed 100 tests.
    Int64 [✔]
      +++ OK, passed 100 tests.
    Integer [✔]
      +++ OK, passed 100 tests.
    Word [✔]
      +++ OK, passed 100 tests.
    Word8 [✔]
      +++ OK, passed 100 tests.
    Word16 [✔]
      +++ OK, passed 100 tests.
    Word32 [✔]
      +++ OK, passed 100 tests.
    Word64 [✔]
      +++ OK, passed 100 tests.
    String [✔]
      +++ OK, passed 100 tests.
    () [✔]
      +++ OK, passed 100 tests.
    ZonedTime [✔]
      +++ OK, passed 100 tests.
    UTCTime [✔]
      +++ OK, passed 100 tests.
    T.Text [✔]
      +++ OK, passed 100 tests.
    TL.Text [✔]
      +++ OK, passed 100 tests.
    [String] [✔]
      +++ OK, passed 100 tests.
    (IntMap String) [✔]
      +++ OK, passed 100 tests.
    (Set Bool) [✔]
      +++ OK, passed 100 tests.
    (NonEmpty Bool) [✔]
      +++ OK, passed 100 tests.
    (HashSet Bool) [✔]
      +++ OK, passed 100 tests.
    (Either Int String) [✔]
      +++ OK, passed 100 tests.
    (Int, String) [✔]
      +++ OK, passed 100 tests.
    (Map String Int) [✔]
      +++ OK, passed 100 tests.
    (Map T.Text Int) [✔]
      +++ OK, passed 100 tests.
    (Map TL.Text Bool) [✔]
      +++ OK, passed 100 tests.
    (HashMap String Int) [✔]
      +++ OK, passed 100 tests.
    (HashMap T.Text Int) [✔]
      +++ OK, passed 100 tests.
    (HashMap TL.Text Bool) [✔]
      +++ OK, passed 100 tests.
    Object [✔]
      +++ OK, passed 100 tests.
    (Int, String, Double) [✔]
      +++ OK, passed 100 tests.
    (Int, String, Double, [Int]) [✔]
      +++ OK, passed 100 tests.
    (Int, String, Double, [Int], Int) [✔]
      +++ OK, passed 100 tests.
    Person [✔]
      +++ OK, passed 100 tests.
    Color [✔]
      +++ OK, passed 100 tests.
    Paint [✔]
      +++ OK, passed 100 tests.
    MyRoseTree [✔]
      +++ OK, passed 100 tests.
    Light [✔]
      +++ OK, passed 100 tests.
    Light TaggedObject [✔]
      +++ OK, passed 100 tests.
    Light UntaggedValue [✔]
      +++ OK, passed 100 tests.
    ButtonImages [✔]
      +++ OK, passed 100 tests.
    Version [✔]
      +++ OK, passed 100 tests.
    FreeForm [✔]
      +++ OK, passed 100 tests.
  invalid cases
    invalidPersonToJSON [✔]
      +++ OK, passed 100 tests.
    invalidColorToJSON [✔]
      +++ OK, passed 100 tests.
    invalidPaintToJSON [✔]
      +++ OK, passed 100 tests.
    invalidLightToJSON [✔]
      +++ OK, passed 100 tests.
    invalidButtonImagesToJSON [✔]
      +++ OK, passed 100 tests.

Finished in 0.3066 seconds
375 examples, 0 failures
Test suite spec: PASS
Test suite logged to:
/tmp/workdir-openapi3/openapi3-3.2.4/dist-newstyle/build/x86_64-linux/ghc-9.6.6/openapi3-3.2.4/test/openapi3-3.2.4-spec.log
1 of 1 test suites (1 of 1 test cases) passed.
