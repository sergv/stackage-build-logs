Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - range-0.3.0.2 (test:test-range) (ephemeral targets)
Preprocessing test suite 'test-range' for range-0.3.0.2...
Building test suite 'test-range' for range-0.3.0.2...

<no location info>: warning: [GHC-32850] [-Wmissing-home-modules]
    These modules are needed for compilation but not listed in your .cabal file's other-modules for ‘range-0.3.0.2-inplace-test-range’ :
        Data.Range
        Data.Range.Algebra
        Data.Range.Algebra.Internal
        Data.Range.Algebra.Predicate
        Data.Range.Algebra.Range
        Data.Range.Data
        Data.Range.Operators
        Data.Range.RangeInternal
        Data.Range.Spans
        Data.Range.Util

<no location info>: warning: [GHC-32850] [-Wmissing-home-modules]
    These modules are needed for compilation but not listed in your .cabal file's other-modules for ‘range-0.3.0.2-inplace-test-range’ :
        Data.Range
        Data.Range.Algebra
        Data.Range.Algebra.Internal
        Data.Range.Algebra.Predicate
        Data.Range.Algebra.Range
        Data.Range.Data
        Data.Range.Operators
        Data.Range.RangeInternal
        Data.Range.Spans
        Data.Range.Util
Running 1 test suites...
Test suite test-range: RUNNING...
inRange Function:
  equal singletons in range: [OK, passed 100 tests]
  unequal singletons not in range: [OK, passed 100 tests]
  spans contain values in their middles: [OK, passed 100 tests]
  infinite ranges contain everything: [OK, passed 100 tests]
invert function for ranges:
  element in range is now out of range after invert: [OK, passed 100 tests]
algebra equivalence:
  eval and evalPredicate: [OK, passed 100 tests]
loadRanges function:
  loading export results in identity: [OK, passed 100 tests]
invertRM function:
  inverting twice results in identity: [OK, passed 100 tests]
unionRangeMerges function:
  Union with empty is self: [OK, passed 100 tests]
  Union with infinite is infinite: [OK, passed 100 tests]
intersectionRangeMerges function:
  Intersection with empty is empty: [OK, passed 100 tests]
  Intersection with infinite is self: [OK, passed 100 tests]
complex set theory rules:
  DeMorgan Part 1: not (a or b) == (not a) and (not b): [OK, passed 10000 tests]
  DeMorgan Part 2: not (a and b) == (not a) or (not b): [OK, passed 10000 tests]

         Properties  Total 
 Passed  14          14    
 Failed  0           0     
 Total   14          14    
Test suite test-range: PASS
Test suite logged to:
/tmp/workdir-range/range-0.3.0.2/dist-newstyle/build/x86_64-linux/ghc-9.6.6/range-0.3.0.2/t/test-range/test/range-0.3.0.2-test-range.log
1 of 1 test suites (1 of 1 test cases) passed.
