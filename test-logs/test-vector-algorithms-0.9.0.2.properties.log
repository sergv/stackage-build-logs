Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - vector-algorithms-0.9.0.2 (test:properties) (ephemeral targets)
Preprocessing test suite 'properties' for vector-algorithms-0.9.0.2...
Building test suite 'properties' for vector-algorithms-0.9.0.2...
Running 1 test suites...
Test suite properties: RUNNING...
Int tests:
+++ OK, passed 1000 tests (100.0% introsort).
+++ OK, passed 1000 tests (100.0% insertion sort).
+++ OK, passed 1000 tests (100.0% merge sort).
+++ OK, passed 1000 tests (100.0% heapsort).
+++ OK, passed 1000 tests (100.0% timsort).
+++ OK, passed 1000 tests (100.0% intro_sortUniq).
+++ OK, passed 1000 tests (100.0% insertion sortUniq).
+++ OK, passed 1000 tests (100.0% merge sortUniq).
+++ OK, passed 1000 tests (100.0% heap_sortUniq).
+++ OK, passed 1000 tests (100.0% tim_sortUniq).
+++ OK, passed 1000 tests (100.0% intro-partialsort).
+++ OK, passed 1000 tests (100.0% heap partialsort).
+++ OK, passed 1000 tests (100.0% intro-select).
+++ OK, passed 1000 tests (100.0% heap select).
Radix sort tests:
+++ OK, passed 1000 tests (100.0% radix Word8).
+++ OK, passed 1000 tests (100.0% radix Word16).
+++ OK, passed 1000 tests (100.0% radix Word32).
+++ OK, passed 1000 tests (100.0% radix Word64).
+++ OK, passed 1000 tests (100.0% radix Word).
+++ OK, passed 1000 tests (100.0% radix Int8).
+++ OK, passed 1000 tests (100.0% radix Int16).
+++ OK, passed 1000 tests (100.0% radix Int32).
+++ OK, passed 1000 tests (100.0% radix Int64).
+++ OK, passed 1000 tests (100.0% radix Int).
+++ OK, passed 1000 tests (100.0% radix (Int, Int)).
+++ OK, passed 1000 tests (100.0% flag Word8).
+++ OK, passed 1000 tests (100.0% flag Word16).
+++ OK, passed 1000 tests (100.0% flag Word32).
+++ OK, passed 1000 tests (100.0% flag Word64).
+++ OK, passed 1000 tests (100.0% flag Word).
+++ OK, passed 1000 tests (100.0% flag Int8).
+++ OK, passed 1000 tests (100.0% flag Int16).
+++ OK, passed 1000 tests (100.0% flag Int32).
+++ OK, passed 1000 tests (100.0% flag Int64).
+++ OK, passed 1000 tests (100.0% flag Int).
+++ OK, passed 1000 tests (100.0% flag ByteString).
Stability:
+++ OK, passed 1000 tests (100.0% merge sort).
+++ OK, passed 1000 tests (100.0% radix sort).
+++ OK, passed 1000 tests (100.0% tim sort).
Optimals:
+++ OK, passed 100 tests:
100% size 2

56% stability
44% sorting
+++ OK, passed 100 tests:
100% size 3

55% sorting
45% stability
+++ OK, passed 100 tests:
100% size 4

57% stability
43% sorting
Permutation:
+++ OK, passed 1000 tests (100.0% introsort).
+++ OK, passed 1000 tests (100.0% heapsort).
+++ OK, passed 1000 tests (100.0% mergesort).
+++ OK, passed 1000 tests (100.0% timsort).
+++ OK, passed 1000 tests (100.0% radix I8).
+++ OK, passed 1000 tests (100.0% radix I16).
+++ OK, passed 1000 tests (100.0% radix I32).
+++ OK, passed 1000 tests (100.0% radix I64).
+++ OK, passed 1000 tests (100.0% radix Int).
+++ OK, passed 1000 tests (100.0% radix W8).
+++ OK, passed 1000 tests (100.0% radix W16).
+++ OK, passed 1000 tests (100.0% radix W32).
+++ OK, passed 1000 tests (100.0% radix W64).
+++ OK, passed 1000 tests (100.0% radix Word).
+++ OK, passed 1000 tests (100.0% flag I8).
+++ OK, passed 1000 tests (100.0% flag I16).
+++ OK, passed 1000 tests (100.0% flag I32).
+++ OK, passed 1000 tests (100.0% flag I64).
+++ OK, passed 1000 tests (100.0% flag Int).
+++ OK, passed 1000 tests (100.0% flag W8).
+++ OK, passed 1000 tests (100.0% flag W16).
+++ OK, passed 1000 tests (100.0% flag W32).
+++ OK, passed 1000 tests (100.0% flag W64).
+++ OK, passed 1000 tests (100.0% flag Word).
+++ OK, passed 1000 tests (100.0% flag ByteString).
+++ OK, passed 1000 tests (100.0% intropartial).
+++ OK, passed 1000 tests (100.0% introselect).
+++ OK, passed 1000 tests (100.0% heappartial).
+++ OK, passed 1000 tests (100.0% heapselect).
Search in range:
+++ OK, passed 1000 tests (100.0% binarySearchL).
+++ OK, passed 1000 tests (100.0% binarySearchL lo-bound).
+++ OK, passed 1000 tests (100.0% binarySearch).
+++ OK, passed 1000 tests (100.0% binarySearchR).
+++ OK, passed 1000 tests (100.0% binarySearchR hi-bound).
Corner cases:
+++ OK, passed 1 test (100% introsort empty).
+++ OK, passed 2 tests (100% intropartial empty).
+++ OK, passed 2 tests (100% introselect empty).
+++ OK, passed 1 test (100% heapsort empty).
+++ OK, passed 2 tests (100% heappartial empty).
+++ OK, passed 2 tests (100% heapselect empty).
+++ OK, passed 1 test (100% mergesort empty).
+++ OK, passed 1 test (100% timsort empty).
+++ OK, passed 1 test (100% radixsort empty).
+++ OK, passed 1 test (100% flagsort empty).
Algorithms:
+++ OK, passed 1000 tests (100.0% nub Int).
Test suite properties: PASS
Test suite logged to:
/tmp/workdir-vector-algorithms/vector-algorithms-0.9.0.2/dist-newstyle/build/x86_64-linux/ghc-9.6.6/vector-algorithms-0.9.0.2/t/properties/test/vector-algorithms-0.9.0.2-properties.log
1 of 1 test suites (1 of 1 test cases) passed.
