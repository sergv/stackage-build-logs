Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - markdown-unlit-0.6.0 (test:spec) (ephemeral targets)
Preprocessing test suite 'spec' for markdown-unlit-0.6.0...
Building test suite 'spec' for markdown-unlit-0.6.0...
Running 1 test suites...
Test suite spec: RUNNING...

Text.Markdown.Unlit
  run
    prints a usage message [✔]
    unlits code marked with .haskell by default (unless it is marked with .ignore as well) [✔]
    moves code that is marked with .top to the beginning of the file [✔]
    can be customized [✔]
  parseReorderingKey
    returns 0 [✔]
    with .top
      returns minBound [✔]
    with top:n
      returns (minBound + n) [✔]
  parseSelector
    parses + as :&: [✔]
    parses whitespace as :|: [✔]
    parses ! as Not [✔]
    can handle a combination of :&: and :|: [✔]
    is total [✔]
      +++ OK, passed 100 tests.
  unlit
    can be used to unlit everything with a specified class [✔]
    can handle Not [✔]
    can handle :&: [✔]
    can handle :|: [✔]
    can handle a combination of :&: and :|: [✔]
    can handle a combination of :&: and Not [✔]
  parse
    yields an empty list on empty input [✔]
    parses a code block [✔]
    accepts backticks as fence [✔]
    parses an indented code block [✔]
    parses an empty code block [✔]
    attaches classes to code blocks [✔]
    attaches classes to indented code blocks [✔]
    attaches source locations to code blocks [✔]
  parseClasses
    drops a leading dot [✔]
    treats dots as whitespace [✔]
    without {...}
      accepts single class [✔]
      accepts multiple classes [✔]

Finished in 0.0020 seconds
30 examples, 0 failures
Test suite spec: PASS
Test suite logged to:
/tmp/workdir-markdown-unlit/markdown-unlit-0.6.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/markdown-unlit-0.6.0/t/spec/test/markdown-unlit-0.6.0-spec.log
1 of 1 test suites (1 of 1 test cases) passed.
