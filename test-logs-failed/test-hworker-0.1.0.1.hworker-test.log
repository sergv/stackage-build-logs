Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - hworker-0.1.0.1 (test:hworker-test) (ephemeral targets)
Preprocessing test suite 'hworker-test' for hworker-0.1.0.1...
Building test suite 'hworker-test' for hworker-0.1.0.1...
Running 1 test suites...
Test suite hworker-test: RUNNING...

Simple
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should run and increment counter [✘]
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  queueing 2 jobs should increment twice [✘]
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  queueing 1000 jobs should increment 1000 [✘]
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should work with multiple workers [✘]
Exceptions
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should be able to have exceptions thrown in jobs and retry the job [✘]
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should not retry if mode is FailOnException [✘]
Retry
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should be able to return Retry and get run again [✘]
Fail
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should not retry a job that Fails [✘]
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should put a failed job into the failed queue [✘]
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should only store failedQueueSize failed jobs [✘]
Monitor
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should add job back after timeout [✘]
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should add back multiple jobs after timeout [✘]
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should work with multiple monitors [✘]
Broken jobs
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should store broken jobs [✘]
Dump jobs
  should return the job that was queued [✘]
  should return jobs in order (most recently added at front; worker pulls from back) [✘]
Large jobs
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
hworker-test: Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)
  should be able to deal with lots of large jobs [✘]

Failures:

  test/Spec.hs:107:11: 
  1) Simple should run and increment counter
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Simple/should run and increment counter/" --seed 1657207085

  test/Spec.hs:118:11: 
  2) Simple queueing 2 jobs should increment twice
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Simple/queueing 2 jobs should increment twice/" --seed 1657207085

  test/Spec.hs:130:11: 
  3) Simple queueing 1000 jobs should increment 1000
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Simple/queueing 1000 jobs should increment 1000/" --seed 1657207085

  test/Spec.hs:141:11: 
  4) Simple should work with multiple workers
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Simple/should work with multiple workers/" --seed 1657207085

  test/Spec.hs:162:11: 
  5) Exceptions should be able to have exceptions thrown in jobs and retry the job
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Exceptions/should be able to have exceptions thrown in jobs and retry the job/" --seed 1657207085

  test/Spec.hs:176:11: 
  6) Exceptions should not retry if mode is FailOnException
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Exceptions/should not retry if mode is FailOnException/" --seed 1657207085

  test/Spec.hs:189:11: 
  7) Retry should be able to return Retry and get run again
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Retry/should be able to return Retry and get run again/" --seed 1657207085

  test/Spec.hs:201:11: 
  8) Fail should not retry a job that Fails
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Fail/should not retry a job that Fails/" --seed 1657207085

  test/Spec.hs:211:11: 
  9) Fail should put a failed job into the failed queue
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Fail/should put a failed job into the failed queue/" --seed 1657207085

  test/Spec.hs:221:11: 
  10) Fail should only store failedQueueSize failed jobs
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Fail/should only store failedQueueSize failed jobs/" --seed 1657207085

  test/Spec.hs:240:11: 
  11) Monitor should add job back after timeout
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Monitor/should add job back after timeout/" --seed 1657207085

  test/Spec.hs:269:11: 
  12) Monitor should add back multiple jobs after timeout
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Monitor/should add back multiple jobs after timeout/" --seed 1657207085

  test/Spec.hs:291:11: 
  13) Monitor should work with multiple monitors
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Monitor/should work with multiple monitors/" --seed 1657207085

  test/Spec.hs:325:8: 
  14) Broken jobs should store broken jobs
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Broken jobs/should store broken jobs/" --seed 1657207085

  test/Spec.hs:350:8: 
  15) Dump jobs should return the job that was queued
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Dump jobs/should return the job that was queued/" --seed 1657207085

  test/Spec.hs:360:8: 
  16) Dump jobs should return jobs in order (most recently added at front; worker pulls from back)
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Dump jobs/should return jobs in order (most recently added at front; worker pulls from back)/" --seed 1657207085

  test/Spec.hs:372:8: 
  17) Large jobs should be able to deal with lots of large jobs
       uncaught exception: IOException of type UnsupportedOperation
       Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address)

  To rerun use: --match "/Large jobs/should be able to deal with lots of large jobs/" --seed 1657207085

Randomized with seed 1657207085

Finished in 0.0038 seconds
17 examples, 17 failures
Test suite hworker-test: FAIL
Test suite logged to:
/tmp/workdir-hworker/hworker-0.1.0.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/hworker-0.1.0.1/t/hworker-test/test/hworker-0.1.0.1-hworker-test.log
0 of 1 test suites (0 of 1 test cases) passed.
Error: [Cabal-7125]
Tests failed for test:hworker-test from hworker-0.1.0.1.

