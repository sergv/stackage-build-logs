Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - bloodhound-0.21.0.0 (test:bloodhound-tests) (ephemeral targets)
Preprocessing test suite 'bloodhound-tests' for bloodhound-0.21.0.0...
Building test suite 'bloodhound-tests' for bloodhound-0.21.0.0...
Running 1 test suites...
Test suite bloodhound-tests: RUNNING...

Aggregation API
  returns term aggregation results [✘]
  return sub-aggregation results [✘]
  returns cardinality aggregation results [✘]
  returns stats aggregation results [✘]
  can give collection hint parameters to term aggregations [✘]
  can give execution hint parameters to term aggregations [✘]
  can execute value_count aggregations [✘]
  can execute date_range aggregations [✘]
  returns date histogram aggregation results [✘]
  can execute missing aggregations [✘]
Bulk API
  upsert operations [✘]
  upsert with a script [✘]
  script upsert without scripted_upsert [✘]
  script upsert with scripted_upsert -- will fail if a bug on elasticsearch is fix, delete patch line [✘]
  inserts all documents we request [✘]
document API
  indexes, updates, gets, and then deletes the generated document [✘]
  indexes, gets, and then deletes the generated document with a DocId containing a space [✘]
  produces a parseable result when looking up a bogus document [✘]
  can use optimistic concurrency control [✘]
  indexes two documents in a parent/child relationship and checks that the child exists [✘]
Highlights API
  returns highlight from query when there should be one [✘]
  doesn't return highlight from a query when it shouldn't [✘]
Index create/delete API
  creates and then deletes the requested index [✘]
Index aliases
  handles the simple case of aliasing an existing index [✘]
  allows alias deletion [✘]
Index Listing
  returns a list of index names [✘]
Index Settings
  persists settings [✘]
  allows total fields to be set [✘]
  allows unassigned.node_left.delayed_timeout to be set [✘]
  accepts customer analyzers [✘]
  accepts default compression codec [✘]
  accepts best compression codec [✘]
Index Optimization
  returns a successful response upon completion [✘]
Index flushing
  returns a successful response upon flushing [✘]
ToJSON RegexpFlags
  generates the correct JSON for AllRegexpFlags [✔]
  generates the correct JSON for NoRegexpFlags [✔]
  generates the correct JSON for SomeRegexpFlags [✔]
  removes duplicates from flags [✔]
    +++ OK, passed 100 tests.
omitNulls
  checks that omitNulls drops list elements when it should [✔]
  checks that omitNulls doesn't drop list elements when it shouldn't [✔]
  checks that omitNulls drops non list elements when it should [✔]
  checks that omitNulls doesn't drop non list elements when it shouldn't [✔]
Exact isomorphism JSON instances
  Version FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  IndexName FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  DocId FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  IndexAliasRouting FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  RoutingValue FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  ShardCount FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  ReplicaCount FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  TemplateName FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  IndexPattern FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  QueryString FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  FieldName FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Script FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  ScriptLanguage FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  ScriptParams FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  CacheName FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  CacheKey FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Existence FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  CutoffFrequency FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Analyzer FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MaxExpansions FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Lenient FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Tiebreaker FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Boost FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  BoostTerms FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MinimumMatch FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  DisableCoord FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  IgnoreTermFrequency FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MinimumTermFrequency FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MaxQueryTerms FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Fuzziness FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  PrefixLength FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  RelationName FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  PercentMatch FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  StopWord FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  QueryPath FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  AllowLeadingWildcard FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  LowercaseExpanded FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  EnablePositionIncrements FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  AnalyzeWildcard FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  GeneratePhraseQueries FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Locale FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MaxWordLength FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MinWordLength FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  PhraseSlop FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MinDocFrequency FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MaxDocFrequency FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Filter FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Query FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  SimpleQueryStringQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  FieldOrFields FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  SimpleQueryFlag FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  RegexpQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  QueryStringQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  RangeQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  PrefixQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  NestedQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MoreLikeThisFieldQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MoreLikeThisQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  IndicesQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  IgnoreUnmapped FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MinChildren FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MaxChildren FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  AggregateParentScore FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  HasParentQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  HasChildQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  FuzzyQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  FuzzyLikeFieldQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  FuzzyLikeThisQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  FunctionScoreQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  BoostMode FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  ScoreMode FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  ComponentFunctionScoreFunction FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  FieldValueFactor FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  FactorModifier FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  DisMaxQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  CommonTermsQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  CommonMinimumMatch FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  BoostingQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  BoolQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MatchQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MultiMatchQueryType FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  BooleanOperator FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  ZeroTermsQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MatchQueryType FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  AliasRouting FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  IndexAliasCreate FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  SearchAliasRouting FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  ScoreType FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Distance FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  DistanceUnit FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  DistanceType FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  OptimizeBbox FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  GeoBoundingBoxConstraint FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  GeoFilterType FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  GeoBoundingBox FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  LatLon FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  RangeExecution FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  RegexpFlags FromJSON/ToJSON roundtrips, removing dups  [✔]
    +++ OK, passed 100 tests.
  BoolMatch FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Term FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  MultiMatchQuery FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  CompoundFormat FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Suggest FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  DirectGenerators FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  DirectGeneratorSuggestModeTypes FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
Approximate isomorphism JSON instances
  UpdatableIndexSetting' FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  ReplicaCount FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  ReplicaBounds FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  Bytes FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  AllocationPolicy FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  InitialShardCount FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
  FSType FromJSON/ToJSON roundtrips [✔]
    +++ OK, passed 100 tests.
query API
  returns document for term query and identity filter [✘]
  handles constant score queries [✘]
  returns document for terms query and identity filter [✘]
  returns document for match query [✘]
  returns document for match query with fuzziness [✘]
  returns document for multi-match query [✘]
  returns document for multi-match query with a custom tiebreaker [✘]
  returns document for bool query [✘]
  returns document for boosting query [✘]
  returns document for common terms query [✘]
  returns document for template query [✘]
  can save, use, read and delete template queries [✘]
  returns document for wildcard query [✘]
Script
  returns a transformed document based on the script field [✘]
FsSnapshotRepo
  SnapshotRepo laws [✔]
    +++ OK, passed 100 tests.
Snapshot repos
  always parses all snapshot repos API [✘]
  finds an existing list of repos [✘]
  creates and updates with updateSnapshotRepo [✘]
  can verify existing repos [✘]
Snapshots
  always parses all snapshots API [✘]
  can parse a snapshot that it created [✘]
Snapshot restore
  can restore a snapshot that we create [✘]
  can restore and rename [✘]
sorting
  returns documents in the right order [✘]
Source filtering
  doesn't include source when sources are disabled [✘]
  includes a source [✘]
  includes sources [✘]
  includes source patterns [✘]
  excludes source patterns [✘]
Suggest
  returns a search suggestion using the phrase suggester [✘]
template API
  can create a template [✘]
  can detect if a template exists [✘]
  can delete a template [✘]
  can detect if a template doesn't exist [✘]
Count
  returns count of a query [✘]
error parsing
  can parse EsErrors for >= 2.0 [✘]
Monoid (SearchHits a)
  abides the monoid laws [✔]
    +++ OK, passed 100 tests.
mkDocVersion
  can never construct an out of range docVersion [✔]
    +++ OK, passed 100 tests.
getNodesInfo
  fetches the responding node when LocalNode is used [✘]
getNodesStats
  fetches the responding node when LocalNode is used [✘]
Enum DocVersion
  follows the laws of Enum, Bounded [✔]
Scan & Scroll API
  returns documents using the scan&scroll API [✘]
Point in time (PIT) API
  returns a single document using the point in time (PIT) API [✘]
  returns many documents using the point in time (PIT) API [✘]
Search After API
  returns document for search after query [✘]

Failures:

  tests/Test/Aggregation.hs:14:5: 
  1) Aggregation API returns term aggregation results
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Aggregation API/returns term aggregation results/" --seed 560603958

  tests/Test/Aggregation.hs:22:5: 
  2) Aggregation API return sub-aggregation results
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Aggregation API/return sub-aggregation results/" --seed 560603958

  tests/Test/Aggregation.hs:35:5: 
  3) Aggregation API returns cardinality aggregation results
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Aggregation API/returns cardinality aggregation results/" --seed 560603958

  tests/Test/Aggregation.hs:47:5: 
  4) Aggregation API returns stats aggregation results
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Aggregation API/returns stats aggregation results/" --seed 560603958

  tests/Test/Aggregation.hs:68:5: 
  5) Aggregation API can give collection hint parameters to term aggregations
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Aggregation API/can give collection hint parameters to term aggregations/" --seed 560603958

  tests/Test/Aggregation.hs:76:5: 
  6) Aggregation API can give execution hint parameters to term aggregations
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Aggregation API/can give execution hint parameters to term aggregations/" --seed 560603958

  tests/Test/Aggregation.hs:82:5: 
  7) Aggregation API can execute value_count aggregations
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Aggregation API/can execute value_count aggregations/" --seed 560603958

  tests/Test/Aggregation.hs:103:5: 
  8) Aggregation API can execute date_range aggregations
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1/_doc/1"
         queryString          = ""
         method               = "PUT"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Aggregation API/can execute date_range aggregations/" --seed 560603958

  tests/Test/Aggregation.hs:148:5: 
  9) Aggregation API returns date histogram aggregation results
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Aggregation API/returns date histogram aggregation results/" --seed 560603958

  tests/Test/Aggregation.hs:156:5: 
  10) Aggregation API can execute missing aggregations
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Aggregation API/can execute missing aggregations/" --seed 560603958

  tests/Test/BulkAPI.hs:65:5: 
  11) Bulk API upsert operations
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Bulk API/upsert operations/" --seed 560603958

  tests/Test/BulkAPI.hs:79:5: 
  12) Bulk API upsert with a script
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Bulk API/upsert with a script/" --seed 560603958

  tests/Test/BulkAPI.hs:99:5: 
  13) Bulk API script upsert without scripted_upsert
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Bulk API/script upsert without scripted_upsert/" --seed 560603958

  tests/Test/BulkAPI.hs:116:5: 
  14) Bulk API script upsert with scripted_upsert -- will fail if a bug on elasticsearch is fix, delete patch line
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Bulk API/script upsert with scripted_upsert -- will fail if a bug on elasticsearch is fix, delete patch line/" --seed 560603958

  tests/Test/BulkAPI.hs:135:5: 
  15) Bulk API inserts all documents we request
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Bulk API/inserts all documents we request/" --seed 560603958

  tests/Test/Documents.hs:11:5: 
  16) document API indexes, updates, gets, and then deletes the generated document
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/document API/indexes, updates, gets, and then deletes the generated document/" --seed 560603958

  tests/Test/Documents.hs:21:5: 
  17) document API indexes, gets, and then deletes the generated document with a DocId containing a space
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1/_doc/Hello%20World"
         queryString          = ""
         method               = "PUT"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/document API/indexes, gets, and then deletes the generated document with a DocId containing a space/" --seed 560603958

  tests/Test/Documents.hs:30:5: 
  18) document API produces a parseable result when looking up a bogus document
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1/_doc/bogus"
         queryString          = ""
         method               = "GET"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/document API/produces a parseable result when looking up a bogus document/" --seed 560603958

  tests/Test/Documents.hs:38:5: 
  19) document API can use optimistic concurrency control
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/document API/can use optimistic concurrency control/" --seed 560603958

  tests/Test/Documents.hs:48:5: 
  20) document API indexes two documents in a parent/child relationship and checks that the child exists
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/document API/indexes two documents in a parent/child relationship and checks that the child exists/" --seed 560603958

  tests/Test/Highlights.hs:21:5: 
  21) Highlights API returns highlight from query when there should be one
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Highlights API/returns highlight from query when there should be one/" --seed 560603958

  tests/Test/Highlights.hs:28:5: 
  22) Highlights API doesn't return highlight from a query when it shouldn't
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Highlights API/doesn't return highlight from a query when it shouldn't/" --seed 560603958

  tests/Test/Indices.hs:20:5: 
  23) Index create/delete API creates and then deletes the requested index
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Index create/delete API/creates and then deletes the requested index/" --seed 560603958

  tests/Test/Indices.hs:35:5: 
  24) Index aliases handles the simple case of aliasing an existing index
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Index aliases/handles the simple case of aliasing an existing index/" --seed 560603958

  tests/Test/Indices.hs:50:5: 
  25) Index aliases allows alias deletion
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Index aliases/allows alias deletion/" --seed 560603958

  tests/Test/Indices.hs:70:5: 
  26) Index Listing returns a list of index names
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "PUT"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Index Listing/returns a list of index names/" --seed 560603958

  tests/Test/Indices.hs:77:5: 
  27) Index Settings persists settings
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Index Settings/persists settings/" --seed 560603958

  tests/Test/Indices.hs:86:5: 
  28) Index Settings allows total fields to be set
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Index Settings/allows total fields to be set/" --seed 560603958

  tests/Test/Indices.hs:95:5: 
  29) Index Settings allows unassigned.node_left.delayed_timeout to be set
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Index Settings/allows unassigned.node_left.delayed_timeout to be set/" --seed 560603958

  tests/Test/Indices.hs:104:5: 
  30) Index Settings accepts customer analyzers
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Index Settings/accepts customer analyzers/" --seed 560603958

  tests/Test/Indices.hs:162:5: 
  31) Index Settings accepts default compression codec
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Index Settings/accepts default compression codec/" --seed 560603958

  tests/Test/Indices.hs:170:5: 
  32) Index Settings accepts best compression codec
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Index Settings/accepts best compression codec/" --seed 560603958

  tests/Test/Indices.hs:179:5: 
  33) Index Optimization returns a successful response upon completion
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "PUT"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Index Optimization/returns a successful response upon completion/" --seed 560603958

  tests/Test/Indices.hs:186:5: 
  34) Index flushing returns a successful response upon flushing
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "PUT"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Index flushing/returns a successful response upon flushing/" --seed 560603958

  tests/Test/Query.hs:12:5: 
  35) query API returns document for term query and identity filter
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/returns document for term query and identity filter/" --seed 560603958

  tests/Test/Query.hs:22:5: 
  36) query API handles constant score queries
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/handles constant score queries/" --seed 560603958

  tests/Test/Query.hs:33:5: 
  37) query API returns document for terms query and identity filter
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/returns document for terms query and identity filter/" --seed 560603958

  tests/Test/Query.hs:43:5: 
  38) query API returns document for match query
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/returns document for match query/" --seed 560603958

  tests/Test/Query.hs:52:5: 
  39) query API returns document for match query with fuzziness
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/returns document for match query with fuzziness/" --seed 560603958

  tests/Test/Query.hs:62:5: 
  40) query API returns document for multi-match query
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/returns document for multi-match query/" --seed 560603958

  tests/Test/Query.hs:72:5: 
  41) query API returns document for multi-match query with a custom tiebreaker
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/returns document for multi-match query with a custom tiebreaker/" --seed 560603958

  tests/Test/Query.hs:84:5: 
  42) query API returns document for bool query
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/returns document for bool query/" --seed 560603958

  tests/Test/Query.hs:98:5: 
  43) query API returns document for boosting query
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/returns document for boosting query/" --seed 560603958

  tests/Test/Query.hs:109:5: 
  44) query API returns document for common terms query
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/returns document for common terms query/" --seed 560603958

  tests/Test/Query.hs:129:5: 
  45) query API returns document for template query
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/returns document for template query/" --seed 560603958

  tests/Test/Query.hs:144:5: 
  46) query API can save, use, read and delete template queries
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/can save, use, read and delete template queries/" --seed 560603958

  tests/Test/Query.hs:169:5: 
  47) query API returns document for wildcard query
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/query API/returns document for wildcard query/" --seed 560603958

  tests/Test/Script.hs:13:5: 
  48) Script returns a transformed document based on the script field
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Script/returns a transformed document based on the script field/" --seed 560603958

  tests/Test/Snapshots.hs:23:5: 
  49) Snapshot repos always parses all snapshot repos API
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = []
         path                 = "/_nodes"
         queryString          = ""
         method               = "GET"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Snapshot repos/always parses all snapshot repos API/" --seed 560603958

  tests/Test/Snapshots.hs:31:5: 
  50) Snapshot repos finds an existing list of repos
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = []
         path                 = "/_nodes"
         queryString          = ""
         method               = "GET"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Snapshot repos/finds an existing list of repos/" --seed 560603958

  tests/Test/Snapshots.hs:45:5: 
  51) Snapshot repos creates and updates with updateSnapshotRepo
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = []
         path                 = "/_nodes"
         queryString          = ""
         method               = "GET"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Snapshot repos/creates and updates with updateSnapshotRepo/" --seed 560603958

  tests/Test/Snapshots.hs:58:5: 
  52) Snapshot repos can verify existing repos
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = []
         path                 = "/_nodes"
         queryString          = ""
         method               = "GET"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Snapshot repos/can verify existing repos/" --seed 560603958

  tests/Test/Snapshots.hs:71:5: 
  53) Snapshots always parses all snapshots API
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = []
         path                 = "/_nodes"
         queryString          = ""
         method               = "GET"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Snapshots/always parses all snapshots API/" --seed 560603958

  tests/Test/Snapshots.hs:81:5: 
  54) Snapshots can parse a snapshot that it created
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = []
         path                 = "/_nodes"
         queryString          = ""
         method               = "GET"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Snapshots/can parse a snapshot that it created/" --seed 560603958

  tests/Test/Snapshots.hs:100:5: 
  55) Snapshot restore can restore a snapshot that we create
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = []
         path                 = "/_nodes"
         queryString          = ""
         method               = "GET"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Snapshot restore/can restore a snapshot that we create/" --seed 560603958

  tests/Test/Snapshots.hs:114:5: 
  56) Snapshot restore can restore and rename
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = []
         path                 = "/_nodes"
         queryString          = ""
         method               = "GET"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Snapshot restore/can restore and rename/" --seed 560603958

  tests/Test/Sorting.hs:11:5: 
  57) sorting returns documents in the right order
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/sorting/returns documents in the right order/" --seed 560603958

  tests/Test/SourceFiltering.hs:12:5: 
  58) Source filtering doesn't include source when sources are disabled
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Source filtering/doesn't include source when sources are disabled/" --seed 560603958

  tests/Test/SourceFiltering.hs:18:5: 
  59) Source filtering includes a source
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Source filtering/includes a source/" --seed 560603958

  tests/Test/SourceFiltering.hs:24:5: 
  60) Source filtering includes sources
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Source filtering/includes sources/" --seed 560603958

  tests/Test/SourceFiltering.hs:30:5: 
  61) Source filtering includes source patterns
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Source filtering/includes source patterns/" --seed 560603958

  tests/Test/SourceFiltering.hs:36:5: 
  62) Source filtering excludes source patterns
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Source filtering/excludes source patterns/" --seed 560603958

  tests/Test/Suggest.hs:11:5: 
  63) Suggest returns a search suggestion using the phrase suggester
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Suggest/returns a search suggestion using the phrase suggester/" --seed 560603958

  tests/Test/Templates.hs:11:5: 
  64) template API can create a template
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/_template/tweet-tpl"
         queryString          = ""
         method               = "PUT"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/template API/can create a template/" --seed 560603958

  tests/Test/Templates.hs:17:5: 
  65) template API can detect if a template exists
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/_template/tweet-tpl"
         queryString          = ""
         method               = "HEAD"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/template API/can detect if a template exists/" --seed 560603958

  tests/Test/Templates.hs:22:5: 
  66) template API can delete a template
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/_template/tweet-tpl"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/template API/can delete a template/" --seed 560603958

  tests/Test/Templates.hs:27:5: 
  67) template API can detect if a template doesn't exist
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/_template/tweet-tpl"
         queryString          = ""
         method               = "HEAD"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/template API/can detect if a template doesn't exist/" --seed 560603958

  tests/Test/Count.hs:11:5: 
  68) Count returns count of a query
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Count/returns count of a query/" --seed 560603958

  tests/tests.hs:51:5: 
  69) error parsing can parse EsErrors for >= 2.0
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bogus/_doc/bogus_as_well"
         queryString          = ""
         method               = "GET"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/error parsing/can parse EsErrors for >= 2.0/" --seed 560603958

  tests/tests.hs:74:5: 
  70) getNodesInfo fetches the responding node when LocalNode is used
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/_nodes/_local"
         queryString          = ""
         method               = "GET"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/getNodesInfo/fetches the responding node when LocalNode is used/" --seed 560603958

  tests/tests.hs:85:5: 
  71) getNodesStats fetches the responding node when LocalNode is used
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/_nodes/_local/stats"
         queryString          = ""
         method               = "GET"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/getNodesStats/fetches the responding node when LocalNode is used/" --seed 560603958

  tests/tests.hs:106:5: 
  72) Scan & Scroll API returns documents using the scan&scroll API
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Scan & Scroll API/returns documents using the scan&scroll API/" --seed 560603958

  tests/tests.hs:126:5: 
  73) Point in time (PIT) API returns a single document using the point in time (PIT) API
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Point in time (PIT) API/returns a single document using the point in time (PIT) API/" --seed 560603958

  tests/tests.hs:144:5: 
  74) Point in time (PIT) API returns many documents using the point in time (PIT) API
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Point in time (PIT) API/returns many documents using the point in time (PIT) API/" --seed 560603958

  tests/tests.hs:169:5: 
  75) Search After API returns document for search after query
       uncaught exception: HttpException
       HttpExceptionRequest Request {
         host                 = "localhost"
         port                 = 9200
         secure               = False
         requestHeaders       = [("Content-Type","application/json")]
         path                 = "/bloodhound-tests-twitter-1"
         queryString          = ""
         method               = "DELETE"
         proxy                = Nothing
         rawBody              = False
         redirectCount        = 10
         responseTimeout      = ResponseTimeoutDefault
         requestVersion       = HTTP/1.1
         proxySecureMode      = ProxySecureWithConnect
       }
        (ConnectionFailure Network.Socket.connect: <socket: 4>: unsupported operation (Cannot assign requested address))

  To rerun use: --match "/Search After API/returns document for search after query/" --seed 560603958

Randomized with seed 560603958

Finished in 23.5177 seconds
199 examples, 75 failures
Test suite bloodhound-tests: FAIL
Test suite logged to:
/tmp/workdir-bloodhound/bloodhound-0.21.0.0/dist-newstyle/build/x86_64-linux/ghc-9.6.6/bloodhound-0.21.0.0/t/bloodhound-tests/test/bloodhound-0.21.0.0-bloodhound-tests.log
0 of 1 test suites (0 of 1 test cases) passed.
Error: [Cabal-7125]
Tests failed for test:bloodhound-tests from bloodhound-0.21.0.0.

