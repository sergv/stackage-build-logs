Build profile: -w ghc-9.6.6 -O1
In order, the following will be built (use -v for more details):
 - shakespeare-2.1.1 (test:test) (ephemeral targets)
Preprocessing test suite 'test' for shakespeare-2.1.1...
Building test suite 'test' for shakespeare-2.1.1...
Running 1 test suites...
Test suite test: RUNNING...

Text.Css
  Unordered parsers
    cassius [✔]
    cassiusFile [✔]
    cassius single comment [✔]
    cassius leading comment [✔]
    cassiusFileDebug [✔]
    cassius comments [✔]
    cassius pseudo-class [✔]
    ignores a blank line [✔]
    leading spaces [✔]
    cassius all spaces [✔]
    cassius whitespace and colons [✔]
    cassius trailing comments [✔]
    cassius nesting [✔]
    cassius variable [✔]
    cassius trailing semicolon [✔]
    cassius module names [✔]
    single dollar at and caret [✔]
    dollar operator [✔]
    embedded slash [✔]
    multi cassius [✔]
    lucius [✔]
    lucius file [✔]
    lucius file debug [✔]
    lucius nested [✔]
    lucius charset [✔]
    lucius media [✔]
    lucius supports [✔]
    lucius trailing comments [✔]
    lucius variables [✔]
    lucius CDO/CDC tokens [✔]
    lucius @import statements [✔]
    lucius simple escapes [✔]
    lucius bounded escapes [✔]
    lucius case-insensitive keywords [✔]
    lucius @page statements [✔]
    lucius @font-face statements [✔]
    lucius runtime [✔]
    lucius runtime variables [✔]
    lucius whtiespace [✔]
    variables inside value [✔]
    variables in media selector [✔]
    variables in supports selector [✔]
    URLs in import [✔]
    vars in charset [✔]
    keyframes [✔]
    prefixed keyframes [✔]
    lucius mixins [✔]
    cassius mixins [✔]
    cassius nested mixins [✔]
    more complicated mixins [✔]
    nested mixin blocks [✔]
    mixins with pseudoselectors [✔]
    mixins insane structure [✔]
    runtime mixin [✔]
    luciusFileReload mixin [✔]
    cassiusFileReload with import URL [✔]
    & subblocks [✔]
    font-face #139
      lucius [✔]
      cassius [✔]
    trailing semicolon in mixin
      direct in lucius [✔]
      implicit in cassius #194 [✔]
  Ordered parsers
    Ordered.cassius [✔]
    Ordered.cassiusFile [✔]
    Ordered.cassius single comment [✔]
    Ordered.cassius leading comment [✔]
    cassiusFileDebug [✔]
  Ordered.cassius
    comments [✔]
    pseudo-class [✔]
    ignores a blank line [✔]
    leading spaces [✔]
    all spaces [✔]
    whitespace and colons [✔]
    trailing comments [✔]
    nesting [✔]
    variable [✔]
    trailing semicolon [✔]
    module names [✔]
    single dollar at and caret [✔]
    dollar operator [✔]
    embedded slash [✔]
    multi cassius [✔]
  Ordered.lucius
    lucius [✔]
    lucius file [✔]
    lucius file debug [✔]
    lucius nested [✔]
    lucius charset [✔]
    lucius media [✔]
    lucius supports [✔]
    lucius trailing comments [✔]
    lucius variables [✔]
    lucius CDO/CDC tokens [✔]
    lucius @import statements [✔]
    lucius simple escapes [✔]
    lucius bounded escapes [✔]
    lucius case-insensitive keywords [✔]
    lucius @page statements [✔]
    lucius @font-face statements [✔]
    lucius runtime [✔]
    lucius runtime variables [✔]
    lucius whtiespace [✔]
    variables inside value [✔]
    variables in media selector [✔]
    variables in supports selector [✔]
    URLs in import [✔]
    vars in charset [✔]
    keyframes [✔]
    prefixed keyframes [✔]
  ordered mixins
    lucius mixins [✔]
    lucius mixins keep order [✔]
    lucius nested mixins [✔]
    cassius mixins [✔]
    cassius mixins keep order [✔]
    cassius nested mixins [✔]
    more complicated mixins [✔]
    nested mixin blocks [✔]
    mixins with pseudoselectors [✔]
    mixins insane structure [✔]
    runtime mixin [✔]
    luciusFileReload mixin [✔]
    cassiusFileReload with import URL [✔]
    & subblocks [✔]
    font-face #139
      lucius [✔]
      cassius [✔]
    trailing semicolon in mixin
      direct in lucius [✔]
      implicit in cassius #194 [✔]
Text.Hamlet
  empty [✔]
  static [✔]
  tag [✔]
  var [✔]
  var chain  [✔]
  url [✔]
  url chain  [✔]
  embed [✔]
  embed chain  [✔]
  if [✔]
  if chain  [✔]
  else [✔]
  else chain  [✔]
  elseif [✔]
  elseif chain  [✔]
  list [✔]
  list chain [✔]
  with [✔]
  with multi [✔]
  with chain [✔]
  with comma string [✔]
  with multi scope [✔]
  script not empty [✔]
  meta empty [✔]
  input empty [✔]
  multiple classes [✔]
  attrib order [✔]
  nothing [✔]
  nothing chain  [✔]
  just [✔]
  just chain  [✔]
  constructor [✔]
  url + params [✔]
  escape [✔]
  empty statement list [✔]
  attribute conditionals [✔]
  non-ascii [✔]
  maybe function [✔]
  trailing dollar sign [✔]
  non leading percent sign [✔]
  quoted attributes [✔]
  spaced derefs [✔]
  attrib vars [✔]
  strings and html [✔]
  nesting [✔]
  trailing space [✔]
  currency symbols [✔]
  external [✔]
  parens [✔]
  hamlet literals [✔]
  hamlet' and xhamlet' [✔]
  hamlet tuple [✔]
  complex pattern [✔]
  record pattern [✔]
  record wildcard pattern #1 [✔]
  record wildcard pattern #2 [✔]
  comments [✔]
  ignores a blank line [✔]
  angle bracket syntax [✔]
  hamlet module names [✔]
  single dollar at and caret [✔]
  dollar operator [✔]
  in a row [✔]
  embedded slash [✔]
  string literals [✔]
  interpolated operators [✔]
  HTML comments [✔]
  Keeps SSI includes [✔]
  nested maybes [✔]
  maybe with qualified constructor [✔]
  record with qualified constructor [✔]
  conditional class [✔]
  forall on Foldable [✔]
  non-poly HTML [✔]
  non-poly Hamlet [✔]
  non-poly IHamlet [✔]
  pattern-match tuples: forall [✔]
  pattern-match tuples: maybe [✔]
  pattern-match tuples: with [✔]
  list syntax for interpolation [✔]
  pattern-match list: maybe [✔]
  infix operators [✔]
  infix operators with parens [✔]
  doctypes [✔]
  case on Maybe [✔]
  case on Url [✔]
  pattern-match constructors: forall [✔]
  pattern-match constructors: maybe [✔]
  pattern-match constructors: with [✔]
  multiline tags [✔]
  *{...} attributes [✔]
  blank attr values [✔]
  greater than in attr [✔]
  normal doctype [✔]
  newline style [✔]
  avoid newlines [✔]
  manual linebreaks [✔]
  indented newline [✔]
  case underscore [✔]
  optional and missing classes [✔]
  multiple optional and missing classes [✔]
  optional and present classes [✔]
  punctuation operators #115 [✔]
  list syntax [✔]
  list in attribute [✔]
  AngularJS attribute values #122 [✔]
  runtime Hamlet with caret interpolation [✔]
  Hash in attribute value [✔]
  Hash in attribute value [✔]
Text.Julius
  julius [✔]
  juliusFile [✔]
  juliusFileReload [✔]
  julius module names [✔]
  single dollar at and caret [✔]
  dollar operator [✔]
  empty file [✔]
  JSON data [✔]
  < escaping [✔]
  > escaping [✔]
  & escaping [✔]
  boolean interpolation [✔]
  ^\ should not be escaped [✔]
  ^\{ should be escaped [✔]
  produces escaped JavaScript [✔]
Text.Shakespeare.Base
  parseDeref parse expressions with infix operator and trailing spaces [✔]
  parseDeref parse single type applications [✔]
  parseDeref parse unit type applications [✔]
  parseDeref parse compound type applications [✔]
  parseDeref parse single @ as operator [✘]
  parseDeref parse expressions with record dot [✔]
  parseDeref parse expressions with multiple record dots [✔]
  parseDeref dot surrounded by whitespace [✔]
  parseDeref parse expressions with parenthesized record dot [✔]
  preFilter off [✔]
  preFilter on [✔]
  preFilter ignore quotes [✔]
  preFilter ignore comments [✔]
  reload [✔]
Text.Shakespeare.Text
  text [✔]
  textFile [✔]
  textFileReload [✔]
  stextFile [✔]
  text module names [✔]
  stext module names [✔]
  single dollar at and caret [✔]
  single dollar at and caret [✔]
  dollar operator [✔]
  dollar operator [✔]
  aligned text with bar [✔]
  caret operation with justVarInterpolation = True [✔]
  record dot [✔]

Failures:

  test/Text/Shakespeare/BaseSpec.hs:55:40: 
  1) Text.Shakespeare.Base parseDeref parse single @ as operator
       expected: Right (DerefBranch (DerefBranch (DerefIdent (Ident "@")) (DerefIdent (Ident "x"))) (DerefIdent (Ident "y")))
        but got: Right (DerefIdent (Ident "x"))

  To rerun use: --match "/Text.Shakespeare.Base/parseDeref parse single @ as operator/" --seed 1227470303

Randomized with seed 1227470303

Finished in 0.0120 seconds
276 examples, 1 failure
Test suite test: FAIL
Test suite logged to:
/tmp/workdir-shakespeare/shakespeare-2.1.1/dist-newstyle/build/x86_64-linux/ghc-9.6.6/shakespeare-2.1.1/t/test/test/shakespeare-2.1.1-test.log
0 of 1 test suites (0 of 1 test cases) passed.
Error: [Cabal-7125]
Tests failed for test:test from shakespeare-2.1.1.

